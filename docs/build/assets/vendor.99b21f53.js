var Vt=Object.defineProperty,qt=Object.defineProperties;var Gt=Object.getOwnPropertyDescriptors;var qe=Object.getOwnPropertySymbols;var nt=Object.prototype.hasOwnProperty,st=Object.prototype.propertyIsEnumerable;var rt=(n,e,t)=>e in n?Vt(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,te=(n,e)=>{for(var t in e||(e={}))nt.call(e,t)&&rt(n,t,e[t]);if(qe)for(var t of qe(e))st.call(e,t)&&rt(n,t,e[t]);return n},de=(n,e)=>qt(n,Gt(e));var Be=(n,e)=>{var t={};for(var s in n)nt.call(n,s)&&e.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&qe)for(var s of qe(n))e.indexOf(s)<0&&st.call(n,s)&&(t[s]=n[s]);return t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EPSILON_FLOAT32$1=1e-7,EPSILON_FLOAT16$1=1e-4;class DataStorage{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class KernelBackend{decComplexRef(e){}time(e){return notYetImplemented("time")}read(e){return notYetImplemented("read")}readSync(e){return notYetImplemented("readSync")}numDataIds(){return notYetImplemented("numDataIds")}disposeData(e){return notYetImplemented("disposeData")}write(e,t,s){return notYetImplemented("write")}move(e,t,s,r){return notYetImplemented("move")}memory(){return notYetImplemented("memory")}floatPrecision(){return notYetImplemented("floatPrecision")}epsilon(){return this.floatPrecision()===32?EPSILON_FLOAT32$1:EPSILON_FLOAT16$1}batchMatMul(e,t,s,r){return notYetImplemented("batchMatMul")}fusedBatchMatMul({a:e,b:t,transposeA:s,transposeB:r,bias:i,activation:a,preluActivationWeights:c}){return notYetImplemented("fusedBatchMatMul")}slice(e,t,s){return notYetImplemented("slice")}stridedSlice(e,t,s,r){return notYetImplemented("stridedSlice")}unstack(e,t){return notYetImplemented("unstack")}reverse(e,t){return notYetImplemented("reverse")}concat(e,t){return notYetImplemented("concat")}neg(e){return notYetImplemented("neg")}add(e,t){return notYetImplemented("add")}addN(e){return notYetImplemented("addN")}subtract(e,t){return notYetImplemented("subtract")}multiply(e,t){return notYetImplemented("multiply")}realDivide(e,t){return notYetImplemented("realDivide")}floorDiv(e,t){return notYetImplemented("floorDiv")}sum(e,t){return notYetImplemented("sum")}prod(e,t){return notYetImplemented("prod")}unsortedSegmentSum(e,t,s){return notYetImplemented("unsortedSegmentSum")}argMin(e,t){return notYetImplemented("argMin")}argMax(e,t){return notYetImplemented("argMax")}equal(e,t){return notYetImplemented("equal")}notEqual(e,t){return notYetImplemented("notEqual")}less(e,t){return notYetImplemented("less")}lessEqual(e,t){return notYetImplemented("lessEqual")}greater(e,t){return notYetImplemented("greater")}greaterEqual(e,t){return notYetImplemented("greaterEqual")}logicalNot(e){return notYetImplemented("logicalNot")}logicalAnd(e,t){return notYetImplemented("logicalAnd")}logicalOr(e,t){return notYetImplemented("logicalOr")}where(e){return notYetImplemented("where")}select(e,t,s){return notYetImplemented("select")}topk(e,t,s){return notYetImplemented("topk")}min(e,t){return notYetImplemented("min")}minimum(e,t){return notYetImplemented("minimum")}mod(e,t){return notYetImplemented("mod")}max(e,t){return notYetImplemented("max")}maximum(e,t){return notYetImplemented("maximum")}all(e,t){return notYetImplemented("all")}any(e,t){return notYetImplemented("any")}squaredDifference(e,t){return notYetImplemented("squaredDifference")}ceil(e){return notYetImplemented("ceil")}floor(e){return notYetImplemented("floor")}round(e){return notYetImplemented("round")}sign(e){return notYetImplemented("sign")}isNaN(e){return notYetImplemented("isNaN")}isInf(e){return notYetImplemented("isInf")}isFinite(e){return notYetImplemented("isFinite")}pow(e,t){return notYetImplemented("pow")}exp(e){return notYetImplemented("exp")}expm1(e){return notYetImplemented("expm1")}softmax(e,t){return notYetImplemented("softmax")}log(e){return notYetImplemented("log")}log1p(e){return notYetImplemented("log1p")}sqrt(e){return notYetImplemented("sqrt")}rsqrt(e){return notYetImplemented("rsqrt")}square(e){return notYetImplemented("square")}reciprocal(e){return notYetImplemented("reciprocal")}relu(e){return notYetImplemented("relu")}relu6(e){return notYetImplemented("relu6")}prelu(e,t){return notYetImplemented("prelu")}elu(e){return notYetImplemented("elu")}eluDer(e,t){return notYetImplemented("eluDer")}selu(e){return notYetImplemented("selu")}int(e){return notYetImplemented("int")}clip(e,t,s){return notYetImplemented("clip")}abs(e){return notYetImplemented("abs")}complexAbs(e){return notYetImplemented("complexAbs")}sigmoid(e){return notYetImplemented("sigmoid")}softplus(e){return notYetImplemented("softplus")}sin(e){return notYetImplemented("sin")}cos(e){return notYetImplemented("cos")}tan(e){return notYetImplemented("tan")}asin(e){return notYetImplemented("asin")}acos(e){return notYetImplemented("acos")}atan(e){return notYetImplemented("atan")}atan2(e,t){return notYetImplemented("atan2")}sinh(e){return notYetImplemented("sinh")}cosh(e){return notYetImplemented("cosh")}tanh(e){return notYetImplemented("tanh")}asinh(e){return notYetImplemented("asinh")}acosh(e){return notYetImplemented("acosh")}atanh(e){return notYetImplemented("atanh")}erf(e){return notYetImplemented("erf")}step(e,t){return notYetImplemented("step")}fusedConv2d({input:e,filter:t,convInfo:s,bias:r,activation:i,preluActivationWeights:a}){return notYetImplemented("fusedConv2d")}conv2d(e,t,s){return notYetImplemented("conv2d")}conv2dDerInput(e,t,s){return notYetImplemented("conv2dDerInput")}conv2dDerFilter(e,t,s){return notYetImplemented("conv2dDerFilter")}fusedDepthwiseConv2D({input:e,filter:t,convInfo:s,bias:r,activation:i,preluActivationWeights:a}){return notYetImplemented("fusedDepthwiseConv2D")}depthwiseConv2D(e,t,s){return notYetImplemented("depthwiseConv2D")}depthwiseConv2DDerInput(e,t,s){return notYetImplemented("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(e,t,s){return notYetImplemented("depthwiseConv2DDerFilter")}conv3d(e,t,s){return notYetImplemented("conv3d")}conv3dDerInput(e,t,s){return notYetImplemented("conv3dDerInput")}conv3dDerFilter(e,t,s){return notYetImplemented("conv3dDerFilter")}maxPool(e,t){return notYetImplemented("maxPool")}maxPoolBackprop(e,t,s,r){return notYetImplemented("maxPoolBackprop")}avgPool(e,t){return notYetImplemented("avgPool")}avgPoolBackprop(e,t,s){return notYetImplemented("avgPoolBackprop")}avgPool3d(e,t){return notYetImplemented("avgPool3d")}avgPool3dBackprop(e,t,s){return notYetImplemented("avgPool3dBackprop")}maxPool3d(e,t){return notYetImplemented("maxPool3d")}maxPool3dBackprop(e,t,s,r){return notYetImplemented("maxPool3dBackprop")}reshape(e,t){return notYetImplemented("reshape")}cast(e,t){return notYetImplemented("cast")}tile(e,t){return notYetImplemented("tile")}pad(e,t,s){return notYetImplemented("pad")}transpose(e,t){return notYetImplemented("transpose")}gather(e,t,s,r=0){return notYetImplemented("gather")}gatherND(e,t){return notYetImplemented("gatherND")}scatterND(e,t,s){return notYetImplemented("scatterND")}batchToSpaceND(e,t,s){return notYetImplemented("batchToSpaceND")}spaceToBatchND(e,t,s){return notYetImplemented("spaceToBatchND")}resizeBilinear(e,t,s,r,i){return notYetImplemented("resizeBilinear")}resizeBilinearBackprop(e,t,s){return notYetImplemented("resizeBilinearBackprop")}resizeNearestNeighbor(e,t,s,r,i){return notYetImplemented("resizeNearestNeighbor")}resizeNearestNeighborBackprop(e,t,s){return notYetImplemented("resizeNearestNeighborBackprop")}batchNorm(e,t,s,r,i,a){return notYetImplemented("batchNorm")}localResponseNormalization4D(e,t,s,r,i){return notYetImplemented("localResponseNormalization4D")}LRNGrad(e,t,s,r,i,a,c){return notYetImplemented("LRNGrad")}multinomial(e,t,s,r){return notYetImplemented("multinomial")}oneHot(e,t,s,r){return notYetImplemented("oneHot")}cumsum(e,t,s,r){return notYetImplemented("cumsum")}nonMaxSuppression(e,t,s,r,i){return notYetImplemented("nonMaxSuppression")}fft(e){return notYetImplemented("fft")}ifft(e){return notYetImplemented("ifft")}complex(e,t){return notYetImplemented("complex")}real(e){return notYetImplemented("real")}imag(e){return notYetImplemented("imag")}cropAndResize(e,t,s,r,i,a){return notYetImplemented("cropAndResize")}depthToSpace(e,t,s){return notYetImplemented("depthToSpace")}split(e,t,s){return notYetImplemented("split")}sparseToDense(e,t,s,r){return notYetImplemented("sparseToDense")}diag(e){return notYetImplemented("diag")}fill(e,t,s){return notYetImplemented("fill")}onesLike(e){return notYetImplemented("onesLike")}zerosLike(e){return notYetImplemented("zerosLike")}linspace(e,t,s){return notYetImplemented("linspace")}dispose(){return notYetImplemented("dispose")}}function notYetImplemented(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function shuffle(n){let e=n.length,t=0,s=0;for(;e>0;)s=Math.random()*e|0,e--,t=n[e],n[e]=n[s],n[s]=t}function clamp$1(n,e,t){return Math.max(n,Math.min(e,t))}function nearestLargerEven(n){return n%2==0?n:n+1}function sum$3(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function assert$2(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function assertShapesMatch(n,e,t=""){assert$2(arraysEqual(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function assertNonNull(n){assert$2(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function flatten$2(n,e=[],t=!1){if(e==null&&(e=[]),Array.isArray(n)||isTypedArray(n)&&!t)for(let s=0;s<n.length;++s)flatten$2(n[s],e,t);else e.push(n);return e}function sizeFromShape(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function arraysEqual(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function isInt(n){return n%1==0}function sizeToSquarishShape(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function rightPad(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function repeatedTry(n,e=s=>0,t){return new Promise((s,r)=>{let i=0;const a=()=>{if(n()){s();return}i++;const c=e(i);if(t!=null&&i>=t){r();return}setTimeout(a,c)};a()})}function inferFromImplicitShape(n,e){let t=1,s=-1;for(let i=0;i<n.length;++i)if(n[i]>=0)t*=n[i];else if(n[i]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${i}`);s=i}else if(n[i]<0)throw Error(`Shapes can not be < 0. Found ${n[i]} at dim ${i}`);if(s===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const r=n.slice();return r[s]=e/t,r}function parseAxisParam(n,e){const t=e.length;return n=n==null?e.map((s,r)=>r):[].concat(n),assert$2(n.every(s=>s>=-t&&s<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),assert$2(n.every(s=>isInt(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?t+s:s)}function squeezeShape(n,e){const t=[],s=[],r=e!=null&&Array.isArray(e)&&e.length===0,i=e==null||r?null:parseAxisParam(e,n).sort();let a=0;for(let c=0;c<n.length;++c){if(i!=null){if(i[a]===c&&n[c]!==1)throw new Error(`Can't squeeze axis ${c} since its dim '${n[c]}' is not 1`);(i[a]==null||i[a]>c)&&n[c]===1&&(t.push(n[c]),s.push(c)),i[a]<=c&&a++}n[c]!==1&&(t.push(n[c]),s.push(c))}return{newShape:t,keptDims:s}}function getTypedArrayFromDType(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else throw new Error(`Unknown data type ${n}`);return t}function getArrayFromDType(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function checkConversionForErrors(n,e){for(let t=0;t<n.length;t++){const s=n[t];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function isValidDtype(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function hasEncodingLoss(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function isTypedArray(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array}function bytesPerElement(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function bytesFromStringArray(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function isString$1(n){return typeof n=="string"||n instanceof String}function isBoolean$1(n){return typeof n=="boolean"}function isNumber$1(n){return typeof n=="number"}function inferDtype(n){return Array.isArray(n)?inferDtype(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array?"int32":isNumber$1(n)?"float32":isString$1(n)?"string":isBoolean$1(n)?"bool":"float32"}function isFunction$1(n){return!!(n&&n.constructor&&n.call&&n.apply)}function nearestDivisor(n,e){for(let t=e;t<n;++t)if(n%t==0)return t;return n}function computeStrides(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let s=e-3;s>=0;--s)t[s]=t[s+1]*n[s+1];return t}function createNestedArray(n,e,t){const s=new Array;if(e.length===1){const r=e[0];for(let i=0;i<r;i++)s[i]=t[n+i]}else{const r=e[0],i=e.slice(1),a=i.reduce((c,u)=>c*u);for(let c=0;c<r;c++)s[c]=createNestedArray(n+c*a,i,t)}return s}function toNestedArray(n,e){if(n.length===0)return e[0];const t=n.reduce((s,r)=>s*r);if(t===0)return[];if(t!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}.`);return createNestedArray(0,n,e)}function makeOnesTypedArray(n,e){const t=makeZerosTypedArray(n,e);for(let s=0;s<t.length;s++)t[s]=1;return t}function makeZerosTypedArray(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function makeZerosNestedTypedArray(n,e){const t=n.reduce((s,r)=>s*r,1);if(e==null||e==="float32")return toNestedArray(n,new Float32Array(t));if(e==="int32")return toNestedArray(n,new Int32Array(t));if(e==="bool")return toNestedArray(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function assertNonNegativeIntegerDimensions(n){n.forEach(e=>{assert$2(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function locToIndex(n,e,t){if(e===0)return 0;if(e===1)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=t[r]*n[r];return s}function indexToLoc(n,e,t){if(e===0)return[];if(e===1)return[n];const s=new Array(e);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/t[r]),n-=s[r]*t[r];return s[s.length-1]=n,s}function isPromise(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TENSORFLOWJS_FLAGS_PREFIX="tfjsflags";class Environment{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,s){if(this.flagRegistry[e]={evaluationFn:t,setHook:s},this.urlFlags[e]!=null){const r=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(isPromise(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;const e=getQueryParams(this.global.location.search);TENSORFLOWJS_FLAGS_PREFIX in e&&e[TENSORFLOWJS_FLAGS_PREFIX].split(",").forEach(s=>{const[r,i]=s.split(":");this.urlFlags[r]=parseValue(r,i)})}}function getQueryParams(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...s)=>(decodeParam(e,s[0],s[1]),s.join("="))),e}function decodeParam(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function parseValue(n,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${n}.`)}function env(){return ENV$2}let ENV$2=null;function setEnvironmentGlobal(n){ENV$2=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let globalNameSpace;function getGlobalNamespace(){if(globalNameSpace==null){let n;if(typeof window!="undefined")n=window;else if(typeof global!="undefined")n=global;else if(typeof process!="undefined")n=process;else if(typeof self!="undefined")n=self;else throw new Error("Could not find a global object");globalNameSpace=n}return globalNameSpace}function getGlobalMap(){const n=getGlobalNamespace();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function getGlobal(n,e){const t=getGlobalMap();if(t.has(n))return t.get(n);{const s=e();return t.set(n,s),t.get(n)}}const Abs$1="Abs",Acos="Acos",Acosh="Acosh",Add$2="Add",AddN="AddN",All="All",Any="Any",ArgMax="ArgMax",ArgMin="ArgMin",Asin="Asin",Asinh="Asinh",Atan="Atan",Atanh="Atanh",Atan2="Atan2",AvgPool="AvgPool",AvgPoolGrad="AvgPoolGrad",AvgPool3D="AvgPool3D",AvgPool3DGrad="AvgPool3DGrad",BatchMatMul="BatchMatMul",BatchToSpaceND="BatchToSpaceND",Bincount="Bincount",BroadcastTo="BroadcastTo",Cast="Cast",Ceil="Ceil",ClipByValue="ClipByValue",Complex="Complex",ComplexAbs="ComplexAbs",Concat="Concat",Conv2D$1="Conv2D",Conv2DBackpropFilter="Conv2DBackpropFilter",Conv2DBackpropInput="Conv2DBackpropInput",Conv3D$1="Conv3D",Conv3DBackpropFilterV2="Conv3DBackpropFilterV2",Conv3DBackpropInputV2="Conv3DBackpropInputV2",Cos="Cos",Cosh="Cosh",Cumsum="Cumsum",CropAndResize="CropAndResize",DenseBincount="DenseBincount",DepthToSpace="DepthToSpace",DepthwiseConv2dNative="DepthwiseConv2dNative",DepthwiseConv2dNativeBackpropFilter="DepthwiseConv2dNativeBackpropFilter",DepthwiseConv2dNativeBackpropInput="DepthwiseConv2dNativeBackpropInput",Diag="Diag",Dilation2D="Dilation2D",Dilation2DBackpropInput="Dilation2DBackpropInput",Dilation2DBackpropFilter="Dilation2DBackpropFilter",RealDiv="RealDiv",Elu$1="Elu",EluGrad="EluGrad",Erf="Erf",Equal="Equal",Exp="Exp",ExpandDims="ExpandDims",Expm1="Expm1",FFT$1="FFT",Fill="Fill",FlipLeftRight="FlipLeftRight",Floor="Floor",FloorDiv="FloorDiv",FusedBatchNorm="FusedBatchNorm",GatherV2="GatherV2",GatherNd="GatherNd",Greater="Greater",GreaterEqual="GreaterEqual",Identity$1="Identity",IFFT="IFFT",Imag="Imag",IsFinite="IsFinite",IsInf="IsInf",IsNan="IsNan",LeakyRelu="LeakyRelu",Less="Less",LessEqual="LessEqual",LinSpace="LinSpace",Log="Log",Log1p="Log1p",LogicalAnd="LogicalAnd",LogicalNot="LogicalNot",LogicalOr="LogicalOr",LogSoftmax$1="LogSoftmax",LRN="LRN",LRNGrad="LRNGrad",Max="Max",Maximum$1="Maximum",MaxPool="MaxPool",MaxPoolGrad="MaxPoolGrad",MaxPool3D="MaxPool3D",MaxPool3DGrad="MaxPool3DGrad",MaxPoolWithArgmax="MaxPoolWithArgmax",Mean="Mean",Min="Min",Minimum$1="Minimum",MirrorPad="MirrorPad",Mod="Mod",Multinomial="Multinomial",Multiply$2="Multiply",Neg="Neg",NotEqual="NotEqual",NonMaxSuppressionV3="NonMaxSuppressionV3",NonMaxSuppressionV4="NonMaxSuppressionV4",NonMaxSuppressionV5="NonMaxSuppressionV5",OnesLike="OnesLike",OneHot="OneHot",Pack="Pack",PadV2="PadV2",Pow$1="Pow",Prelu="Prelu",Prod="Prod",Range="Range",Real="Real",Reciprocal="Reciprocal",Relu$1="Relu",Reshape$1="Reshape",ResizeNearestNeighbor="ResizeNearestNeighbor",ResizeNearestNeighborGrad="ResizeNearestNeighborGrad",ResizeBilinear="ResizeBilinear",ResizeBilinearGrad="ResizeBilinearGrad",Relu6$1="Relu6",Reverse="Reverse",Round="Round",Rsqrt="Rsqrt",ScatterNd="ScatterNd",Select="Select",Selu$1="Selu",Slice="Slice",Sin="Sin",Sinh="Sinh",Sign="Sign",Sigmoid$1="Sigmoid",Softplus$1="Softplus",Sqrt="Sqrt",Sum="Sum",SpaceToBatchND="SpaceToBatchND",SplitV="SplitV",Softmax$2="Softmax",SquaredDifference="SquaredDifference",Square="Square",Sub="Sub",SparseToDense="SparseToDense",StridedSlice="StridedSlice",Tan="Tan",Tanh$1="Tanh",Tile="Tile",TopK="TopK",Transpose="Transpose",Unique="Unique",Unpack="Unpack",UnsortedSegmentSum="UnsortedSegmentSum",ZerosLike="ZerosLike",Step="Step",FromPixels="FromPixels",RotateWithOffset="RotateWithOffset",_FusedMatMul="_FusedMatMul",FusedConv2D="FusedConv2D",FusedDepthwiseConv2D="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kernelRegistry=getGlobal("kernelRegistry",()=>new Map),gradRegistry=getGlobal("gradRegistry",()=>new Map);function getKernel(n,e){const t=makeKey(n,e);return kernelRegistry.get(t)}function getGradient(n){return gradRegistry.get(n)}function getKernelsForBackend(n){const e=kernelRegistry.entries(),t=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[i,a]=r,[c]=i.split("_");c===n&&t.push(a)}return t}function registerKernel(n){const{kernelName:e,backendName:t}=n,s=makeKey(e,t);kernelRegistry.has(s)&&console.warn(`The kernel '${e}' for backend '${t}' is already registered`),kernelRegistry.set(s,n)}function registerGradient(n){const{kernelName:e}=n;gradRegistry.has(e)&&env().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),gradRegistry.set(e,n)}function makeKey(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function createScalarValue(n,e){return e==="string"?encodeString(n):toTypedArray([n],e)}function noConversionNeeded(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function toTypedArray(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=flatten$2(n)),env().getBool("DEBUG")&&checkConversionForErrors(n,e),noConversionNeeded(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let s=0;s<t.length;++s)Math.round(n[s])!==0&&(t[s]=1);return t}else throw new Error(`Unknown data type ${e}`)}function now$1(){return env().platform.now()}function encodeString(n,e="utf-8"){return e=e||"utf-8",env().platform.encode(n,e)}function decodeString(n,e="utf-8"){return e=e||"utf-8",env().platform.decode(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Profiler{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new Logger)}profileKernel(e,t,s){let r;const i=()=>{r=s()},a=this.backendTimer.time(i);if(env().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<r.length;u++){const l=r[u];l.data().then(h=>{checkComputationForErrors(h,l.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then(u=>u.kernelMs),extraInfo:a.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:s,timeMs:r,inputs:i,extraInfo:a}=e;s.forEach(c=>{Promise.all([c.data(),r,a]).then(u=>{this.logger.logKernelProfile(t,c,u[0],u[1],i,u[2])})})}}function checkComputationForErrors(n,e,t){if(e!=="float32")return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${t}'`),!0}return!1}class Logger{logKernelProfile(e,t,s,r,i,a){const c=typeof r=="number"?rightPad(`${r}ms`,9):r.error,u=rightPad(e,25),l=t.rank,h=t.size,d=rightPad(t.shape.toString(),14);let f="";for(const y in i){const g=i[y];if(g!=null){const x=g.shape||t.shape,b=x.length;f+=`${y}: ${b}D ${b>0?x:""} `}}console.log(`%c${u}	%c${c}	%c${l}D ${d}	%c${h}	%c${f}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getFilteredNodesXToY(n,e,t){const s={},r={};for(let u=0;u<e.length;u++)s[e[u].id]=!0;for(let u=0;u<n.length;u++){const l=n[u],h=l.inputs;for(const d in h){const f=h[d];let y=!1;for(let g=0;g<e.length;g++)if(s[f.id]){l.outputs.forEach(x=>s[x.id]=!0),y=!0,r[l.id]=!0;break}if(y)break}}const i={};i[t.id]=!0;const a={};for(let u=n.length-1;u>=0;u--){const l=n[u],h=l.inputs;for(let d=0;d<l.outputs.length;d++)if(i[l.outputs[d].id]){for(const f in h)i[h[f].id]=!0,a[l.id]=!0;break}}const c=[];for(let u=0;u<n.length;u++){const l=n[u];if(r[l.id]&&a[l.id]){const h={};for(const f in l.inputs){const y=l.inputs[f];s[y.id]&&(h[f]=y)}const d=Object.assign({},l);d.inputs=h,d.outputs=l.outputs,c.push(d)}}return c}function backpropagateGradients(n,e,t,s){for(let r=e.length-1;r>=0;r--){const i=e[r],a=[];if(i.outputs.forEach(u=>{const l=n[u.id];l!=null?a.push(l):a.push(null)}),i.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const c=i.gradient(a);for(const u in i.inputs){if(!(u in c))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(c)}.`);const l=t(()=>c[u]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${l.dtype}'`);const h=i.inputs[u];if(!arraysEqual(l.shape,h.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${u}' has shape '${l.shape}', which does not match the shape of the input '${h.shape}'`);if(n[h.id]==null)n[h.id]=l;else{const d=n[h.id];n[h.id]=s(d,l),d.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FORMAT_LIMIT_NUM_VALS=20,FORMAT_NUM_FIRST_LAST_VALS=3,FORMAT_NUM_SIG_DIGITS=7;function tensorToString(n,e,t,s){const r=computeStrides(e),i=computeMaxSizePerColumn(n,e,t,r),a=e.length,c=subTensorToString(n,e,t,r,i),u=["Tensor"];return s&&(u.push(`  dtype: ${t}`),u.push(`  rank: ${a}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(c.map(l=>"    "+l).join(`
`)),u.join(`
`)}function computeMaxSizePerColumn(n,e,t,s){const r=sizeFromShape(e),i=s[s.length-1],a=new Array(i).fill(0),c=e.length,u=t==="complex64"?createComplexTuples(n):n;if(c>1)for(let l=0;l<r/i;l++){const h=l*i;for(let d=0;d<i;d++)a[d]=Math.max(a[d],valToString(u[h+d],0,t).length)}return a}function valToString(n,e,t){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(FORMAT_NUM_SIG_DIGITS))} + ${parseFloat(n[1].toFixed(FORMAT_NUM_SIG_DIGITS))}j`:isString$1(n)?s=`'${n}'`:t==="bool"?s=boolNumToString(n):s=parseFloat(n.toFixed(FORMAT_NUM_SIG_DIGITS)).toString(),rightPad(s,e)}function boolNumToString(n){return n===0?"false":"true"}function subTensorToString(n,e,t,s,r,i=!0){const a=t==="complex64"?2:1,c=e[0],u=e.length;if(u===0){if(t==="complex64"){const x=createComplexTuples(n);return[valToString(x[0],0,t)]}return t==="bool"?[boolNumToString(n[0])]:[n[0].toString()]}if(u===1){if(c>FORMAT_LIMIT_NUM_VALS){const b=FORMAT_NUM_FIRST_LAST_VALS*a;let v=Array.from(n.slice(0,b)),S=Array.from(n.slice((c-FORMAT_NUM_FIRST_LAST_VALS)*a,c*a));return t==="complex64"&&(v=createComplexTuples(v),S=createComplexTuples(S)),["["+v.map((T,w)=>valToString(T,r[w],t)).join(", ")+", ..., "+S.map((T,w)=>valToString(T,r[c-FORMAT_NUM_FIRST_LAST_VALS+w],t)).join(", ")+"]"]}const x=t==="complex64"?createComplexTuples(n):Array.from(n);return["["+x.map((b,v)=>valToString(b,r[v],t)).join(", ")+"]"]}const l=e.slice(1),h=s.slice(1),d=s[0]*a,f=[];if(c>FORMAT_LIMIT_NUM_VALS){for(let x=0;x<FORMAT_NUM_FIRST_LAST_VALS;x++){const b=x*d,v=b+d;f.push(...subTensorToString(n.slice(b,v),l,t,h,r,!1))}f.push("...");for(let x=c-FORMAT_NUM_FIRST_LAST_VALS;x<c;x++){const b=x*d,v=b+d;f.push(...subTensorToString(n.slice(b,v),l,t,h,r,x===c-1))}}else for(let x=0;x<c;x++){const b=x*d,v=b+d;f.push(...subTensorToString(n.slice(b,v),l,t,h,r,x===c-1))}const y=u===2?",":"";f[0]="["+f[0]+y;for(let x=1;x<f.length-1;x++)f[x]=" "+f[x]+y;let g=`,
`;for(let x=2;x<u;x++)g+=`
`;return f[f.length-1]=" "+f[f.length-1]+"]"+(i?"":g),f}function createComplexTuples(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TensorBuffer{constructor(e,t,s){if(this.dtype=t,this.shape=e.slice(),this.size=sizeFromShape(e),s!=null){const r=s.length;assert$2(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||getArrayFromDType(t,this.size),this.strides=computeStrides(e)}set(e,...t){t.length===0&&(t=[0]),assert$2(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const s=this.locToIndex(t);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const i=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(i)}t++}let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=this.strides[r]*e[r];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let s=0;s<e.length-1;++s)t+=this.strides[s]*e[s];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let s=0;s<t.length-1;++s)t[s]=Math.floor(e/this.strides[s]),e-=t[s]*this.strides[s];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return trackerFn().makeTensor(this.values,this.shape,this.dtype)}}let trackerFn=null,opHandler$1=null;function setTensorTracker(n){trackerFn=n}function setOpHandler(n){opHandler$1=n}class Tensor{constructor(e,t,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=sizeFromShape(e),this.strides=computeStrides(e),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return opHandler$1.buffer(this.shape,this.dtype,e)}bufferSync(){return opHandler$1.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return toNestedArray(this.shape,e)}arraySync(){return toNestedArray(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=trackerFn().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(s=>decodeString(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=trackerFn().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>decodeString(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await trackerFn().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(trackerFn().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return opHandler$1.print(this,e)}clone(){return this.throwIfDisposed(),opHandler$1.clone(this)}toString(e=!1){const t=this.dataSync();return tensorToString(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),opHandler$1.cast(this,e)}variable(e=!0,t,s){return this.throwIfDisposed(),trackerFn().makeVariable(this,e,t,s)}}Object.defineProperty(Tensor,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});class Variable extends Tensor{constructor(e,t,s,r){super(e.shape,e.dtype,e.dataId,r);this.trainable=t,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!arraysEqual(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);trackerFn().disposeTensor(this),this.dataId=e.dataId,trackerFn().incRef(this,null)}dispose(){trackerFn().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Variable,Symbol.hasInstance,{value:n=>n instanceof Tensor&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Rank;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(Rank||(Rank={}));var UpcastInt32AndMap;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(UpcastInt32AndMap||(UpcastInt32AndMap={}));var UpcastBoolAndMap;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(UpcastBoolAndMap||(UpcastBoolAndMap={}));var UpcastFloat32AndMap;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(UpcastFloat32AndMap||(UpcastFloat32AndMap={}));var UpcastComplex64AndMap;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(UpcastComplex64AndMap||(UpcastComplex64AndMap={}));const upcastTypeMap={float32:UpcastFloat32AndMap,int32:UpcastInt32AndMap,bool:UpcastBoolAndMap,complex64:UpcastComplex64AndMap};function upcastType(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return upcastTypeMap[n][e]}function sumOutType(n){return upcastType(n,"int32")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function makeTypesMatch(n,e){if(n.dtype===e.dtype)return[n,e];const t=upcastType(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function getTensorsInContainer(n){const e=[],t=new Set;return walkTensorContainer(n,e,t),e}function walkTensorContainer(n,e,t){if(n==null)return;if(n instanceof Tensor){e.push(n);return}if(!isIterable(n))return;const s=n;for(const r in s){const i=s[r];t.has(i)||(t.add(i),walkTensorContainer(i,e,t))}}function isIterable(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EngineState{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Engine{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new EngineState}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,s=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:s}=this.initializeBackend(e);if(!(s?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Profiler(this.backendInstance),!0}setupRegisteredKernels(){getKernelsForBackend(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){getKernelsForBackend(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=t.factory();if(s&&!(s instanceof KernelBackend)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,i=s.then(a=>r<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(a.stack||a.message)),!1));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return console.warn(`Initialization of backend ${e} failed`),console.warn(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t],{success:r,asyncInit:i}=this.initializeBackend(s);if(i||r)return{name:s,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const s=this.state.tensorInfo.get(t),r=s.backend,i=this.readSync(t);r.disposeData(t),s.backend=e,e.move(t,i,s.shape,s.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let s=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=t(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,s){e();try{const r=s();return t(),r}catch(r){throw t(),r}}nextTensorId(){return Engine.nextTensorId++}nextVariableId(){return Engine.nextVariableId++}clone(e){const t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),s={x:e},r=a=>({x:()=>{const c="float32",u={x:a},l={dtype:c};return ENGINE.runKernelFunc(h=>h.cast(a,c),u,null,Cast,l)}}),i=[];return this.addTapeNode(this.state.activeScope.name,s,[t],r,i,{}),t}runKernel(e,t,s,r,i){const a=null,c=null;return this.runKernelFunc(a,t,c,e,s,r,i)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,s){const r=this.backend.numDataIds();let i=0;s.forEach(u=>{i+=u.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],c=r-t-i-a;if(c>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${c} data ids) after running '${e}'`)}runKernelFunc(e,t,s,r,i,a,c){let u,l=[];const h=this.isTapeOn();r==null&&(r=this.state.activeScope!=null?this.state.activeScope.name:"");const d=this.state.numBytes,f=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let y;this.backendName==null&&this.backend;const g=getKernel(r,this.backendName);let x;if(g!=null)y=()=>{const v=this.backend.numDataIds();x=g.kernelFunc({inputs:t,attrs:i,backend:this.backend});const S=Array.isArray(x)?x:[x];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,v,S);const T=S.map(w=>{if(w.rank!=null)return w;const{dataId:C,shape:N,dtype:_}=w;return this.makeTensorFromDataId(C,N,_)});if(h){let w=this.getTensorsForGradient(r,t,T);if(w==null){c==null&&(c=[]);const C=T.filter((N,_)=>c[_]);w=(a||[]).slice().concat(C)}l=this.saveTensorsForBackwardMode(w)}return T};else{if(e==null)throw new Error(`Error running ${r}: Neither modular kernel nor forward func passed`);const v=S=>{!h||(l=S.map(T=>this.keep(this.clone(T))))};y=()=>{const S=this.backend.numDataIds();x=this.tidy(()=>e(this.backend,v));const T=Array.isArray(x)?x:[x];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,S,T),T}}let b;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?u=y():(b=this.profiler.profileKernel(r,t,()=>y()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(b),u=b.outputs)}),h&&this.addTapeNode(r,t,u,s,l,i),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-d,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-f,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map(v=>t[v]!=null?t[v].shape:null),outputShapes:u.map(v=>v.shape),kernelTimeMs:b.timeMs,extraInfo:b.extraInfo}),Array.isArray(x)?u:u[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,t,s){const r=getGradient(e);if(r!=null){const i=r.inputsToSave||[],a=r.outputsToSave||[];let c;r.saveAllInputs?(assert$2(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),c=Object.keys(t).map(l=>t[l])):c=i.map(l=>t[l]);const u=s.filter((l,h)=>a[h]);return c.concat(u)}return null}makeTensor(e,t,s,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let i=e;s==="string"&&isString$1(e[0])&&(i=e.map(u=>encodeString(u)));const a=r.write(i,t,s),c=new Tensor(t,s,a,this.nextTensorId());if(this.incRef(c,r),s==="string"){const u=this.state.tensorInfo.get(a),l=bytesFromStringArray(i);this.state.numBytes+=l-u.bytes,u.bytes=l}return c}makeTensorFromDataId(e,t,s,r){s=s||"float32";const i=new Tensor(t,s,e,this.nextTensorId());return this.incRef(i,r),i}makeVariable(e,t=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));const i=new Variable(e,t,s,this.nextTensorId());if(this.state.registeredVariables[i.name]!=null)throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}incRef(e,t){const s=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++,s===0){this.state.numDataBuffers++;let r=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(r=e.size*bytesPerElement(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:r,refCount:0}),this.state.numBytes+=r}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof Variable||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,e.dtype==="string"&&this.state.numStringTensors--;const t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?(e.dtype!=="complex64"&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):(t.backend.decComplexRef(e.dataId),this.state.tensorInfo.get(e.dataId).refCount--)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,s,r,i,a){const c={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:s,saved:i},u=getGradient(e);u!=null&&(r=u.gradFunc),r!=null&&(c.gradient=l=>(l=l.map((h,d)=>{if(h==null){const f=s[d],y=makeZerosTypedArray(f.size,f.dtype);return this.makeTensor(y,f.shape,f.dtype)}return h}),r(l.length>1?l:l[0],i,a))),this.state.activeTape.push(c)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=getTensorsInContainer(e),s=new Set(t.map(i=>i.id));for(let i=0;i<this.state.activeScope.track.length;i++){const a=this.state.activeScope.track[i];!a.kept&&!s.has(a.id)&&a.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(i=>{!i.kept&&i.scopeId===r.id&&this.track(i)})}gradients(e,t,s,r=!1){if(assert$2(t.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const i=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));assert$2(i instanceof Tensor,()=>"The result y returned by f() must be a tensor.");const a=getFilteredNodesXToY(this.state.activeTape,t,i);if(!r&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const c={};c[i.id]=s==null?ones$1(i.shape):s,backpropagateGradients(c,a,l=>this.tidy(l),add$2);const u=t.map(l=>c[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(const h of l.saved)h.dispose()}),this.state.activeTape=null),{value:i,grads:u}})}customGrad(e){return assert$2(isFunction$1(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{assert$2(t.every(i=>i instanceof Tensor),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};return t.forEach((i,a)=>{r[a]=i}),this.runKernelFunc((i,a)=>(s=e(...t,a),assert$2(s.value instanceof Tensor,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),assert$2(isFunction$1(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),r,(i,a)=>{const c=s.gradFunc(i,a),u=Array.isArray(c)?c:[c];assert$2(u.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),assert$2(u.every(h=>h instanceof Tensor),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const l={};return u.forEach((h,d)=>{l[d]=()=>h}),l})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=now$1(),s=await this.backend.time(e);return s.wallMs=now$1()-t,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new EngineState;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Engine.nextTensorId=0;Engine.nextVariableId=0;function ones$1(n){const e=makeOnesTypedArray(sizeFromShape(n),"float32");return ENGINE.makeTensor(e,n,"float32")}function getOrMakeEngine(){const n=getGlobalNamespace();if(n._tfengine==null){const e=new Environment(n);n._tfengine=new Engine(e)}return setEnvironmentGlobal(n._tfengine.ENV),setTensorTracker(()=>n._tfengine),n._tfengine}const ENGINE=getOrMakeEngine();function add$2(n,e){const t={a:n,b:e};return ENGINE.runKernel(Add$2,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _isNavigatorDefined(){return typeof navigator!="undefined"&&navigator!=null}function isMobile(){if(_isNavigatorDefined()){const n=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(n)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(n.substr(0,4))}return!1}function isBrowser(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ENV$1=env();ENV$1.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});ENV$1.registerFlag("IS_BROWSER",()=>isBrowser());ENV$1.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");ENV$1.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));ENV$1.registerFlag("PROD",()=>!1);ENV$1.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ENV$1.getBool("DEBUG"));ENV$1.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);ENV$1.registerFlag("IS_TEST",()=>!1);ENV$1.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function inferShape(n,e){let t=n;if(isTypedArray(n))return e==="string"?[]:[n.length];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(t)||isTypedArray(t)&&e!=="string";)s.push(t.length),t=t[0];return Array.isArray(n)&&env().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&deepAssertShapeConsistency(n,s,[]),s}function deepAssertShapeConsistency(n,e,t){if(t=t||[],!Array.isArray(n)&&!isTypedArray(n)){assert$2(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}assert$2(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),assert$2(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const s=e.slice(1);for(let r=0;r<n.length;++r)deepAssertShapeConsistency(n[r],s,t.concat(r))}function assertDtype(n,e,t,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${s}' must be ${n} tensor, but got ${e} tensor`)}}function convertToTensor(n,e,t,s="numeric"){if(n instanceof Tensor)return assertDtype(s,n.dtype,e,t),n;let r=inferDtype(n);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),assertDtype(s,r,e,t),n==null||!isTypedArray(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const u=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${u}'`)}const i=inferShape(n,r);!isTypedArray(n)&&!Array.isArray(n)&&(n=[n]);const c=r!=="string"?toTypedArray(n,r):flatten$2(n,[],!0);return ENGINE.makeTensor(c,i,r)}function convertToTensorArray(n,e,t,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((i,a)=>convertToTensor(i,`${e}[${a}]`,t,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OP_SCOPE_SUFFIX="__op";function op(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const s=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+OP_SCOPE_SUFFIX;const r=(...i)=>{ENGINE.startScope(t);try{const a=s(...i);return isPromise(a)&&console.error("Cannot return a Promise inside of tidy."),ENGINE.endScope(a),a}catch(a){throw ENGINE.endScope(null),a}};return Object.defineProperty(r,"name",{value:t,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function complex_(n,e){const t=convertToTensor(n,"real","complex"),s=convertToTensor(e,"imag","complex");assertShapesMatch(t.shape,s.shape,`real and imag shapes, ${t.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:t,imag:s};return ENGINE.runKernel(Complex,r)}const complex$2=op({complex_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function makeTensor(n,e,t,s){if(s==null&&(s=inferDtype(n)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!isTypedArray(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){assertNonNegativeIntegerDimensions(e);const r=sizeFromShape(e),i=sizeFromShape(t);assert$2(r===i,()=>`Based on the provided shape, [${e}], the tensor should have ${r} values but has ${i}`);for(let a=0;a<t.length;++a){const c=t[a],u=a===t.length-1?c!==sizeFromShape(e.slice(a)):!0;assert$2(t[a]===e[a]||!u,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!isTypedArray(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=s!=="string"?toTypedArray(n,s):flatten$2(n,[],!0),ENGINE.makeTensor(n,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensor(n,e,t){const s=inferShape(n,t);return makeTensor(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DTYPE_VALUE_SIZE_MAP={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NUM_BYTES_STRING_LENGTH=4;async function encodeWeights(n,e){const t=[],s=[],r=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<r.length;++a){const c=r[a],u=Array.isArray(n)?n[a].tensor:n[c];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${c}': ${u.dtype}`);const l={name:c,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){const h=new Promise(async d=>{const f=await u.bytes(),y=f.reduce((b,v)=>b+v.length,0)+NUM_BYTES_STRING_LENGTH*f.length,g=new Uint8Array(y);let x=0;for(let b=0;b<f.length;b++){const v=f[b],S=new Uint8Array(new Uint32Array([v.length]).buffer);g.set(S,x),x+=NUM_BYTES_STRING_LENGTH,g.set(v,x),x+=v.length}d(g)});s.push(h)}else s.push(u.data());e!=null&&(l.group=e),t.push(l)}const i=await Promise.all(s);return{data:concatenateTypedArrays(i),specs:t}}function decodeWeights(n,e){const t={};let s,r=0;for(const i of e){const a=i.name,c=i.dtype,u=i.shape,l=sizeFromShape(u);let h;if("quantization"in i){const d=i.quantization;if(d.dtype==="uint8"||d.dtype==="uint16"){if(!("min"in d&&"scale"in d))throw new Error(`Weight ${i.name} with quantization ${d.dtype} doesn't have corresponding metadata min and scale.`)}else if(d.dtype==="float16"){if(c!=="float32")throw new Error(`Weight ${i.name} is quantized with ${d.dtype} which only supports weights of type float32 not ${c}.`)}else throw new Error(`Weight ${i.name} has unknown quantization dtype ${d.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const f=DTYPE_VALUE_SIZE_MAP[d.dtype],y=n.slice(r,r+l*f),g=d.dtype==="uint8"?new Uint8Array(y):new Uint16Array(y);if(c==="float32")if(d.dtype==="uint8"||d.dtype==="uint16"){h=new Float32Array(g.length);for(let x=0;x<g.length;x++){const b=g[x];h[x]=b*d.scale+d.min}}else if(d.dtype==="float16")s===void 0&&(s=getFloat16Decoder()),h=s(g);else throw new Error(`Unsupported quantization type ${d.dtype} for weight type float32.`);else if(c==="int32"){if(d.dtype!=="uint8"&&d.dtype!=="uint16")throw new Error(`Unsupported quantization type ${d.dtype} for weight type int32.`);h=new Int32Array(g.length);for(let x=0;x<g.length;x++){const b=g[x];h[x]=Math.round(b*d.scale+d.min)}}else throw new Error(`Unsupported dtype in weight '${a}': ${c}`);r+=l*f}else if(c==="string"){const d=sizeFromShape(i.shape);h=[];for(let f=0;f<d;f++){const y=new Uint32Array(n.slice(r,r+NUM_BYTES_STRING_LENGTH))[0];r+=NUM_BYTES_STRING_LENGTH;const g=new Uint8Array(n.slice(r,r+y));h.push(g),r+=y}}else{const d=DTYPE_VALUE_SIZE_MAP[c],f=n.slice(r,r+l*d);if(c==="float32")h=new Float32Array(f);else if(c==="int32")h=new Int32Array(f);else if(c==="bool")h=new Uint8Array(f);else if(c==="complex64"){h=new Float32Array(f);const y=new Float32Array(h.length/2),g=new Float32Array(h.length/2);for(let v=0;v<y.length;v++)y[v]=h[v*2],g[v]=h[v*2+1];const x=tensor(y,u,"float32"),b=tensor(g,u,"float32");t[a]=complex$2(x,b),x.dispose(),b.dispose()}else throw new Error(`Unsupported dtype in weight '${a}': ${c}`);r+=l*d}c!=="complex64"&&(t[a]=tensor(h,u,c))}return t}function concatenateTypedArrays(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(i=>{if(e+=i.byteLength,t.push(i.byteLength===i.buffer.byteLength?i:new i.constructor(i)),!(i instanceof Float32Array||i instanceof Int32Array||i instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${i.constructor.name}`)});const s=new Uint8Array(e);let r=0;return t.forEach(i=>{s.set(new Uint8Array(i.buffer),r),r+=i.byteLength}),s.buffer}const useNodeBuffer=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function stringByteLength(n){return useNodeBuffer?Buffer.byteLength(n):new Blob([n]).size}function arrayBufferToBase64String(n){if(useNodeBuffer)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let s=0,r=e.length;s<r;s++)t+=String.fromCharCode(e[s]);return btoa(t)}function base64StringToArrayBuffer(n){if(useNodeBuffer){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)t.set([e.charCodeAt(s)],s);return t.buffer}function concatenateArrayBuffers(n){if(n.length===1)return n[0];let e=0;n.forEach(r=>{e+=r.byteLength});const t=new Uint8Array(e);let s=0;return n.forEach(r=>{t.set(new Uint8Array(r),s),s+=r.byteLength}),t.buffer}function getModelArtifactsInfoForJSON(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:stringByteLength(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:stringByteLength(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:n.weightData.byteLength}}function computeFloat16MantisaTable(){const n=t=>{let s=t<<13,r=0;for(;(s&8388608)==0;)r-=8388608,s<<=1;return s&=~8388608,r+=947912704,s|r},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function computeFloat16ExponentTable(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function computeFloat16OffsetTable(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function getFloat16Decoder(){const n=computeFloat16MantisaTable(),e=computeFloat16ExponentTable(),t=computeFloat16OffsetTable();return s=>{const r=new ArrayBuffer(4*s.length),i=new Uint32Array(r);for(let a=0;a<s.length;a++){const c=s[a],u=n[t[c>>10]+(c&1023)]+e[c>>10];i[a]=u}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IORouterRegistry{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return IORouterRegistry.instance==null&&(IORouterRegistry.instance=new IORouterRegistry),IORouterRegistry.instance}static registerSaveRouter(e){IORouterRegistry.getInstance().saveRouters.push(e)}static registerLoadRouter(e){IORouterRegistry.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return IORouterRegistry.getHandlers(e,"save")}static getLoadHandlers(e,t){return IORouterRegistry.getHandlers(e,"load",t)}static getHandlers(e,t,s){const r=[];return(t==="load"?IORouterRegistry.getInstance().loadRouters:IORouterRegistry.getInstance().saveRouters).forEach(a=>{const c=a(e,s);c!==null&&r.push(c)}),r}}const getSaveHandlers=n=>IORouterRegistry.getSaveHandlers(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DATABASE_NAME="tensorflowjs",DATABASE_VERSION=1,MODEL_STORE_NAME="models_store",INFO_STORE_NAME="model_info_store";function getIndexedDBFactory(){if(!env().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window=="undefined"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function setUpDatabase(n){const e=n.result;e.createObjectStore(MODEL_STORE_NAME,{keyPath:"modelPath"}),e.createObjectStore(INFO_STORE_NAME,{keyPath:"modelPath"})}class BrowserIndexedDB{constructor(e){if(this.indexedDB=getIndexedDBFactory(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((s,r)=>{const i=this.indexedDB.open(DATABASE_NAME,DATABASE_VERSION);i.onupgradeneeded=()=>setUpDatabase(i),i.onsuccess=()=>{const a=i.result;if(t==null){const c=a.transaction(MODEL_STORE_NAME,"readonly"),l=c.objectStore(MODEL_STORE_NAME).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(l.result.modelArtifacts)},l.onerror=h=>(a.close(),r(l.error)),c.oncomplete=()=>a.close()}else{const c=getModelArtifactsInfoForJSON(t),u=a.transaction(INFO_STORE_NAME,"readwrite");let l=u.objectStore(INFO_STORE_NAME);const h=l.put({modelPath:this.modelPath,modelArtifactsInfo:c});let d;h.onsuccess=()=>{d=a.transaction(MODEL_STORE_NAME,"readwrite");const y=d.objectStore(MODEL_STORE_NAME).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:c});y.onsuccess=()=>s({modelArtifactsInfo:c}),y.onerror=g=>{l=u.objectStore(INFO_STORE_NAME);const x=l.delete(this.modelPath);x.onsuccess=()=>(a.close(),r(y.error)),x.onerror=b=>(a.close(),r(y.error))}},h.onerror=f=>(a.close(),r(h.error)),u.oncomplete=()=>{d==null?a.close():d.oncomplete=()=>a.close()}}},i.onerror=a=>r(i.error)})}}BrowserIndexedDB.URL_SCHEME="indexeddb://";const indexedDBRouter=n=>env().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(BrowserIndexedDB.URL_SCHEME)?browserIndexedDB(n.slice(BrowserIndexedDB.URL_SCHEME.length)):null;IORouterRegistry.registerSaveRouter(indexedDBRouter);IORouterRegistry.registerLoadRouter(indexedDBRouter);function browserIndexedDB(n){return new BrowserIndexedDB(n)}function maybeStripScheme$1(n){return n.startsWith(BrowserIndexedDB.URL_SCHEME)?n.slice(BrowserIndexedDB.URL_SCHEME.length):n}class BrowserIndexedDBManager{constructor(){this.indexedDB=getIndexedDBFactory()}async listModels(){return new Promise((e,t)=>{const s=this.indexedDB.open(DATABASE_NAME,DATABASE_VERSION);s.onupgradeneeded=()=>setUpDatabase(s),s.onsuccess=()=>{const r=s.result,i=r.transaction(INFO_STORE_NAME,"readonly"),c=i.objectStore(INFO_STORE_NAME).getAll();c.onsuccess=()=>{const u={};for(const l of c.result)u[l.modelPath]=l.modelArtifactsInfo;e(u)},c.onerror=u=>(r.close(),t(c.error)),i.oncomplete=()=>r.close()},s.onerror=r=>t(s.error)})}async removeModel(e){return e=maybeStripScheme$1(e),new Promise((t,s)=>{const r=this.indexedDB.open(DATABASE_NAME,DATABASE_VERSION);r.onupgradeneeded=()=>setUpDatabase(r),r.onsuccess=()=>{const i=r.result,a=i.transaction(INFO_STORE_NAME,"readwrite"),c=a.objectStore(INFO_STORE_NAME),u=c.get(e);let l;u.onsuccess=()=>{if(u.result==null)return i.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const h=c.delete(e),d=()=>{l=i.transaction(MODEL_STORE_NAME,"readwrite");const y=l.objectStore(MODEL_STORE_NAME).delete(e);y.onsuccess=()=>t(u.result.modelArtifactsInfo),y.onerror=g=>s(u.error)};h.onsuccess=d,h.onerror=f=>(d(),i.close(),s(u.error))}},u.onerror=h=>(i.close(),s(u.error)),a.oncomplete=()=>{l==null?i.close():l.oncomplete=()=>i.close()}},r.onerror=i=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PATH_SEPARATOR="/",PATH_PREFIX="tensorflowjs_models",INFO_SUFFIX="info",MODEL_TOPOLOGY_SUFFIX="model_topology",WEIGHT_SPECS_SUFFIX="weight_specs",WEIGHT_DATA_SUFFIX="weight_data",MODEL_METADATA_SUFFIX="model_metadata";function getModelKeys(n){return{info:[PATH_PREFIX,n,INFO_SUFFIX].join(PATH_SEPARATOR),topology:[PATH_PREFIX,n,MODEL_TOPOLOGY_SUFFIX].join(PATH_SEPARATOR),weightSpecs:[PATH_PREFIX,n,WEIGHT_SPECS_SUFFIX].join(PATH_SEPARATOR),weightData:[PATH_PREFIX,n,WEIGHT_DATA_SUFFIX].join(PATH_SEPARATOR),modelMetadata:[PATH_PREFIX,n,MODEL_METADATA_SUFFIX].join(PATH_SEPARATOR)}}function getModelPathFromKey(n){const e=n.split(PATH_SEPARATOR);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(PATH_SEPARATOR)}function maybeStripScheme(n){return n.startsWith(BrowserLocalStorage.URL_SCHEME)?n.slice(BrowserLocalStorage.URL_SCHEME.length):n}class BrowserLocalStorage{constructor(e){if(!env().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=getModelKeys(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),r=getModelArtifactsInfoForJSON(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,arrayBufferToBase64String(e.weightData));const i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return e.signature!=null&&(i.signature=e.signature),e.userDefinedMetadata!=null&&(i.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(i.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:r}}catch{throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const i=this.LS.getItem(this.keys.modelMetadata);if(i!=null){const c=JSON.parse(i);t.format=c.format,t.generatedBy=c.generatedBy,t.convertedBy=c.convertedBy,c.signature!=null&&(t.signature=c.signature),c.userDefinedMetadata!=null&&(t.userDefinedMetadata=c.userDefinedMetadata),c.modelInitializer!=null&&(t.modelInitializer=c.modelInitializer)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=base64StringToArrayBuffer(a),t}}BrowserLocalStorage.URL_SCHEME="localstorage://";const localStorageRouter=n=>env().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(BrowserLocalStorage.URL_SCHEME)?browserLocalStorage(n.slice(BrowserLocalStorage.URL_SCHEME.length)):null;IORouterRegistry.registerSaveRouter(localStorageRouter);IORouterRegistry.registerLoadRouter(localStorageRouter);function browserLocalStorage(n){return new BrowserLocalStorage(n)}class BrowserLocalStorageManager{constructor(){assert$2(env().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),assert$2(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=PATH_PREFIX+PATH_SEPARATOR,s=PATH_SEPARATOR+INFO_SUFFIX;for(let r=0;r<this.LS.length;++r){const i=this.LS.key(r);if(i.startsWith(t)&&i.endsWith(s)){const a=getModelPathFromKey(i);e[a]=JSON.parse(this.LS.getItem(i))}}return e}async removeModel(e){e=maybeStripScheme(e);const t=getModelKeys(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(t.info));return this.LS.removeItem(t.info),this.LS.removeItem(t.topology),this.LS.removeItem(t.weightSpecs),this.LS.removeItem(t.weightData),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const URL_SCHEME_SUFFIX="://";class ModelStoreManagerRegistry{constructor(){this.managers={}}static getInstance(){return ModelStoreManagerRegistry.instance==null&&(ModelStoreManagerRegistry.instance=new ModelStoreManagerRegistry),ModelStoreManagerRegistry.instance}static registerManager(e,t){assert$2(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(URL_SCHEME_SUFFIX)&&(e=e.slice(0,e.indexOf(URL_SCHEME_SUFFIX))),assert$2(e.length>0,()=>"scheme must not be an empty string.");const s=ModelStoreManagerRegistry.getInstance();assert$2(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PlatformBrowser{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(env().get("IS_BROWSER")){env().setPlatform("browser",new PlatformBrowser);try{ModelStoreManagerRegistry.registerManager(BrowserLocalStorage.URL_SCHEME,new BrowserLocalStorageManager)}catch{}try{ModelStoreManagerRegistry.registerManager(BrowserIndexedDB.URL_SCHEME,new BrowserIndexedDBManager)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const getNodeFetch={importFetch:()=>require("node-fetch")};let systemFetch;class PlatformNode{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return env().global.fetch!=null?env().global.fetch(e,t):(systemFetch==null&&(systemFetch=getNodeFetch.importFetch()),systemFetch(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}}env().get("IS_NODE")&&env().setPlatform("node",new PlatformNode);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function buffer(n,e="float32",t){return e=e||"float32",assertNonNegativeIntegerDimensions(n),new TensorBuffer(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cast_(n,e){const t=convertToTensor(n,"x","cast");if(!isValidDtype(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:t},r={dtype:e};return ENGINE.runKernel(Cast,s,r)}const cast$3=op({cast_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function clone_(n){const t={x:convertToTensor(n,"x","clone","string_or_numeric")};return ENGINE.runKernel(Identity$1,t)}const clone$1=op({clone_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function print(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getOrMakeEngine();const opHandler={buffer,cast:cast$3,clone:clone$1,print};setOpHandler(opHandler);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DEFAULT_FILE_NAME_PREFIX="model",DEFAULT_JSON_EXTENSION_NAME=".json",DEFAULT_WEIGHT_DATA_EXTENSION_NAME=".weights.bin";function defer(n){return new Promise(e=>setTimeout(e)).then(n)}class BrowserDownloads{constructor(e){if(!env().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(BrowserDownloads.URL_SCHEME)&&(e=e.slice(BrowserDownloads.URL_SCHEME.length)),(e==null||e.length===0)&&(e=DEFAULT_FILE_NAME_PREFIX),this.modelTopologyFileName=e+DEFAULT_JSON_EXTENSION_NAME,this.weightDataFileName=e+DEFAULT_WEIGHT_DATA_EXTENSION_NAME}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const s=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:s};e.signature!=null&&(r.signature=e.signature),e.userDefinedMetadata!=null&&(r.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(r.modelInitializer=e.modelInitializer);const i=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=this.jsonAnchor==null?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=i,await defer(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const c=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;c.download=this.weightDataFileName,c.href=t,await defer(()=>c.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:getModelArtifactsInfoForJSON(e)}}}}BrowserDownloads.URL_SCHEME="downloads://";const browserDownloadsRouter=n=>env().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(BrowserDownloads.URL_SCHEME)?browserDownloads(n.slice(BrowserDownloads.URL_SCHEME.length)):null;IORouterRegistry.registerSaveRouter(browserDownloadsRouter);function browserDownloads(n="model"){return new BrowserDownloads(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function monitorPromisesProgress(n,e,t,s){a(n),t=t==null?0:t,s=s==null?1:s,c(t,s);let r=0;const i=u=>(u.then(l=>{const h=t+ ++r/n.length*(s-t);return e(h),l}),u);function a(u){assert$2(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function c(u,l){assert$2(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),assert$2(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),assert$2(l>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${l}`)}return Promise.all(n.map(i))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function loadWeightsAsArrayBuffer(n,e){e==null&&(e={});const t=e.fetchFunc==null?env().platform.fetch:e.fetchFunc,s=n.map(d=>t(d,e.requestInit,{isBinary:!0})),r=0,i=.5,c=(e.onProgress==null?await Promise.all(s):await monitorPromisesProgress(s,e.onProgress,r,i)).map(d=>d.arrayBuffer()),u=.5,l=1;return e.onProgress==null?await Promise.all(c):await monitorPromisesProgress(c,e.onProgress,u,l)}async function loadWeights(n,e="",t,s){return weightsLoaderFactory(a=>loadWeightsAsArrayBuffer(a,{requestInit:s}))(n,e,t)}function weightsLoaderFactory(n){return async(e,t="",s)=>{const r=e.map(()=>!1),i={},a=s!=null?s.map(()=>!1):[],c=[];if(e.forEach((y,g)=>{let x=0;y.weights.forEach(b=>{const v="quantization"in b?b.quantization.dtype:b.dtype,S=DTYPE_VALUE_SIZE_MAP[v]*sizeFromShape(b.shape),T=()=>{r[g]=!0,i[g]==null&&(i[g]=[]),i[g].push({manifestEntry:b,groupOffset:x,sizeBytes:S})};s!=null?s.forEach((w,C)=>{w===b.name&&(T(),a[C]=!0)}):T(),c.push(b.name),x+=S})}),!a.every(y=>y)){const y=s.filter((g,x)=>!a[x]);throw new Error(`Could not find weights in manifest with names: ${y.join(", ")}. 
Manifest JSON has weights with names: ${c.join(", ")}.`)}const u=r.reduce((y,g,x)=>(g&&y.push(x),y),[]),l=[];u.forEach(y=>{e[y].paths.forEach(g=>{const x=t+(t.endsWith("/")?"":"/")+g;l.push(x)})});const h=await n(l),d={};let f=0;return u.forEach(y=>{const g=e[y].paths.length;let x=0;for(let w=0;w<g;w++)x+=h[f+w].byteLength;const b=new ArrayBuffer(x),v=new Uint8Array(b);let S=0;for(let w=0;w<g;w++){const C=new Uint8Array(h[f+w]);v.set(C,S),S+=C.byteLength}i[y].forEach(w=>{const C=b.slice(w.groupOffset,w.groupOffset+w.sizeBytes),N=decodeWeights(C,[w.manifestEntry]);for(const _ in N)d[_]=N[_]}),f+=g}),d}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OCTET_STREAM_MIME_TYPE="application/octet-stream",JSON_TYPE="application/json";class HTTPRequest{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(assert$2(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=env().platform.fetch,assert$2(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&assert$2(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:s};e.signature!=null&&(r.signature=e.signature),e.userDefinedMetadata!=null&&(r.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:JSON_TYPE}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:OCTET_STREAM_MIME_TYPE}),"model.weights.bin");const i=await this.fetch(this.path,t);if(i.ok)return{modelArtifactsInfo:getModelArtifactsInfoForJSON(e),responses:[i]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let x=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?x+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":x+=" Please make sure the server is serving valid JSON for this request.",new Error(x)}const s=t.modelTopology,r=t.weightsManifest,i=t.generatedBy,a=t.convertedBy,c=t.format,u=t.signature,l=t.userDefinedMetadata;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let h,d;r!=null&&([h,d]=await this.loadWeights(r));const f={modelTopology:s,weightSpecs:h,weightData:d,generatedBy:i,convertedBy:a,format:c};u!=null&&(f.signature=u),l!=null&&(f.userDefinedMetadata=l);const y=t.modelInitializer;return y&&(f.modelInitializer=y),f}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=parseUrl(t),i=this.weightPathPrefix||s,a=[];for(const h of e)a.push(...h.weights);const c=[],u=[];for(const h of e)for(const d of h.paths)this.weightUrlConverter!=null?u.push(this.weightUrlConverter(d)):c.push(i+d+r);this.weightUrlConverter&&c.push(...await Promise.all(u));const l=await loadWeightsAsArrayBuffer(c,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,concatenateArrayBuffers(l)]}}HTTPRequest.URL_SCHEME_REGEX=/^https?:\/\//;function parseUrl(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),s=n.substring(0,e),r=t>e?n.substring(t):"";return[s+"/",r]}function isHTTPScheme(n){return n.match(HTTPRequest.URL_SCHEME_REGEX)!=null}const httpRouter=(n,e)=>{if(typeof fetch=="undefined"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(s=>isHTTPScheme(s)):t=isHTTPScheme(n),t)return http(n,e)}return null};IORouterRegistry.registerSaveRouter(httpRouter);IORouterRegistry.registerLoadRouter(httpRouter);function http(n,e){return new HTTPRequest(n,e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function matMul_(n,e,t=!1,s=!1){let r=convertToTensor(n,"a","matMul"),i=convertToTensor(e,"b","matMul");[r,i]=makeTypesMatch(r,i);const a={a:r,b:i},c={transposeA:t,transposeB:s};return ENGINE.runKernel(BatchMatMul,a,c)}const matMul$1=op({matMul_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oneHot_(n,e,t=1,s=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const i={indices:convertToTensor(n,"indices","oneHot","int32")},a={depth:e,onValue:t,offValue:s};return ENGINE.runKernel(OneHot,i,a)}const oneHot$2=op({oneHot_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transpose_(n,e){const t=convertToTensor(n,"x","transpose");if(e==null&&(e=t.shape.map((i,a)=>a).reverse()),assert$2(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of perm ${e}.`),e.forEach(i=>{assert$2(i>=0&&i<t.rank,()=>`All entries in 'perm' must be between 0 and ${t.rank-1} but got ${e}`)}),t.rank<=1)return t.clone();const s={x:t},r={perm:e};return ENGINE.runKernel(Transpose,s,r)}const transpose$3=op({transpose_});function prepareAndValidate(n,e){const t=n.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(sizeFromShape(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=e.shape,i=r[r.length-1];let a=1;for(let d=0;d<r.length-1;++d)a*=r[d];const c=n.shape,u=r.slice();u.pop();let l=1;for(let d=i;d<t;++d)l*=c[d],u.push(c[d]);const h=[...computeStrides(n.shape).map(d=>d/l),1].slice(0,i);return[u,a,l,h]}function validateUpdateShape(n,e,t){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(t.rank<r)throw new Error(i+` update.rank < ${r}. `);if(n.length<s+(t.rank-r))throw new Error(i+` Output shape length < ${s+(t.rank-r)}`);if(t.rank!==r+n.length-s)throw new Error(i+` update.rank != ${r+n.length-s}`);for(let a=0;a<r;++a)if(t.shape[a]!==e.shape[a])throw new Error(i+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-r;++a)if(t.shape[a+r]!==n[a+s])throw new Error(i+` updates.shape[${a+r}] (${t.shape[a+r]}) != shape[${a+r}] (${n[a+r]})`)}function validateInput(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}validateUpdateShape(t,e,n)}function calculateShapes(n,e,t){const s=e.shape.length,r=s>1?e.shape[s-1]:1,i=t.length;let a=1;for(let d=r;d<i;++d)a*=t[d];const c=r<1?1:r,u=sizeFromShape(e.shape)/c,l=[...computeStrides(t.slice(0,r)),1],h=sizeFromShape(t);return{sliceRank:r,numUpdates:u,sliceSize:a,strides:l,outputSize:h}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function assertParamsValid(n,e,t){const s=n.shape.length;assert$2(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),assert$2(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)assert$2(e[r]+t[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+t[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function maskToAxes(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function computeOutShape$2(n,e,t){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((e[r]-n[r])/t[r]);return s}function stridesWithElidedDims(n,e,t,s){const r=[...n];for(let i=r.length;i<s.length;i++)r.push(1);for(let i=0;i<t;i++)i===0?r[e]=1:(r.splice(e,0,1),r.pop());return r}function unnormalizeAxis(n,e,t){return t<=n?t:t-(e-1)}function getElidedAxes(n,e){const t=[];for(let s=0;s<n;s++)t.push(e+s);return t}function getNormalizedAxes(n,e,t,s,r,i,a,c,u){const l=n.length;let h=new Array(l),d=new Array(l),f=new Array(l);if(e.length&&t>0){const y=e[0],g=t+1;h=startIndicesWithElidedDims(a,y,g,s,n),d=stopIndicesWithElidedDims(c,y,g,r,n),f=stridesWithElidedDims(i,y,g,n)}else for(let y=0;y<l;y++)h[y]=startForAxis(a,s,i,n,y,u),d[y]=stopForAxis(c,r,i,n,y,u),f[y]=stridesForAxis(i,y,u);return{begin:h,end:d,strides:f}}function startIndicesWithElidedDims(n,e,t,s,r){const i=[...r],a=getElidedAxes(t,e);for(let c=0;c<i.length;c++)if(a.indexOf(c)>-1)i[c]=0;else{const u=unnormalizeAxis(e,t,c);let l=s[u];n&1<<u&&(l=0),i[c]=l}return i}function stopIndicesWithElidedDims(n,e,t,s,r){const i=[...r],a=getElidedAxes(t,e);for(let c=0;c<i.length;c++)if(a.indexOf(c)>-1)i[c]=Number.MAX_SAFE_INTEGER;else{const u=unnormalizeAxis(e,t,c);let l=s[u];n&1<<u&&(l=Number.MAX_SAFE_INTEGER),i[c]=l}for(let c=0;c<i.length;c++){const u=r[c];i[c]<0&&(i[c]+=u),i[c]=clamp$1(0,i[c],r[c])}return i}function stridesForAxis(n,e,t){let s=n[e];return(t&1<<e||s==null)&&(s=1),s}function startForAxis(n,e,t,s,r,i){let a=e[r];const c=t[r]||1;(n&1<<r||i&1<<r||a==null)&&(c>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const u=s[r];return a<0&&(a+=u),a=clamp$1(0,a,u-1),a}function stopForAxis(n,e,t,s,r,i){let a=e[r];const c=t[r]||1;(n&1<<r||i&1<<r||a==null)&&(c>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const u=s[r];return a<0&&(a+=u),c>0?a=clamp$1(0,a,u):a=clamp$1(-1,a,u-1),a}function isSliceContinous(n,e,t){let s=t.length;for(let r=0;r<t.length;r++)if(t[r]>1){s=r;break}for(let r=s+1;r<t.length;r++)if(e[r]>0||t[r]!==n[r])return!1;return!0}function computeFlatOffset(n,e){let t=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)t+=n[s]*e[s];return t}function parseSliceParams(n,e,t){let s;const r=n.shape.length;typeof e=="number"?s=[e,...new Array(r-1).fill(0)]:e.length<r?s=e.concat(new Array(r-e.length).fill(0)):s=e.slice(),s.forEach(a=>{assert$2(a!==-1,()=>"slice() does not support negative begin indexing.")});let i;return t==null?i=new Array(r).fill(-1):typeof t=="number"?i=[t,...new Array(r-1).fill(-1)]:t.length<r?i=t.concat(new Array(r-t.length).fill(-1)):i=t,i=i.map((a,c)=>a>=0?a:(assert$2(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${c}.`),n.shape[c]-s[c])),[s,i]}function sliceInfo(n,e,t,s,r,i,a,c,u){let l=e.slice(),h=t.slice(),d=s;s==null&&(d=new Array(l.length));const f=maskToAxes(a);if(f.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(a!==0&&c!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(a!==0&&u!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const y=n.length-l.length,g=maskToAxes(c),x=n.slice();g.forEach(_=>{l[_]=0,h[_]=1,x.splice(_,0,1)});const{begin:b,end:v,strides:S}=getNormalizedAxes(x,f,y,l,h,d,r,i,a);l=b,h=v,d=S;const T=maskToAxes(u);T.forEach(_=>{h[_]=l[_]+1,d[_]=1});const w=computeOutShape$2(l,h,d),C=w.filter((_,$)=>T.indexOf($)===-1);return{nonStrided:d.every(_=>_===1),$begin:l,$end:h,$strides:d,size:w,newShape:x,outShape:C}}var slice_util=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",assertParamsValid,maskToAxes,computeOutShape:computeOutShape$2,stridesWithElidedDims,getNormalizedAxes,startIndicesWithElidedDims,stopIndicesWithElidedDims,stridesForAxis,startForAxis,stopForAxis,isSliceContinous,computeFlatOffset,parseSliceParams,sliceInfo});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Serializable{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class SerializationMap{constructor(){this.classNameMap={}}static getMap(){return SerializationMap.instance==null&&(SerializationMap.instance=new SerializationMap),SerializationMap.instance}static register(e){SerializationMap.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function registerClass(n){assert$2(n.className!=null,()=>"Class being registered does not have the static className property defined."),assert$2(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),assert$2(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),SerializationMap.register(n)}/** @license See the LICENSE file. */const version$7="2.8.6";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function deprecationWarn(n){env().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function engine(){return ENGINE}function memory(){return ENGINE.memory()}function tidy(n,e){return ENGINE.tidy(n,e)}function dispose(n){getTensorsInContainer(n).forEach(t=>t.dispose())}function keep(n){return ENGINE.keep(n)}function registerBackend(n,e,t=1){return ENGINE.registerBackend(n,e,t)}function backend(){return ENGINE.backend}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function add_(n,e){let t=convertToTensor(n,"a","add"),s=convertToTensor(e,"b","add");[t,s]=makeTypesMatch(t,s);const r={a:t,b:s};return ENGINE.runKernel(Add$2,r)}const add$1=op({add_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function floorDiv_(n,e){let t=convertToTensor(n,"a","floorDiv"),s=convertToTensor(e,"b","floorDiv");[t,s]=makeTypesMatch(t,s);const r={a:t,b:s};return ENGINE.runKernel(FloorDiv,r)}const floorDiv$2=op({floorDiv_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function div_(n,e){let t=convertToTensor(n,"a","div"),s=convertToTensor(e,"b","div");if([t,s]=makeTypesMatch(t,s),t.dtype==="int32"&&s.dtype==="int32")return floorDiv$2(t,s);const r={a:t,b:s},i={};return ENGINE.runKernel(RealDiv,r,i)}const div$1=op({div_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mul_(n,e){let t=convertToTensor(n,"a","mul"),s=convertToTensor(e,"b","mul");[t,s]=makeTypesMatch(t,s);const r={a:t,b:s};return ENGINE.runKernel(Multiply$2,r)}const mul=op({mul_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function abs_(n){const e=convertToTensor(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return ENGINE.runKernel(ComplexAbs,t)}else{const t={x:e};return ENGINE.runKernel(Abs$1,t)}}const abs$2=op({abs_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function acos_(n){const t={x:convertToTensor(n,"x","acos")};return ENGINE.runKernel(Acos,t)}const acos$2=op({acos_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function acosh_(n){const t={x:convertToTensor(n,"x","acosh")};return ENGINE.runKernel(Acosh,t)}const acosh$2=op({acosh_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function all_(n,e=null,t=!1){const r={x:convertToTensor(n,"x","all","bool")},i={axis:e,keepDims:t};return ENGINE.runKernel(All,r,i)}const all$2=op({all_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function any_(n,e=null,t=!1){const r={x:convertToTensor(n,"x","any","bool")},i={axis:e,keepDims:t};return ENGINE.runKernel(Any,r,i)}const any$2=op({any_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMax_(n,e=0){const s={x:convertToTensor(n,"x","argMax")},r={axis:e};return ENGINE.runKernel(ArgMax,s,r)}const argMax$2=op({argMax_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMin_(n,e=0){const s={x:convertToTensor(n,"x","argMin")},r={axis:e};return ENGINE.runKernel(ArgMin,s,r)}const argMin$2=op({argMin_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function asin_(n){const t={x:convertToTensor(n,"x","asin")};return ENGINE.runKernel(Asin,t)}const asin$2=op({asin_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function asinh_(n){const t={x:convertToTensor(n,"x","asinh")};return ENGINE.runKernel(Asinh,t)}const asinh$2=op({asinh_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function atan_(n){const t={x:convertToTensor(n,"x","atan")};return ENGINE.runKernel(Atan,t)}const atan$2=op({atan_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function atan2_(n,e){let t=convertToTensor(n,"a","atan2"),s=convertToTensor(e,"b","atan2");[t,s]=makeTypesMatch(t,s);const r={a:t,b:s};return ENGINE.runKernel(Atan2,r)}const atan2$2=op({atan2_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function atanh_(n){const t={x:convertToTensor(n,"x","atanh")};return ENGINE.runKernel(Atanh,t)}const atanh$2=op({atanh_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function computeDilation2DInfo(n,e,t,s,r="NHWC",i){const a=n[3],c=[...e,a],u=convertConv2DDataFormat(r);return computeConv2DInfo(n,c,t,i,s,null,null,u)}function computePool2DInfo(n,e,t,s,r,i,a="channelsLast"){const[c,u]=parseTupleParam(e);let l;if(a==="channelsLast")l=[c,u,n[3],n[3]];else if(a==="channelsFirst")l=[c,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return computeConv2DInfo(n,l,t,s,r,i,!1,a)}function computePool3DInfo(n,e,t,s,r,i,a="NDHWC"){const[c,u,l]=parse3TupleParam(e);let h,d;if(a==="NDHWC")d="channelsLast",h=[c,u,l,n[4],n[4]];else if(a==="NCDHW")d="channelsFirst",h=[c,u,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return computeConv3DInfo(n,h,t,s,r,!1,d,i)}function computeConv2DInfo(n,e,t,s,r,i,a=!1,c="channelsLast"){let[u,l,h,d]=[-1,-1,-1,-1];if(c==="channelsLast")[u,l,h,d]=n;else if(c==="channelsFirst")[u,d,l,h]=n;else throw new Error(`Unknown dataFormat ${c}`);const[f,y,,g]=e,[x,b]=parseTupleParam(t),[v,S]=parseTupleParam(s),T=getEffectiveFilterSize(f,v),w=getEffectiveFilterSize(y,S),{padInfo:C,outHeight:N,outWidth:_}=getPadAndOutInfo(r,l,h,x,b,T,w,i,c),$=a?g*d:g;let E;return c==="channelsFirst"?E=[u,$,N,_]:c==="channelsLast"&&(E=[u,N,_,$]),{batchSize:u,dataFormat:c,inHeight:l,inWidth:h,inChannels:d,outHeight:N,outWidth:_,outChannels:$,padInfo:C,strideHeight:x,strideWidth:b,filterHeight:f,filterWidth:y,effectiveFilterHeight:T,effectiveFilterWidth:w,dilationHeight:v,dilationWidth:S,inShape:n,outShape:E,filterShape:e}}function computeConv3DInfo(n,e,t,s,r,i=!1,a="channelsLast",c){let[u,l,h,d,f]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[u,l,h,d,f]=n;else if(a==="channelsFirst")[u,f,l,h,d]=n;else throw new Error(`Unknown dataFormat ${a}`);const[y,g,x,,b]=e,[v,S,T]=parse3TupleParam(t),[w,C,N]=parse3TupleParam(s),_=getEffectiveFilterSize(y,w),$=getEffectiveFilterSize(g,C),E=getEffectiveFilterSize(x,N),{padInfo:k,outDepth:F,outHeight:P,outWidth:R}=get3DPadAndOutInfo(r,l,h,d,v,S,T,_,$,E,c),O=i?b*f:b;let B;return a==="channelsFirst"?B=[u,O,F,P,R]:a==="channelsLast"&&(B=[u,F,P,R,O]),{batchSize:u,dataFormat:a,inDepth:l,inHeight:h,inWidth:d,inChannels:f,outDepth:F,outHeight:P,outWidth:R,outChannels:O,padInfo:k,strideDepth:v,strideHeight:S,strideWidth:T,filterDepth:y,filterHeight:g,filterWidth:x,effectiveFilterDepth:_,effectiveFilterHeight:$,effectiveFilterWidth:E,dilationDepth:w,dilationHeight:C,dilationWidth:N,inShape:n,outShape:B,filterShape:e}}function computeOutputShape2D(n,e,t,s,r){s==null&&(s=computeDefaultPad(n,e,t));const i=n[0],a=n[1],c=round$3((i-e+2*s)/t+1,r),u=round$3((a-e+2*s)/t+1,r);return[c,u]}function computeOutputShape4D(n,e,t,s,r,i){r==null&&(r=computeDefaultPad(n,e,s));const a=n[0],c=n[1],u=n[2],l=round$3((a-e+2*r)/s+1,i),h=round$3((c-e+2*r)/s+1,i),d=round$3((u-e+2*r)/s+1,i);return[l,h,d,t]}function computeDefaultPad(n,e,t,s=1){const r=getEffectiveFilterSize(e,s);return Math.floor((n[0]*(t-1)-t+r)/2)}function parseTupleParam(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function parse3TupleParam(n){return typeof n=="number"?[n,n,n]:n}function getEffectiveFilterSize(n,e){return e<=1?n:n+(n-1)*(e-1)}function getPadAndOutInfo(n,e,t,s,r,i,a,c,u){let l,h,d;if(typeof n=="number"){l={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const y=computeOutputShape2D([e,t],i,s,n,c);h=y[0],d=y[1]}else if(n==="same"){h=Math.ceil(e/s),d=Math.ceil(t/r);const f=Math.max(0,(h-1)*s+i-e),y=Math.max(0,(d-1)*r+a-t),g=Math.floor(f/2),x=f-g,b=Math.floor(y/2),v=y-b;l={top:g,bottom:x,left:b,right:v,type:"SAME"}}else if(n==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((e-i+1)/s),d=Math.ceil((t-a+1)/r);else if(typeof n=="object"){const f=u==="channelsLast"?n[1][0]:n[2][0],y=u==="channelsLast"?n[1][1]:n[2][1],g=u==="channelsLast"?n[2][0]:n[3][0],x=u==="channelsLast"?n[2][1]:n[3][1];l={top:f,bottom:y,left:g,right:x,type:f===0&&y===0&&g===0&&x===0?"VALID":"EXPLICIT"},h=round$3((e-i+f+y)/s+1,c),d=round$3((t-a+g+x)/r+1,c)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:l,outHeight:h,outWidth:d}}function get3DPadAndOutInfo(n,e,t,s,r,i,a,c,u,l,h){let d,f,y,g;if(typeof n=="number"){d={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const b=computeOutputShape4D([e,t,s,1],c,1,r,n,h);f=b[0],y=b[1],g=b[2]}else if(n==="same"){f=Math.ceil(e/r),y=Math.ceil(t/i),g=Math.ceil(s/a);const x=(f-1)*r+c-e,b=(y-1)*i+u-t,v=(g-1)*a+l-s,S=Math.floor(x/2),T=x-S,w=Math.floor(b/2),C=b-w,N=Math.floor(v/2),_=v-N;d={top:w,bottom:C,left:N,right:_,front:S,back:T,type:"SAME"}}else if(n==="valid")d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((e-c+1)/r),y=Math.ceil((t-u+1)/i),g=Math.ceil((s-l+1)/a);else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:d,outDepth:f,outHeight:y,outWidth:g}}function round$3(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function tupleValuesAreOne(n){const[e,t,s]=parseTupleParam(n);return e===1&&t===1&&s===1}function eitherStridesOrDilationsAreOne(n,e){return tupleValuesAreOne(n)||tupleValuesAreOne(e)}function convertConv2DDataFormat(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reshape_(n,e){const s={x:convertToTensor(n,"x","reshape","string_or_numeric")},r={shape:e};return ENGINE.runKernel(Reshape$1,s,r)}const reshape$2=op({reshape_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool_(n,e,t,s,r){const i=convertToTensor(n,"x","avgPool","float32"),a=1;assert$2(eitherStridesOrDilationsAreOne(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let c=i,u=!1;i.rank===3&&(u=!0,c=reshape$2(i,[1,i.shape[0],i.shape[1],i.shape[2]])),assert$2(c.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${c.rank}.`),r!=null&&assert$2(isInt(s),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);const l={x:c},h={filterSize:e,strides:t,pad:s,dimRoundingMode:r};let d=ENGINE.runKernel(AvgPool,l,h);return d=cast$3(d,i.dtype),u?reshape$2(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const avgPool$2=op({avgPool_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3d_(n,e,t,s,r,i="NDHWC",a){a==null?a=[1,1,1]:deprecationWarn("dilations is deprecated, this field will be gone in v3.0.0.");const c=convertToTensor(n,"x","avgPool3d","float32");let u=c,l=!1;c.rank===4&&(l=!0,u=reshape$2(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),assert$2(u.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${u.rank}.`),assert$2(i==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),assert$2(eitherStridesOrDilationsAreOne(t,a),()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),r!=null&&assert$2(isInt(s),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);const h={x:u},d={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:i,dilations:a};let f=ENGINE.runKernel(AvgPool3D,h,d);return f=cast$3(f,u.dtype),l?reshape$2(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const avgPool3d=op({avgPool3d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concat_(n,e=0){assert$2(n.length>=1,()=>"Pass at least one tensor to concat");const t=convertToTensorArray(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(i=>{if(i.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${i.dtype}. `)}),t.length===1)return clone$1(t[0]);const s=t,r={axis:e};return ENGINE.runKernel(Concat,s,r)}const concat$2=op({concat_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sigmoid_(n){const t={x:convertToTensor(n,"x","sigmoid")};return ENGINE.runKernel(Sigmoid$1,t)}const sigmoid$2=op({sigmoid_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice_(n,e,t){const s=convertToTensor(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},i={begin:e,size:t};return ENGINE.runKernel(Slice,r,i)}const slice$2=op({slice_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tanh_(n){const t={x:convertToTensor(n,"x","tanh")};return ENGINE.runKernel(Tanh$1,t)}const tanh$2=op({tanh_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function basicLSTMCell_(n,e,t,s,r,i){const a=convertToTensor(n,"forgetBias","basicLSTMCell"),c=convertToTensor(e,"lstmKernel","basicLSTMCell"),u=convertToTensor(t,"lstmBias","basicLSTMCell"),l=convertToTensor(s,"data","basicLSTMCell"),h=convertToTensor(r,"c","basicLSTMCell"),d=convertToTensor(i,"h","basicLSTMCell"),f=concat$2([l,d],1),y=matMul$1(f,c),g=add$1(y,u),x=g.shape[0],b=g.shape[1]/4,v=[x,b],S=slice$2(g,[0,0],v),T=slice$2(g,[0,b],v),w=slice$2(g,[0,b*2],v),C=slice$2(g,[0,b*3],v),N=add$1(mul(sigmoid$2(S),tanh$2(T)),mul(h,sigmoid$2(add$1(a,w)))),_=mul(tanh$2(N),sigmoid$2(C));return[N,_]}const basicLSTMCell=op({basicLSTMCell_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchToSpaceND_(n,e,t){const s=convertToTensor(n,"x","batchToSpaceND"),r=e.reduce((c,u)=>c*u);assert$2(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),assert$2(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),assert$2(s.shape[0]%r==0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`);const i={x:s},a={blockShape:e,crops:t};return ENGINE.runKernel(BatchToSpaceND,i,a)}const batchToSpaceND$2=op({batchToSpaceND_});function xAs4D(n){let e;return n.rank===0||n.rank===1?e=reshape$2(n,[1,1,1,n.size]):n.rank===2?e=reshape$2(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=reshape$2(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchNorm_(n,e,t,s,r,i){i==null&&(i=.001);const a=convertToTensor(n,"x","batchNorm"),c=convertToTensor(e,"mean","batchNorm"),u=convertToTensor(t,"variance","batchNorm");let l;r!=null&&(l=convertToTensor(r,"scale","batchNorm"));let h;s!=null&&(h=convertToTensor(s,"offset","batchNorm")),assert$2(c.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),assert$2(h==null||c.rank===h.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),assert$2(l==null||c.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const f={x:xAs4D(a),scale:l,offset:h,mean:c,variance:u},y={varianceEpsilon:i},g=ENGINE.runKernel(FusedBatchNorm,f,y);return reshape$2(g,a.shape)}const batchNorm$2=op({batchNorm_});function batchNorm2d_(n,e,t,s,r,i){const a=convertToTensor(n,"x","batchNorm"),c=convertToTensor(e,"mean","batchNorm"),u=convertToTensor(t,"variance","batchNorm");let l;r!=null&&(l=convertToTensor(r,"scale","batchNorm"));let h;return s!=null&&(h=convertToTensor(s,"offset","batchNorm")),assert$2(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),assert$2(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${c.rank}.`),assert$2(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&assert$2(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),h!=null&&assert$2(h.rank===2||h.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${h.rank}.`),batchNorm$2(a,c,u,h,l,i)}const batchNorm2d=op({batchNorm2d_});function batchNorm3d_(n,e,t,s,r,i){const a=convertToTensor(n,"x","batchNorm"),c=convertToTensor(e,"mean","batchNorm"),u=convertToTensor(t,"variance","batchNorm");let l;r!=null&&(l=convertToTensor(r,"scale","batchNorm"));let h;return s!=null&&(h=convertToTensor(s,"offset","batchNorm")),assert$2(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),assert$2(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${c.rank}.`),assert$2(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&assert$2(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),h!=null&&assert$2(h.rank===3||h.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${h.rank}.`),batchNorm$2(a,c,u,h,l,i)}const batchNorm3d=op({batchNorm3d_});function batchNorm4d_(n,e,t,s,r,i){const a=convertToTensor(n,"x","batchNorm"),c=convertToTensor(e,"mean","batchNorm"),u=convertToTensor(t,"variance","batchNorm");let l;r!=null&&(l=convertToTensor(r,"scale","batchNorm"));let h;return s!=null&&(h=convertToTensor(s,"offset","batchNorm")),assert$2(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),assert$2(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${c.rank}.`),assert$2(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&assert$2(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),h!=null&&assert$2(h.rank===4||h.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${h.rank}.`),batchNorm$2(a,c,u,h,l,i)}const batchNorm4d=op({batchNorm4d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function broadcastTo_(n,e){let t=convertToTensor(n,"broadcastTo","x");const s=t.shape;if(e.some(l=>!(l>0)||l%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const l=t.shape.slice();for(;l.length<e.length;)l.unshift(1);t=reshape$2(t,l)}const r=t.shape,i=Array.from(e);for(let l=e.length-1;l>=0;l--)if(r[l]===e[l])i[l]=1;else if(t.shape[l]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(i.map((l,h)=>l>1?h:-1).filter(l=>l>=0).length===0)return clone$1(t);const c={x:t},u={reps:i};return ENGINE.runKernel(Tile,c,u)}const broadcastTo=op({broadcastTo_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ceil_(n){const t={x:convertToTensor(n,"x","ceil")};return ENGINE.runKernel(Ceil,t)}const ceil$2=op({ceil_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function clipByValue_(n,e,t){const s=convertToTensor(n,"x","clipByValue");assert$2(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`);const r={x:s},i={clipValueMin:e,clipValueMax:t};return ENGINE.runKernel(ClipByValue,r,i)}const clipByValue$1=op({clipByValue_});function concat1d_(n){return concat$2(n,0)}const concat1d=op({concat1d_});function concat2d_(n,e){return concat$2(n,e)}const concat2d=op({concat2d_});function concat3d_(n,e){return concat$2(n,e)}const concat3d=op({concat3d_});function concat4d_(n,e){return concat$2(n,e)}const concat4d=op({concat4d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2d_(n,e,t,s,r="NHWC",i=[1,1],a){const c=convertToTensor(n,"x","conv2d"),u=convertToTensor(e,"filter","conv2d");let l=c,h=!1;c.rank===3&&(h=!0,l=reshape$2(c,[1,c.shape[0],c.shape[1],c.shape[2]])),assert$2(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),assert$2(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),a!=null&&assert$2(isInt(s),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);const d=r==="NHWC"?l.shape[3]:l.shape[1];assert$2(d===u.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`),assert$2(eitherStridesOrDilationsAreOne(t,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);const f={x:l,filter:u},y={strides:t,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a},g=ENGINE.runKernel(Conv2D$1,f,y);return h?reshape$2(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const conv2d$2=op({conv2d_});function conv1d_(n,e,t,s,r="NWC",i=1,a){const c=convertToTensor(n,"x","conv1d"),u=convertToTensor(e,"filter","conv1d");let l=c,h=!1;c.rank===2&&(h=!0,l=reshape$2(c,[1,c.shape[0],c.shape[1]])),assert$2(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),assert$2(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),a!=null&&assert$2(isInt(s),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`),assert$2(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),assert$2(eitherStridesOrDilationsAreOne(t,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${i}'`),assert$2(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const d=reshape$2(u,[1,u.shape[0],u.shape[1],u.shape[2]]),f=reshape$2(l,[l.shape[0],1,l.shape[1],l.shape[2]]),b=conv2d$2(f,d,[1,t],s,"NHWC",[1,i],a);return h?reshape$2(b,[b.shape[2],b.shape[3]]):reshape$2(b,[b.shape[0],b.shape[2],b.shape[3]])}const conv1d=op({conv1d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropInput_(n,e,t,s,r,i="NHWC",a){assert$2(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let c=n,u=e,l=!1;e.rank===3&&(l=!0,u=reshape$2(e,[1,e.shape[0],e.shape[1],e.shape[2]]),c=[1,n[0],n[1],n[2]]),assert$2(c.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${c.length}.`),assert$2(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),assert$2(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const h=i==="NHWC"?c[3]:c[1],d=i==="NHWC"?u.shape[3]:u.shape[1];assert$2(h===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${t.shape[2]}.`),assert$2(d===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${t.shape[3]}.`),a!=null&&assert$2(isInt(r),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const f={dy:u,filter:t},y={strides:s,pad:r,dataFormat:i,dimRoundingMode:a,inputShape:c},g=ENGINE.runKernel(Conv2DBackpropInput,f,y);return l?reshape$2(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const conv2DBackpropInput$2=op({conv2DBackpropInput_});function conv2dTranspose_(n,e,t,s,r,i){const a=convertToTensor(n,"x","conv2dTranspose"),c=convertToTensor(e,"filter","conv2dTranspose");return conv2DBackpropInput$2(t,a,c,s,r,"NHWC",i)}const conv2dTranspose=op({conv2dTranspose_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3d_(n,e,t,s,r="NDHWC",i=[1,1,1]){const a=convertToTensor(n,"x","conv3d"),c=convertToTensor(e,"filter","conv3d");let u=a,l=!1;a.rank===4&&(l=!0,u=reshape$2(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),assert$2(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),assert$2(c.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${c.rank}.`),assert$2(u.shape[4]===c.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${c.shape[3]}.`),assert$2(eitherStridesOrDilationsAreOne(t,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),assert$2(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);const h={x:u,filter:c},d={strides:t,pad:s,dataFormat:r,dilations:i},f=ENGINE.runKernel(Conv3D$1,h,d);return l?reshape$2(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const conv3d=op({conv3d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropInput_(n,e,t,s,r){assert$2(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let i=n,a=e,c=!1;e.rank===4&&(c=!0,a=reshape$2(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,n[0],n[1],n[2],n[3]]);const u=i[4],l=a.shape[4];assert$2(i.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),assert$2(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),assert$2(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),assert$2(u===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[3]}.`),assert$2(l===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${t.shape[4]}.`);const h={dy:a,filter:t},d={pad:r,strides:s,inputShape:i},f=ENGINE.runKernel(Conv3DBackpropInputV2,h,d);return c?reshape$2(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const conv3DBackpropInput$1=op({conv3DBackpropInput_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cos_(n){const t={x:convertToTensor(n,"x","cos")};return ENGINE.runKernel(Cos,t)}const cos$2=op({cos_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cosh_(n){const t={x:convertToTensor(n,"x","cosh")};return ENGINE.runKernel(Cosh,t)}const cosh$2=op({cosh_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cumsum_(n,e=0,t=!1,s=!1){const i={x:convertToTensor(n,"x","cumsum")},a={axis:e,exclusive:t,reverse:s};return ENGINE.runKernel(Cumsum,i,a)}const cumsum$2=op({cumsum_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthToSpace_(n,e,t="NHWC"){const s=convertToTensor(n,"x","depthToSpace"),r=t==="NHWC"?s.shape[1]:s.shape[2],i=t==="NHWC"?s.shape[2]:s.shape[3],a=t==="NHWC"?s.shape[3]:s.shape[1];assert$2(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e}  for depthToSpace with input shape
    ${s.shape}`),assert$2(i*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${e} for depthToSpace with input shape
        ${s.shape}`),assert$2(a%(e*e)==0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${s.shape}`);const c={x:s},u={blockSize:e,dataFormat:t};return ENGINE.runKernel(DepthToSpace,c,u)}const depthToSpace$2=op({depthToSpace_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2d_(n,e,t,s,r="NHWC",i=[1,1],a){const c=convertToTensor(n,"x","depthwiseConv2d"),u=convertToTensor(e,"filter","depthwiseConv2d");let l=c,h=!1;c.rank===3&&(h=!0,l=reshape$2(c,[1,c.shape[0],c.shape[1],c.shape[2]])),assert$2(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),assert$2(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`),assert$2(l.shape[3]===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),a!=null&&assert$2(isInt(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);const d={x:l,filter:u},f={strides:t,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a},y=ENGINE.runKernel(DepthwiseConv2dNative,d,f);return h?reshape$2(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const depthwiseConv2d$1=op({depthwiseConv2d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dilation2d_(n,e,t,s,r=[1,1],i="NHWC"){const a=convertToTensor(n,"x","dilation2d"),c=convertToTensor(e,"filter","dilation2d");assert$2(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),assert$2(c.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${c.rank}.`),assert$2(i==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let u=a,l=!1;a.rank===3&&(u=reshape$2(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=!0);const h={x:u,filter:c},d={strides:t,pad:s,dilations:r},f=ENGINE.runKernel(Dilation2D,h,d);return l?reshape$2(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const dilation2d=op({dilation2d_});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getBroadcastDims$1(n,e){const t=n.length,s=[];for(let r=0;r<t;r++){const i=t-1-r,a=n[i]||1;(e[e.length-1-r]||1)>1&&a===1&&s.unshift(i)}return s}function getReductionAxes(n,e){const t=[];for(let s=0;s<e.length;s++){const r=n[n.length-s-1],i=e.length-s-1,a=e[i];(r==null||r===1&&a>1)&&t.unshift(i)}return t}function assertAndGetBroadcastShape(n,e){const t=[],s=Math.max(n.length,e.length);for(let r=0;r<s;r++){let i=n[n.length-r-1];i==null&&(i=1);let a=e[e.length-r-1];if(a==null&&(a=1),i===1)t.unshift(a);else if(a===1)t.unshift(i);else if(i!==a){const c=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(c)}else t.unshift(i)}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function equal_(n,e){let t=convertToTensor(n,"a","equal"),s=convertToTensor(e,"b","equal");[t,s]=makeTypesMatch(t,s),assertAndGetBroadcastShape(t.shape,s.shape);const r={a:t,b:s};return ENGINE.runKernel(Equal,r)}const equal$2=op({equal_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function where_(n,e,t){const s=convertToTensor(e,"a","where"),r=convertToTensor(t,"b","where"),i=convertToTensor(n,"condition","where","bool"),a=assertAndGetBroadcastShape(s.shape,r.shape),c=broadcastTo(s,a),u=broadcastTo(r,a);i.rank===1&&assert$2(i.shape[0]===s.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),i.rank!==1&&assertShapesMatch(i.shape,u.shape,"Error in where: ");const l={condition:i,t:c,e:u};return ENGINE.runKernel(Select,l)}const where=op({where_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zerosLike_(n){const t={x:convertToTensor(n,"x","zerosLike")};return ENGINE.runKernel(ZerosLike,t)}const zerosLike$2=op({zerosLike_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function divNoNan_(n,e){let t=convertToTensor(n,"a","div"),s=convertToTensor(e,"b","div");[t,s]=makeTypesMatch(t,s);const r=div$1(t,s),i=zerosLike$2(r),a=equal$2(s,i);return where(a,i,r)}const divNoNan=op({divNoNan_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dot_(n,e){const t=convertToTensor(n,"t1","dot"),s=convertToTensor(e,"t2","dot");assert$2((t.rank===1||t.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${s.rank}.`);const r=t.rank===1?t.size:t.shape[1],i=s.rank===1?s.size:s.shape[0];if(assert$2(r===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${i}.`),t.rank===1&&s.rank===1){const a=reshape$2(t,[1,-1]),c=reshape$2(s,[-1,1]),u=matMul$1(a,c);return reshape$2(u,[])}else if(t.rank===1&&s.rank===2){const a=reshape$2(t,[1,-1]),c=reshape$2(s,[s.shape[0],s.shape[1]]),u=matMul$1(a,c);return reshape$2(u,[u.size])}else if(t.rank===2&&s.rank===1){const a=reshape$2(s,[-1,1]),c=matMul$1(t,a);return reshape$2(c,[c.size])}else{const a=reshape$2(s,[s.shape[0],s.shape[1]]);return matMul$1(t,a)}}const dot$1=op({dot_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function elu_(n){const t={x:convertToTensor(n,"x","elu")};return ENGINE.runKernel(Elu$1,t)}const elu$3=op({elu_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function erf_(n){let e=convertToTensor(n,"x","erf");assert$2(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=cast$3(e,"float32"));const t={x:e};return ENGINE.runKernel(Erf,t)}const erf$2=op({erf_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function exp_(n){const t={x:convertToTensor(n,"x","exp")};return ENGINE.runKernel(Exp,t)}const exp$2=op({exp_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function expandDims_(n,e=0){const t=convertToTensor(n,"x","expandDims","string_or_numeric");assert$2(e<=t.rank,()=>"Axis must be <= rank of the tensor");const s={input:t},r={dim:e};return ENGINE.runKernel(ExpandDims,s,r)}const expandDims$3=op({expandDims_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function expm1_(n){const t={x:convertToTensor(n,"x","expm1")};return ENGINE.runKernel(Expm1,t)}const expm1$2=op({expm1_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tile_(n,e){const t=convertToTensor(n,"x","tile","string_or_numeric");assert$2(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const s={x:t},r={reps:e};return ENGINE.runKernel(Tile,s,r)}const tile$3=op({tile_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eye_(n,e,t,s="float32"){e==null&&(e=n);const r=buffer([n,e],s),i=n<=e?n:e;for(let c=0;c<i;++c)r.set(1,c,c);const a=reshape$2(r.toTensor(),[n,e]);if(t==null)return a;if(t.length===1)return tile$3(expandDims$3(a,0),[t[0],1,1]);if(t.length===2)return tile$3(expandDims$3(expandDims$3(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return tile$3(expandDims$3(expandDims$3(expandDims$3(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const eye=op({eye_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fill$2(n,e,t){const s={shape:n,value:e,dtype:t};return ENGINE.runKernel(Fill,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function floor_(n){const t={x:convertToTensor(n,"x","floor")};return ENGINE.runKernel(Floor,t)}const floor$2=op({floor_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gather_(n,e,t=0,s=0){const r=convertToTensor(n,"x","gather"),i=convertToTensor(e,"indices","gather","int32"),a={x:r,indices:i},c={axis:t,batchDims:s};return ENGINE.runKernel(GatherV2,a,c)}const gather$1=op({gather_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function greater_(n,e){let t=convertToTensor(n,"a","greater"),s=convertToTensor(e,"b","greater");[t,s]=makeTypesMatch(t,s),assertAndGetBroadcastShape(t.shape,s.shape);const r={a:t,b:s};return ENGINE.runKernel(Greater,r)}const greater$2=op({greater_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function greaterEqual_(n,e){let t=convertToTensor(n,"a","greaterEqual"),s=convertToTensor(e,"b","greaterEqual");[t,s]=makeTypesMatch(t,s),assertAndGetBroadcastShape(t.shape,s.shape);const r={a:t,b:s};return ENGINE.runKernel(GreaterEqual,r)}const greaterEqual$2=op({greaterEqual_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function imag_(n){const t={input:convertToTensor(n,"input","imag")};return ENGINE.runKernel(Imag,t)}const imag$2=op({imag_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function isFinite_(n){const t={x:convertToTensor(n,"x","isFinite")};return ENGINE.runKernel(IsFinite,t)}const isFinite$3=op({isFinite_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function isInf_(n){const t={x:convertToTensor(n,"x","isInf")};return ENGINE.runKernel(IsInf,t)}const isInf$2=op({isInf_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function isNaN_(n){const t={x:convertToTensor(n,"x","isNaN")};return ENGINE.runKernel(IsNan,t)}const isNaN$3=op({isNaN_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function leakyRelu_(n,e=.2){const s={x:convertToTensor(n,"x","leakyRelu")},r={alpha:e};return ENGINE.runKernel(LeakyRelu,s,r)}const leakyRelu$2=op({leakyRelu_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function less_(n,e){let t=convertToTensor(n,"a","less"),s=convertToTensor(e,"b","less");[t,s]=makeTypesMatch(t,s),assertAndGetBroadcastShape(t.shape,s.shape);const r={a:t,b:s};return ENGINE.runKernel(Less,r)}const less$2=op({less_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lessEqual_(n,e){let t=convertToTensor(n,"a","lessEqual"),s=convertToTensor(e,"b","lessEqual");[t,s]=makeTypesMatch(t,s),assertAndGetBroadcastShape(t.shape,s.shape);const r={a:t,b:s};return ENGINE.runKernel(LessEqual,r)}const lessEqual$2=op({lessEqual_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function localResponseNormalization_(n,e=5,t=1,s=1,r=.5){const i=convertToTensor(n,"x","localResponseNormalization");assert$2(i.rank===4||i.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${i.rank}.`),assert$2(isInt(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=i,c=!1;i.rank===3&&(c=!0,a=reshape$2(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const u={x:a},l={depthRadius:e,bias:t,alpha:s,beta:r},h=ENGINE.runKernel(LRN,u,l);return c?reshape$2(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const localResponseNormalization=op({localResponseNormalization_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function log_(n){const t={x:convertToTensor(n,"x","log")};return ENGINE.runKernel(Log,t)}const log$5=op({log_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function log1p_(n){const t={x:convertToTensor(n,"x","log1p")};return ENGINE.runKernel(Log1p,t)}const log1p$2=op({log1p_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function variableGrads(n,e){assert$2(isFunction$1(n),()=>"The f passed in variableGrads(f) must be a function"),assert$2(e==null||Array.isArray(e)&&e.every(l=>l instanceof Variable),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const l in ENGINE.registeredVariables)e.push(ENGINE.registeredVariables[l])}const s=t?e.filter(l=>!l.trainable):null,r=e.length;e=e.filter(l=>l.trainable),assert$2(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const i=!0,{value:a,grads:c}=ENGINE.gradients(n,e,null,i);assert$2(c.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),assert$2(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const u={};return e.forEach((l,h)=>{c[h]!=null&&(u[l.name]=c[h])}),s!=null&&s.forEach(l=>u[l.name]=null),{value:a,grads:u}}function customGrad(n){return ENGINE.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function neg_(n){const t={x:convertToTensor(n,"x","neg")};return ENGINE.runKernel(Neg,t)}const neg$2=op({neg_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function softplus_(n){const t={x:convertToTensor(n,"x","softplus")};return ENGINE.runKernel(Softplus$1,t)}const softplus$2=op({softplus_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logSigmoid_(n){const e=convertToTensor(n,"x","logSigmoid");return customGrad(s=>({value:neg$2(softplus$2(neg$2(s))),gradFunc:a=>mul(a,sigmoid$2(neg$2(s)))}))(e)}const logSigmoid=op({logSigmoid_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function max_(n,e=null,t=!1){const r={x:convertToTensor(n,"x","max")},i={reductionIndices:e,keepDims:t};return ENGINE.runKernel(Max,r,i)}const max$3=op({max_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sub_(n,e){let t=convertToTensor(n,"a","sub"),s=convertToTensor(e,"b","sub");[t,s]=makeTypesMatch(t,s);const r={a:t,b:s};return ENGINE.runKernel(Sub,r)}const sub$2=op({sub_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sum_(n,e=null,t=!1){let s=convertToTensor(n,"x","sum");s.dtype==="bool"&&(s=cast$3(s,"int32"));const r={x:s},i={axis:e,keepDims:t};return ENGINE.runKernel(Sum,r,i)}const sum$2=op({sum_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logSoftmax_(n,e=-1){const t=convertToTensor(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return customGrad((r,i)=>{const a=!0,c=max$3(r,e,!0),u=sub$2(r,c),l=sub$2(cast$3(u,"float32"),log$5(sum$2(exp$2(u),e,a)));return i([l]),{value:l,gradFunc:(d,f)=>{const[y]=f,g=!0,x=exp$2(y);return sub$2(d,mul(sum$2(d,e,g),x))}}})(t)}const logSoftmax=op({logSoftmax_});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function axesAreInnerMostDims(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function combineLocations(n,e,t){const s=n.length+e.length,r=[];let i=0,a=0;for(let c=0;c<s;c++)t.indexOf(c)===-1?r.push(n[i++]):r.push(e[a++]);return r}function computeOutAndReduceShapes(n,e){const t=[],s=n.length;for(let i=0;i<s;i++)e.indexOf(i)===-1&&t.push(n[i]);const r=e.map(i=>n[i]);return[t,r]}function expandShapeToKeepDim(n,e){const t=e.map(s=>1);return combineLocations(n,t,e)}function assertAxesAreInnerMostDims(n,e,t){assert$2(axesAreInnerMostDims(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function getAxesPermutation(n,e){if(axesAreInnerMostDims(n,e))return null;const t=[];for(let s=0;s<e;++s)n.indexOf(s)===-1&&t.push(s);return n.forEach(s=>t.push(s)),t}function getUndoAxesPermutation(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function getInnerMostAxes(n,e){const t=[];for(let s=e-n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logSumExp_(n,e=null,t=!1){const s=convertToTensor(n,"x","logSumExp"),r=parseAxisParam(e,s.shape),i=max$3(s,r,!0),a=sub$2(s,i),c=exp$2(a),u=sum$2(c,r),l=log$5(u),h=add$1(reshape$2(i,l.shape),l);if(t){const d=expandShapeToKeepDim(h.shape,r);return reshape$2(h,d)}return h}const logSumExp=op({logSumExp_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logicalAnd_(n,e){const t=convertToTensor(n,"a","logicalAnd","bool"),s=convertToTensor(e,"b","logicalAnd","bool");assertAndGetBroadcastShape(t.shape,s.shape);const r={a:t,b:s};return ENGINE.runKernel(LogicalAnd,r)}const logicalAnd$2=op({logicalAnd_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logicalNot_(n){const t={x:convertToTensor(n,"x","logicalNot","bool")};return ENGINE.runKernel(LogicalNot,t)}const logicalNot$2=op({logicalNot_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logicalOr_(n,e){const t=convertToTensor(n,"a","logicalOr","bool"),s=convertToTensor(e,"b","logicalOr","bool");assertAndGetBroadcastShape(t.shape,s.shape);const r={a:t,b:s};return ENGINE.runKernel(LogicalOr,r)}const logicalOr$2=op({logicalOr_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logicalXor_(n,e){const t=convertToTensor(n,"a","logicalXor","bool"),s=convertToTensor(e,"b","logicalXor","bool");return assertAndGetBroadcastShape(t.shape,s.shape),logicalAnd$2(logicalOr$2(n,e),logicalNot$2(logicalAnd$2(n,e)))}const logicalXor=op({logicalXor_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool_(n,e,t,s,r){const i=convertToTensor(n,"x","maxPool"),a=1;let c=i,u=!1;i.rank===3&&(u=!0,c=reshape$2(i,[1,i.shape[0],i.shape[1],i.shape[2]])),assert$2(c.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${c.rank}.`),assert$2(eitherStridesOrDilationsAreOne(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),r!=null&&assert$2(isInt(s),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);const l={x:c},h={filterSize:e,strides:t,pad:s,dimRoundingMode:r},d=ENGINE.runKernel(MaxPool,l,h);return u?reshape$2(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const maxPool$2=op({maxPool_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3d_(n,e=[1,1,1],t,s,r,i="NDHWC",a){a==null?a=[1,1,1]:deprecationWarn("dilations is deprecated, this field will be gone in v3.0.0.");const c=convertToTensor(n,"x","maxPool3d");let u=c,l=!1;c.rank===4&&(l=!0,u=reshape$2(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),assert$2(u.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${u.rank}.`),assert$2(i==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),assert$2(eitherStridesOrDilationsAreOne(t,a),()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),r!=null&&assert$2(isInt(s),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);const h={x:u},d={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:i,dilations:a},f=ENGINE.runKernel(MaxPool3D,h,d);return l?reshape$2(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const maxPool3d$1=op({maxPool3d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maximum_(n,e){let t=convertToTensor(n,"a","maximum"),s=convertToTensor(e,"b","maximum");[t,s]=makeTypesMatch(t,s),t.dtype==="bool"&&(t=cast$3(t,"int32"),s=cast$3(s,"int32")),assertAndGetBroadcastShape(t.shape,s.shape);const r={a:t,b:s};return ENGINE.runKernel(Maximum$1,r)}const maximum$2=op({maximum_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mean_(n,e=null,t=!1){const r={x:convertToTensor(n,"x","mean")},i={axis:e,keepDims:t};return ENGINE.runKernel(Mean,r,i)}const mean$1=op({mean_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function min_(n,e=null,t=!1){const r={x:convertToTensor(n,"x","min")},i={axis:e,keepDims:t};return ENGINE.runKernel(Min,r,i)}const min$3=op({min_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function minimum_(n,e){let t=convertToTensor(n,"a","minimum"),s=convertToTensor(e,"b","minimum");[t,s]=makeTypesMatch(t,s),t.dtype==="bool"&&(t=cast$3(t,"int32"),s=cast$3(s,"int32")),assertAndGetBroadcastShape(t.shape,s.shape);const r={a:t,b:s};return ENGINE.runKernel(Minimum$1,r)}const minimum$2=op({minimum_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mirrorPad_(n,e,t){assert$2(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const s=convertToTensor(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");assert$2(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const r=t==="reflect"?1:0;for(let c=0;c<s.rank;c++)assert$2(e[c].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),assert$2(e[c][0]>=0&&e[c][0]<=s.shape[c]-r&&e[c][1]>=0&&e[c][1]<=s.shape[c]-r,()=>`Padding in dimension ${c} cannot be greater than or equal to ${s.shape[c]-r} or less than 0 for input of shape ${s.shape}`);const i={paddings:e,mode:t},a={x:s};return ENGINE.runKernel(MirrorPad,a,i)}const mirrorPad$1=op({mirrorPad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mod_(n,e){let t=convertToTensor(n,"a","mod"),s=convertToTensor(e,"b","mod");[t,s]=makeTypesMatch(t,s);const r={a:t,b:s};return ENGINE.runKernel(Mod,r)}const mod$2=op({mod_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function square_(n){const e=convertToTensor(n,"x","square"),t={};return ENGINE.runKernel("Square",{x:e},t)}const square$2=op({square_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function moments_(n,e=null,t=!1){n=convertToTensor(n,"x","moments");const s=parseAxisParam(e,n.shape),r=mean$1(n,s,t);let i=r.shape;t||(i=expandShapeToKeepDim(r.shape,s));const a=square$2(sub$2(cast$3(n,"float32"),reshape$2(r,i))),c=mean$1(a,s,t);return{mean:r,variance:c}}const moments=op({moments_});function multiRNNCell_(n,e,t,s){const r=convertToTensor(e,"data","multiRNNCell"),i=convertToTensorArray(t,"c","multiRNNCell"),a=convertToTensorArray(s,"h","multiRNNCell");let c=r;const u=[];for(let d=0;d<n.length;d++){const f=n[d](c,i[d],a[d]);u.push(f[0]),u.push(f[1]),c=f[1]}const l=[],h=[];for(let d=0;d<u.length;d+=2)l.push(u[d]),h.push(u[d+1]);return[l,h]}const multiRNNCell=op({multiRNNCell_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function multinomial_(n,e,t,s=!1){const r=convertToTensor(n,"logits","multinomial"),i=r.size,a=r.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();const u={logits:a===1?reshape$2(r,[1,-1]):r},l={numSamples:e,seed:t,normalized:s},h=ENGINE.runKernel(Multinomial,u,l);return a===1?reshape$2(h,[h.size]):h}const multinomial$2=op({multinomial_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function notEqual_(n,e){let t=convertToTensor(n,"a","notEqual"),s=convertToTensor(e,"b","notEqual");[t,s]=makeTypesMatch(t,s),assertAndGetBroadcastShape(t.shape,s.shape);const r={a:t,b:s};return ENGINE.runKernel(NotEqual,r)}const notEqual$2=op({notEqual_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zeros$1(n,e="float32"){if(e==="complex64"){const s=zeros$1(n,"float32"),r=zeros$1(n,"float32");return complex$2(s,r)}const t=makeZerosTypedArray(sizeFromShape(n),e);return ENGINE.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ones(n,e="float32"){if(e==="complex64"){const s=ones(n,"float32"),r=zeros$1(n,"float32");return complex$2(s,r)}const t=makeOnesTypedArray(sizeFromShape(n),e);return ENGINE.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function onesLike_(n){const t={x:convertToTensor(n,"x","onesLike")};return ENGINE.runKernel(OnesLike,t)}const onesLike$2=op({onesLike_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pad_(n,e,t=0){const s=convertToTensor(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:t},i={x:s};return ENGINE.runKernel(PadV2,i,r)}const pad=op({pad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function spaceToBatchND_(n,e,t){const s=convertToTensor(n,"x","spaceToBatchND");assert$2(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),assert$2(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),assert$2(s.shape.reduce((a,c,u)=>u>0&&u<=e.length?a&&(c+t[u-1][0]+t[u-1][1])%e[u-1]==0:a,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const r={x:s},i={blockShape:e,paddings:t};return ENGINE.runKernel(SpaceToBatchND,r,i)}const spaceToBatchND$2=op({spaceToBatchND_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pool_(n,e,t,s,r,i){r==null&&(r=[1,1]),i==null&&(i=1),s===0&&(s="valid");const a=convertToTensor(n,"x","maxPool");let c=a,u=!1;a.rank===3&&(u=!0,c=reshape$2(a,[1,a.shape[0],a.shape[1],a.shape[2]])),assert$2(eitherStridesOrDilationsAreOne(i,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${r}'`);const l=computePool2DInfo(c.shape,e,i,r,s),h=[l.dilationHeight,l.dilationWidth];let d;s==="same"?d=withSpaceToBatchBasePaddings([l.filterHeight,l.filterWidth],h):d=[[0,0],[0,0]];const f=h[0]===1&&h[1]===1,[y,g]=requiredSpaceToBatchPaddings([l.inHeight,l.inWidth],h,d),x=f?s:"valid",b=f?c:spaceToBatchND$2(c,h,y),S=(t==="avg"?()=>avgPool$2(b,e,i,x):()=>maxPool$2(b,e,i,x))(),T=f?S:batchToSpaceND$2(S,h,g);return u?reshape$2(T,[T.shape[1],T.shape[2],T.shape[3]]):T}function requiredSpaceToBatchPaddings(n,e,t){const s=t.map(h=>h[0]),r=t.map(h=>h[1]),i=n.concat(s,r),a=e.map((h,d)=>(h-i[d]%h)%h),c=r.map((h,d)=>h+a[d]),u=e.map((h,d)=>[s[d],c[d]]),l=e.map((h,d)=>[0,a[d]]);return[u,l]}function withSpaceToBatchBasePaddings(n,e){const s=n.map((a,c)=>a+(a-1)*(e[c]-1)).map(a=>a-1),r=s.map(a=>Math.floor(a/2)),i=s.map((a,c)=>a-r[c]);return s.map((a,c)=>[r[c],i[c]])}const pool$2=op({pool_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pow_(n,e){let t=convertToTensor(n,"base","pow"),s=convertToTensor(e,"exp","pow");[t,s]=makeTypesMatch(t,s);const r={a:t,b:s};return ENGINE.runKernel(Pow$1,r)}const pow$2=op({pow_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function prelu_(n,e){const t=convertToTensor(n,"x","prelu"),s=convertToTensor(e,"alpha","prelu"),r={x:t,alpha:s};return ENGINE.runKernel(Prelu,r)}const prelu$2=op({prelu_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function prod_(n,e=null,t=!1){let s=convertToTensor(n,"x","prod");s.dtype==="bool"&&(s=cast$3(s,"int32"));const r={x:s},i={axis:e,keepDims:t};return ENGINE.runKernel(Prod,r,i)}const prod$2=op({prod_});var commonjsGlobal=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{};function getAugmentedNamespace(n){if(n.__esModule)return n;var e=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(n).forEach(function(t){var s=Object.getOwnPropertyDescriptor(n,t);Object.defineProperty(e,t,s.get?s:{enumerable:!0,get:function(){return n[t]}})}),e}var alea$1={exports:{}};(function(n){(function(e,t,s){function r(u){var l=this,h=c();l.next=function(){var d=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=d-(l.c=d|0)},l.c=1,l.s0=h(" "),l.s1=h(" "),l.s2=h(" "),l.s0-=h(u),l.s0<0&&(l.s0+=1),l.s1-=h(u),l.s1<0&&(l.s1+=1),l.s2-=h(u),l.s2<0&&(l.s2+=1),h=null}function i(u,l){return l.c=u.c,l.s0=u.s0,l.s1=u.s1,l.s2=u.s2,l}function a(u,l){var h=new r(u),d=l&&l.state,f=h.next;return f.int32=function(){return h.next()*4294967296|0},f.double=function(){return f()+(f()*2097152|0)*11102230246251565e-32},f.quick=f,d&&(typeof d=="object"&&i(d,h),f.state=function(){return i(h,{})}),f}function c(){var u=4022871197,l=function(h){h=h.toString();for(var d=0;d<h.length;d++){u+=h.charCodeAt(d);var f=.02519603282416938*u;u=f>>>0,f-=u,f*=u,u=f>>>0,f-=u,u+=f*4294967296}return(u>>>0)*23283064365386963e-26};return l}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.alea=a})(commonjsGlobal,n,!1)})(alea$1);var xor128$1={exports:{}};(function(n){(function(e,t,s){function r(c){var u=this,l="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var d=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^d^d>>>8},c===(c|0)?u.x=c:l+=c;for(var h=0;h<l.length+64;h++)u.x^=l.charCodeAt(h)|0,u.next()}function i(c,u){return u.x=c.x,u.y=c.y,u.z=c.z,u.w=c.w,u}function a(c,u){var l=new r(c),h=u&&u.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var f=l.next()>>>11,y=(l.next()>>>0)/4294967296,g=(f+y)/(1<<21);while(g===0);return g},d.int32=l.next,d.quick=d,h&&(typeof h=="object"&&i(h,l),d.state=function(){return i(l,{})}),d}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.xor128=a})(commonjsGlobal,n,!1)})(xor128$1);var xorwow$1={exports:{}};(function(n){(function(e,t,s){function r(c){var u=this,l="";u.next=function(){var d=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(d^d<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,c===(c|0)?u.x=c:l+=c;for(var h=0;h<l.length+64;h++)u.x^=l.charCodeAt(h)|0,h==l.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function i(c,u){return u.x=c.x,u.y=c.y,u.z=c.z,u.w=c.w,u.v=c.v,u.d=c.d,u}function a(c,u){var l=new r(c),h=u&&u.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var f=l.next()>>>11,y=(l.next()>>>0)/4294967296,g=(f+y)/(1<<21);while(g===0);return g},d.int32=l.next,d.quick=d,h&&(typeof h=="object"&&i(h,l),d.state=function(){return i(l,{})}),d}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.xorwow=a})(commonjsGlobal,n,!1)})(xorwow$1);var xorshift7$1={exports:{}};(function(n){(function(e,t,s){function r(c){var u=this;u.next=function(){var h=u.x,d=u.i,f,y;return f=h[d],f^=f>>>7,y=f^f<<24,f=h[d+1&7],y^=f^f>>>10,f=h[d+3&7],y^=f^f>>>3,f=h[d+4&7],y^=f^f<<7,f=h[d+7&7],f=f^f<<13,y^=f^f<<9,h[d]=y,u.i=d+1&7,y};function l(h,d){var f,y=[];if(d===(d|0))y[0]=d;else for(d=""+d,f=0;f<d.length;++f)y[f&7]=y[f&7]<<15^d.charCodeAt(f)+y[f+1&7]<<13;for(;y.length<8;)y.push(0);for(f=0;f<8&&y[f]===0;++f);for(f==8&&(y[7]=-1),h.x=y,h.i=0,f=256;f>0;--f)h.next()}l(u,c)}function i(c,u){return u.x=c.x.slice(),u.i=c.i,u}function a(c,u){c==null&&(c=+new Date);var l=new r(c),h=u&&u.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var f=l.next()>>>11,y=(l.next()>>>0)/4294967296,g=(f+y)/(1<<21);while(g===0);return g},d.int32=l.next,d.quick=d,h&&(h.x&&i(h,l),d.state=function(){return i(l,{})}),d}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.xorshift7=a})(commonjsGlobal,n,!1)})(xorshift7$1);var xor4096$1={exports:{}};(function(n){(function(e,t,s){function r(c){var u=this;u.next=function(){var h=u.w,d=u.X,f=u.i,y,g;return u.w=h=h+1640531527|0,g=d[f+34&127],y=d[f=f+1&127],g^=g<<13,y^=y<<17,g^=g>>>15,y^=y>>>12,g=d[f]=g^y,u.i=f,g+(h^h>>>16)|0};function l(h,d){var f,y,g,x,b,v=[],S=128;for(d===(d|0)?(y=d,d=null):(d=d+"\0",y=0,S=Math.max(S,d.length)),g=0,x=-32;x<S;++x)d&&(y^=d.charCodeAt((x+32)%d.length)),x===0&&(b=y),y^=y<<10,y^=y>>>15,y^=y<<4,y^=y>>>13,x>=0&&(b=b+1640531527|0,f=v[x&127]^=y+b,g=f==0?g+1:0);for(g>=128&&(v[(d&&d.length||0)&127]=-1),g=127,x=4*128;x>0;--x)y=v[g+34&127],f=v[g=g+1&127],y^=y<<13,f^=f<<17,y^=y>>>15,f^=f>>>12,v[g]=y^f;h.w=b,h.X=v,h.i=g}l(u,c)}function i(c,u){return u.i=c.i,u.w=c.w,u.X=c.X.slice(),u}function a(c,u){c==null&&(c=+new Date);var l=new r(c),h=u&&u.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var f=l.next()>>>11,y=(l.next()>>>0)/4294967296,g=(f+y)/(1<<21);while(g===0);return g},d.int32=l.next,d.quick=d,h&&(h.X&&i(h,l),d.state=function(){return i(l,{})}),d}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.xor4096=a})(commonjsGlobal,n,!1)})(xor4096$1);var tychei$1={exports:{}};(function(n){(function(e,t,s){function r(c){var u=this,l="";u.next=function(){var d=u.b,f=u.c,y=u.d,g=u.a;return d=d<<25^d>>>7^f,f=f-y|0,y=y<<24^y>>>8^g,g=g-d|0,u.b=d=d<<20^d>>>12^f,u.c=f=f-y|0,u.d=y<<16^f>>>16^g,u.a=g-d|0},u.a=0,u.b=0,u.c=2654435769|0,u.d=1367130551,c===Math.floor(c)?(u.a=c/4294967296|0,u.b=c|0):l+=c;for(var h=0;h<l.length+20;h++)u.b^=l.charCodeAt(h)|0,u.next()}function i(c,u){return u.a=c.a,u.b=c.b,u.c=c.c,u.d=c.d,u}function a(c,u){var l=new r(c),h=u&&u.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var f=l.next()>>>11,y=(l.next()>>>0)/4294967296,g=(f+y)/(1<<21);while(g===0);return g},d.int32=l.next,d.quick=d,h&&(typeof h=="object"&&i(h,l),d.state=function(){return i(l,{})}),d}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.tychei=a})(commonjsGlobal,n,!1)})(tychei$1);var seedrandom$1={exports:{}};(function(n){(function(e,t){var s=this,r=256,i=6,a=52,c="random",u=t.pow(r,i),l=t.pow(2,a),h=l*2,d=r-1,f;function y(w,C,N){var _=[];C=C==!0?{entropy:!0}:C||{};var $=v(b(C.entropy?[w,T(e)]:w==null?S():w,3),_),E=new g(_),k=function(){for(var F=E.g(i),P=u,R=0;F<l;)F=(F+R)*r,P*=r,R=E.g(1);for(;F>=h;)F/=2,P/=2,R>>>=1;return(F+R)/P};return k.int32=function(){return E.g(4)|0},k.quick=function(){return E.g(4)/4294967296},k.double=k,v(T(E.S),e),(C.pass||N||function(F,P,R,O){return O&&(O.S&&x(O,E),F.state=function(){return x(E,{})}),R?(t[c]=F,P):F})(k,$,"global"in C?C.global:this==t,C.state)}t["seed"+c]=y;function g(w){var C,N=w.length,_=this,$=0,E=_.i=_.j=0,k=_.S=[];for(N||(w=[N++]);$<r;)k[$]=$++;for($=0;$<r;$++)k[$]=k[E=d&E+w[$%N]+(C=k[$])],k[E]=C;(_.g=function(F){for(var P,R=0,O=_.i,B=_.j,L=_.S;F--;)P=L[O=d&O+1],R=R*r+L[d&(L[O]=L[B=d&B+P])+(L[B]=P)];return _.i=O,_.j=B,R})(r)}function x(w,C){return C.i=w.i,C.j=w.j,C.S=w.S.slice(),C}function b(w,C){var N=[],_=typeof w,$;if(C&&_=="object")for($ in w)try{N.push(b(w[$],C-1))}catch{}return N.length?N:_=="string"?w:w+"\0"}function v(w,C){for(var N=w+"",_,$=0;$<N.length;)C[d&$]=d&(_^=C[d&$]*19)+N.charCodeAt($++);return T(C)}function S(){try{var w;return f&&(w=f.randomBytes)?w=w(r):(w=new Uint8Array(r),(s.crypto||s.msCrypto).getRandomValues(w)),T(w)}catch{var C=s.navigator,N=C&&C.plugins;return[+new Date,s,N,s.screen,T(e)]}}function T(w){return String.fromCharCode.apply(0,w)}if(v(t.random(),e),n.exports){n.exports=y;try{f=require("crypto")}catch{}}})([],Math)})(seedrandom$1);var alea=alea$1.exports,xor128=xor128$1.exports,xorwow=xorwow$1.exports,xorshift7=xorshift7$1.exports,xor4096=xor4096$1.exports,tychei=tychei$1.exports,sr=seedrandom$1.exports;sr.alea=alea;sr.xor128=xor128;sr.xorwow=xorwow;sr.xorshift7=xorshift7;sr.xor4096=xor4096;sr.tychei=tychei;var seedrandom=sr;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MPRandGauss{constructor(e,t,s,r,i){this.mean=e,this.stdDev=t,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=i||Math.random();this.random=seedrandom.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let e,t,s=!1;for(;!s;){let r,i,a;do r=2*this.random()-1,i=2*this.random()-1,a=r*r+i*i;while(a>=1||a===0);const c=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*c,t=this.mean+this.stdDev*i*c,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class UniformRandom{constructor(e=0,t=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=seedrandom.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function randomNormal_(n,e=0,t=1,s,r){if(s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const i=new MPRandGauss(e,t,s,!1,r),a=buffer(n,s);for(let c=0;c<a.values.length;c++)a.values[c]=i.nextValue();return a.toTensor()}const randomNormal$1=op({randomNormal_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function randomUniform_(n,e=0,t=1,s="float32",r){const i=buffer(n,s),a=new UniformRandom(e,t,null,r);for(let c=0;c<i.values.length;c++)i.values[c]=a.nextValue();return i.toTensor()}const randomUniform=op({randomUniform_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function range$4(n,e,t=1,s="float32"){if(t===0)throw new Error("Cannot have a step of zero");const r={start:n,stop:e,step:t,dtype:s};return ENGINE.runKernel(Range,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function real_(n){const t={input:convertToTensor(n,"input","real")};return ENGINE.runKernel(Real,t)}const real$2=op({real_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reciprocal_(n){const t={x:convertToTensor(n,"x","reciprocal")};return ENGINE.runKernel(Reciprocal,t)}const reciprocal$2=op({reciprocal_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function relu_(n){const t={x:convertToTensor(n,"x","relu")};return ENGINE.runKernel(Relu$1,t)}const relu$2=op({relu_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function relu6_(n){const t={x:convertToTensor(n,"x","relu6")};return ENGINE.runKernel(Relu6$1,t)}const relu6$2=op({relu6_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reverse_(n,e){const s={x:convertToTensor(n,"x","reverse")},r={dims:e};return ENGINE.runKernel(Reverse,s,r)}const reverse$2=op({reverse_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function round_(n){const t={x:convertToTensor(n,"x","round")};return ENGINE.runKernel(Round,t)}const round$2=op({round_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rsqrt_(n){const t={x:convertToTensor(n,"x","rsqrt")};return ENGINE.runKernel(Rsqrt,t)}const rsqrt$2=op({rsqrt_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function scalar(n,e){if((isTypedArray(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&isTypedArray(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return makeTensor(n,[],[],e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function selu_(n){const t={x:convertToTensor(n,"x","selu")};return ENGINE.runKernel(Selu$1,t)}const selu$2=op({selu_});function separableConv2d_(n,e,t,s,r,i=[1,1],a="NHWC"){const c=convertToTensor(n,"x","separableConv2d"),u=convertToTensor(e,"depthwiseFilter","separableConv2d"),l=convertToTensor(t,"pointwiseFilter","separableConv2d");let h=c,d=!1;if(c.rank===3&&(d=!0,h=reshape$2(c,[1,c.shape[0],c.shape[1],c.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");assert$2(h.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`),assert$2(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),assert$2(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),assert$2(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),assert$2(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const f=u.shape[2],y=u.shape[3];assert$2(l.shape[2]===f*y,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${f*y}, but got ${l.shape[2]}.`);const g=depthwiseConv2d$1(h,u,s,r,a,i),b=conv2d$2(g,l,1,"valid",a);return d?reshape$2(b,[b.shape[1],b.shape[2],b.shape[3]]):b}const separableConv2d=op({separableConv2d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sign_(n){const t={x:convertToTensor(n,"x","sign")};return ENGINE.runKernel(Sign,t)}const sign$2=op({sign_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sin_(n){const t={x:convertToTensor(n,"x","sin")};return ENGINE.runKernel(Sin,t)}const sin$2=op({sin_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sinh_(n){const t={x:convertToTensor(n,"x","sinh")};return ENGINE.runKernel(Sinh,t)}const sinh$2=op({sinh_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice1d_(n,e,t){const s=convertToTensor(n,"x","slice1d");return assert$2(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),slice$2(s,[e],[t])}const slice1d=op({slice1d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice2d_(n,e,t){const s=convertToTensor(n,"x","slice2d");return assert$2(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),slice$2(s,e,t)}const slice2d=op({slice2d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice3d_(n,e,t){const s=convertToTensor(n,"x","slice3d");return assert$2(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),slice$2(s,e,t)}const slice3d=op({slice3d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice4d_(n,e,t){const s=convertToTensor(n,"x","slice4d");return assert$2(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),slice$2(s,e,t)}const slice4d=op({slice4d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function softmax_(n,e=-1){const t=convertToTensor(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const s={logits:t},r={dim:e};return ENGINE.runKernel(Softmax$2,s,r)}const softmax$2=op({softmax_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fft_(n){assert$2(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return ENGINE.runKernel(FFT$1,e)}const fft$3=op({fft_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ifft_(n){assert$2(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return ENGINE.runKernel(IFFT,e)}const ifft$2=op({ifft_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function irfft_(n){const e=n.shape[n.shape.length-1],t=n.size/e;let s;if(e<=2){const r=reshape$2(n,[t,e]);s=ifft$2(r)}else{const r=[t,2*(e-1)],i=reshape$2(real$2(n),[t,e]),a=reshape$2(imag$2(n),[t,e]),c=reverse$2(slice$2(i,[0,1],[t,e-2]),1),u=mul(reverse$2(slice$2(a,[0,1],[t,e-2]),1),scalar(-1)),l=concat$2([i,c],1),h=concat$2([a,u],1),d=reshape$2(complex$2(l,h),[r[0],r[1]]);s=ifft$2(d)}if(s=real$2(s),n.rank===3&&n.shape[0]!==0){const r=s,i=n.shape[0];s=reshape$2(s,[i,s.shape[0]/i,s.shape[1]]),r.dispose()}return s}const irfft=op({irfft_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function split_(n,e,t=0){const r={x:convertToTensor(n,"x","split")},i={numOrSizeSplits:e,axis:t};return ENGINE.runKernel(SplitV,r,i)}const split=op({split_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rfft_(n,e){assert$2(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const s=n.size/t;let r;if(e!=null&&e<t){const g=n.shape.map(b=>0),x=n.shape.map(b=>b);x[n.shape.length-1]=e,r=slice$2(n,g,x),t=e}else if(e!=null&&e>t){const g=n.shape.map(x=>x);g[n.shape.length-1]=e-t,r=concat$2([n,zeros$1(g)],n.shape.length-1),t=e}else r=n;const i=zerosLike$2(r),a=reshape$2(complex$2(r,i),[s,t]),c=fft$3(a),u=Math.floor(t/2)+1,l=real$2(c),h=imag$2(c),d=split(l,[u,t-u],l.shape.length-1),f=split(h,[u,t-u],h.shape.length-1),y=r.shape.slice();return y[r.shape.length-1]=u,reshape$2(complex$2(d[0],f[0]),y)}const rfft=op({rfft_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sqrt_(n){const t={x:convertToTensor(n,"x","sqrt")};return ENGINE.runKernel(Sqrt,t)}const sqrt$2=op({sqrt_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function squaredDifference_(n,e){let t=convertToTensor(n,"a","squaredDifference"),s=convertToTensor(e,"b","squaredDifference");[t,s]=makeTypesMatch(t,s),assertAndGetBroadcastShape(t.shape,s.shape);const r={a:t,b:s},i={};return ENGINE.runKernel(SquaredDifference,r,i)}const squaredDifference$2=op({squaredDifference_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function squeeze_(n,e){const t=convertToTensor(n,"x","squeeze");return reshape$2(t,squeezeShape(t.shape,e).newShape)}const squeeze=op({squeeze_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stack_(n,e=0){const t=convertToTensorArray(n,"tensors","stack","string_or_numeric");assert$2(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&assert$2(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const s=t,r={axis:e};return ENGINE.runKernel(Pack,s,r)}const stack=op({stack_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function step_(n,e=0){const s={x:convertToTensor(n,"x","step")},r={alpha:e};return ENGINE.runKernel(Step,s,r)}const step$2=op({step_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stridedSlice_(n,e,t,s,r=0,i=0,a=0,c=0,u=0){const h={x:convertToTensor(n,"x","stridedSlice")},d={begin:e,end:t,strides:s,beginMask:r,endMask:i,ellipsisMask:a,newAxisMask:c,shrinkAxisMask:u};return ENGINE.runKernel(StridedSlice,h,d)}const stridedSlice$2=op({stridedSlice_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tan_(n){const t={x:convertToTensor(n,"x","tan")};return ENGINE.runKernel(Tan,t)}const tan$2=op({tan_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensor1d(n,e){assertNonNull(n);const t=inferShape(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return makeTensor(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensor2d(n,e,t){if(assertNonNull(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=inferShape(n,t);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return makeTensor(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function topk_(n,e=1,t=!0){const s=convertToTensor(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const i={x:s},a={k:e,sorted:t},[c,u]=ENGINE.runKernel(TopK,i,a);return{values:c,indices:u}}const topk=op({topk_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function truncatedNormal_(n,e=0,t=1,s,r){if(s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const i=new MPRandGauss(e,t,s,!0,r),a=buffer(n,s);for(let c=0;c<a.values.length;c++)a.values[c]=i.nextValue();return a.toTensor()}const truncatedNormal=op({truncatedNormal_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unique_(n,e=0){const t=convertToTensor(n,"x","unique","string_or_numeric");assert$2(t.rank>0,()=>"The input tensor must be at least 1D");const s={x:t},r={axis:e},[i,a]=ENGINE.runKernel(Unique,s,r);return{values:i,indices:a}}const unique$4=op({unique_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unsortedSegmentSum_(n,e,t){const s=convertToTensor(n,"x","unsortedSegmentSum"),r=convertToTensor(e,"segmentIds","unsortedSegmentSum","int32");assert$2(isInt(t),()=>"numSegments must be of dtype int");const i={x:s,segmentIds:r},a={numSegments:t};return ENGINE.runKernel(UnsortedSegmentSum,i,a)}const unsortedSegmentSum$2=op({unsortedSegmentSum_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unstack_(n,e=0){const t=convertToTensor(n,"x","unstack","string_or_numeric");assert$2(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const s={value:t},r={axis:e};return ENGINE.runKernel(Unpack,s,r)}const unstack=op({unstack_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function variable(n,e=!0,t,s){return ENGINE.makeVariable(n,e,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function whereImpl$2(n,e){const t=[];for(let i=0;i<e.length;i++)e[i]&&t.push(i);const s=buffer(n,"int32"),r=buffer([t.length,n.length],"int32");for(let i=0;i<t.length;i++){const a=s.indexToLoc(t[i]),c=i*n.length;r.values.set(a,c)}return r.toTensor()}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function notEqualStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","notEqualStrict"),s=convertToTensor(e,"b","notEqualStrict");return assertShapesMatch(t.shape,s.shape,"Error in notEqualStrict: "),notEqual$2(t,s)}function lessStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","lessStrict"),s=convertToTensor(e,"b","lessStrict");return assertShapesMatch(t.shape,s.shape,"Error in lessStrict: "),less$2(t,s)}function equalStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","equalStrict"),s=convertToTensor(e,"b","equalStrict");return assertShapesMatch(t.shape,s.shape,"Error in equalStrict: "),equal$2(t,s)}function lessEqualStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","lessEqualStrict"),s=convertToTensor(e,"b","lessEqualStrict");return assertShapesMatch(t.shape,s.shape,"Error in lessEqualStrict: "),lessEqual$2(t,s)}function greaterStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","greaterStrict"),s=convertToTensor(e,"b","greaterStrict");return assertShapesMatch(t.shape,s.shape,"Error in greaterStrict: "),greater$2(t,s)}function greaterEqualStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","greaterEqualStrict"),s=convertToTensor(e,"b","greaterEqualStrict");return assertShapesMatch(t.shape,s.shape,"Error in greaterEqualStrict: "),greaterEqual$2(t,s)}const equalStrict=op({equalStrict_}),greaterEqualStrict=op({greaterEqualStrict_}),greaterStrict=op({greaterStrict_}),lessEqualStrict=op({lessEqualStrict_}),lessStrict=op({lessStrict_}),notEqualStrict=op({notEqualStrict_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function addStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","addStrict"),s=convertToTensor(e,"b","addStrict");return assertShapesMatch(t.shape,s.shape,"Error in addStrict: "),add$1(t,s)}function subStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","subStrict"),s=convertToTensor(e,"b","subStrict");return assertShapesMatch(t.shape,s.shape,"Error in subStrict: "),sub$2(t,s)}function powStrict_(n,e){return deprecationWarn("strict variants of ops have been deprecated and will be removed in future"),assertShapesMatch(n.shape,e.shape,"Error in powStrict: "),pow$2(n,e)}function mulStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","mul"),s=convertToTensor(e,"b","mul");return assertShapesMatch(t.shape,s.shape,"Error in multiplyStrict: "),mul(t,s)}function divStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","div"),s=convertToTensor(e,"b","div");return assertShapesMatch(t.shape,s.shape,"Error in divideStrict: "),div$1(t,s)}function modStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","modStrict"),s=convertToTensor(e,"b","modStrict");return assertShapesMatch(t.shape,s.shape,"Error in modStrict: "),mod$2(t,s)}function minimumStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","minimumStrict"),s=convertToTensor(e,"b","minimumStrict");return assertShapesMatch(t.shape,s.shape,"Error in minimumStrict: "),minimum$2(t,s)}function maximumStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","maximumStrict"),s=convertToTensor(e,"b","maximumStrict");return assertShapesMatch(t.shape,s.shape,"Error in maximumStrict: "),maximum$2(t,s)}function squaredDifferenceStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","squaredDifferenceStrict"),s=convertToTensor(e,"b","squaredDifferenceStrict");return assertShapesMatch(t.shape,s.shape,"Error in squaredDifferenceStrict: "),squaredDifference$2(t,s)}const addStrict=op({addStrict_}),divStrict=op({divStrict_}),maximumStrict=op({maximumStrict_}),minimumStrict=op({minimumStrict_}),modStrict=op({modStrict_}),mulStrict=op({mulStrict_}),powStrict=op({powStrict_}),squaredDifferenceStrict=op({squaredDifferenceStrict_}),subStrict=op({subStrict_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function norm_(n,e="euclidean",t=null,s=!1){n=convertToTensor(n,"x","norm");const r=normImpl(n,e,t);let i=r.shape;if(s){const a=parseAxisParam(t,n.shape);i=expandShapeToKeepDim(r.shape,a)}return reshape$2(r,i)}function normImpl(n,e,t=null){if(n.rank===0)return abs$2(n);if(n.rank!==1&&t===null)return normImpl(reshape$2(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return sum$2(abs$2(n),t);if(e===1/0)return max$3(abs$2(n),t);if(e===-1/0)return min$3(abs$2(n),t);if(e==="euclidean"||e===2)return sqrt$2(sum$2(pow$2(abs$2(n),scalar(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return max$3(sum$2(abs$2(n),t[0]),t[1]-1);if(e===1/0)return max$3(sum$2(abs$2(n),t[1]),t[0]);if(e===-1/0)return min$3(sum$2(abs$2(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return sqrt$2(sum$2(square$2(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const norm=op({norm_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getNoiseShape(n,e){if(e==null)return n.shape.slice();if(arraysEqual(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let s=0;s<n.shape.length;s++)e[s]==null&&n.shape[s]!=null?t.push(n.shape[s]):t.push(e[s]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dropout_(n,e,t,s){const r=convertToTensor(n,"x","dropout");if(assert$2(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),assert$2(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof Tensor?r.clone():r;const i=getNoiseShape(r,t),a=1-e,c=div$1(floor$2(add$1(randomUniform(i,0,1,"float32",s),a)),a);return mul(r,c)}const dropout$1=op({dropout_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function enclosingPowerOfTwo(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function cosineWindow(n,e,t){const s=1-n%2,r=new Float32Array(n);for(let i=0;i<n;++i){const a=2*Math.PI*i/(n+s-1);r[i]=e-t*Math.cos(a)}return tensor1d(r,"float32")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropFilter_(n,e,t,s,r,i="NHWC",a){let c=n;n.rank===3&&(c=reshape$2(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=e;u.rank===3&&(u=reshape$2(e,[1,e.shape[0],e.shape[1],e.shape[2]])),assert$2(c.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${c.shape}.`),assert$2(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),assert$2(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const l=i==="NHWC"?c.shape[3]:c.shape[1],h=i==="NHWC"?u.shape[3]:u.shape[1];assert$2(l===t[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${t[2]}.`),assert$2(h===t[3],()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${t[3]}).`),a!=null&&assert$2(isInt(r),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const d={x:c,dy:u},f={strides:s,pad:r,dataFormat:i,dimRoundingMode:a,filterShape:t};return ENGINE.runKernel(Conv2DBackpropFilter,d,f)}const conv2DBackpropFilter$2=op({conv2DBackpropFilter_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getFusedDyActivation(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return mul(n,step$2(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function getFusedBiasGradient(n,e){let t=e;const s=getReductionAxes(n.shape,e.shape);return s.length>0&&(t=sum$2(t,s)),reshape$2(t,n.shape)}function applyActivation$1(n,e,t,s){if(e==="linear")return n;if(e==="relu")return relu$2(n);if(e==="elu")return elu$3(n);if(e==="relu6")return relu6$2(n);if(e==="prelu")return prelu$2(n,t);if(e==="leakyrelu")return leakyRelu$2(n,s);throw new Error(`Unknown fused activation ${e}.`)}const shouldFuse=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedConv2d_({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:c,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:h}){if(u=u||"linear",shouldFuse(ENGINE.state.gradientDepth,u)===!1){let C=conv2d$2(n,e,t,s,r,i,a);return c!=null&&(C=add$1(C,c)),applyActivation$1(C,u,l,h)}const d=convertToTensor(n,"x","conv2d"),f=convertToTensor(e,"filter","conv2d");let y=d,g=!1;d.rank===3&&(g=!0,y=reshape$2(d,[1,d.shape[0],d.shape[1],d.shape[2]])),assert$2(y.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${y.rank}.`),assert$2(f.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${f.rank}.`),a!=null&&assert$2(isInt(s),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`),assert$2(y.shape[3]===f.shape[2],()=>`Error in conv2d: depth of input (${y.shape[3]}) must match input depth for filter ${f.shape[2]}.`),assert$2(eitherStridesOrDilationsAreOne(t,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),assert$2(r==="NHWC",()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`);const x=computeConv2DInfo(y.shape,f.shape,t,i,s,a);let b;c!=null&&(b=convertToTensor(c,"bias","fused conv2d"),[b]=makeTypesMatch(b,d),assertAndGetBroadcastShape(x.outShape,b.shape));let v;l!=null&&(v=convertToTensor(l,"prelu weights","fused conv2d"));const S=(C,N)=>{const[_,$,E,k]=N,F=getFusedDyActivation(C,E,u);assert$2(tupleValuesAreOne(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);const P=conv2DBackpropInput$2($.shape,F,_,t,s),R=conv2DBackpropFilter$2($,F,_.shape,t,s),O=[P,R];if(k!=null){const B=getFusedBiasGradient(k,F);O.push(B)}return O},T={x:y,filter:f,bias:b,preluActivationWeights:v},w={strides:t,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a,activation:u,leakyreluAlpha:h};return c==null?customGrad((N,_,$)=>{let E=ENGINE.runKernel(FusedConv2D,T,w);return $([_,N,E]),g&&(E=reshape$2(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:S}})(y,f):customGrad((N,_,$,E)=>{let k=ENGINE.runKernel(FusedConv2D,T,w);return E([_,N,k,$]),g&&(k=reshape$2(k,[k.shape[1],k.shape[2],k.shape[3]])),{value:k,gradFunc:S}})(y,f,b)}const conv2d$1=op({fusedConv2d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropFilter_(n,e,t,s,r,i=[1,1],a){let c=n;n.rank===3&&(c=reshape$2(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=e;u.rank===3&&(u=reshape$2(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={x:c,dy:u},h={strides:s,pad:r,dimRoundingMode:a,dilations:i,filterShape:t};return ENGINE.runKernel(DepthwiseConv2dNativeBackpropFilter,l,h)}const depthwiseConv2dNativeBackpropFilter$2=op({depthwiseConv2dNativeBackpropFilter_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropInput_(n,e,t,s,r,i=[1,1],a){let c=e,u=!1;e.rank===3&&(u=!0,c=reshape$2(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={dy:c,filter:t},h={strides:s,pad:r,dimRoundingMode:a,dilations:i,inputShape:n},d=ENGINE.runKernel(DepthwiseConv2dNativeBackpropInput,l,h);return u?reshape$2(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const depthwiseConv2dNativeBackpropInput$2=op({depthwiseConv2dNativeBackpropInput_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedMatMul_({a:n,b:e,transposeA:t=!1,transposeB:s=!1,bias:r,activation:i="linear",preluActivationWeights:a,leakyreluAlpha:c}){if(shouldFuse(ENGINE.state.gradientDepth,i)===!1){let k=matMul$1(n,e,t,s);return r!=null&&(k=add$1(k,r)),applyActivation$1(k,i,a,c)}let u=convertToTensor(n,"a","fused matMul"),l=convertToTensor(e,"b","fused matMul");[u,l]=makeTypesMatch(u,l);const h=t?u.shape[u.rank-2]:u.shape[u.rank-1],d=s?l.shape[l.rank-1]:l.shape[l.rank-2],f=t?u.shape[u.rank-1]:u.shape[u.rank-2],y=s?l.shape[l.rank-2]:l.shape[l.rank-1],g=u.shape.slice(0,-2),x=l.shape.slice(0,-2),b=sizeFromShape(g),v=sizeFromShape(x);assert$2(u.rank>=2&&l.rank>=2&&u.rank===l.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${l.rank}.`),assert$2(arraysEqual(g,x),()=>`Error in fused matMul: outer dimensions (${g}) and (${x}) of Tensors with shapes ${u.shape} and ${l.shape} must match.`),assert$2(h===d,()=>`Error in fused matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${t} and transposeB=${s} must match.`);const S=u.shape.slice(0,-2).concat([f,y]),T=t?reshape$2(u,[b,h,f]):reshape$2(u,[b,f,h]),w=s?reshape$2(l,[v,y,d]):reshape$2(l,[v,d,y]);let C;r!=null&&(C=convertToTensor(r,"bias","fused matMul"),[C]=makeTypesMatch(C,u),assertAndGetBroadcastShape(S,C.shape));let N;a!=null&&(N=convertToTensor(a,"prelu weights","fused matMul"));const _=(k,F)=>{const[P,R,O,B]=F,L=getFusedDyActivation(reshape$2(k,O.shape),O,i);let V,q;if(!t&&!s?(V=matMul$1(L,R,!1,!0),q=matMul$1(P,L,!0,!1)):!t&&s?(V=matMul$1(L,R,!1,!1),q=matMul$1(L,P,!0,!1)):t&&!s?(V=matMul$1(R,L,!1,!0),q=matMul$1(P,L,!1,!1)):(V=matMul$1(R,L,!0,!0),q=matMul$1(L,P,!0,!0)),r!=null){const G=getFusedBiasGradient(B,L);return[V,q,G]}else return[V,q]},$={a:T,b:w,bias:C,preluActivationWeights:N},E={transposeA:t,transposeB:s,activation:i,leakyreluAlpha:c};return r==null?customGrad((F,P,R)=>{const O=ENGINE.runKernel(_FusedMatMul,$,E);return R([F,P,O]),{value:reshape$2(O,S),gradFunc:_}})(T,w):customGrad((F,P,R,O)=>{const B=ENGINE.runKernel(_FusedMatMul,$,E);return O([F,P,B,R]),{value:reshape$2(B,S),gradFunc:_}})(T,w,C)}const matMul=op({fusedMatMul_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hammingWindow_(n){return cosineWindow(n,.54,.46)}const hammingWindow=op({hammingWindow_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hannWindow_(n){return cosineWindow(n,.5,.5)}const hannWindow=op({hannWindow_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function frame_(n,e,t,s=!1,r=0){let i=0;const a=[];for(;i+e<=n.size;)a.push(slice$2(n,i,e)),i+=t;if(s)for(;i<n.size;){const c=i+e-n.size,u=concat$2([slice$2(n,i,e-c),fill$2([c],r)]);a.push(u),i+=t}return a.length===0?tensor2d([],[0,e]):reshape$2(concat$2(a),[a.length,e])}const frame=op({frame_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stft_(n,e,t,s,r=hannWindow){s==null&&(s=enclosingPowerOfTwo(e));const i=frame(n,e,t),a=mul(i,r(e)),c=[];for(let u=0;u<i.shape[0];u++)c.push(rfft(slice$2(a,[u,0],[1,e]),s));return concat$2(c)}const stft=op({stft_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cropAndResize_(n,e,t,s,r="bilinear",i=0){const a=convertToTensor(n,"image","cropAndResize"),c=convertToTensor(e,"boxes","cropAndResize","float32"),u=convertToTensor(t,"boxInd","cropAndResize","int32"),l=c.shape[0];assert$2(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),assert$2(c.rank===2&&c.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${c.shape}.`),assert$2(u.rank===1&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${c.shape}.`),assert$2(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),assert$2(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),assert$2(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const h={image:a,boxes:c,boxInd:u},d={method:r,extrapolationValue:i,cropSize:s};return ENGINE.runKernel(CropAndResize,h,d)}const cropAndResize$2=op({cropAndResize_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function flipLeftRight_(n){const e=convertToTensor(n,"image","flipLeftRight","float32");assert$2(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return ENGINE.runKernel(FlipLeftRight,t,{})}const flipLeftRight=op({flipLeftRight_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rotateWithOffset_(n,e,t=0,s=.5){const r=convertToTensor(n,"image","rotateWithOffset","float32");assert$2(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const i={image:r},a={radians:e,fillValue:t,center:s};return ENGINE.runKernel(RotateWithOffset,i,a)}const rotateWithOffset=op({rotateWithOffset_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppSanityCheck(n,e,t,s,r,i){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),i==null&&(i=0);const a=n.shape[0];return t=Math.min(t,a),assert$2(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),assert$2(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),assert$2(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),assert$2(e.rank===1,()=>"scores must be a 1D tensor"),assert$2(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),assert$2(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppression_(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const i=convertToTensor(n,"boxes","nonMaxSuppression"),a=convertToTensor(e,"scores","nonMaxSuppression"),c=nonMaxSuppSanityCheck(i,a,t,s,r);t=c.maxOutputSize,s=c.iouThreshold,r=c.scoreThreshold;const u={maxOutputSize:t,iouThreshold:s,scoreThreshold:r};return ENGINE.runKernel(NonMaxSuppressionV3,{boxes:i,scores:a},u)}const nonMaxSuppression=op({nonMaxSuppression_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function binaryInsert(n,e,t){const s=binarySearch(n,e,t),r=s<0?-(s+1):s;n.splice(r,0,e)}function binarySearch(n,e,t){return binarySearch_(n,e,t||defaultComparator)}function defaultComparator(n,e){return n>e?1:n<e?-1:0}function binarySearch_(n,e,t){let s=0,r=n.length,i=0,a=!1;for(;s<r;){i=s+(r-s>>>1);const c=t(e,n[i]);c>0?s=i+1:(r=i,a=!c)}return a?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppressionV3Impl$2(n,e,t,s,r){return nonMaxSuppressionImpl_(n,e,t,s,r,0)}function nonMaxSuppressionV4Impl$2(n,e,t,s,r,i){return nonMaxSuppressionImpl_(n,e,t,s,r,0,!1,i,!0)}function nonMaxSuppressionV5Impl$2(n,e,t,s,r,i){return nonMaxSuppressionImpl_(n,e,t,s,r,i,!0)}function nonMaxSuppressionImpl_(n,e,t,s,r,i,a=!1,c=!1,u=!1){const l=[];for(let b=0;b<e.length;b++)e[b]>r&&l.push({score:e[b],boxIndex:b,suppressBeginIndex:0});l.sort(ascendingComparator);const h=i>0?-.5/i:0,d=[],f=[];for(;d.length<t&&l.length>0;){const b=l.pop(),{score:v,boxIndex:S,suppressBeginIndex:T}=b;if(v<r)break;let w=!1;for(let C=d.length-1;C>=T;--C){const N=intersectionOverUnion(n,S,d[C]);if(N>=s){w=!0;break}if(b.score=b.score*suppressWeight(s,h,N),b.score<=r)break}b.suppressBeginIndex=d.length,w||(b.score===v?(d.push(S),f.push(b.score)):b.score>r&&binaryInsert(l,b,ascendingComparator))}const y=d.length,g=t-y;c&&g>0&&(d.push(...new Array(g).fill(0)),f.push(...new Array(g).fill(0)));const x={selectedIndices:d};return a&&(x.selectedScores=f),u&&(x.validOutputs=y),x}function intersectionOverUnion(n,e,t){const s=n.subarray(e*4,e*4+4),r=n.subarray(t*4,t*4+4),i=Math.min(s[0],s[2]),a=Math.min(s[1],s[3]),c=Math.max(s[0],s[2]),u=Math.max(s[1],s[3]),l=Math.min(r[0],r[2]),h=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),f=Math.max(r[1],r[3]),y=(c-i)*(u-a),g=(d-l)*(f-h);if(y<=0||g<=0)return 0;const x=Math.max(i,l),b=Math.max(a,h),v=Math.min(c,d),S=Math.min(u,f),T=Math.max(v-x,0)*Math.max(S-b,0);return T/(y+g-T)}function suppressWeight(n,e,t){const s=Math.exp(e*t*t);return t<=n?s:0}function ascendingComparator(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function nonMaxSuppressionAsync_(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const i=convertToTensor(n,"boxes","nonMaxSuppressionAsync"),a=convertToTensor(e,"scores","nonMaxSuppressionAsync"),c=nonMaxSuppSanityCheck(i,a,t,s,r);t=c.maxOutputSize,s=c.iouThreshold,r=c.scoreThreshold;const u=await Promise.all([i.data(),a.data()]),l=u[0],h=u[1],{selectedIndices:d}=nonMaxSuppressionV3Impl$2(l,h,t,s,r);return i!==n&&i.dispose(),a!==e&&a.dispose(),tensor1d(d,"int32")}const nonMaxSuppressionAsync=nonMaxSuppressionAsync_;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppressionWithScore_(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const a=convertToTensor(n,"boxes","nonMaxSuppression"),c=convertToTensor(e,"scores","nonMaxSuppression"),u=nonMaxSuppSanityCheck(a,c,t,s,r,i);t=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,i=u.softNmsSigma;const l={boxes:a,scores:c},h={maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:i},d=ENGINE.runKernel(NonMaxSuppressionV5,l,h);return{selectedIndices:d[0],selectedScores:d[1]}}const nonMaxSuppressionWithScore=op({nonMaxSuppressionWithScore_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function nonMaxSuppressionWithScoreAsync_(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const a=convertToTensor(n,"boxes","nonMaxSuppressionAsync"),c=convertToTensor(e,"scores","nonMaxSuppressionAsync"),u=nonMaxSuppSanityCheck(a,c,t,s,r,i);t=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,i=u.softNmsSigma;const l=await Promise.all([a.data(),c.data()]),h=l[0],d=l[1],{selectedIndices:f,selectedScores:y}=nonMaxSuppressionV5Impl$2(h,d,t,s,r,i);return a!==n&&a.dispose(),c!==e&&c.dispose(),{selectedIndices:tensor1d(f,"int32"),selectedScores:tensor1d(y)}}const nonMaxSuppressionWithScoreAsync=nonMaxSuppressionWithScoreAsync_;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppressionPadded_(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const a=convertToTensor(n,"boxes","nonMaxSuppression"),c=convertToTensor(e,"scores","nonMaxSuppression"),u=nonMaxSuppSanityCheck(a,c,t,s,r,null),l=u.maxOutputSize,h=u.iouThreshold,d=u.scoreThreshold,f={boxes:a,scores:c},y={maxOutputSize:l,iouThreshold:h,scoreThreshold:d,padToMaxOutputSize:i},g=ENGINE.runKernel(NonMaxSuppressionV4,f,y);return{selectedIndices:g[0],validOutputs:g[1]}}const nonMaxSuppressionPadded=op({nonMaxSuppressionPadded_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function nonMaxSuppressionPaddedAsync_(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const a=convertToTensor(n,"boxes","nonMaxSuppressionAsync"),c=convertToTensor(e,"scores","nonMaxSuppressionAsync"),u=nonMaxSuppSanityCheck(a,c,t,s,r,null),l=u.maxOutputSize,h=u.iouThreshold,d=u.scoreThreshold,[f,y]=await Promise.all([a.data(),c.data()]),{selectedIndices:g,validOutputs:x}=nonMaxSuppressionV4Impl$2(f,y,l,h,d,i);return a!==n&&a.dispose(),c!==e&&c.dispose(),{selectedIndices:tensor1d(g,"int32"),validOutputs:scalar(x,"int32")}}const nonMaxSuppressionPaddedAsync=nonMaxSuppressionPaddedAsync_;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinear_(n,e,t=!1,s=!1){const r=convertToTensor(n,"images","resizeBilinear");assert$2(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),assert$2(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),assert$2(s===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=r,a=!1;r.rank===3&&(a=!0,i=reshape$2(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const c={images:i},u={alignCorners:t,halfPixelCenters:s,size:e},l=ENGINE.runKernel(ResizeBilinear,c,u);return a?reshape$2(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const resizeBilinear$2=op({resizeBilinear_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighbor_(n,e,t=!1,s=!1){const r=convertToTensor(n,"images","resizeNearestNeighbor");assert$2(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),assert$2(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),assert$2(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),assert$2(s===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=r,a=!1;r.rank===3&&(a=!0,i=reshape$2(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const c={images:i},u={alignCorners:t,halfPixelCenters:s,size:e},l=ENGINE.runKernel(ResizeNearestNeighbor,c,u);return a?reshape$2(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const resizeNearestNeighbor$2=op({resizeNearestNeighbor_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bandPart_(n,e,t){assert$2(e%1==0,()=>`bandPart(): numLower must be an integer, got ${e}.`),assert$2(t%1==0,()=>`bandPart(): numUpper must be an integer, got ${t}.`);const s=convertToTensor(n,"a","bandPart");assert$2(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[i,a]=s.shape.slice(-2);if(!(e<=i))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`);if(!(t<=a))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`);e<0&&(e=i),t<0&&(t=a);const c=reshape$2(range$4(0,i,1,"int32"),[-1,1]),u=range$4(0,a,1,"int32"),l=sub$2(c,u),h=logicalAnd$2(lessEqual$2(l,scalar(+e,"int32")),greaterEqual$2(l,scalar(-t,"int32"))),d=zeros$1([i,a],s.dtype);return reshape$2(stack(unstack(reshape$2(s,[-1,i,a])).map(f=>where(h,f,d))),r)}const bandPart=op({bandPart_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gramSchmidt_(n){let e;if(Array.isArray(n)){e=!1,assert$2(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let i=1;i<n.length;++i)assert$2(n[i].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[i].shape[0]} vs. ${r})`)}else e=!0,n=split(n,n.shape[0],0).map(r=>squeeze(r,[0]));assert$2(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],s=n;for(let r=0;r<n.length;++r)t.push(ENGINE.tidy(()=>{let i=s[r];if(r>0)for(let a=0;a<r;++a){const c=mul(sum$2(mul(t[a],i)),t[a]);i=sub$2(i,c)}return div$1(i,norm(i,"euclidean"))}));return e?stack(t,0):t}const gramSchmidt=op({gramSchmidt_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qr_(n,e=!1){if(assert$2(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return qr2d(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((u,l)=>u*l),s=unstack(reshape$2(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],i=[];s.forEach(u=>{const[l,h]=qr2d(u,e);r.push(l),i.push(h)});const a=reshape$2(stack(r,0),n.shape),c=reshape$2(stack(i,0),n.shape);return[a,c]}}function qr2d(n,e=!1){return ENGINE.tidy(()=>{assert$2(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],s=n.shape[1];let r=eye(t),i=clone$1(n);const a=tensor2d([[1]],[1,1]);let c=clone$1(a);const u=t>=s?s:t;for(let l=0;l<u;++l){const h=i,d=c,f=r;[c,i,r]=ENGINE.tidy(()=>{const y=slice$2(i,[l,l],[t-l,1]),g=norm(y),x=slice$2(i,[l,l],[1,1]),b=where(greater$2(x,0),tensor2d([[-1]]),tensor2d([[1]])),v=sub$2(x,mul(b,g)),S=div$1(y,v);S.shape[0]===1?c=clone$1(a):c=concat$2([a,slice$2(S,[1,0],[S.shape[0]-1,S.shape[1]])],0);const T=neg$2(div$1(matMul$1(b,v),g)),w=slice$2(i,[l,0],[t-l,s]),C=mul(T,c),N=transpose$3(c);if(l===0)i=sub$2(w,matMul$1(C,matMul$1(N,w)));else{const E=sub$2(w,matMul$1(C,matMul$1(N,w)));i=concat$2([slice$2(i,[0,0],[l,s]),E],0)}const _=transpose$3(C),$=slice$2(r,[0,l],[t,r.shape[1]-l]);if(l===0)r=sub$2($,matMul$1(matMul$1($,c),_));else{const E=sub$2($,matMul$1(matMul$1($,c),_));r=concat$2([slice$2(r,[0,0],[t,l]),E],1)}return[c,i,r]}),dispose([h,d,f])}return!e&&t>s&&(r=slice$2(r,[0,0],[t,s]),i=slice$2(i,[0,0],[s,s])),[r,i]})}const qr=op({qr_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Reduction;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Reduction||(Reduction={}));function computeWeightedLoss_(n,e,t=Reduction.SUM_BY_NONZERO_WEIGHTS){const s=convertToTensor(n,"losses","computeWeightedLoss");let r=null;e!=null&&(r=convertToTensor(e,"weights","computeWeightedLoss"));const i=r==null?s:mul(s,r);if(t===Reduction.NONE)return i;if(t===Reduction.SUM)return sum$2(i);if(t===Reduction.MEAN){if(r==null)return mean$1(i);{const a=s.size/r.size,c=div$1(sum$2(i),sum$2(r));return a>1?div$1(c,scalar(a)):c}}if(t===Reduction.SUM_BY_NONZERO_WEIGHTS){if(r==null)return div$1(sum$2(i),scalar(s.size));{const a=mul(r,ones(s.shape)),c=cast$3(sum$2(notEqual$2(a,scalar(0))),"float32");return div$1(sum$2(i),c)}}throw Error(`Unknown reduction: ${t}`)}const computeWeightedLoss$1=op({computeWeightedLoss_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function absoluteDifference_(n,e,t,s=Reduction.SUM_BY_NONZERO_WEIGHTS){const r=convertToTensor(n,"labels","absoluteDifference"),i=convertToTensor(e,"predictions","absoluteDifference");let a=null;t!=null&&(a=convertToTensor(t,"weights","absoluteDifference")),assertShapesMatch(r.shape,i.shape,"Error in absoluteDifference: ");const c=abs$2(sub$2(r,i));return computeWeightedLoss$1(c,a,s)}const absoluteDifference=op({absoluteDifference_});function cosineDistance_(n,e,t,s,r=Reduction.SUM_BY_NONZERO_WEIGHTS){const i=convertToTensor(n,"labels","cosineDistance"),a=convertToTensor(e,"predictions","cosineDistance");let c=null;s!=null&&(c=convertToTensor(s,"weights","cosineDistance")),assertShapesMatch(i.shape,a.shape,"Error in cosineDistance: ");const u=scalar(1),l=sub$2(u,sum$2(mul(i,a),t,!0));return computeWeightedLoss$1(l,c,r)}const cosineDistance=op({cosineDistance_});function hingeLoss_(n,e,t,s=Reduction.SUM_BY_NONZERO_WEIGHTS){let r=convertToTensor(n,"labels","hingeLoss");const i=convertToTensor(e,"predictions","hingeLoss");let a=null;t!=null&&(a=convertToTensor(t,"weights","hingeLoss")),assertShapesMatch(r.shape,i.shape,"Error in hingeLoss: ");const c=scalar(1);r=sub$2(mul(scalar(2),r),c);const u=relu$2(sub$2(c,mul(r,i)));return computeWeightedLoss$1(u,a,s)}const hingeLoss=op({hingeLoss_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function huberLoss_(n,e,t,s=1,r=Reduction.SUM_BY_NONZERO_WEIGHTS){const i=convertToTensor(n,"labels","huberLoss"),a=convertToTensor(e,"predictions","huberLoss");let c=null;t!=null&&(c=convertToTensor(t,"weights","huberLoss")),assertShapesMatch(i.shape,a.shape,"Error in huberLoss: ");const u=scalar(s),l=abs$2(sub$2(a,i)),h=minimum$2(l,u),d=sub$2(l,h),f=add$1(mul(scalar(.5),square$2(h)),mul(u,d));return computeWeightedLoss$1(f,c,r)}const huberLoss=op({huberLoss_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logLoss_(n,e,t,s=1e-7,r=Reduction.SUM_BY_NONZERO_WEIGHTS){const i=convertToTensor(n,"labels","logLoss"),a=convertToTensor(e,"predictions","logLoss");let c=null;t!=null&&(c=convertToTensor(t,"weights","logLoss")),assertShapesMatch(i.shape,a.shape,"Error in logLoss: ");const u=scalar(1),l=scalar(s),h=neg$2(mul(i,log$5(add$1(a,l)))),d=mul(sub$2(u,i),log$5(add$1(sub$2(u,a),l))),f=sub$2(h,d);return computeWeightedLoss$1(f,c,r)}const logLoss=op({logLoss_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function meanSquaredError_(n,e,t,s=Reduction.SUM_BY_NONZERO_WEIGHTS){const r=convertToTensor(n,"labels","meanSquaredError"),i=convertToTensor(e,"predictions","meanSquaredError");let a=null;t!=null&&(a=convertToTensor(t,"weights","meanSquaredError")),assertShapesMatch(r.shape,i.shape,"Error in meanSquaredError: ");const c=squaredDifference$2(r,i);return computeWeightedLoss$1(c,a,s)}const meanSquaredError$1=op({meanSquaredError_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sigmoidCrossEntropyWithLogits_(n,e){const t=convertToTensor(n,"labels","sigmoidCrossEntropyWithLogits"),s=convertToTensor(e,"logits","sigmoidCrossEntropyWithLogits");assertShapesMatch(t.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=relu$2(s),i=mul(s,t),a=log1p$2(exp$2(neg$2(abs$2(s))));return add$1(sub$2(r,i),a)}function sigmoidCrossEntropy_(n,e,t,s=0,r=Reduction.SUM_BY_NONZERO_WEIGHTS){let i=convertToTensor(n,"multiClassLabels","sigmoidCrossEntropy");const a=convertToTensor(e,"logits","sigmoidCrossEntropy");let c=null;if(t!=null&&(c=convertToTensor(t,"weights","sigmoidCrossEntropy")),assertShapesMatch(i.shape,a.shape,"Error in sigmoidCrossEntropy: "),s>0){const l=scalar(s),h=scalar(1),d=scalar(.5);i=add$1(mul(i,sub$2(h,l)),mul(d,l))}const u=sigmoidCrossEntropyWithLogits_(i,a);return computeWeightedLoss$1(u,c,r)}const sigmoidCrossEntropy=op({sigmoidCrossEntropy_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function softmaxCrossEntropyWithLogits_(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return customGrad((r,i,a)=>{const u=logSumExp(i,[t],!0),l=sub$2(cast$3(i,"float32"),u);a([r,l]);const h=neg$2(mul(l,r));return{value:sum$2(h,[t]),gradFunc:(y,g)=>{const[x,b]=g,v=expandShapeToKeepDim(y.shape,[t]);return[mul(reshape$2(y,v),sub$2(cast$3(x,"float32"),exp$2(b))),mul(reshape$2(y,v),sub$2(exp$2(b),cast$3(x,"float32")))]}}})(n,e)}function softmaxCrossEntropy_(n,e,t,s=0,r=Reduction.SUM_BY_NONZERO_WEIGHTS){let i=convertToTensor(n,"onehotLabels","softmaxCrossEntropy");const a=convertToTensor(e,"logits","softmaxCrossEntropy");let c=null;if(t!=null&&(c=convertToTensor(t,"weights","softmaxCrossEntropy")),assertShapesMatch(i.shape,a.shape,"Error in softmaxCrossEntropy: "),s>0){const l=scalar(s),h=scalar(1),d=scalar(i.shape[1]);i=add$1(mul(i,sub$2(h,l)),div$1(l,d))}const u=softmaxCrossEntropyWithLogits_(i,a);return computeWeightedLoss$1(u,c,r)}const softmaxCrossEntropy=op({softmaxCrossEntropy_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const linalg={bandPart,gramSchmidt,qr};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Optimizer extends Serializable{minimize(e,t=!1,s){const{value:r,grads:i}=this.computeGradients(e,s);if(s!=null){const a=s.map(c=>({name:c.name,tensor:i[c.name]}));this.applyGradients(a)}else this.applyGradients(i);return dispose(i),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return variableGrads(e,t)}dispose(){this.iterations_!=null&&dispose(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:scalar(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Optimizer,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AdadeltaOptimizer extends Optimizer{constructor(e,t,s=null){super();this.learningRate=e,this.rho=t,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=ENGINE.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=ENGINE.registeredVariables[s],a=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:tidy(()=>zerosLike$2(i).variable(a))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:tidy(()=>zerosLike$2(i).variable(a))});const c=Array.isArray(e)?e[r].tensor:e[s];if(c==null)return;const u=this.accumulatedGrads[r].variable,l=this.accumulatedUpdates[r].variable;tidy(()=>{const h=add$1(mul(u,this.rho),mul(square$2(c),1-this.rho)),d=mul(div$1(sqrt$2(add$1(l,this.epsilon)),sqrt$2(add$1(u,this.epsilon))),c),f=add$1(mul(l,this.rho),mul(square$2(d),1-this.rho));u.assign(h),l.assign(f);const y=add$1(mul(d,-this.learningRate),i);i.assign(y)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(dispose(this.accumulatedGrads.map(e=>e.variable)),dispose(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}AdadeltaOptimizer.className="Adadelta";registerClass(AdadeltaOptimizer);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AdagradOptimizer extends Optimizer{constructor(e,t=.1){super();this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=ENGINE.registeredVariables[s];if(this.accumulatedGrads[r]==null){const u=!1;this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:tidy(()=>fill$2(i.shape,this.initialAccumulatorValue).variable(u))}}const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const c=this.accumulatedGrads[r].variable;tidy(()=>{const u=add$1(c,square$2(a));c.assign(u);const l=add$1(mul(div$1(a,sqrt$2(add$1(u,ENGINE.backend.epsilon()))),-this.learningRate),i);i.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&dispose(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}AdagradOptimizer.className="Adagrad";registerClass(AdagradOptimizer);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AdamOptimizer extends Optimizer{constructor(e,t,s,r=null){super();this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],tidy(()=>{this.accBeta1=scalar(t).variable(),this.accBeta2=scalar(s).variable()}),r==null&&(this.epsilon=ENGINE.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);tidy(()=>{const s=sub$2(1,this.accBeta1),r=sub$2(1,this.accBeta2);t.forEach((i,a)=>{const c=ENGINE.registeredVariables[i],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${i}/m`,variable:tidy(()=>zerosLike$2(c).variable(u))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${i}/v`,variable:tidy(()=>zerosLike$2(c).variable(u))});const l=Array.isArray(e)?e[a].tensor:e[i];if(l==null)return;const h=this.accumulatedFirstMoment[a].variable,d=this.accumulatedSecondMoment[a].variable,f=add$1(mul(h,this.beta1),mul(l,1-this.beta1)),y=add$1(mul(d,this.beta2),mul(square$2(l),1-this.beta2)),g=div$1(f,s),x=div$1(y,r);h.assign(f),d.assign(y);const b=add$1(mul(div$1(g,add$1(sqrt$2(x),this.epsilon)),-this.learningRate),c);c.assign(b)}),this.accBeta1.assign(mul(this.accBeta1,this.beta1)),this.accBeta2.assign(mul(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&dispose(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&dispose(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),tidy(()=>{this.accBeta1.assign(pow$2(this.beta1,this.iterations_+1)),this.accBeta2.assign(pow$2(this.beta2,this.iterations_+1))});const t=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}AdamOptimizer.className="Adam";registerClass(AdamOptimizer);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AdamaxOptimizer extends Optimizer{constructor(e,t,s,r=null,i=0){super();this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],tidy(()=>{this.iteration=scalar(0).variable(),this.accBeta1=scalar(t).variable()}),r==null&&(this.epsilon=ENGINE.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);tidy(()=>{const s=sub$2(1,this.accBeta1),r=div$1(-this.learningRate,add$1(mul(this.iteration,this.decay),1));t.forEach((i,a)=>{const c=ENGINE.registeredVariables[i],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${i}/m`,variable:zerosLike$2(c).variable(u)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${i}/v`,variable:zerosLike$2(c).variable(u)});const l=Array.isArray(e)?e[a].tensor:e[i];if(l==null)return;const h=this.accumulatedFirstMoment[a].variable,d=this.accumulatedWeightedInfNorm[a].variable,f=add$1(mul(h,this.beta1),mul(l,1-this.beta1)),y=mul(d,this.beta2),g=abs$2(l),x=maximum$2(y,g);h.assign(f),d.assign(x);const b=add$1(mul(div$1(r,s),div$1(f,add$1(x,this.epsilon))),c);c.assign(b)}),this.iteration.assign(add$1(this.iteration,1)),this.accBeta1.assign(mul(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&dispose(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&dispose(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}AdamaxOptimizer.className="Adamax";registerClass(AdamaxOptimizer);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SGDOptimizer extends Optimizer{constructor(e){super();this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=Array.isArray(e)?e[r].tensor:e[s];if(i==null)return;const a=ENGINE.registeredVariables[s];tidy(()=>{const c=add$1(mul(this.c,i),a);a.assign(c)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=keep(scalar(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}SGDOptimizer.className="SGD";registerClass(SGDOptimizer);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MomentumOptimizer extends SGDOptimizer{constructor(e,t,s=!1){super(e);this.learningRate=e,this.momentum=t,this.useNesterov=s,this.accumulations=[],this.m=scalar(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=ENGINE.registeredVariables[s];if(this.accumulations[r]==null){const u=!1;this.accumulations[r]={originalName:`${s}/momentum`,variable:tidy(()=>zerosLike$2(i).variable(u))}}const a=this.accumulations[r].variable,c=Array.isArray(e)?e[r].tensor:e[s];c!=null&&tidy(()=>{let u;const l=add$1(mul(this.m,a),c);this.useNesterov?u=add$1(mul(this.c,add$1(c,mul(l,this.m))),i):u=add$1(mul(this.c,l),i),a.assign(l),i.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&dispose(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}MomentumOptimizer.className="Momentum";registerClass(MomentumOptimizer);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RMSPropOptimizer extends Optimizer{constructor(e,t=.9,s=0,r=null,i=!1){super();if(this.learningRate=e,this.decay=t,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=i,r==null&&(this.epsilon=ENGINE.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=ENGINE.registeredVariables[s],a=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:tidy(()=>zerosLike$2(i).variable(a))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:tidy(()=>zerosLike$2(i).variable(a))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:tidy(()=>zerosLike$2(i).variable(a))});const c=Array.isArray(e)?e[r].tensor:e[s];if(c==null)return;const u=this.accumulatedMeanSquares[r].variable,l=this.accumulatedMoments[r].variable;tidy(()=>{const h=add$1(mul(u,this.decay),mul(square$2(c),1-this.decay));if(this.centered){const d=this.accumulatedMeanGrads[r].variable,f=add$1(mul(d,this.decay),mul(c,1-this.decay)),y=div$1(mul(c,this.learningRate),sqrt$2(sub$2(h,add$1(square$2(f),this.epsilon)))),g=add$1(mul(l,this.momentum),y);u.assign(h),d.assign(f),l.assign(g);const x=sub$2(i,g);i.assign(x)}else{const d=add$1(mul(u,this.decay),mul(square$2(c),1-this.decay)),f=add$1(mul(l,this.momentum),div$1(mul(c,this.learningRate),sqrt$2(add$1(d,this.epsilon))));u.assign(d),l.assign(f);const y=sub$2(i,f);i.assign(y)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&dispose(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&dispose(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&dispose(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}RMSPropOptimizer.className="RMSProp";registerClass(RMSPropOptimizer);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OptimizerConstructors{static sgd(e){return new SGDOptimizer(e)}static momentum(e,t,s=!1){return new MomentumOptimizer(e,t,s)}static rmsprop(e,t=.9,s=0,r=null,i=!1){return new RMSPropOptimizer(e,t,s,r,i)}static adam(e=.001,t=.9,s=.999,r=null){return new AdamOptimizer(e,t,s,r)}static adadelta(e=.001,t=.95,s=null){return new AdadeltaOptimizer(e,t,s)}static adamax(e=.002,t=.9,s=.999,r=null,i=0){return new AdamaxOptimizer(e,t,s,r,i)}static adagrad(e,t=.1){return new AdagradOptimizer(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const train={sgd:OptimizerConstructors.sgd,momentum:OptimizerConstructors.momentum,adadelta:OptimizerConstructors.adadelta,adagrad:OptimizerConstructors.adagrad,rmsprop:OptimizerConstructors.rmsprop,adamax:OptimizerConstructors.adamax,adam:OptimizerConstructors.adam};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const delayCallback=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:n=>n())();function nextFrame(){return new Promise(n=>delayCallback(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function assertParamsConsistent(n,e){const t=n[0].length;n.forEach((r,i)=>{assert$2(r.length===t,()=>`Error in concat${t}D: rank of tensors[${i}] must be the same as the rank of the rest (${t})`)}),assert$2(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=n[0];n.forEach((r,i)=>{for(let a=0;a<t;a++)assert$2(a===e||r[a]===s[a],()=>`Error in concat${t}D: Shape of tensors[${i}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${i}.`)})}function computeOutShape$1(n,e){const t=n[0].slice();for(let s=1;s<n.length;s++)t[e]+=n[s][e];return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PARALLELIZE_THRESHOLD=30;function computeOptimalWindowSize(n){return n<=PARALLELIZE_THRESHOLD?n:nearestDivisor(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getImageCenter(n,e,t){const s=t*(typeof n=="number"?n:n[0]),r=e*(typeof n=="number"?n:n[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getReshaped(n,e,t,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(n[0]/t),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const i=e.length;for(let a=0;a<i;++a)r=r.concat([n[a+1]/e[a],e[a]]);r=r.concat(n.slice(i+1))}return r}function getPermuted(n,e,t=!0){const s=[];if(t){s.push(e);for(let r=e+1;r<n;++r)r<=2*e?(s.push(r),s.push(r-(e+1))):s.push(r)}else{const r=[],i=[];for(let a=1;a<n;++a)a>=e*2+1||a%2==1?i.push(a):r.push(a);s.push(...r),s.push(0),s.push(...i)}return s}function getReshapedPermuted(n,e,t,s=!0){const r=[];s?r.push(n[0]/t):r.push(n[0]*t);for(let i=1;i<n.length;++i)i<=e.length?s?r.push(e[i-1]*n[i]):r.push(n[i]/e[i-1]):r.push(n[i]);return r}function getSliceBeginCoords(n,e){const t=[0];for(let s=0;s<e;++s)t.push(n[s][0]);return t}function getSliceSize(n,e,t){const s=n.slice(0,1);for(let r=0;r<t;++r)s.push(n[r+1]-e[r][0]-e[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SELU_SCALEALPHA=1.7580993408473768,SELU_SCALE=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ERF_P=.3275911,ERF_A1=.254829592,ERF_A2=-.284496736,ERF_A3=1.421413741,ERF_A4=-1.453152027,ERF_A5=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function warn$1(...n){env().getBool("IS_TEST")||console.warn(...n)}function log$4(...n){env().getBool("IS_TEST")||console.log(...n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mergeRealAndImagArrays(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let s=0;s<t.length;s+=2)t[s]=n[s/2],t[s+1]=e[s/2];return t}function splitRealAndImagArrays(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)e[s/2]=n[s],t[s/2]=n[s+1];return{real:e,imag:t}}function complexWithEvenIndex(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=0;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function complexWithOddIndex(n){const e=Math.floor(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=2;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function getComplexWithIndex(n,e){const t=n[e*2],s=n[e*2+1];return{real:t,imag:s}}function assignToTypedArray(n,e,t,s){n[s*2]=e,n[s*2+1]=t}function exponents(n,e){const t=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const i=(e?2:-2)*Math.PI*(r/n);t[r]=Math.cos(i),s[r]=Math.sin(i)}return{real:t,imag:s}}function exponent(n,e,t){const s=(t?2:-2)*Math.PI*(n/e),r=Math.cos(s),i=Math.sin(s);return{real:r,imag:i}}function prepareSplitSize(n,e,t=0){let s=[];if(typeof e=="number")assert$2(n.shape[t]%e==0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(n.shape[t]/e);else{const r=e.reduce((a,c)=>(c===-1&&(a+=1),a),0);assert$2(r<=1,()=>"There should be only one negative value in split array.");const i=e.indexOf(-1);if(i!==-1){const a=e.reduce((c,u)=>u>0?c+u:c);e[i]=n.shape[t]-a}assert$2(n.shape[t]===e.reduce((a,c)=>a+c),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function segOpComputeOptimalWindowSize(n,e){let t=!1,s;for(n<=PARALLELIZE_THRESHOLD?(s=n,t=!0):s=nearestDivisor(n,Math.floor(Math.sqrt(n)));!t;)s>e||s===n?t=!0:s=nearestDivisor(n,s+1);return s}function computeOutShape(n,e,t){const s=[],r=n.length;for(let i=0;i<r;i++)i!==e?s.push(n[i]):s.push(t);return s}function collectGatherOpShapeInfo(n,e,t,s){const r=e.shape.length,i=n.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>i)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${i}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let d=0;d<s;++d)if(n.shape[d]!==e.shape[d])throw new Error(`x.shape[${d}]: ${n.shape[d]} should be equal to indices.shape[${d}]: ${e.shape[d]}.`);const a=n.shape[t],c=[];let u=1,l=1,h=1;for(let d=0;d<s;++d)c.push(n.shape[d]),u*=n.shape[d];for(let d=s;d<t;d++)c.push(n.shape[d]),l*=n.shape[d];for(let d=s;d<r;d++)c.push(e.shape[d]);for(let d=t+1;d<i;d++)c.push(n.shape[d]),h*=n.shape[d];return{batchSize:u,sliceSize:h,outerSize:l,dimSize:a,outputShape:c}}var segment_util=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",segOpComputeOptimalWindowSize,computeOutShape,collectGatherOpShapeInfo});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function castTensor(n,e,t){if(e==="complex64"){if(n.dtype==="complex64")return n.clone();const s=zeros$1(n.shape),r=cast$3(n,"float32"),i=t.complex(r,s);return s.dispose(),r.dispose(),i}if(!hasEncodingLoss(n.dtype,e))return ENGINE.makeTensorFromDataId(n.dataId,n.shape,e);if(n.dtype==="complex64"){const s=t.real(n),r=cast$3(s,e);return s.dispose(),r}if(e==="int32")return t.int(n);if(e==="bool"){const s=scalar(0,n.dtype),r=t.notEqual(n,s);return s.dispose(),r}else throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${e}`)}function reshapeTensor(n,e){return ENGINE.makeTensorFromDataId(n.dataId,e,n.dtype)}function fromUint8ToStringArray(n){try{return n.map(e=>decodeString(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function fromStringArrayToUint8(n){return n.map(e=>encodeString(e))}var backend_util=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",slice_util,segment_util,castTensor,reshapeTensor,fromUint8ToStringArray,fromStringArrayToUint8,upcastType,axesAreInnerMostDims,combineLocations,computeOutAndReduceShapes,expandShapeToKeepDim,assertAxesAreInnerMostDims,getAxesPermutation,getUndoAxesPermutation,getInnerMostAxes,getBroadcastDims:getBroadcastDims$1,getReductionAxes,assertAndGetBroadcastShape,assertParamsConsistent,computeOutShape:computeOutShape$1,computeDilation2DInfo,computePool2DInfo,computePool3DInfo,computeConv2DInfo,computeConv3DInfo,computeDefaultPad,tupleValuesAreOne,eitherStridesOrDilationsAreOne,convertConv2DDataFormat,getFusedDyActivation,getFusedBiasGradient,applyActivation:applyActivation$1,shouldFuse,PARALLELIZE_THRESHOLD,computeOptimalWindowSize,getImageCenter,getReshaped,getPermuted,getReshapedPermuted,getSliceBeginCoords,getSliceSize,prepareAndValidate,validateUpdateShape,validateInput,calculateShapes,SELU_SCALEALPHA,SELU_SCALE,ERF_P,ERF_A1,ERF_A2,ERF_A3,ERF_A4,ERF_A5,warn:warn$1,log:log$4,mergeRealAndImagArrays,splitRealAndImagArrays,complexWithEvenIndex,complexWithOddIndex,getComplexWithIndex,assignToTypedArray,exponents,exponent,prepareSplitSize});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const absGradConfig={kernelName:Abs$1,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>mul(n,step$2(cast$3(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const acosGradConfig={kernelName:Acos,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=square$2(cast$3(t,"float32")),r=sqrt$2(sub$2(scalar(1),s));return neg$2(div$1(n,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const acoshGradConfig={kernelName:Acosh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=sqrt$2(sub$2(square$2(cast$3(t,"float32")),1));return div$1(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const addGradConfig={kernelName:Add$2,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=assertAndGetBroadcastShape(t.shape,s.shape);return{a:()=>{let c=n;const u=getReductionAxes(t.shape,r);return u.length>0&&(c=sum$2(c,u)),reshape$2(c,t.shape)},b:()=>{let c=n;const u=getReductionAxes(s.shape,r);return u.length>0&&(c=sum$2(c,u)),reshape$2(c,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const addNGradConfig={kernelName:AddN,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((s,r)=>{t[r]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const argMaxGradConfig={kernelName:ArgMax,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>zerosLike$2(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const argMinGradConfig={kernelName:ArgMin,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>zerosLike$2(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const asinGradConfig={kernelName:Asin,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>div$1(n,sqrt$2(sub$2(scalar(1),square$2(cast$3(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const asinhGradConfig={kernelName:Asinh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=sqrt$2(add$1(scalar(1),square$2(cast$3(t,"float32"))));return div$1(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atan2GradConfig={kernelName:Atan2,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=assertAndGetBroadcastShape(t.shape,s.shape);return{a:()=>{const c=add$1(square$2(t),square$2(s));let u=mul(n,div$1(s,c));const l=getReductionAxes(t.shape,r);return l.length>0&&(u=sum$2(u,l)),reshape$2(u,t.shape)},b:()=>{const c=add$1(square$2(t),square$2(s));let u=neg$2(mul(n,div$1(t,c)));const l=getReductionAxes(s.shape,r);return l.length>0&&(u=sum$2(u,l)),reshape$2(u,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atanGradConfig={kernelName:Atan,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>div$1(n,add$1(square$2(cast$3(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atanhGradConfig={kernelName:Atanh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>div$1(n,sub$2(scalar(1),square$2(cast$3(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3dGrad_(n,e,t,s,r=[1,1,1],i,a){const c=convertToTensor(n,"dy","avgPool3dGrad"),u=convertToTensor(e,"input","avgPool3dGrad");let l=c,h=u,d=!1;u.rank===4&&(d=!0,l=reshape$2(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),h=reshape$2(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),assert$2(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),assert$2(h.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),assert$2(eitherStridesOrDilationsAreOne(s,r),()=>`Error in avgPool3dGrad: Either strides or dilations must be 1. Got strides ${s} and dilations '${r}'`),a!=null&&assert$2(isInt(i),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`);const f={dy:l,input:h},y={filterSize:t,strides:s,dilations:r,pad:i,dimRoundingMode:a},g=ENGINE.runKernel(AvgPool3DGrad,f,y);return d?reshape$2(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const avgPool3dGrad=op({avgPool3dGrad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const avgPool3DGradConfig$1={kernelName:AvgPool3D,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:i,dilations:a,pad:c,dimRoundingMode:u}=t,l=a==null?[1,1,1]:a;return{x:()=>avgPool3dGrad(n,s,r,i,l,c,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPoolGrad_(n,e,t,s,r){const i=convertToTensor(n,"dy","avgPoolGrad"),a=convertToTensor(e,"input","avgPoolGrad");assert$2(a.rank===i.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`);let c=a,u=i,l=!1;a.rank===3&&(l=!0,c=reshape$2(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=reshape$2(i,[1,i.shape[0],i.shape[1],i.shape[2]])),assert$2(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),assert$2(c.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${c.rank}.`);const h={dy:u,input:c},d={filterSize:t,strides:s,pad:r},f=ENGINE.runKernel(AvgPoolGrad,h,d);return l?reshape$2(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const avgPoolGrad$2=op({avgPoolGrad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const avgPoolGradConfig$2={kernelName:AvgPool,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:i,pad:a}=t;return{x:()=>avgPoolGrad$2(n,s,r,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const batchMatMulGradConfig={kernelName:BatchMatMul,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[s,r]=e,{transposeA:i,transposeB:a}=t;return!i&&!a?{a:()=>matMul$1(n,r,!1,!0),b:()=>matMul$1(s,n,!0,!1)}:!i&&a?{a:()=>matMul$1(n,r,!1,!1),b:()=>matMul$1(n,s,!0,!1)}:i&&!a?{a:()=>matMul$1(r,n,!1,!0),b:()=>matMul$1(s,n,!1,!1)}:{a:()=>matMul$1(r,n,!0,!0),b:()=>matMul$1(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const batchToSpaceNDGradConfig={kernelName:BatchToSpaceND,gradFunc:(n,e,t)=>{const{blockShape:s,crops:r}=t;return{x:()=>spaceToBatchND$2(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const broadcastToGradConfig={kernelName:BroadcastTo,gradFunc:(n,e,t)=>{const s=t,r=s.inputShape,i=s.shape,a=Array.from(i);for(let u=r.length-1;u>=0;u--)if(r[u]===i[u])a[u]=1;else if(r[u]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${i}].`);const c=[];for(let u=0;u<a.length;u++)a[u]>1&&c.push(u);return{x:()=>sum$2(n,c,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const castGradConfig={kernelName:Cast,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ceilGradConfig={kernelName:Ceil,gradFunc:n=>({x:()=>zerosLike$2(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const clipByValueGradConfig={kernelName:ClipByValue,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{clipValueMin:r,clipValueMax:i}=t;return{x:()=>where(logicalAnd$2(greaterEqual$2(s,r),lessEqual$2(s,i)),n,zerosLike$2(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const complexAbsGradConfig={kernelName:ComplexAbs,inputsToSave:["x"],gradFunc:absGradConfig.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const concatGradConfig={kernelName:Concat,saveAllInputs:!0,gradFunc:(n,e,t)=>{const s=e.map(u=>u.shape),{axis:r}=t,i=parseAxisParam(r,e[0].shape)[0],a=s.map(u=>u[i]);return split(n,a,i).map(u=>()=>u)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const conv2DGradConfig={kernelName:Conv2D$1,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{dilations:i,strides:a,pad:c,dataFormat:u}=t;return assert$2(tupleValuesAreOne(i),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`),{x:()=>conv2DBackpropInput$2(s.shape,n,r,a,c,u),filter:()=>conv2DBackpropFilter$2(s,n,r.shape,a,c,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const conv2DBackpropInputGradConfig={kernelName:Conv2DBackpropInput,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{strides:i,pad:a,dataFormat:c,dimRoundingMode:u}=t;return{dy:()=>conv2d$2(n,r,i,a,c,1,u),filter:()=>conv2DBackpropFilter$2(n,s,r.shape,i,a,c,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropFilter_(n,e,t,s,r){let i=n;n.rank===4&&(i=reshape$2(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let a=e;a.rank===4&&(a=reshape$2(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),assert$2(i.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`),assert$2(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),assert$2(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),assert$2(i.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${t[3]}.`),assert$2(a.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${t[4]}).`);const c={x:i,dy:a},u={strides:s,pad:r,filterShape:t};return ENGINE.runKernel(Conv3DBackpropFilterV2,c,u)}const conv3DBackpropFilter=op({conv3DBackpropFilter_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const conv3DGradConfig={kernelName:Conv3D$1,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:i}=t;assert$2(tupleValuesAreOne(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[a,c]=e;return{x:()=>conv3DBackpropInput$1(a.shape,n,c,r,i),filter:()=>conv3DBackpropFilter(a,n,c.shape,r,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cosGradConfig={kernelName:Cos,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>mul(neg$2(sin$2(cast$3(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const coshGradConfig={kernelName:Cosh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>mul(sinh$2(cast$3(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cumsumGradConfig={kernelName:Cumsum,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r,exclusive:i,reverse:a}=t;return{x:()=>{const c=getAxesPermutation([r],s.rank);let u=cumsum$2(n,r,i,!a);return c!=null&&(u=transpose$3(u,c)),u}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const depthwiseConv2dNativeGradConfig={kernelName:DepthwiseConv2dNative,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:i,dimRoundingMode:a}=t,c=s==null?[1,1]:s;assert$2(tupleValuesAreOne(c),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${c}'`);const[u,l]=e;return assert$2(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),assert$2(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),assert$2(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),assert$2(eitherStridesOrDilationsAreOne(r,c),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${c}'.`),a!=null&&assert$2(isInt(i),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`),{x:()=>depthwiseConv2dNativeBackpropInput$2(u.shape,n,l,r,i,s,a),filter:()=>depthwiseConv2dNativeBackpropFilter$2(u,n,l.shape,r,i,s,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dilation2dGradConfig={kernelName:Dilation2D,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,i={x:s,filter:r,dy:n},a={x:s,filter:r,dy:n};return{x:()=>ENGINE.runKernel(Dilation2DBackpropInput,i,t),filter:()=>ENGINE.runKernel(Dilation2DBackpropFilter,a,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eluGradConfig$2={kernelName:Elu$1,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,s={dy:n,y:t};return{x:()=>ENGINE.runKernel(EluGrad,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const erfGradConfig={kernelName:Erf,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=mul(exp$2(neg$2(square$2(t))),2/Math.sqrt(Math.PI));return{x:()=>mul(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expGradConfig={kernelName:Exp,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>mul(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expandDimsGradConfig={kernelName:ExpandDims,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>reshape$2(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expm1GradConfig={kernelName:Expm1,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>mul(n,exp$2(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const floorGradConfig={kernelName:Floor,gradFunc:n=>({x:()=>zerosLike$2(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const floorDivGradConfig={kernelName:FloorDiv,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=assertAndGetBroadcastShape(t.shape,s.shape);return{a:()=>{const c=div$1(n,cast$3(s,"float32")),u=getReductionAxes(t.shape,r);return u.length>0?reshape$2(sum$2(c,u),t.shape):c},b:()=>{let c=mul(n,cast$3(t,"float32"));const u=getReductionAxes(s.shape,r);u.length>0&&(c=reshape$2(sum$2(c,u),s.shape));const l=square$2(s);return neg$2(div$1(c,cast$3(l,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fusedBatchNormGradConfig={kernelName:FusedBatchNorm,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:s}=t,[r,i,a,c]=e,u=c==null?scalar(1):c,l=getReductionAxes(i.shape,r.shape),h=[];if(i.rank===1){for(let w=0;w<r.shape.length-1;++w)h.push(r.shape[w]);h.push(1)}const d=sub$2(r,i),f=mul(n,u),y=rsqrt$2(add$1(a,scalar(s))),g=mul(mul(mul(y,y),y),scalar(-.5));return{x:()=>i.rank===1?reshape$2(mul(mul(n,tile$3(reshape$2(y,[1,1,1,i.shape[0]]),h)),u),r.shape):reshape$2(mul(mul(n,y),u),r.shape),mean:()=>{let w=mul(mul(y,scalar(-1)),f);return i.rank===1&&(w=sum$2(w,l)),reshape$2(w,i.shape)},variance:()=>{let w=mul(mul(g,d),f);return i.rank===1&&(w=sum$2(w,l)),reshape$2(w,i.shape)},scale:()=>{const w=mul(d,y);let C=mul(n,w);return i.rank===1&&(C=sum$2(C,l)),reshape$2(C,i.shape)},offset:()=>{let w=n;return i.rank===1&&(w=sum$2(w,l)),reshape$2(w,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gatherGradConfig={kernelName:GatherV2,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[s,r]=e,{axis:i}=t,a=parseAxisParam(i,s.shape)[0];return{x:()=>{const u=s.shape,l=r.size,h=u.slice(0,a),d=h.length,f=u.slice(i,u.length).slice(1),y=f.length,g=arrayRange(0,d),x=arrayRange(d+1,d+1+y),b=arrayConcat([h,[l],f]),v=reshape$2(n,b),S=reshape$2(r,[l]),T=arrayConcat([[d],g,x]),w=transpose$3(v,T);let C=unsortedSegmentSum$2(w,S,s.shape[a]);const N=getUndoAxesPermutation(T);return C=transpose$3(C,N),C},indices:()=>r}}};function arrayRange(n,e){const t=[];for(let s=n;s<e;++s)t.push(s);return t}function arrayConcat(n){const e=[];for(let t=0;t<n.length;++t)for(let s=0;s<n[t].length;++s)e.push(n[t][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const greaterEqualGradConfig={kernelName:GreaterEqual,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>zerosLike$2(t),b:()=>zerosLike$2(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const identityGradConfig={kernelName:Identity$1,gradFunc:n=>({x:()=>cast$3(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isFiniteGradConfig={kernelName:IsFinite,gradFunc:n=>({x:()=>zerosLike$2(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isInfGradConfig={kernelName:IsInf,gradFunc:n=>({x:()=>zerosLike$2(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isNanGradConfig={kernelName:IsNan,gradFunc:n=>({x:()=>zerosLike$2(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const leakyReluGradConfig={kernelName:LeakyRelu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{alpha:r}=t,i=greater$2(s,0);return{x:()=>where(i,n,mul(n,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const log1pGradConfig={kernelName:Log1p,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>div$1(n,add$1(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logGradConfig={kernelName:Log,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>div$1(n,cast$3(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logSoftmaxGradConfig={kernelName:LogSoftmax$1,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;return{logits:()=>{const i=!0,a=exp$2(s);return sub$2(n,mul(sum$2(n,r,i),a))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function localResponseNormalizationBackprop_(n,e,t,s=5,r=1,i=1,a=.5){const c={x:n,y:e,dy:t},u={depthRadius:s,bias:r,alpha:i,beta:a};return ENGINE.runKernel(LRNGrad,c,u)}const localResponseNormalizationBackprop=op({localResponseNormalizationBackprop_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lrnGradConfig={kernelName:LRN,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{depthRadius:i,bias:a,alpha:c,beta:u}=t;return{x:()=>localResponseNormalizationBackprop(s,r,n,i,a,c,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gradForMinAndMax(n,e,t,s){return e.rank<t.rank&&(e=reshape$2(e,expandShapeToKeepDim(e.shape,s))),n.rank<t.rank&&(n=reshape$2(n,expandShapeToKeepDim(n.shape,s))),{x:()=>mul(n,cast$3(equal$2(t,e),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxGradConfig={kernelName:Max,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{reductionIndices:r}=s,i=e[0],a=e[1],c=parseAxisParam(r,i.shape),u=gradForMinAndMax(n,a,i,c);return{x:()=>u.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maximumGradConfig={kernelName:Maximum$1,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>mul(n,cast$3(greaterEqual$2(t,s),"float32")),b:()=>mul(n,cast$3(less$2(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3dGrad_(n,e,t,s,r,i=[1,1,1],a,c){const u=convertToTensor(n,"dy","maxPool3dGrad"),l=convertToTensor(e,"input","maxPool3dGrad"),h=convertToTensor(t,"output","maxPool3dGrad");let d=u,f=l,y=h,g=!1;l.rank===4&&(g=!0,d=reshape$2(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),f=reshape$2(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),y=reshape$2(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),assert$2(d.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${d.rank}.`),assert$2(f.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${f.rank}.`),assert$2(y.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${y.rank}.`),assert$2(eitherStridesOrDilationsAreOne(r,i),()=>`Error in maxPool3dGrad: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`),c!=null&&assert$2(isInt(a),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${c} but got pad ${a}.`);const x={dy:d,input:f,output:y},b={filterSize:s,strides:r,dilations:i,pad:a,dimRoundingMode:c},v=ENGINE.runKernel(MaxPool3DGrad,x,b);return g?reshape$2(v,[v.shape[1],v.shape[2],v.shape[3],v.shape[4]]):v}const maxPool3dGrad=op({maxPool3dGrad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxPool3DGradConfig$1={kernelName:MaxPool3D,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:i,strides:a,dilations:c,pad:u,dimRoundingMode:l}=t,h=c==null?[1,1,1]:c;return{x:()=>maxPool3dGrad(n,s,r,i,a,h,u,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolGrad_(n,e,t,s,r,i,a){const c=convertToTensor(n,"dy","maxPoolGrad"),u=convertToTensor(e,"input","maxPoolGrad"),l=convertToTensor(t,"output","maxPoolGrad");assert$2(u.rank===c.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${c.rank})`),assert$2(c.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${c.rank}.`),assert$2(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),a!=null&&assert$2(isInt(i),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`);const h={dy:c,input:u,output:l},d={filterSize:s,strides:r,pad:i,dimRoundingMode:a};return ENGINE.runKernel(MaxPoolGrad,h,d)}const maxPoolGrad$2=op({maxPoolGrad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxPoolGradConfig$2={kernelName:MaxPool,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:i,strides:a,pad:c}=t;return{x:()=>maxPoolGrad$2(n,s,r,i,a,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const meanGradConfig={kernelName:Mean,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t,i=parseAxisParam(r,s.shape),c=computeOutAndReduceShapes(s.shape,i)[1],u=sizeFromShape(c);return{x:()=>{const h=s.shape.slice();i.forEach(y=>{h[y]=1});const d=reshape$2(n,h);return div$1(mul(d,ones(s.shape,"float32")),u)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const minGradConfig={kernelName:Min,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{axis:r}=s,[i,a]=e,c=parseAxisParam(r,i.shape),u=gradForMinAndMax(n,a,i,c);return{x:()=>u.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const minimumGradConfig={kernelName:Minimum$1,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>mul(n,cast$3(lessEqual$2(t,s),"float32")),b:()=>mul(n,cast$3(greater$2(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mirrorPadGradConfig={kernelName:MirrorPad,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,i=r.map(a=>a[0]);return{x:()=>slice$2(n,i,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const modGradConfig={kernelName:Mod,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=assertAndGetBroadcastShape(t.shape,s.shape);return{a:()=>{const c=getReductionAxes(t.shape,r);return c.length>0?reshape$2(sum$2(n,c),t.shape):n},b:()=>{const c=mul(n,neg$2(floor$2(div$1(t,s)))),u=getReductionAxes(s.shape,r);return u.length>0?reshape$2(sum$2(c,u),s.shape):c}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const multiplyGradConfig={kernelName:Multiply$2,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=assertAndGetBroadcastShape(t.shape,s.shape);return{a:()=>{const c=mul(n,cast$3(s,"float32")),u=getReductionAxes(t.shape,r);return u.length>0?reshape$2(sum$2(c,u),t.shape):c},b:()=>{const c=mul(n,cast$3(t,"float32")),u=getReductionAxes(s.shape,r);return u.length>0?reshape$2(sum$2(c,u),s.shape):c}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const negGradConfig={kernelName:Neg,gradFunc:n=>({x:()=>neg$2(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oneHotGradConfig={kernelName:OneHot,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>zeros$1(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const onesLikeGradConfig={kernelName:OnesLike,gradFunc:n=>({x:()=>zerosLike$2(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const packGradConfig={kernelName:Pack,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:s}=t;return unstack(n,s).map(i=>()=>i)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const padV2GradConfig={kernelName:PadV2,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,i=r.map(a=>a[0]);return{x:()=>slice$2(n,i,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const powGradConfig={kernelName:Pow$1,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,s,r]=e,i=t,a=s,c=assertAndGetBroadcastShape(i.shape,a.shape);return{a:()=>{const h=cast$3(a,"float32");let d=mul(n,mul(h,pow$2(i,sub$2(h,scalar(1)))));const f=getReductionAxes(i.shape,c);return f.length>0&&(d=sum$2(d,f)),reshape$2(d,i.shape)},b:()=>{const h=greater$2(i,0),d=where(h,log$5(i),zerosLike$2(i));let f=mul(n,mul(r,d));const y=getReductionAxes(a.shape,c);return y.length>0&&(f=sum$2(f,y)),reshape$2(f,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const preluGradConfig={kernelName:Prelu,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,s]=e,r=greater$2(t,0);return{x:()=>where(r,n,mul(n,s)),alpha:()=>{let i=where(r,zerosLike$2(n),mul(n,t));const a=getReductionAxes(s.shape,n.shape);return a.length>0&&(i=sum$2(i,a)),reshape$2(i,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const divGradConfig={kernelName:RealDiv,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=assertAndGetBroadcastShape(t.shape,s.shape);return{a:()=>{const c=div$1(n,cast$3(s,"float32")),u=getReductionAxes(t.shape,r);return u.length>0?reshape$2(sum$2(c,u),t.shape):c},b:()=>{let c=mul(n,cast$3(t,"float32"));const u=getReductionAxes(s.shape,r);u.length>0&&(c=reshape$2(sum$2(c,u),s.shape));const l=square$2(s);return neg$2(div$1(c,cast$3(l,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reciprocalGradConfig={kernelName:Reciprocal,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>div$1(n,neg$2(square$2(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const relu6GradConfig={kernelName:Relu6$1,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=mul(lessEqual$2(t,6),step$2(t));return{x:()=>mul(n,cast$3(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reluGradConfig={kernelName:Relu$1,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>mul(n,cast$3(step$2(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reshapeGradConfig={kernelName:Reshape$1,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>reshape$2(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const resizeBilinearGradConfig$2={kernelName:ResizeBilinear,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>ENGINE.runKernel(ResizeBilinearGrad,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const resizeNearestNeighborGradConfig$2={kernelName:ResizeNearestNeighbor,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>ENGINE.runKernel(ResizeNearestNeighborGrad,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reverseGradConfig={kernelName:Reverse,gradFunc:(n,e,t)=>{const{dims:s}=t,r=parseAxisParam(s,n.shape);return{x:()=>reverse$2(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const roundGradConfig={kernelName:Round,gradFunc:n=>({x:()=>zerosLike$2(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rsqrtGradConfig={kernelName:Rsqrt,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>neg$2(div$1(n,mul(pow$2(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const selectGradConfig={kernelName:Select,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>cast$3(zerosLike$2(t),"float32"),t:()=>mul(n,cast$3(t,n.dtype)),e:()=>mul(n,cast$3(logicalNot$2(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const seluGradConfig={kernelName:Selu$1,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=greater$2(t,scalar(0)),r=scalar(SELU_SCALEALPHA),i=scalar(SELU_SCALE),a=mul(n,i),c=mul(mul(n,r),exp$2(cast$3(t,"float32")));return where(s,a,c)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sigmoidGradConfig={kernelName:Sigmoid$1,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>mul(n,mul(t,sub$2(scalar(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const signGradConfig={kernelName:Sign,gradFunc:n=>({x:()=>zerosLike$2(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sinGradConfig={kernelName:Sin,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>mul(cos$2(cast$3(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sinhGradConfig={kernelName:Sinh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>mul(cosh$2(cast$3(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sliceGradConfig={kernelName:Slice,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{begin:r,size:i}=t,a=s.shape,[c,u]=parseSliceParams(s,r,i),l=[];for(let h=0;h<n.rank;h++)l.push([c[h],a[h]-c[h]-u[h]]);return{x:()=>pad(n,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const softmaxGradConfig={kernelName:Softmax$2,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{dim:r}=t,i=!0,a=mul(n,s);return{logits:()=>sub$2(a,mul(sum$2(a,[r],i),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const softplusGradConfig={kernelName:Softplus$1,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>mul(n,sigmoid$2(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const spaceToBatchNDGradConfig={kernelName:SpaceToBatchND,gradFunc:(n,e,t)=>{const{blockShape:s,paddings:r}=t;return{x:()=>batchToSpaceND$2(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const splitVGradConfig={kernelName:SplitV,gradFunc:(n,e,t)=>{const{axis:s}=t;return{x:()=>concat$2(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sqrtGradConfig={kernelName:Sqrt,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>div$1(n,mul(sqrt$2(cast$3(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const squareGradConfig={kernelName:Square,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>mul(n,mul(cast$3(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const squaredDifferenceGradConfig={kernelName:SquaredDifference,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=scalar(2);return{a:()=>mul(n,mul(r,sub$2(t,s))),b:()=>mul(n,mul(r,sub$2(s,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const stepGradConfig={kernelName:Step,gradFunc:n=>({x:()=>zerosLike$2(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const subGradConfig={kernelName:Sub,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=assertAndGetBroadcastShape(t.shape,s.shape);return{a:()=>{let c=n;const u=getReductionAxes(t.shape,r);return u.length>0&&(c=sum$2(c,u)),reshape$2(c,t.shape)},b:()=>{let c=n;const u=getReductionAxes(s.shape,r);return u.length>0&&(c=sum$2(c,u)),reshape$2(neg$2(c),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sumGradConfig={kernelName:Sum,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,r=s.shape.slice(),{axis:i}=t;parseAxisParam(i,s.shape).forEach(l=>{r[l]=1});const c=reshape$2(n,r),u=mul(c,ones(s.shape,"float32"));return{x:()=>u}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tanGradConfig={kernelName:Tan,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>div$1(n,square$2(cos$2(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tanhGradConfig={kernelName:Tanh$1,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>mul(sub$2(scalar(1),square$2(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tileGradConfig={kernelName:Tile,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{reps:r}=t;return{x:()=>{let a=zerosLike$2(s);if(s.rank===1)for(let c=0;c<r[0];++c)a=add$1(a,slice$2(n,[c*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let c=0;c<r[0];++c)for(let u=0;u<r[1];++u)a=add$1(a,slice$2(n,[c*s.shape[0],u*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let c=0;c<r[0];++c)for(let u=0;u<r[1];++u)for(let l=0;l<r[2];++l)a=add$1(a,slice$2(n,[c*s.shape[0],u*s.shape[1],l*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let c=0;c<r[0];++c)for(let u=0;u<r[1];++u)for(let l=0;l<r[2];++l)for(let h=0;h<r[3];++h)a=add$1(a,slice$2(n,[c*s.shape[0],u*s.shape[1],l*s.shape[2],h*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const transposeGradConfig={kernelName:Transpose,gradFunc:(n,e,t)=>{const s=t,{perm:r}=s,i=getUndoAxesPermutation(r);return{x:()=>transpose$3(n,i)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const unpackGradConfig={kernelName:Unpack,gradFunc:(n,e,t)=>{const s=t,{axis:r}=s;return{value:()=>stack(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const unsortedSegmentSumGradConfig={kernelName:UnsortedSegmentSum,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>gatherDropNegatives(n,t)}}};function gatherDropNegatives(n,e){const t=maximum$2(e,zerosLike$2(e)),s=gather$1(n,t);let r=greaterEqual$2(e,scalar(0,"int32"));const i=s.rank-r.rank;for(let c=0;c<i;++c)r=expandDims$3(r,c+1);r=logicalAnd$2(r,ones(s.shape,"bool"));const a=zerosLike$2(s);return where(r,s,a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zerosLikeGradConfig={kernelName:ZerosLike,gradFunc:n=>({x:()=>zerosLike$2(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gradConfigs=[absGradConfig,acosGradConfig,acoshGradConfig,addGradConfig,addNGradConfig,argMaxGradConfig,argMinGradConfig,asinGradConfig,asinhGradConfig,atan2GradConfig,atanGradConfig,atanhGradConfig,avgPool3DGradConfig$1,avgPoolGradConfig$2,batchMatMulGradConfig,batchToSpaceNDGradConfig,broadcastToGradConfig,castGradConfig,ceilGradConfig,clipByValueGradConfig,complexAbsGradConfig,concatGradConfig,conv2DBackpropInputGradConfig,conv2DGradConfig,conv3DGradConfig,cosGradConfig,coshGradConfig,cumsumGradConfig,depthwiseConv2dNativeGradConfig,dilation2dGradConfig,divGradConfig,eluGradConfig$2,erfGradConfig,expGradConfig,expandDimsGradConfig,expm1GradConfig,floorDivGradConfig,floorGradConfig,fusedBatchNormGradConfig,gatherGradConfig,greaterEqualGradConfig,identityGradConfig,isFiniteGradConfig,isInfGradConfig,isNanGradConfig,leakyReluGradConfig,log1pGradConfig,logGradConfig,logSoftmaxGradConfig,lrnGradConfig,maxGradConfig,maxGradConfig,maximumGradConfig,maxPool3DGradConfig$1,maxPoolGradConfig$2,meanGradConfig,minGradConfig,minimumGradConfig,mirrorPadGradConfig,modGradConfig,multiplyGradConfig,negGradConfig,oneHotGradConfig,onesLikeGradConfig,packGradConfig,padV2GradConfig,padV2GradConfig,powGradConfig,preluGradConfig,reciprocalGradConfig,relu6GradConfig,reluGradConfig,reshapeGradConfig,resizeBilinearGradConfig$2,resizeNearestNeighborGradConfig$2,reverseGradConfig,roundGradConfig,rsqrtGradConfig,selectGradConfig,seluGradConfig,sigmoidGradConfig,signGradConfig,sinGradConfig,sinhGradConfig,sliceGradConfig,softmaxGradConfig,softplusGradConfig,spaceToBatchNDGradConfig,spaceToBatchNDGradConfig,splitVGradConfig,splitVGradConfig,sqrtGradConfig,squaredDifferenceGradConfig,squareGradConfig,stepGradConfig,subGradConfig,sumGradConfig,tanGradConfig,tanhGradConfig,tileGradConfig,transposeGradConfig,unpackGradConfig,unsortedSegmentSumGradConfig,zerosLikeGradConfig];for(const n of gradConfigs)registerGradient(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.abs=function(){return this.throwIfDisposed(),abs$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.acos=function(){return this.throwIfDisposed(),acos$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.acosh=function(){return this.throwIfDisposed(),acosh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.addStrict=function(n){return this.throwIfDisposed(),addStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.add=function(n){return this.throwIfDisposed(),add$1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.all=function(n,e){return this.throwIfDisposed(),all$2(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.any=function(n,e){return this.throwIfDisposed(),any$2(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.argMax=function(n){return this.throwIfDisposed(),argMax$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.argMin=function(n){return this.throwIfDisposed(),argMin$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.asScalar=function(){return this.throwIfDisposed(),assert$2(this.size===1,()=>"The array must have only 1 element."),reshape$2(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.asType=function(n){return this.throwIfDisposed(),cast$3(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.as1D=function(){return this.throwIfDisposed(),reshape$2(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.as2D=function(n,e){return this.throwIfDisposed(),reshape$2(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.as3D=function(n,e,t){return this.throwIfDisposed(),reshape$2(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.as4D=function(n,e,t,s){return this.throwIfDisposed(),reshape$2(this,[n,e,t,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.as5D=function(n,e,t,s,r){return this.throwIfDisposed(),reshape$2(this,[n,e,t,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.asin=function(){return this.throwIfDisposed(),asin$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.asinh=function(){return this.throwIfDisposed(),asinh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.atan=function(){return this.throwIfDisposed(),atan$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.atan2=function(n){return this.throwIfDisposed(),atan2$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.atanh=function(){return this.throwIfDisposed(),atanh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.avgPool=function(n,e,t,s){return this.throwIfDisposed(),avgPool$2(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),batchToSpaceND$2(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.batchNorm=function(n,e,t,s,r){return this.throwIfDisposed(),batchNorm$2(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.broadcastTo=function(n){return this.throwIfDisposed(),broadcastTo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.cast=function(n){return this.throwIfDisposed(),cast$3(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.ceil=function(){return this.throwIfDisposed(),ceil$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.clipByValue=function(n,e){return this.throwIfDisposed(),clipByValue$1(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof Tensor&&(n=[n]),concat$2([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.conv1d=function(n,e,t,s,r,i){return this.throwIfDisposed(),conv1d(this,n,e,t,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.conv2dTranspose=function(n,e,t,s,r){return this.throwIfDisposed(),conv2dTranspose(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.conv2d=function(n,e,t,s,r,i){return this.throwIfDisposed(),conv2d$2(this,n,e,t,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.cos=function(){return this.throwIfDisposed(),cos$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.cosh=function(){return this.throwIfDisposed(),cosh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),cumsum$2(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),depthToSpace$2(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.depthwiseConv2D=function(n,e,t,s,r,i){return deprecationWarn("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),depthwiseConv2d$1(this,n,e,t,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.depthwiseConv2d=function(n,e,t,s,r,i){return this.throwIfDisposed(),depthwiseConv2d$1(this,n,e,t,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.dilation2d=function(n,e,t,s,r){return this.throwIfDisposed(),dilation2d(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.divNoNan=function(n){return this.throwIfDisposed(),divNoNan(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.divStrict=function(n){return this.throwIfDisposed(),divStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.div=function(n){return this.throwIfDisposed(),div$1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.dot=function(n){return this.throwIfDisposed(),dot$1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.elu=function(){return this.throwIfDisposed(),elu$3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.equalStrict=function(n){return this.throwIfDisposed(),equalStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.equal=function(n){return this.throwIfDisposed(),equal$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.erf=function(){return this.throwIfDisposed(),erf$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.exp=function(){return this.throwIfDisposed(),exp$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.expandDims=function(n){return this.throwIfDisposed(),expandDims$3(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.expm1=function(){return this.throwIfDisposed(),expm1$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.fft=function(){return this.throwIfDisposed(),fft$3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.flatten=function(){return this.throwIfDisposed(),reshape$2(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.floor=function(){return this.throwIfDisposed(),floor$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.floorDiv=function(n){return this.throwIfDisposed(),floorDiv$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.gather=function(n,e){return this.throwIfDisposed(),gather$1(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.greaterEqualStrict=function(n){return this.throwIfDisposed(),greaterEqualStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.greaterEqual=function(n){return this.throwIfDisposed(),greaterEqual$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.greaterStrict=function(n){return this.throwIfDisposed(),greaterStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.greater=function(n){return this.throwIfDisposed(),greater$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.ifft=function(){return this.throwIfDisposed(),ifft$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.irfft=function(){return this.throwIfDisposed(),irfft(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.isFinite=function(){return this.throwIfDisposed(),isFinite$3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.isInf=function(){return this.throwIfDisposed(),isInf$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.isNaN=function(){return this.throwIfDisposed(),isNaN$3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.leakyRelu=function(n){return this.throwIfDisposed(),leakyRelu$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.lessEqualStrict=function(n){return this.throwIfDisposed(),lessEqualStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.lessEqual=function(n){return this.throwIfDisposed(),lessEqual$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.lessStrict=function(n){return this.throwIfDisposed(),lessStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.less=function(n){return this.throwIfDisposed(),less$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.localResponseNormalization=function(n,e,t,s){return this.throwIfDisposed(),localResponseNormalization(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.logSigmoid=function(){return this.throwIfDisposed(),logSigmoid(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.logSoftmax=function(n){return this.throwIfDisposed(),logSoftmax(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.logSumExp=function(n,e){return this.throwIfDisposed(),logSumExp(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.log=function(){return this.throwIfDisposed(),log$5(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.log1p=function(){return this.throwIfDisposed(),log1p$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.logicalAnd=function(n){return this.throwIfDisposed(),logicalAnd$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.logicalNot=function(){return this.throwIfDisposed(),logicalNot$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.logicalOr=function(n){return this.throwIfDisposed(),logicalOr$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.logicalXor=function(n){return this.throwIfDisposed(),logicalXor(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.matMul=function(n,e,t){return this.throwIfDisposed(),matMul$1(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.maxPool=function(n,e,t,s){return this.throwIfDisposed(),maxPool$2(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.max=function(n,e){return this.throwIfDisposed(),max$3(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.maximumStrict=function(n){return this.throwIfDisposed(),maximumStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.maximum=function(n){return this.throwIfDisposed(),maximum$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.mean=function(n,e){return this.throwIfDisposed(),mean$1(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.min=function(n,e){return this.throwIfDisposed(),min$3(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.minimumStrict=function(n){return this.throwIfDisposed(),minimumStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.minimum=function(n){return this.throwIfDisposed(),minimum$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),mirrorPad$1(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.modStrict=function(n){return this.throwIfDisposed(),modStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.mod=function(n){return this.throwIfDisposed(),mod$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.mulStrict=function(n){return this.throwIfDisposed(),mulStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.mul=function(n){return this.throwIfDisposed(),mul(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.neg=function(){return this.throwIfDisposed(),neg$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.norm=function(n,e,t){return this.throwIfDisposed(),norm(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.notEqualStrict=function(n){return this.throwIfDisposed(),notEqualStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.notEqual=function(n){return this.throwIfDisposed(),notEqual$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),oneHot$2(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.onesLike=function(){return this.throwIfDisposed(),onesLike$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.pad=function(n,e){return this.throwIfDisposed(),pad(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.pool=function(n,e,t,s,r){return this.throwIfDisposed(),pool$2(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.powStrict=function(n){return this.throwIfDisposed(),powStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.pow=function(n){return this.throwIfDisposed(),pow$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.prelu=function(n){return this.throwIfDisposed(),prelu$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.prod=function(n,e){return this.throwIfDisposed(),prod$2(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.reciprocal=function(){return this.throwIfDisposed(),reciprocal$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.relu=function(){return this.throwIfDisposed(),relu$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.relu6=function(){return this.throwIfDisposed(),relu6$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.reshapeAs=function(n){return this.throwIfDisposed(),reshape$2(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.reshape=function(n){return this.throwIfDisposed(),reshape$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),resizeBilinear$2(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),resizeNearestNeighbor$2(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.reverse=function(n){return this.throwIfDisposed(),reverse$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.rfft=function(){return this.throwIfDisposed(),rfft(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.round=function(){return this.throwIfDisposed(),round$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.rsqrt=function(){return this.throwIfDisposed(),rsqrt$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.selu=function(){return this.throwIfDisposed(),selu$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.separableConv2d=function(n,e,t,s,r,i){return this.throwIfDisposed(),separableConv2d(this,n,e,t,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.sigmoid=function(){return this.throwIfDisposed(),sigmoid$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.sign=function(){return this.throwIfDisposed(),sign$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.sin=function(){return this.throwIfDisposed(),sin$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.sinh=function(){return this.throwIfDisposed(),sinh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.slice=function(n,e){return this.throwIfDisposed(),slice$2(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.softmax=function(n){return this.throwIfDisposed(),softmax$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.softplus=function(){return this.throwIfDisposed(),softplus$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),spaceToBatchND$2(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.split=function(n,e){return this.throwIfDisposed(),split(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.sqrt=function(){return this.throwIfDisposed(),sqrt$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.square=function(){return this.throwIfDisposed(),square$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.squaredDifference=function(n){return this.throwIfDisposed(),squaredDifference$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.squaredDifferenceStrict=function(n){return this.throwIfDisposed(),squaredDifferenceStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.squeeze=function(n){return this.throwIfDisposed(),squeeze(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof Tensor?[this,n]:[this,...n];return stack(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.step=function(n){return this.throwIfDisposed(),step$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.stridedSlice=function(n,e,t,s,r,i,a,c){return this.throwIfDisposed(),stridedSlice$2(this,n,e,t,s,r,i,a,c)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.subStrict=function(n){return this.throwIfDisposed(),subStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.sub=function(n){return this.throwIfDisposed(),sub$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.sum=function(n,e){return this.throwIfDisposed(),sum$2(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.tan=function(){return this.throwIfDisposed(),tan$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.tanh=function(){return this.throwIfDisposed(),tanh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.tile=function(n){return this.throwIfDisposed(),tile$3(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.toBool=function(){return this.throwIfDisposed(),cast$3(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.toFloat=function(){return this.throwIfDisposed(),cast$3(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.toInt=function(){return this.throwIfDisposed(),cast$3(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.topk=function(n,e){return this.throwIfDisposed(),topk(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.transpose=function(n){return this.throwIfDisposed(),transpose$3(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.unique=function(n){return this.throwIfDisposed(),unique$4(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),unsortedSegmentSum$2(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.unstack=function(n){return this.throwIfDisposed(),unstack(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.where=function(n,e){return this.throwIfDisposed(),where(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.zerosLike=function(){return this.throwIfDisposed(),zerosLike$2(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let _epsilon;function epsilon$1(){return _epsilon==null&&(_epsilon=backend().epsilon()),_epsilon}function imageDataFormat(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class AttributeError extends Error{constructor(e){super(e);Object.setPrototypeOf(this,AttributeError.prototype)}}class RuntimeError extends Error{constructor(e){super(e);Object.setPrototypeOf(this,RuntimeError.prototype)}}class ValueError extends Error{constructor(e){super(e);Object.setPrototypeOf(this,ValueError.prototype)}}class NotImplementedError extends Error{constructor(e){super(e);Object.setPrototypeOf(this,NotImplementedError.prototype)}}class AssertionError extends Error{constructor(e){super(e);Object.setPrototypeOf(this,AssertionError.prototype)}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pyListRepeat(n,e){if(Array.isArray(n)){let t=[];for(let s=0;s<e;s++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function assert$1(n,e){if(!n)throw new AssertionError(e)}function count(n,e){let t=0;for(const s of n)s===e&&t++;return t}function singletonOrArray(n){return n.length===1?n[0]:n}function toList(n){return Array.isArray(n)?n:[n]}function toSnakeCase(n){const t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function toCamelCase(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let _GLOBAL_CUSTOM_OBJECTS={};function serializeKerasObject(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function convertNDArrayScalarsInConfig(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>convertNDArrayScalarsInConfig(e));else{const e=Object.keys(n);for(const t of e){const s=n[t];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[t]=s.value:convertNDArrayScalarsInConfig(s))}}}function deserializeKerasObject(n,e={},t={},s="object",r=!1){if(typeof n=="string"){const i=n;let a;if(i in t)a=t[i];else if(i in _GLOBAL_CUSTOM_OBJECTS)a=_GLOBAL_CUSTOM_OBJECTS[i];else if(a=e[i],a==null)throw new ValueError(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{const i=n;if(i.className==null||i.config==null)throw new ValueError(`${s}: Improper config format: ${JSON.stringify(i)}.
'className' and 'config' must set.`);const a=i.className;let c,u;if(a in t?[c,u]=t[a]:a in _GLOBAL_CUSTOM_OBJECTS?[c,u]=_GLOBAL_CUSTOM_OBJECTS.className:a in e&&([c,u]=e[a]),c==null)throw new ValueError(`Unknown ${s}: ${a}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){const l={};for(const y of Object.keys(_GLOBAL_CUSTOM_OBJECTS))l[y]=_GLOBAL_CUSTOM_OBJECTS[y];for(const y of Object.keys(t))l[y]=t[y];const h=i.config;h.customObjects=l;const d=Object.assign({},_GLOBAL_CUSTOM_OBJECTS);for(const y of Object.keys(t))_GLOBAL_CUSTOM_OBJECTS[y]=t[y];convertNDArrayScalarsInConfig(i.config);const f=u(c,i.config,t,r);return _GLOBAL_CUSTOM_OBJECTS=Object.assign({},d),f}else{const l=Object.assign({},_GLOBAL_CUSTOM_OBJECTS);for(const d of Object.keys(t))_GLOBAL_CUSTOM_OBJECTS[d]=t[d];const h=new c(i.config);return _GLOBAL_CUSTOM_OBJECTS=Object.assign({},l),h}}}function numberCompare(n,e){return n<e?-1:n>e?1:0}function reverseNumberCompare(n,e){return-1*numberCompare(n,e)}function unique$3(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function isObjectEmpty(n){if(n==null)throw new ValueError(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function checkStringTypeUnionValue(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new ValueError(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function checkArrayTypeAndLength(n,e,t=0,s=1/0){return assert$1(t>=0),assert$1(s>=t),Array.isArray(n)&&n.length>=t&&n.length<=s&&n.every(r=>typeof r===e)}function assertPositiveInteger(n,e){Array.isArray(n)?(assert$2(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,s)=>assertPositiveInteger(t,`element ${s+1} of ${e}`))):assert$2(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${formatAsFriendlyString(n)}.`)}function formatAsFriendlyString(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>formatAsFriendlyString(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function debounce(n,e){let t=now$1(),s;return(...i)=>{const a=now$1();return a-t<e||(t=a,s=n(...i)),s}}function mapActivationToFusedKernel(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function calcL2Norms(n,e){return tidy(()=>sqrt$2(sum$2(mul(n,n),e,!0)))}class Constraint extends Serializable{getConfig(){return{}}}class MaxNorm extends Constraint{constructor(e){super();this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return tidy(()=>{const t=calcL2Norms(e,this.axis),s=clipByValue$1(t,0,this.maxValue);return mul(e,div$1(s,add$1(epsilon$1(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}MaxNorm.className="MaxNorm";registerClass(MaxNorm);class UnitNorm extends Constraint{constructor(e){super();this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return tidy(()=>div$1(e,add$1(epsilon$1(),calcL2Norms(e,this.axis))))}getConfig(){return{axis:this.axis}}}UnitNorm.className="UnitNorm";registerClass(UnitNorm);class NonNeg extends Constraint{apply(e){return relu$2(e)}}NonNeg.className="NonNeg";registerClass(NonNeg);class MinMaxNorm extends Constraint{constructor(e){super();this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return tidy(()=>{const t=calcL2Norms(e,this.axis),s=add$1(mul(this.rate,clipByValue$1(t,this.minValue,this.maxValue)),mul(1-this.rate,t));return mul(e,div$1(s,add$1(epsilon$1(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}MinMaxNorm.className="MinMaxNorm";registerClass(MinMaxNorm);const CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function serializeConstraint(n){return serializeKerasObject(n)}function deserializeConstraint(n,e={}){return deserializeKerasObject(n,SerializationMap.getMap().classNameMap,e,"constraint")}function getConstraint(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP?CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP[n]:n,config:{}};return deserializeConstraint(t)}else return n instanceof Constraint?n:deserializeConstraint(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const VALID_DATA_FORMAT_VALUES=["channelsFirst","channelsLast"],VALID_INTERPOLATION_FORMAT_VALUES=["nearest","bilinear"],VALID_PADDING_MODE_VALUES=["valid","same","causal"],VALID_POOL_MODE_VALUES=["max","avg"],VALID_BIDIRECTIONAL_MERGE_MODES=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const nameMap=new Map;function checkDataFormat(n){checkStringTypeUnionValue(VALID_DATA_FORMAT_VALUES,"DataFormat",n)}function checkInterpolationFormat(n){checkStringTypeUnionValue(VALID_INTERPOLATION_FORMAT_VALUES,"InterpolationFormat",n)}function checkPaddingMode(n){checkStringTypeUnionValue(VALID_PADDING_MODE_VALUES,"PaddingMode",n)}function checkPoolMode(n){checkStringTypeUnionValue(VALID_POOL_MODE_VALUES,"PoolMode",n)}const _nameScopeStack=[],_nameScopeDivider="/";function nameScope(n,e){_nameScopeStack.push(n);try{const t=e();return _nameScopeStack.pop(),t}catch(t){throw _nameScopeStack.pop(),t}}function currentNameScopePrefix(){return _nameScopeStack.length===0?"":_nameScopeStack.join(_nameScopeDivider)+_nameScopeDivider}function getScopedTensorName(n){if(!isValidTensorName(n))throw new Error("Not a valid tensor name: '"+n+"'");return currentNameScopePrefix()+n}function getUniqueTensorName(n){if(!isValidTensorName(n))throw new Error("Not a valid tensor name: '"+n+"'");nameMap.has(n)||nameMap.set(n,0);const e=nameMap.get(n);if(nameMap.set(n,nameMap.get(n)+1),e>0){const t=`${n}_${e}`;return nameMap.set(t,1),t}else return n}const tensorNameRegex=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function isValidTensorName(n){return!!n.match(tensorNameRegex)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function isInteger(n){return n===parseInt(n.toString(),10)}function arrayProd(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let s=1;for(let r=e;r<t;++r)s*=n[r];return s}function toArray1D(n){return n=Array.isArray(n)?new Float32Array(n):n,tensor1d(n)}function min$2(n){return min$3(toArray1D(n)).dataSync()[0]}function max$2(n){return max$3(toArray1D(n)).dataSync()[0]}function range$3(n,e){if(e<n)throw new ValueError(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let s=n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function cast$2(n,e){return n.asType(e)}function expandDims$2(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),n.reshape(t)}function repeat(n,e){return tidy(()=>{if(n.shape.length!==2)throw new ValueError(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=expandDims$2(n,1);return tile$2(t,[1,e,1])})}function flatten$1(n){const e=[arrayProd(n.shape)];return n.reshape(e)}function batchFlatten(n){if(n.rank<=1)throw new ValueError(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],arrayProd(n.shape,1)];return n.reshape(e)}function sliceAlongFirstAxis(n,e,t){return tidy(()=>{switch(n.rank){case 1:return slice1d(n,e,t);case 2:return slice2d(n,[e,0],[t,n.shape[1]]);case 3:return slice3d(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return slice4d(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return slice$2(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return slice$2(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new ValueError(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function sliceAlongLastAxis(n,e,t){return tidy(()=>{switch(n.rank){case 1:return slice1d(n,e,t);case 2:return slice2d(n,[0,e],[n.shape[0],t]);case 3:return slice3d(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return slice4d(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new ValueError(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function sliceAlongAxis(n,e,t,s){return tidy(()=>{switch(n.rank){case 1:return slice1d(n,e,t);case 2:switch(s){case 1:return sliceAlongFirstAxis(n,e,t);case 2:return sliceAlongLastAxis(n,e,t);default:throw new ValueError(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return sliceAlongFirstAxis(n,e,t);case 2:return slice3d(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return sliceAlongLastAxis(n,e,t);default:throw new ValueError(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return sliceAlongFirstAxis(n,e,t);case 2:return slice4d(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return slice4d(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return sliceAlongLastAxis(n,e,t);default:throw new ValueError(`The axis is not within the rank of the tensor ${s}`)}default:throw new ValueError(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function concatenate(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),concat$2(n,e)}function concatAlongFirstAxis(n,e){switch(n.rank){case 1:return concat1d([n,e]);case 2:return concat2d([n,e],0);case 3:return concat3d([n,e],0);case 4:return concat4d([n,e],0);default:throw new ValueError(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function tile$2(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new ValueError(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return tile$3(n,e)}function randomNormal(n,e=0,t=1,s,r){return randomNormal$1(n,e,t,s,r)}function dot(n,e,t,s){if(n.rank<2||e.rank<2)throw new NotImplementedError(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const r=n.shape.slice(-1)[0],i=e.shape.slice(-2)[0];if(r!==i)throw new NotImplementedError(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return matMul({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?reshapeBias(n.rank,s,imageDataFormat()):null,activation:t});{const r=n.shape.slice(),i=r.pop();n=n.reshape([-1,i]);const a=e.shape.slice(),c=a.pop(),u=a.pop(),l=[...a,c],h=Array.from({length:e.rank},(g,x)=>x===0?e.rank-2:x<=e.rank-2?x-1:x);e=e.transpose(h).reshape([u,-1]);const d=[...r,...l];return matMul({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?reshapeBias(n.rank,s,imageDataFormat()):null,activation:t}).reshape(d)}}function gather(n,e,t){return tidy(()=>(Array.isArray(e)?e=tensor1d(e,"int32"):e=e.toInt(),gather$1(n,e,t)))}function square$1(n){return mul(n,n)}function reshapeBias(n,e,t){const s=e.shape;if(e.rank!==1&&e.rank!==n)throw new ValueError(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return s.length===1?e.reshape([1,s[0],1,1,1]):e.reshape([1,s[3],s[0],s[1],s[2]]);if(t==="channelsLast")return s.length===1?e.reshape([1,1,1,1,s[0]]):e.reshape([1].concat(s))}else if(n===4){if(t==="channelsFirst")return s.length===1?e.reshape([1,s[0],1,1]):e.reshape([1,s[2],s[0],s[1]]);if(t==="channelsLast")return s.length===1?e.reshape([1,1,1,s[0]]):e.reshape([1].concat(s))}else if(n===3){if(t==="channelsFirst")return s.length===1?e.reshape([1,s[0],1]):e.reshape([1,s[1],s[0]]);if(t==="channelsLast")return s.length===1?e.reshape([1,1,s[0]]):e.reshape([1].concat(s))}else if(n<3)return e;throw new ValueError(`Unsupported input rank by biasAdd: ${e.rank}`)}function biasAdd(n,e,t){return tidy(()=>(t==null&&(t=imageDataFormat()),checkDataFormat(t),n.add(reshapeBias(n.rank,e,t))))}function elu$2(n,e=1){if(e!==1)throw new NotImplementedError(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return elu$3(n)}function softsign(n){return tidy(()=>div$1(n,abs$2(n).add(1)))}function dropout(n,e,t,s){return tidy(()=>dropout$1(n,e,t,s))}function hardSigmoid(n){return tidy(()=>{const e=add$1(.5,mul(.2,n));return clipByValue$1(e,0,1)})}function inTrainPhase(n,e,t=!1){return t?n():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const VALID_FAN_MODE_VALUES=["fanIn","fanOut","fanAvg"],VALID_DISTRIBUTION_VALUES=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function checkFanMode(n){checkStringTypeUnionValue(VALID_FAN_MODE_VALUES,"FanMode",n)}function checkDistribution(n){checkStringTypeUnionValue(VALID_DISTRIBUTION_VALUES,"Distribution",n)}class Initializer extends Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Zeros extends Initializer{apply(e,t){return zeros$1(e,t)}}Zeros.className="Zeros";registerClass(Zeros);class Ones extends Initializer{apply(e,t){return ones(e,t)}}Ones.className="Ones";registerClass(Ones);class Constant extends Initializer{constructor(e){super();if(typeof e!="object")throw new ValueError(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new ValueError(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return tidy(()=>mul(scalar(this.value),ones(e,t)))}getConfig(){return{value:this.value}}}Constant.className="Constant";registerClass(Constant);class RandomUniform extends Initializer{constructor(e){super();this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return randomUniform(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}RandomUniform.className="RandomUniform";registerClass(RandomUniform);class RandomNormal extends Initializer{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new NotImplementedError(`randomNormal does not support dType ${t}.`);return randomNormal(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}RandomNormal.className="RandomNormal";registerClass(RandomNormal);class TruncatedNormal extends Initializer{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new NotImplementedError(`truncatedNormal does not support dType ${t}.`);return truncatedNormal(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}TruncatedNormal.className="TruncatedNormal";registerClass(TruncatedNormal);class Identity extends Initializer{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return tidy(()=>{if(e.length!==2||e[0]!==e[1])throw new ValueError("Identity matrix initializer can only be used for 2D square matrices.");return mul(this.gain,eye(e[0]))})}getConfig(){return{gain:this.gain}}}Identity.className="Identity";registerClass(Identity);function computeFans(n,e="channelsLast"){let t,s;if(checkDataFormat(e),n.length===2)t=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const r=arrayProd(n,2);t=n[1]*r,s=n[0]*r}else if(e==="channelsLast"){const r=arrayProd(n,0,n.length-2);t=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=arrayProd(n);t=Math.sqrt(r),s=Math.sqrt(r)}return[t,s]}class VarianceScaling extends Initializer{constructor(e){super();if(e.scale<0)throw new ValueError(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,checkFanMode(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,checkDistribution(this.distribution),this.seed=e.seed}apply(e,t){const s=computeFans(e),r=s[0],i=s[1];let a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,r):this.mode==="fanOut"?a/=Math.max(1,i):a/=Math.max(1,(r+i)/2),this.distribution==="normal"){const c=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new NotImplementedError(`${this.getClassName()} does not support dType ${t}.`);return truncatedNormal(e,0,c,t,this.seed)}else{const c=Math.sqrt(3*a);return randomUniform(e,-c,c,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}VarianceScaling.className="VarianceScaling";registerClass(VarianceScaling);class GlorotUniform extends VarianceScaling{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return VarianceScaling.className}}GlorotUniform.className="GlorotUniform";registerClass(GlorotUniform);class GlorotNormal extends VarianceScaling{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return VarianceScaling.className}}GlorotNormal.className="GlorotNormal";registerClass(GlorotNormal);class HeNormal extends VarianceScaling{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return VarianceScaling.className}}HeNormal.className="HeNormal";registerClass(HeNormal);class HeUniform extends VarianceScaling{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return VarianceScaling.className}}HeUniform.className="HeUniform";registerClass(HeUniform);class LeCunNormal extends VarianceScaling{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return VarianceScaling.className}}LeCunNormal.className="LeCunNormal";registerClass(LeCunNormal);class LeCunUniform extends VarianceScaling{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return VarianceScaling.className}}LeCunUniform.className="LeCunNormal";registerClass(LeCunUniform);class Orthogonal extends Initializer{constructor(e){super();if(this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new NotImplementedError("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return tidy(()=>{if(e.length<2)throw new NotImplementedError("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const s=e[0]>e[1]?[e[1],e[0]]:e,r=randomNormal(s,0,1,"float32");let i=linalg.gramSchmidt(r);return e[0]>e[1]&&(i=i.transpose()),mul(this.gain,i)})}getConfig(){return{gain:this.gain,seed:this.seed}}}Orthogonal.className="Orthogonal";registerClass(Orthogonal);const INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function deserializeInitializer(n,e={}){return deserializeKerasObject(n,SerializationMap.getMap().classNameMap,e,"initializer")}function serializeInitializer(n){return serializeKerasObject(n)}function getInitializer(n){if(typeof n=="string"){const e=n in INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP?INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[n]:n;if(e==="GlorotNormal")return new GlorotNormal;if(e==="GlorotUniform")return new GlorotUniform;if(e==="HeNormal")return new HeNormal;if(e==="HeUniform")return new HeUniform;if(e==="LeCunNormal")return new LeCunNormal;if(e==="LeCunUniform")return new LeCunUniform;{const t={};return t.className=e,t.config={},deserializeInitializer(t)}}else return n instanceof Initializer?n:deserializeInitializer(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let _nextUniqueTensorId=0;function getNextUniqueTensorId(){return _nextUniqueTensorId++}const _uidPrefixes={};function getUid(n=""){return n in _uidPrefixes||(_uidPrefixes[n]=0),_uidPrefixes[n]+=1,n+_uidPrefixes[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function isArrayOfShapes(n){return Array.isArray(n)&&Array.isArray(n[0])}function normalizeShapeList(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function getExactlyOneTensor(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new ValueError(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function getExactlyOneShape(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new ValueError(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function countParamsInWeights(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((s,r)=>s*r);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const DEFAULT_VARIABLE_NAME_PREFIX="Variable";class LayerVariable{constructor(e,t="float32",s=DEFAULT_VARIABLE_NAME_PREFIX,r=!0,i=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=getNextUniqueTensorId(),s=s==null?DEFAULT_VARIABLE_NAME_PREFIX:s,this.originalName=getScopedTensorName(s),this.name=getUniqueTensorName(this.originalName),this.trainable_=r,this.constraint=i,this.val=variable(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),checkShapesMatch(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function checkShapesMatch(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function batchGetValue(n){return n.map(e=>e.read())}function batchSetValue(n){n.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class InputSpec{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class SymbolicTensor{constructor(e,t,s,r,i,a,c){this.dtype=e,this.shape=t,this.sourceLayer=s,this.inputs=r,this.callArgs=i,this.outputTensorIndex=c,this.id=getNextUniqueTensorId(),a!=null&&(this.originalName=getScopedTensorName(a),this.name=getUniqueTensorName(this.originalName)),this.rank=t.length}}let _nextNodeID=0;class Node{constructor(e,t){this.callArgs=t,this.id=_nextNodeID++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s!=null&&s.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let _nextLayerID=0;class Layer extends Serializable{constructor(e={}){super();this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=_nextLayerID++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const s=this.getClassName();t=toSnakeCase(s)+"_"+getUid(s)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let i=null;e.batchSize!=null&&(i=e.batchSize),s=[i].concat(e.inputShape)}this.batchInputShape=s;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new RuntimeError(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new ValueError(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return singletonOrArray(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return singletonOrArray(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new AttributeError(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new AttributeError(`Layer ${this.name} is not connected, no input to return.`);return singletonOrArray(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new AttributeError(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new AttributeError(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return singletonOrArray(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=toList(e),this.inputSpec==null||this.inputSpec.length===0)return;const t=toList(this.inputSpec);if(e.length!==t.length)throw new ValueError(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let s=0;s<e.length;s++){const r=e[s],i=t[s];if(i==null)continue;const a=r.rank;if(i.ndim!=null&&a!==i.ndim)throw new ValueError(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${a}`);if(i.maxNDim!=null&&a>i.maxNDim)throw new ValueError(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${a}`);if(i.minNDim!=null&&a<i.minNDim)throw new ValueError(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${a}.`);if(i.dtype!=null&&r.dtype!==i.dtype)throw new ValueError(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${r.dtype}.`);if(i.axes){const c=r.shape;for(const u in i.axes){const l=Number(u),h=i.axes[u],d=l>=0?c[l]:c[c.length+l];if(h!=null&&[h,null].indexOf(d)===-1)throw new ValueError(`Input ${s} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${h} but got shape ${c}.`)}}if(i.shape!=null)for(let c=0;c<i.shape.length;++c){const u=i.shape[c],l=r.shape[c];if(u!=null&&l!=null&&u!==l)throw new ValueError(`Input ${s} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const s=toList(e);let r=!0;for(const a of s)if(!(a instanceof SymbolicTensor)){r=!1;break}let i=!0;for(const a of s)if(a instanceof SymbolicTensor){i=!1;break}if(r===i)throw new ValueError("Arguments to apply() must be all SymbolicTensors or all Tensors");return nameScope(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const a=[];for(const c of toList(e))a.push(c.shape);this.build(singletonOrArray(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&i&&(this._refCount=1)}if(this.assertInputCompatibility(e),i){let a=this.call(e,t);const c=toList(a),u=[];for(let l of c)s.indexOf(l)!==-1&&(l=l.clone()),u.push(l);if(a=singletonOrArray(u),this.activityRegularizer!=null)throw new NotImplementedError("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{const a=collectInputShape(e),c=this.computeOutputShape(a);let u;const l=guessOutputDType(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),c!=null&&c.length>0&&Array.isArray(c[0])?u=c.map((h,d)=>new SymbolicTensor(l,h,this,toList(e),t,this.name,d)):u=new SymbolicTensor(l,c,this,toList(e),t,this.name),this.addInboundNode(e,u,null,null,a,c,t),this._refCount++,this.activityRegularizer!=null)throw new NotImplementedError("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return u}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&e[r]!=null&&e[r]!==s&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new AttributeError(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const s=JSON.stringify(t.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new AttributeError(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new RuntimeError(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return countParamsInWeights(this.weights)}build(e){this.built=!0}getWeights(e=!1){return batchGetValue(e?this.trainableWeights:this.weights)}setWeights(e){tidy(()=>{const t=this.weights;if(t.length!==e.length)throw new ValueError(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const s=[],r=batchGetValue(t);for(let i=0;i<r.length;++i){const a=r[i],c=t[i],u=e[i];if(!arraysEqual(a.shape,u.shape))throw new ValueError(`Layer weight shape ${a.shape} not compatible with provided weight shape ${u.shape}`);s.push([c,u])}batchSetValue(s)})}addWeight(e,t,s,r,i,a,c){if(this._addedWeightNames.indexOf(e)!==-1)throw new ValueError(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=getInitializer("zeros"));const u=r.apply(t,s),l=new LayerVariable(u,s,e,a,c);return u.dispose(),i!=null&&this.addLoss(()=>i.apply(l.read())),a==null&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=toList(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,s,r,i,a,c=null){const u=toList(e);t=toList(t),s=toList(s),r=toList(r),i=normalizeShapeList(i),a=normalizeShapeList(a);const l=[],h=[],d=[];for(const f of u)l.push(f.sourceLayer),h.push(f.nodeIndex),d.push(f.tensorIndex);new Node({outboundLayer:this,inboundLayers:l,nodeIndices:h,tensorIndices:d,inputTensors:u,outputTensors:t,inputMasks:s,outputMasks:r,inputShapes:i,outputShapes:a},c);for(let f=0;f<t.length;f++)t[f].sourceLayer=this,t[f].nodeIndex=this.inboundNodes.length-1,t[f].tensorIndex=f}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount==0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function collectInputShape(n){n=toList(n);const e=[];for(const t of n)e.push(t.shape);return singletonOrArray(e)}function guessOutputDType(n){return"float32"}function getSourceInputs(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const s=e.inboundNodes[t];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let i=0;i<s.inboundLayers.length;i++){const a=s.inputTensors[i],c=s.inboundLayers[i],u=s.nodeIndices[i],l=getSourceInputs(a,c,u);for(const h of l)r.indexOf(h)===-1&&r.push(h)}return r}}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class InputLayer extends Layer{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:getUid("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new ValueError("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new ValueError("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new ValueError("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=t,this.dtype=s,this.inputSpec=[{shape:t}];const r=new SymbolicTensor(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Node({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new ValueError(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}InputLayer.className="InputLayer";registerClass(InputLayer);function Input(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new ValueError("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new InputLayer({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function resolveScalarsInLogs(n){if(n==null)return;const e=[],t=[],s=[];for(const r in n){const i=n[r];if(typeof i!="number"){const a=i;e.push(a.data()),t.push(r),s.push(a)}}if(e.length>0){const r=await Promise.all(e);for(let i=0;i<r.length;++i)n[t[i]]=r[i][0];dispose(s)}}function disposeTensorsInLogs(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var ModelLoggingVerbosity;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(ModelLoggingVerbosity||(ModelLoggingVerbosity={}));const DEFAULT_YIELD_EVERY_MS=125;class BaseCallback{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class CallbackList{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class BaseLogger extends BaseCallback{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const s=t.size==null?0:t.size;this.seen+=s;for(const r in t){const i=t[r];if(typeof i=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+i*s;else{let a;r in this.totals?a=this.totals[r]:this.totals[r]=0;const c=tidy(()=>add$1(this.totals[r],mul(i,s)));this.totals[r]=c,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?t[s]=this.totals[s]/this.seen:tidy(()=>{const r=mul(div$1(1,this.seen),this.totals[s]);t[s]=r,this.totals[s].dispose(),keep(t[s])}))}}class History extends BaseCallback{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const s in t)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(t[s])}async syncData(){const e=[],t=[],s=[];for(const i in this.history){const a=this.history[i];for(let c=0;c<a.length;++c)if(typeof a[c]!="number"){const u=a[c];e.push(u.data()),t.push(i),s.push(c)}}const r=await Promise.all(e);for(let i=0;i<r.length;++i)this.history[t[i]][s[i]].dispose(),this.history[t[i]][s[i]]=r[i][0]}}class CustomCallback extends BaseCallback{constructor(e,t){super();if(this.currentEpoch=0,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=DEFAULT_YIELD_EVERY_MS),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");isNumber$1(this.yieldEvery)&&(this.maybeWait=debounce(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,s){const r=[];this.yield!=null&&(await resolveScalarsInLogs(s),r.push(this.yield(e,t,s))),r.push(nextFrame()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await resolveScalarsInLogs(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const s=[];this.epochEnd!=null&&(await resolveScalarsInLogs(t),s.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&s.push(nextFrame()),await Promise.all(s)}async onBatchBegin(e,t){this.batchBegin!=null&&(await resolveScalarsInLogs(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const s=[];this.batchEnd!=null&&(await resolveScalarsInLogs(t),s.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?s.push(nextFrame()):isNumber$1(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await resolveScalarsInLogs(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await resolveScalarsInLogs(e),await this.trainEnd(e))}}function standardizeCallbacks(n,e){return n==null&&(n={}),n instanceof BaseCallback?[n]:Array.isArray(n)&&n[0]instanceof BaseCallback?n:toList(n).map(s=>new CustomCallback(s,e))}class CallbackConstructorRegistry{constructor(){}static registerCallbackConstructor(e,t){assert$2(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),CallbackConstructorRegistry.checkForDuplicate(t),CallbackConstructorRegistry.constructors[e]==null&&(CallbackConstructorRegistry.constructors[e]=[]),CallbackConstructorRegistry.constructors[e].push(t)}static checkForDuplicate(e){for(const t in CallbackConstructorRegistry.constructors)CallbackConstructorRegistry.constructors[+t].forEach(r=>{if(r===e)throw new ValueError("Duplicate callback constructor.")})}static clear(){CallbackConstructorRegistry.constructors={}}static createCallbacks(e){const t=[];for(const s in CallbackConstructorRegistry.constructors){const r=+s;e>=r&&t.push(...CallbackConstructorRegistry.constructors[r])}return t.map(s=>new s)}}CallbackConstructorRegistry.constructors={};function configureCallbacks(n,e,t,s,r,i,a,c,u){const l=new History,h=[new BaseLogger,...CallbackConstructorRegistry.createCallbacks(e)];n!=null&&h.push(...n),h.push(l);const d=new CallbackList(h);return d.setParams({epochs:t,initialEpoch:s,samples:r,steps:i,batchSize:a,verbose:e,doValidation:c,metrics:u}),{callbackList:d,history:l}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function deserialize(n,e={},t=!1){return deserializeKerasObject(n,SerializationMap.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function l2Normalize(n,e){return tidy(()=>{n.dtype!=="float32"&&(n=n.asType("float32"));const t=sum$2(square$1(n),e,!0),s=fill$2(t.shape,epsilon$1()),r=sqrt$2(maximum$2(t,s));return div$1(n,r)})}function meanSquaredError(n,e){return tidy(()=>mean$1(square$1(sub$2(e,n)),-1))}function meanAbsoluteError(n,e){return tidy(()=>mean$1(abs$2(sub$2(e,n)),-1))}function meanAbsolutePercentageError(n,e){return tidy(()=>{const t=sub$2(n,e),s=clipByValue$1(abs$2(n),epsilon$1(),Number.MAX_VALUE),r=abs$2(div$1(t,s));return mul(100,mean$1(r,-1))})}function meanSquaredLogarithmicError(n,e){return tidy(()=>{const t=clipByValue$1(e,epsilon$1(),Number.MAX_VALUE),s=log$5(add$1(1,t)),r=clipByValue$1(n,epsilon$1(),Number.MAX_VALUE),i=log$5(add$1(1,r));return mean$1(square$1(sub$2(s,i)),-1)})}function squaredHinge(n,e){return tidy(()=>{const t=maximum$2(0,sub$2(1,mul(n,e)));return mean$1(square$1(t),-1)})}function hinge(n,e){return tidy(()=>{const t=maximum$2(0,sub$2(1,mul(n,e)));return mean$1(t,-1)})}function categoricalHinge(n,e){return tidy(()=>{const t=sum$2(mul(n,e),-1),s=max$3(mul(sub$2(1,n),e),-1);return maximum$2(0,add$1(1,sub$2(s,t)))})}function logcosh(n,e){return tidy(()=>{const t=Math.log(2),s=sub$2(e,n),r=sub$2(add$1(s,softplus$2(mul(-2,s))),t);return mean$1(r,-1)})}function categoricalCrossentropy$1(n,e,t=!1){return tidy(()=>{if(t)e=softmax$2(e);else{const s=sum$2(e,e.shape.length-1,!0);e=div$1(e,s)}return e=clipByValue$1(e,epsilon$1(),1-epsilon$1()),neg$2(sum$2(mul(n.toFloat(),log$5(e)),e.shape.length-1))})}function sparseCategoricalCrossentropy$1(n,e,t=!1){return tidy(()=>{const s=floor$2(flatten$1(n)).toInt();e=clipByValue$1(e,epsilon$1(),1-epsilon$1());const r=e.shape,i=oneHot$2(s,r[r.length-1]).reshape(r);return categoricalCrossentropy$1(i,e,t)})}function sigmoidCrossEntropyWithLogits(n,e){if(!arraysEqual(n.shape,e.shape))throw new ValueError(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return tidy(()=>{const t=e.relu(),s=e.abs().neg();return t.sub(e.mul(n)).add(s.exp().log1p())})}function binaryCrossentropy$1(n,e){return tidy(()=>{let t;return t=clipByValue$1(e,epsilon$1(),1-epsilon$1()),t=log$5(div$1(t,sub$2(1,t))),mean$1(sigmoidCrossEntropyWithLogits(n,t),-1)})}function kullbackLeiblerDivergence(n,e){return tidy(()=>{const t=clipByValue$1(n,epsilon$1(),1),s=clipByValue$1(e,epsilon$1(),1);return sum$2(mul(n,log$5(div$1(t,s))),-1)})}function poisson(n,e){return tidy(()=>{const t=log$5(add$1(epsilon$1(),e));return mean$1(sub$2(e,mul(n,t)),-1)})}function cosineProximity(n,e){return tidy(()=>{const t=l2Normalize(n,-1),s=l2Normalize(e,-1),r=mul(t,s);return neg$2(sum$2(r,-1))})}const lossesMap={meanSquaredError,meanAbsoluteError,meanAbsolutePercentageError,meanSquaredLogarithmicError,squaredHinge,hinge,categoricalHinge,logcosh,categoricalCrossentropy:categoricalCrossentropy$1,sparseCategoricalCrossentropy:sparseCategoricalCrossentropy$1,binaryCrossentropy:binaryCrossentropy$1,kullbackLeiblerDivergence,poisson,cosineProximity};function get$1(n){if(typeof n=="string"){if(n in lossesMap)return lossesMap[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new ValueError(e)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function binaryAccuracy(n,e){return tidy(()=>{const t=mul(.5,onesLike$2(e)),s=cast$2(greater$2(e,t),n.dtype);return mean$1(equal$2(n,s),-1)})}function categoricalAccuracy(n,e){return tidy(()=>cast$2(equal$2(argMax$2(n,-1),argMax$2(e,-1)),"float32"))}function truePositives(n,e){return tidy(()=>logicalAnd$2(n.equal(1),e.equal(1)).sum().cast("float32"))}function falsePositives(n,e){return tidy(()=>logicalAnd$2(n.equal(0),e.equal(1)).sum().cast("float32"))}function precision(n,e){return tidy(()=>{const t=truePositives(n,e),s=falsePositives(n,e),r=t.add(s);return where(greater$2(r,0),t.div(r),0).cast("float32")})}function binaryCrossentropy(n,e){return binaryCrossentropy$1(n,e)}function sparseCategoricalAccuracy(n,e){return n.rank===e.rank&&(n=n.squeeze([n.rank-1])),e=e.argMax(-1),e.dtype!==n.dtype&&(e=e.asType(n.dtype)),equal$2(n,e).asType("float32")}const mse=meanSquaredError,MSE=meanSquaredError,mae=meanAbsoluteError,MAE=meanAbsoluteError,mape=meanAbsolutePercentageError,MAPE=meanAbsolutePercentageError,categoricalCrossentropy=categoricalCrossentropy$1,cosine=cosineProximity,sparseCategoricalCrossentropy=sparseCategoricalCrossentropy$1,metricsMap={binaryAccuracy,categoricalAccuracy,precision,categoricalCrossentropy,sparseCategoricalCrossentropy,mse,MSE,mae,MAE,mape,MAPE,cosine};function get(n){if(typeof n=="string"&&n in metricsMap)return metricsMap[n];if(typeof n!="string"&&n!=null)return n;throw new ValueError(`Unknown metric ${n}`)}function getLossOrMetricName(n){if(assert$1(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(lossesMap))if(lossesMap[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(metricsMap))if(metricsMap[t]===n){e=t;break}return e!==void 0?e:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function getOptimizer(n){const e={Adagrad:()=>train.adagrad(.01),Adadelta:()=>train.adadelta(1,.95,epsilon$1()),Adam:()=>train.adam(.001,.9,.999,epsilon$1()),Adamax:()=>train.adamax(.002,.9,.999,epsilon$1(),0),RMSProp:()=>train.rmsprop(.001,.9,0,epsilon$1()),SGD:()=>train.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new ValueError(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const MAX_USER_DEFINED_METADATA_SERIALIZED_LENGTH=1*1024*1024;function checkUserDefinedMetadata(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!plainObjectCheck(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const s=JSON.stringify(n);s.length>MAX_USER_DEFINED_METADATA_SERIALIZED_LENGTH&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${MAX_USER_DEFINED_METADATA_SERIALIZED_LENGTH}.`)}}function plainObjectCheck(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!plainObjectCheck(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!plainObjectCheck(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function printSummary(n,e,t,s=console.log){const r=isModelSequentialLike(n),i=["Layer (type)","Output shape","Param #"];r?(e=e||65,t=t||[.45,.85,1]):(e=e||98,t=t||[.33,.55,.67,1]),t[t.length-1]<=1&&(t=t.map(h=>Math.floor(e*h)));let a;if(!r){i.push("Receives inputs"),a=[];for(const h in n.nodesByDepth)a.push(...n.nodesByDepth[h])}s("_".repeat(e)),printRow(i,t,s),s("=".repeat(e));const c=n.layers;for(let h=0;h<c.length;++h)r?printLayerSummary(c[h],t,s):printLayerSummaryWithConnections(c[h],t,a,s),s((h===c.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const u=countTrainableParams(n),l=countParamsInWeights(n.nonTrainableWeights);s(`Total params: ${u+l}`),s(`Trainable params: ${u}`),s(`Non-trainable params: ${l}`),s("_".repeat(e))}function countTrainableParams(n){let e;return n.collectedTrainableWeights!=null?e=countParamsInWeights(n.collectedTrainableWeights):e=countParamsInWeights(n.trainableWeights),e}function isModelSequentialLike(n){let e=!0;const t=[],s=[];for(const r in n.nodesByDepth)t.push(n.nodesByDepth[r]);for(const r of t){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){e=!1;break}s.push(...r)}if(e)for(const r of n.layers){let i=!1;for(const a of r.inboundNodes)if(s.indexOf(a)!==-1)if(i){e=!1;break}else i=!0;if(!e)break}return e}function printRow(n,e,t=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,e[r]),s+=" ".repeat(e[r]-s.length);t(s)}function printLayerSummary(n,e,t){let s;try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const r=n.name,i=n.getClassName(),a=[`${r} (${i})`,s,n.countParams().toString()];printRow(a,e,t)}function printLayerSummaryWithConnections(n,e,t,s){let r;try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const i=[];for(const h of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const f=h.inboundLayers[d].name,y=h.nodeIndices[d],g=h.tensorIndices[d];i.push(`${f}[${y}][${g}]`)}const a=n.name,c=n.getClassName(),u=i.length===0?"":i[0],l=[`${a} (${c})`,r,n.countParams().toString(),u];printRow(l,e,s);for(let h=1;h<i.length;++h)printRow(["","","",i[h]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function isArrayItemInputOrOutputName(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function convertPythonicToTs(n,e){if(n===null)return null;if(typeof n=="string")return toCamelCase(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const i=n[r];isArrayItemInputOrOutputName(e,r,i)?t.push(i):t.push(convertPythonicToTs(i,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s];if(s==="name"&&typeof r=="string")t[s]=r;else{const i=toCamelCase(s);t[i]=convertPythonicToTs(r,i)}}return t}}function convertTsToPythonic(n,e){if(n==null)return null;if(typeof n=="string")return toSnakeCase(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const i=n[r];isArrayItemInputOrOutputName(e,r,i)?t.push(i):t.push(convertTsToPythonic(i,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s],i=toSnakeCase(s);(s==="name"||s==="className")&&typeof r=="string"?t[i]=r:t[i]=convertTsToPythonic(r,s)}return t}}/** @license See the LICENSE file. */const version$6="2.8.6";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function assertFeedCompatibility(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return cast$3(e,n.dtype)}catch{throw new ValueError(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class FeedDict{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof FeedDict)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=assertFeedCompatibility(e,t),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new ValueError(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof SymbolicTensor){if(this.id2Value[e.id]==null)throw new ValueError(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new ValueError(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof SymbolicTensor){if(this.id2Value[e.id]==null)throw new ValueError(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new ValueError(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&dispose(this.id2Mask)}}const cachedSorted={},cachedRecipientCounts={};function execute(n,e,t,s){const r=t==null?!1:t.training,i=Array.isArray(n),a=i?n:[n],c=a.map(g=>g.name),u=[],l=e.names();for(const g of c)l.indexOf(g)!==-1?u.push(e.getValue(g)):u.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const h=c.join(",")+"|"+e.names().join(",");let d,f;if(cachedSorted[h]==null){const g=getTopologicalSortAndRecipientCounts(a,e);d=g.sorted,f=g.recipientCounts,cachedSorted[h]=d,cachedRecipientCounts[h]=f}d=cachedSorted[h],f={},r||Object.assign(f,cachedRecipientCounts[h]);const y=new FeedDict(e);for(let g=0;g<d.length;++g){if(s!=null){const E=memory().numTensors;E>s.maxNumTensors&&(s.maxNumTensors=E),E<s.minNumTensors&&(s.minNumTensors=E)}const x=d[g],b=x.sourceLayer;if(b instanceof InputLayer)continue;const v=[],S=[],T=[];let w=!1;for(const E of x.inputs){const k=y.getValue(E),F=y.getMask(E);v.push(k),S.push(F),F!=null&&(w=!0),r||(f[E.name]--,f[E.name]===0&&!e.hasKey(E)&&c.indexOf(E.name)===-1&&!k.isDisposed&&E.sourceLayer.stateful!==!0&&T.push(k))}w&&(t=t||{},t.mask=S[0]);const C=toList(b.apply(v,t));let N=null;b.supportsMasking&&(N=b.computeMask(v,S));const _=getNodeOutputs(x),$=Array.isArray(_)?_:[_];for(let E=0;E<$.length;++E){y.hasKey($[E])||y.add($[E],C[E],Array.isArray(N)?N[0]:N);const k=c.indexOf($[E].name);k!==-1&&(u[k]=C[E])}r||dispose(T)}return y.disposeMasks(),i?u:u[0]}function getTopologicalSortAndRecipientCounts(n,e){assert$2(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],s={};if(n.length===1){const r=getTopologicalSortAndRecipientCountsForOneFetch(n[0],e);t=r.sorted,s=r.recipientMap}else{const r=new Set;for(const i of n){const{sorted:a,recipientMap:c}=getTopologicalSortAndRecipientCountsForOneFetch(i,e);for(const u of a)r.has(u.name)||(t.push(u),r.add(u.name));for(const u in c)s[u]==null&&(s[u]=new Set),c[u].forEach(l=>s[u].add(l))}}return{sorted:t,recipientCounts:recipientMap2Counts(s)}}function recipientMap2Counts(n){const e={};for(const t in n)e[t]=n[t].size;return e}function getTopologicalSortAndRecipientCountsForOneFetch(n,e){const t=new Set,s=[],r={};for(const c of e.names())t.add(c);const i=[],a=[];for(i.push(n);i.length>0;){const c=i[i.length-1];if(t.has(c.name)){i.pop();continue}const u=a[a.length-1]===i.length-1;if(c.inputs.length===0||u)i.pop(),s.push(c),t.add(c.name),u&&a.pop();else{a.push(i.length-1);for(const l of c.inputs)r[l.name]==null&&(r[l.name]=new Set),r[l.name].add(c.name),!t.has(l.name)&&i.push(l)}}return{sorted:s,recipientMap:r}}function getNodeOutputs(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){t=s;break}e=n.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Container extends Layer{constructor(e){super({});if(this.containerNodes=new Set,this.name=e.name,this.name==null){const S=this.getClassName().toLowerCase();this.name=getUid(S)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],unique$3(this.inputs).length!==this.inputs.length)throw new ValueError(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(S=>S.name)}`);unique$3(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(S=>S.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const S of this.outputs){const T=S.sourceLayer,w=S.nodeIndex,C=S.tensorIndex;this.outputLayers.push(T),this.outputLayersNodeIndices.push(w),this.outputLayersTensorIndices.push(C)}for(const S of this.inputs){const T=S.sourceLayer,w=S.nodeIndex,C=S.tensorIndex;assert$1(w===0,"input layer has >1 nodes"),assert$1(C===0,"input layer has >1 tensors"),this.inputLayers.push(T),this.inputLayersNodeIndices.push(w),this.inputLayersTensorIndices.push(C)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let S=0;S<this.inputLayers.length;S++){const T=this.inputLayers[S];if(!(T instanceof InputLayer))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${S} (0-based) originates from layer type ${T.getClassName()}.`);this.inputNames.push(T.name),this.feedInputShapes.push(T.batchInputShape),this.feedInputNames.push(T.name)}for(const S of this.outputLayers)this.outputNames.push(S.name);this.internalInputShapes=this.inputs.map(S=>S.shape),this.internalOutputShapes=this.outputs.map(S=>S.shape);const t={},s={},r={},i={},a={},c=[],u=(S,T,w,C,N,_)=>{(C==null||N==null||_==null)&&(C=S.sourceLayer,N=S.nodeIndex,_=S.tensorIndex);const $=C.inboundNodes[N];if(w.indexOf($)!==-1)throw new RuntimeError(`The tensor ${S.name} at layer "${C.name}" is part of a cycle.`);if(T.indexOf($)!==-1)return;this.containerNodes.add(Container.nodeKey(C,N)),C.id in a||(a[C.id]=Object.keys(a).length),w.indexOf($)===-1&&w.push($);const E=$.inboundLayers.length;for(let k=0;k<E;k++){const F=$.inputTensors[k],P=$.inboundLayers[k],R=$.nodeIndices[k],O=$.tensorIndices[k];u(F,T,w,P,R,O)}for(T.push($);w.indexOf($)>=0;)w.splice(w.indexOf($),1);c.push($)},l=[],h=[];for(const S of this.outputs)u(S,l,h);const d=c.slice().reverse();for(const S of d){s[S.id]=S,S.id in t||(t[S.id]=0);let T=t[S.id];const w=r[S.outboundLayer.id]==null?0:r[S.outboundLayer.id];T=Math.max(T,w),r[S.outboundLayer.id]=T,i[S.outboundLayer.id]=S.outboundLayer,t[S.id]=T;for(let C=0;C<S.inboundLayers.length;C++){const N=S.inboundLayers[C],_=S.nodeIndices[C],$=N.inboundNodes[_],E=t[$.id]==null?0:t[$.id];t[$.id]=Math.max(T+1,E),s[$.id]=$}}const f={};for(const S in t){const T=t[S];T in f||(f[T]=[]),f[T].push(s[S])}const y={};for(const S in r){const T=r[S];T in y||(y[T]=[]),y[T].push(i[S])}let g=Object.keys(y).map(S=>parseInt(S,10)).sort(reverseNumberCompare);this.layers=[];for(const S of g){const T=y[S];T.sort((w,C)=>{const N=a[w.id],_=a[C.id];return N<_?-1:N>_?1:0});for(const w of T)w instanceof Container&&this.internalContainerRefs.push(w),this.layers.push(w)}this.layersByDepth=y,g=Object.keys(f).map(S=>parseInt(S,10)).sort(reverseNumberCompare);const x=this.inputs.slice(),b=[];for(const S of g)for(const T of f[S]){const w=T.outboundLayer;if(w!=null){for(const C of T.inputTensors)if(x.indexOf(C)===-1)throw new RuntimeError(`Graph disconnected: cannot obtain value for tensor ${C} at layer "${w.name}". The following previous layers were accessed without issue: ${b}`);for(const C of T.outputTensors)x.push(C);b.push(w.name)}}this.nodesByDepth=f;const v=this.layers.map(S=>S.name);for(const S of v){const T=v.filter(w=>w===S).length;if(T!==1)throw new RuntimeError(`The name "${S}" is used ${T} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(v))}this.outboundNodes=[],this.inboundNodes=[],new Node({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(S=>null),outputMasks:this.outputs.map(S=>null),inputShapes:this.inputs.map(S=>S.shape),outputShapes:this.outputs.map(S=>S.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount==0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new ValueError("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.layers)t.push(...s.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const s={};let r=0;for(const a of this.layers)for(const c of a.weights){if(s[c.originalName]!=null)throw new ValueError(`Duplicate weight name: ${c.originalName}`);s[c.originalName]=c,r++}const i=[];for(const a in e){let c=a;if(s[a]==null){const u=a.split("/");c=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(s[c]!=null)i.push([s[c],e[a]]);else if(t)throw new ValueError(`Provided weight data has no target variable: ${a}`);delete s[c]}if(t){const a=[];for(const c in s)a.push(c);if(a.length>0)throw new ValueError(`${a.length} of ${r} weights are not set: ${a}`)}batchSetValue(i)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${version$6}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const s=convertTsToPythonic(this.updatedConfig());return t?JSON.stringify(s):s}call(e,t){return tidy(()=>{e=toList(e);const s=new FeedDict;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],e[r]);return execute(this.outputs,s,t)})}computeMask(e,t){return tidy(()=>{e=toList(e);let s;return t==null?s=pyListRepeat(null,e.length):s=toList(t),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const t=normalizeShapeList(e);if(t.length!==this.inputLayers.length)throw new ValueError(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let c=0;c<t.length;c++){const u=this.inputLayers[c],l=t[c],h=u.name+"_0_0";s[h]=l}const r=Object.keys(this.nodesByDepth).map(c=>parseInt(c,10)).sort(reverseNumberCompare);if(r.length>1)for(const c of r){const u=this.nodesByDepth[c];for(const l of u){const h=l.outboundLayer;if(this.inputLayers.map(x=>x.id).indexOf(h.id)!==-1)continue;const d=[];for(let x=0;x<l.inboundLayers.length;x++){const b=l.inboundLayers[x],v=l.nodeIndices[x],S=l.tensorIndices[x],T=`${b.name}_${v}_${S}`,w=s[T];d.push(w)}const f=h.computeOutputShape(singletonOrArray(d)),y=normalizeShapeList(f),g=h.inboundNodes.indexOf(l);for(let x=0;x<y.length;x++){const b=`${h.name}_${g}_${x}`;s[b]=y[x]}}}const i=[],a=[];for(let c=0;c<this.outputLayers.length;c++){const u=this.outputLayers[c],l=this.outputLayersNodeIndices[c],h=this.outputLayersTensorIndices[c],d=`${u.name}_${l}_${h}`;a.push(d)}for(let c=0;c<a.length;c++){const u=a[c];assert$1(u in s),i.push(s[u])}return singletonOrArray(i)}runInternalGraph(e,t){t==null&&(t=pyListRepeat(null,e.length));const s={};for(let u=0;u<this.inputs.length;++u){const l=this.inputs[u],h=e[u],d=t[u];s[l.id]=[h,d]}const r=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(reverseNumberCompare);for(const u of r){const l=this.nodesByDepth[u];for(const h of l){const d=h.outboundLayer,f=h.inputTensors,y=h.outputTensors,g=new Array;for(const x of f)x.id in s&&g.push(s[x.id]);if(g.length===f.length){let x={},b,v,S,T;if(h.callArgs!=null&&(x=h.callArgs),g.length===1){const[w,C]=g[0];x.mask==null&&(x.mask=C),S=toList(d.call(w,x)),T=toList(d.computeMask(w,C)),b=[w],v=[C]}else b=g.map(w=>w[0]),v=g.map(w=>w[1]),x.mask==null&&(x.mask=v),S=toList(d.call(b,x)),T=toList(d.computeMask(b,v));if(d.activityRegularizer)throw new NotImplementedError("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let w=0;w<y.length;++w){const C=y[w],N=S[w],_=T[w];s[C.id]=[N,_]}}}}const i=[],a=[],c=[];for(const u of this.outputs){assert$1(u.id in s,`Could not compute output ${u.name} : ${u.id}`);const[l,h]=s[u.id];c.push(l.shape),i.push(l),a.push(h)}return[i,a,c]}buildNodeConversionMap(e){const t={};let s;for(const r of this.layers){s=r instanceof Container?1:0;for(let i=0;i<r.inboundNodes.length;i++){const a=Container.nodeKey(r,i);this.containerNodes.has(a)&&(t[a]=s,s+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new ValueError(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new ValueError("Provide either a layer name or layer index");for(const s of this.layers)if(s.name===e)return s;throw new ValueError(`No such layer: ${e}`)}calculateLosses(){return tidy(()=>{const e=[];for(const t of this.layers)for(let s=0;s<t.inboundNodes.length;++s){const r=Container.nodeKey(t,s);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),s=[];for(const a of this.layers){const c=a.getClassName(),u=a.getConfig(),l=[];for(let d=0;d<a.inboundNodes.length;d++){const f=a.inboundNodes[d],y=Container.nodeKey(a,d);let g={};if(this.containerNodes.has(y)){if(f.callArgs)try{JSON.stringify(f.callArgs),g=f.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${f.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),g={}}if(f.inboundLayers.length>0){const x=[];for(let b=0;b<f.inboundLayers.length;b++){const v=f.inboundLayers[b],S=f.nodeIndices[b],T=f.tensorIndices[b],w=Container.nodeKey(v,S);let C=t[w];C==null&&(C=0),x.push([v.name,C,T,g])}l.push(x)}}}const h={};h.name=a.name,h.className=c,h.config=u,h.inboundNodes=l,s.push(h)}e.layers=s;const r=[];for(let a=0;a<this.inputLayers.length;a++){const c=this.inputLayers[a],u=this.inputLayersNodeIndices[a],l=Container.nodeKey(c,u);if(!this.containerNodes.has(l))continue;let h=t[l];h==null&&(h=0);const d=this.inputLayersTensorIndices[a];r.push([c.name,h,d])}e.inputLayers=r;const i=[];for(let a=0;a<this.outputLayers.length;a++){const c=this.outputLayers[a],u=this.outputLayersNodeIndices[a],l=Container.nodeKey(c,u);if(!this.containerNodes.has(l))continue;let h=t[l];h==null&&(h=0);const d=this.outputLayersTensorIndices[a];i.push([c.name,h,d])}return e.outputLayers=i,e}static fromConfig(e,t,s={},r=!1){const i={},a={};function c(b,v){b.name in a?a[b.name].push(v):a[b.name]=[v]}function u(b,v){const S=[];let T;for(const w of v){const C=w[0],N=w[1],_=w[2];if(T=w[3]==null?{}:w[3],!(C in i)){c(b,v);return}const $=i[C];if($.inboundNodes.length<=N){c(b,v);return}const E=$.inboundNodes[N];S.push(E.outputTensors[_])}S.length>0&&b.apply(singletonOrArray(S),T)}function l(b){const v=b.name,S=deserialize(b,t.customObjects!=null?t.customObjects:{});S.setFastWeightInitDuringBuild(r),i[v]=S,b.inboundNodes.forEach(w=>{if(!(w instanceof Array))throw new ValueError(`Corrupted configuration, expected array for nodeData: ${w}`);c(S,w)})}const h=t.name,d=t.layers;for(const b of d)l(b);for(;!isObjectEmpty(a);)for(const b of d){const v=i[b.name];if(v.name in a){const S=a[v.name];delete a[v.name];for(const T of S)u(v,T)}}const f=[],y=[],g=t.inputLayers;for(const b of g){const v=b[0],S=b[1],T=b[2];assert$1(v in i);const C=i[v].inboundNodes[S].outputTensors;f.push(C[T])}const x=t.outputLayers;for(const b of x){const v=b[0],S=b[1],T=b[2];assert$1(v in i);const C=i[v].inboundNodes[S].outputTensors;y.push(C[T])}return new e({inputs:f,outputs:y,name:h})}get stateful(){if(this._stateful)throw new ValueError("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){tidy(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function standardizeSampleOrClassWeights(n,e,t){const s=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(r=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const r=[];return e.forEach(i=>{i in n?r.push(n[i]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${t} must be either an array with ${s} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function standardizeClassWeights(n,e){return standardizeSampleOrClassWeights(n,e,"classWeight")}async function standardizeWeights(n,e,t,s){if(e!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){const r=tidy(()=>{if(n.shape.length===1)return n.clone();if(n.shape.length===2)if(n.shape[1]>1){const c=1;return n.argMax(c)}else{if(n.shape[1]===1)return n.reshape([n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),i=Array.from(await r.data());dispose(r);const a=[];return i.forEach(c=>{if(t[c]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${c} exists in the data but not in classWeight`);a.push(t[c])}),tensor1d(a,"float32")}else return null}function computeWeightedLoss(n,e){return mul(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const DEFAULT_VALIDATION_BATCH_SIZE=32;function standardizeDataIteratorOutput(n,e){let t,s;const r=e;t=r.xs,s=r.ys,assert$2(t!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const i=flattenTensorOrArrayOrMap("input",n.inputNames,t),a=flattenTensorOrArrayOrMap("output",n.outputNames,s),c=i[0].shape[0];assert$2(i.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),assert$2(a.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let u=0;u<i.length;u++)assert$2(i[u].shape[0]===c,()=>`Batch size mismatch: input ${n.inputNames[u]} has ${i[u].shape[0]}; expected  ${c} based on input ${n.inputNames[0]}.`);for(let u=0;u<a.length;u++)assert$2(a[u].shape[0]===c,()=>`Batch size mismatch: output ${n.outputNames[u]} has ${a[u].shape[0]}; expected  ${c} based on input ${n.inputNames[0]}.`);return{xs:i,ys:a}}function flattenTensorOrArrayOrMap(n,e,t){if(t instanceof Tensor)return[t];if(Array.isArray(t))return assert$2(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const s=[];for(const r of e){if(t[r]==null)throw new ValueError(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(t[r])}return s}}function standardizeTensorValidationData(n){if(n.length===3)throw new NotImplementedError("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function fitDataset(n,e,t){const s=t.batchesPerEpoch!=null;if(assert$2(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),assert$2(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),assert$2(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),assert$2(!s||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),assert$2(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=t.validationData!=null;let i,a;if(r)if(isDatasetObject(t.validationData))assert$2(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const b=standardizeTensorValidationData(t.validationData);i=b.xs,a=b.ys}const c=n.makeTrainFunction(),u=n.getDedupedMetricsNames();let l;r?l=u.slice().concat(u.map(b=>"val_"+b)):l=u.slice();const h=standardizeCallbacks(t.callbacks,t.yieldEvery),d=t.verbose==null?1:t.verbose,{callbackList:f,history:y}=configureCallbacks(h,d,t.epochs,null,null,getStepsPerEpoch(e,t),null,r,l);f.setModel(n),n.history=y,await f.onTrainBegin(),n.stopTraining_=!1;let g=t.initialEpoch==null?0:t.initialEpoch,x=await e.iterator();for(;g<t.epochs;){const b={};await f.onEpochBegin(g);let v=0,S=0;for(s||(x=await e.iterator());s?v<t.batchesPerEpoch:!0;){const T=await x.next();if(s&&T.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${v} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(T.value!=null){const{xs:w,ys:C}=standardizeDataIteratorOutput(n,T.value),N={};N.batch=S,N.size=w[0].shape[0],await f.onBatchBegin(S,N);const _=[];if(t.classWeight!=null){const k=standardizeClassWeights(t.classWeight,n.outputNames);for(let F=0;F<k.length;++F)_.push(await standardizeWeights(C[F],null,k[F]))}const $=w.concat(C).concat(_),E=c($);dispose($);for(let k=0;k<u.length;++k){const F=u[k],P=E[k];N[F]=P,keep(P)}await f.onBatchEnd(S,N),disposeTensorsInLogs(N),S++,v++}if(s?v>=t.batchesPerEpoch:T.done){if(r){let w;isDatasetObject(t.validationData)?w=toList(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):w=toList(n.evaluate(i,a,{batchSize:t.validationBatchSize==null?DEFAULT_VALIDATION_BATCH_SIZE:t.validationBatchSize,verbose:0}));for(let C=0;C<n.metricsNames.length;++C)b[`val_${n.metricsNames[C]}`]=w[C]}break}if(n.stopTraining_)break}if(await f.onEpochEnd(g,b),g++,n.stopTraining_)break}return await f.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function getStepsPerEpoch(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function isDatasetObject(n){return typeof n.iterator=="function"}function isLazyIteratorObject(n){return typeof n.next=="function"}async function evaluateDataset(n,e,t){t=t||{};const s=t.batches!=null,r=n.testFunction;let i=[];if(t.verbose>0)throw new NotImplementedError("Verbose mode is not implemented yet.");assert$2(!s||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const a=isLazyIteratorObject(e)?e:await e.iterator();let c=0,u=0;for(;s?u<t.batches:!0;){const l=await a.next();if(i=tidy(()=>{if(l.value){const{xs:h,ys:d}=standardizeDataIteratorOutput(n,l.value),f=h.concat(d),y=tidy(()=>r(f));if(dispose(f),u===0)for(let x=0;x<y.length;++x)i.push(scalar(0));const g=f[0].shape[0];for(let x=0;x<y.length;++x){const b=y[x],v=i[x];i[x]=tidy(()=>add$1(i[x],mul(g,b))),u>0&&dispose(v)}dispose(y),c+=g,++u}return i}),l.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<i.length;++l){const h=i[l];i[l]=div$1(i[l],c),dispose(h)}return singletonOrArray(i)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function checkBatchSize(n){assert$2(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function sliceArrays(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(s=>sliceAlongFirstAxis(s,e,t-e)):sliceAlongFirstAxis(n,e,t-e)}function sliceArraysByIndices(n,e){return tidy(()=>n==null?null:Array.isArray(n)?n.map(t=>sliceArraysByIndices(t,e)):gather(n,e.dtype==="int32"?e:e.toInt()))}function makeBatches(n,e){const t=[];let s=0,r=null;for(;s<n;)r=s+e,r>=n&&(r=n),t.push([s,r]),s=r;return t}async function fitLoop(n,e,t,s,r,i,a,c,u,l,h,d,f,y,g){r==null&&(r=32),i==null&&(i=1),h==null&&(h=!0),f==null&&(f=0);let x=!1;if(u!=null&&l!=null&&(x=!0),g!=null&&(x=!0,y==null))throw new ValueError("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const b=n.checkNumSamples(t,r,y,"steps_per_epoch");let v;b!=null&&(v=range$3(0,b)),a==null&&(a=1);const{callbackList:S,history:T}=configureCallbacks(c,a,i,f,b,y,r,x,d);S.setModel(n),n.history=T,await S.onTrainBegin(),n.stopTraining_=!1;for(let w=f;w<i;++w){await S.onEpochBegin(w);const C={};if(y!=null)throw new NotImplementedError("stepsPerEpoch mode is not implemented yet.");{if(h==="batch")throw new NotImplementedError("batch shuffling is not implemneted yet");h&&shuffle(v);const N=tensor1d(v),_=makeBatches(b,r);for(let $=0;$<_.length;++$){const E={};if(await S.onBatchBegin($,E),tidy(()=>{const k=_[$][0],F=_[$][1],P=sliceAlongFirstAxis(N,k,F-k);E.batch=$,E.size=F-k;const R=sliceArraysByIndices(t,P),O=e(R);for(let B=0;B<s.length;++B){const L=s[B],V=O[B];E[L]=V,keep(V)}if($===_.length-1&&x){const B=n.testLoop(u,l,r);for(let L=0;L<s.length;++L){const V=s[L],q=B[L];keep(q),C["val_"+V]=q}}}),await S.onBatchEnd($,E),disposeTensorsInLogs(E),n.stopTraining_)break}N.dispose()}if(await S.onEpochEnd(w,C),n.stopTraining_)break}return await S.onTrainEnd(),await n.history.syncData(),n.history}async function fitTensors(n,e,t,s={}){if(n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;let r,i,a,c,u,l,h;try{const d=s.batchSize==null?32:s.batchSize;checkBatchSize(d);const f=!1,y=await n.standardizeUserData(e,t,s.sampleWeight,s.classWeight,f,d);r=y[0],i=y[1],h=y[2];let g=!1,x;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)a=s.validationData[0],c=s.validationData[1];else throw s.validationData.length===3?new NotImplementedError("validationData including sample weights is not supported yet."):new ValueError(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const _=!0,$=await n.standardizeUserData(a,c,null,null,_,d);u=$[0],l=$[1],x=u.concat(l)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;const _=Math.floor(r[0].shape[0]*(1-s.validationSplit)),$=r[0].shape[0];u=sliceArrays(r,_,$),r=sliceArrays(r,0,_),l=sliceArrays(i,_,$),i=sliceArrays(i,0,_),x=u.concat(l)}else s.validationSteps!=null&&(g=!0);const b=r.concat(i).concat(h);n.checkTrainableWeightsConsistency();const v=n.makeTrainFunction(),S=n.getDedupedMetricsNames();let T,w;g?(n.makeTestFunction(),T=n.testFunction,w=S.slice().concat(S.map(_=>"val_"+_))):(T=null,x=[],w=S.slice());const C=standardizeCallbacks(s.callbacks,s.yieldEvery);return await fitLoop(n,v,b,S,d,s.epochs,s.verbose,C,T,x,s.shuffle,w,s.initialEpoch,null,null)}finally{n.isTraining=!1,disposeNewTensors(r,e),disposeNewTensors(i,t),disposeNewTensors(u,a),disposeNewTensors(l,c),h!=null&&dispose(h)}}function ensureTensorsRank2OrHigher(n){const e=[];n instanceof Tensor&&(n=[n]);for(let t=0;t<n.length;++t){const s=n[t];if(s.rank===1)e.push(expandDims$2(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function disposeNewTensors(n,e){if(n==null)return;const t=[];if(e instanceof Tensor)t.push(e.id);else if(Array.isArray(e))e.forEach(r=>t.push(r.id));else if(e!=null)for(const r in e){const i=e[r];t.push(i.id)}const s=[];if(n instanceof Tensor)t.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{t.indexOf(r.id)===-1&&s.push(r)});else if(n!=null)for(const r in n){const i=n[r];t.indexOf(i.id)===-1&&s.push(i)}s.forEach(r=>{r.isDisposed||r.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function isDataTensor(n){return n instanceof Tensor}function isDataArray(n){return Array.isArray(n)}function isDataDict(n){return!isDataTensor(n)&&!isDataArray(n)}function standardizeInputData(n,e,t,s=!0,r=""){if(e==null||e.length===0){if(n!=null){let a=!1;if(isDataArray(n)&&n.length>0)a=!0;else if(isDataDict(n)){for(const c in n)if(n.hasOwnProperty(c)){a=!0;break}}else a=!0;if(a)throw new ValueError(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(a=>null);let i;if(isDataDict(n)){n=n,i=[];for(const a of e){if(n[a]==null)throw new ValueError(`No data provided for "${a}". Need data for each key in: ${e}`);i.push(n[a])}}else if(isDataArray(n)){if(n=n,n.length!==e.length)throw new ValueError(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);i=n}else{if(n=n,e.length>1)throw new ValueError(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);i=[n]}if(i=ensureTensorsRank2OrHigher(i),t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;const c=i[a];if(c.shape.length!==t[a].length)throw new ValueError(`Error when checking ${r}: expected ${e[a]} to have ${t[a].length} dimension(s). but got array with shape ${c.shape}`);for(let u=0;u<t[a].length;++u){if(u===0&&!s)continue;const l=c.shape[u],h=t[a][u];if(h!=null&&h>=0&&l!==h)throw new ValueError(`Error when checking ${r}: expected ${e[a]} to have shape [${t[a]}], but got array with shape [${c.shape}].`)}}return i}function checkArrayLengths(n,e,t){const s=unique$3(n.map(i=>i.shape[0]));s.sort();const r=unique$3(e.map(i=>i.shape[0]));if(r.sort(),s.length>1)throw new ValueError(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(i=>i.shape))}`);if(r.length>1)throw new ValueError(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(i=>i.shape))}`);if(s.length>0&&r.length>0&&!arraysEqual(s,r))throw new ValueError(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function checkLossAndTargetCompatibility(n,e,t){const s=[meanSquaredError,binaryCrossentropy$1,categoricalCrossentropy$1];for(let r=0;r<n.length;++r){const i=n[r],a=e[r],c=t[r];if(a!=null){if(a===categoricalCrossentropy$1&&i.shape[i.shape.length-1]===1)throw new ValueError(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(a)!==-1){const u=i.shape.slice(1),l=c.slice(1);for(let h=0;h<u.length;++h){const d=u[h],f=l[h];if(f!=null&&d!==f)throw new ValueError(`A target Tensor with shape ${i.shape} was passed for an output of shape ${c}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function checkInputData(n,e,t,s=!0,r=""){let i;if(Array.isArray(n)){if(n.length!==e.length)throw new ValueError(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);i=n}else{if(e.length>1)throw new ValueError(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);i=[n]}if(t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;const c=i[a];if(c.shape.length!==t[a].length)throw new ValueError(`Error when checking ${r}: expected ${e[a]} to have ${t[a].length} dimension(s), but got array with shape ${JSON.stringify(c.shape)}`);for(let u=0;u<t[a].length;++u){if(u===0&&!s)continue;const l=c.shape[u],h=t[a][u];if(h!=null&&h!==l)throw new ValueError(`Error when checking ${r}: expected ${e[a]} to have shape ${JSON.stringify(t[a])} but got array with shape ${JSON.stringify(c.shape)}.`)}}}function collectMetrics(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(s=>t);{const s=[];for(const r of e){let i=t.hasOwnProperty(r)?t[r]:[];Array.isArray(i)||(i=[i]),s.push(i)}return s}}const LAYERS_MODEL_FORMAT_NAME="layers-model";class LayersModel extends Container{constructor(e){super(e);this.isTraining=!1}summary(e,t,s=console.log){if(!this.built)throw new ValueError("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");printSummary(this,e,t,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=getOptimizer(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Optimizer))throw new ValueError("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new ValueError(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(const a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(get$1(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new ValueError(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(c=>get$1(c))}else{const a=get$1(e.loss);this.outputs.forEach(c=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const c=this.internalOutputShapes[a],u=this.outputNames[a];this.feedOutputNames.push(u),this.feedOutputShapes.push(c),this.feedLossFns.push(this.lossFunctions[a])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],nameScope("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const c=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([c,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});const r=collectMetrics(e.metrics,this.outputNames),i=(a,c,u)=>{this.outputNames.length>1&&(c=this.outputNames[a]+"_"+c),this.metricsNames.push(c),this.metricsTensors.push([u,a])};nameScope("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const c=r[a];(l=>{const h="";let d,f,y;for(const g of l){if(typeof g=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(g)!==-1){const b=this.internalOutputShapes[a];b[b.length-1]===1||this.lossFunctions[a]===binaryCrossentropy$1?["accuracy","acc"].indexOf(g)!==-1?f=binaryAccuracy:["crossentropy","ce"].indexOf(g)!==-1&&(f=binaryCrossentropy):this.lossFunctions[a]===sparseCategoricalCrossentropy$1?["accuracy","acc"].indexOf(g)!==-1?f=sparseCategoricalAccuracy:["crossentropy","ce"].indexOf(g)!==-1&&(f=sparseCategoricalCrossentropy):["accuracy","acc"].indexOf(g)!==-1?f=categoricalAccuracy:["crossentropy","ce"].indexOf(g)!==-1&&(f=categoricalCrossentropy);let v;["accuracy","acc"].indexOf(g)!==-1?v="acc":["crossentropy","ce"].indexOf(g)!==-1&&(v="ce"),y=f,d=h+v}else y=get(g),d=h+getLossOrMetricName(g);let x;nameScope(d,()=>{x=y}),i(a,d,x)}})(c)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,s={}){const r=s.batchSize==null?32:s.batchSize;checkBatchSize(r);const i=!0,a=this.standardizeUserDataXY(e,t,i,r);try{const c=a[0].concat(a[1]);this.makeTestFunction();const u=this.testFunction,l=this.testLoop(u,c,r,s.verbose,s.steps);return singletonOrArray(l)}finally{disposeNewTensors(a[0],e),disposeNewTensors(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),evaluateDataset(this,e,t)}checkNumSamples(e,t,s,r="steps"){let i;if(s!=null){if(i=null,t!=null)throw new ValueError(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?i=e[0].shape[0]:i=e.shape[0];else throw new ValueError(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return i}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new ValueError("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(t),r=s?t:[t],i=this.retrieveSymbolicTensors(r),a=new FeedDict;if(e instanceof Tensor&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new ValueError(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)a.add(this.inputs[u],e[u])}else for(const u of this.inputs){const l=e[u.name];if(l==null)throw new ValueError(`No value is provided for the model's input ${u.name}`);a.add(u,l)}const c=execute(i,a);return s?c:c[0]}retrieveSymbolicTensors(e){const t=pyListRepeat(null,e.length);let s=e.length;for(const r of this.layers){const i=Array.isArray(r.output)?r.output:[r.output],a=i.map(c=>c.name);for(let c=0;c<e.length;++c){const u=a.indexOf(e[c]);if(u!==-1&&(t[c]=i[u],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw t.forEach((i,a)=>{i==null&&r.push(e[a])}),new ValueError(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,s=!1){return tidy(()=>{const r=this.checkNumSamples(e);if(s)throw new NotImplementedError("Verbose predictLoop() is not implemented yet.");const i=makeBatches(r,t),a=this.outputs.map(c=>[]);for(let c=0;c<i.length;++c)tidy(()=>{const l=i[c][0],h=i[c][1],d=sliceArrays(e,l,h),f=[];if(Array.isArray(d))for(let g=0;g<d.length;++g)f.push({key:this.inputs[g],value:d[g]});else f.push({key:this.inputs[0],value:d});const y=new FeedDict(f);return execute(this.outputs,y)}).forEach((l,h)=>a[h].push(l));return singletonOrArray(a.map(c=>concat$2(c,0)))})}predict(e,t={}){const s=ensureTensorsRank2OrHigher(e);checkInputData(s,this.inputNames,this.feedInputShapes,!1);try{const r=t.batchSize==null?32:t.batchSize;return checkBatchSize(r),this.predictLoop(s,r)}finally{disposeNewTensors(s,e)}}predictOnBatch(e){checkInputData(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,s=!0,r){if(this.optimizer_==null)throw new RuntimeError("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const i=[];for(let a=0;a<this.feedOutputShapes.length;++a){const c=this.feedOutputShapes[a];this.feedLossFns[a]===sparseCategoricalCrossentropy$1?i.push(c.slice(0,c.length-1).concat([1])):i.push(c)}if(e=standardizeInputData(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=standardizeInputData(t,this.feedOutputNames,i,!1,"target"),checkArrayLengths(e,t),checkLossAndTargetCompatibility(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!=0)throw new ValueError(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,s,r,i=!0,a){const[c,u]=this.standardizeUserDataXY(e,t,i,a);if(s!=null)throw new Error("sample weight is not supported yet.");let l=null;if(r!=null){const h=standardizeClassWeights(r,this.outputNames);l=[];for(let d=0;d<h.length;++d)l.push(await standardizeWeights(u[d],null,h[d]))}return[c,u,l]}testLoop(e,t,s,r=0,i){return tidy(()=>{const a=this.checkNumSamples(t,s,i,"steps"),c=[];if(r>0)throw new NotImplementedError("Verbose mode is not implemented yet.");if(i!=null)throw new NotImplementedError("steps mode in testLoop() is not implemented yet");{const u=makeBatches(a,s),l=tensor1d(range$3(0,a));for(let h=0;h<u.length;++h){const d=u[h][0],f=u[h][1],y=sliceAlongFirstAxis(l,d,f-d),g=sliceArraysByIndices(t,y),x=e(g);if(h===0)for(let b=0;b<x.length;++b)c.push(scalar(0));for(let b=0;b<x.length;++b){const v=x[b];c[b]=add$1(c[b],mul(f-d,v))}}for(let h=0;h<c.length;++h)c[h]=div$1(c[h],a)}return c})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let s=0;s<e.length;++s){const r=e[s];let i=r;count(e,r)>1&&(i+=`_${count(e.slice(0,s),r)}`),t.push(i)}return t}makeTrainFunction(){return e=>{const t=[],s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],c=()=>{const d=[];for(let x=0;x<this.inputs.length;++x)d.push({key:this.inputs[x],value:s[x]});const f=new FeedDict(d),y=execute(this.outputs,f,{training:!0});let g;for(let x=0;x<this.lossFunctions.length;++x){let v=this.lossFunctions[x](r[x],y[x]);i[x]!=null&&(v=computeWeightedLoss(v,i[x]));const S=mean$1(v);t.push(S),x===0?g=v:g=add$1(g,v)}for(let x=0;x<this.metricsTensors.length;++x){let b;if(this.outputs.length>1&&x<this.outputs.length)b=t[x];else{const v=this.metricsTensors[x][0],S=this.metricsTensors[x][1];b=mean$1(v(r[S],y[S]))}keep(b),a.push(b)}return g=mean$1(g),this.calculateLosses().forEach(x=>{g=add$1(g,x)}),g},u=this.collectedTrainableWeights.map(d=>d.read()),l=!0;return[this.optimizer_.minimize(c,l,u)].concat(a)}}makeTestFunction(){this.testFunction=e=>tidy(()=>{const t=[];let s;const r=e.slice(0,this.inputs.length),i=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let l=0;l<this.inputs.length;++l)a.push({key:this.inputs[l],value:r[l]});const c=new FeedDict(a),u=execute(this.outputs,c);for(let l=0;l<this.lossFunctions.length;++l){const h=this.lossFunctions[l],d=mean$1(h(i[l],u[l]));l===0?s=d:s=add$1(s,d),t.push(s)}for(let l=0;l<this.metricsTensors.length;++l){const h=this.metricsTensors[l][0],d=this.metricsTensors[l][1],f=mean$1(h(i[d],u[d]));t.push(f)}return t})}async fit(e,t,s={}){return fitTensors(this,e,t,s)}async fitDataset(e,t){return fitDataset(this,e,t)}async trainOnBatch(e,t){const s=await this.standardizeUserData(e,t),r=s[0],i=s[1],c=this.makeTrainFunction()(r.concat(i)),u=[];for(const l of c){const h=await l.data();u.push(h[0])}return dispose(c),singletonOrArray(u)}getNamedWeights(e){const t=[],s=e!=null&&e.trainableOnly,r=s?this.trainableWeights:this.weights,i=this.getWeights(s);for(let a=0;a<r.length;++a)s&&!r[a].trainable||t.push({name:r[a].originalName,tensor:i[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=memory().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-memory().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=toSnakeCase(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>toSnakeCase(t))}else{const t=Object.keys(this.loss);e={};const s=this.loss;for(const r of t)if(typeof s[r]=="string")e[r]=toSnakeCase(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[toSnakeCase(getLossOrMetricName(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>toSnakeCase(getLossOrMetricName(e)));{const e={};for(const t in this.metrics)e[t]=toSnakeCase(getLossOrMetricName(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=convertPythonicToTs(e.optimizer_config),s=deserialize(t);let r;if(typeof e.loss=="string")r=toCamelCase(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(a=>toCamelCase(a));else if(e.loss!=null){r={};for(const a in e.loss)r[a]=toCamelCase(e.loss[a])}let i;if(Array.isArray(e.metrics))i=e.metrics.map(a=>toCamelCase(a));else if(e.metrics!=null){i={};for(const a in e.metrics)i[a]=toCamelCase(e.metrics[a])}this.compile({loss:r,metrics:i,optimizer:s})}async save(e,t){if(typeof e=="string"){const l=getSaveHandlers(e);if(l.length===0)throw new ValueError(`Cannot find any save handlers for URL '${e}'`);if(l.length>1)throw new ValueError(`Found more than one (${l.length}) save handlers for URL '${e}'`);e=l[0]}if(e.save==null)throw new ValueError("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await encodeWeights(this.getNamedWeights(t)),r=!1,i=null,c={modelTopology:this.toJSON(i,r),format:LAYERS_MODEL_FORMAT_NAME,generatedBy:`TensorFlow.js tfjs-layers v${version$6}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){c.trainingConfig=this.getTrainingConfig();const l="optimizer",{data:h,specs:d}=await encodeWeights(await this.optimizer.getWeights(),l);s.specs.push(...d),s.data=concatenateArrayBuffers([s.data,h])}if(this.userDefinedMetadata!=null){const l=!0;checkUserDefinedMetadata(this.userDefinedMetadata,this.name,l),c.userDefinedMetadata=this.userDefinedMetadata}return c.weightData=s.data,c.weightSpecs=s.specs,e.save(c)}setUserDefinedMetadata(e){checkUserDefinedMetadata(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}LayersModel.className="Model";registerClass(LayersModel);class Functional extends LayersModel{}Functional.className="Functional";registerClass(Functional);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Sequential extends LayersModel{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:getUid("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new ValueError(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Sequential||e instanceof LayersModel;let s;if(t){if(s=e,s.outputs.length!==1)throw new ValueError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new ValueError("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new ValueError("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=Input({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new ValueError(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new ValueError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=getSourceInputs(this.outputs[0])}this.inboundNodes=[],new Node({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:pyListRepeat(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(getExactlyOneShape(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new LayersModel({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,s=console.log){this.built||this.build(),super.summary(e,t,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,s={}){if(!this.built)throw new RuntimeError("The model needs to be compiled before being used.");return this.model.evaluate(e,t,s)}async evaluateDataset(e,t){if(!this.built)throw new RuntimeError("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,s={}){if(!this.built)throw new RuntimeError("The model needs to be compiled before being used.");return this.model.fit(e,t,s)}async fitDataset(e,t){if(!this.built)throw new RuntimeError("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,s={},r=!1){let i,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new ValueError("Legacy serialization format not supported yet.");i=t}else assert$2(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),i=t.layers,delete t.layers,a=t;const c=new e(a);if(!(c instanceof Sequential))throw new NotImplementedError(`Sequential.fromConfig called on non-Sequential input: ${c}`);for(const u of i){const h=deserialize(u,void 0,r);r&&h.setFastWeightInitDuringBuild(!0),c.add(h)}return c}set stopTraining(e){if(this.model==null)throw new ValueError("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new ValueError("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const s={};s.className=t.getClassName(),s.config=t.getConfig(),e.push(s)}return{name:this.name,layers:e}}}Sequential.className="Sequential";registerClass(Sequential);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Activation$1 extends Serializable{getConfig(){return{}}}class Elu extends Activation$1{apply(e,t=1){return elu$2(e,t)}}Elu.className="elu";registerClass(Elu);class Selu extends Activation$1{apply(e){return selu$2(e)}}Selu.className="selu";registerClass(Selu);class Relu extends Activation$1{apply(e){return relu$2(e)}}Relu.className="relu";registerClass(Relu);class Relu6 extends Activation$1{apply(e){return tidy(()=>minimum$2(6,relu$2(e)))}}Relu6.className="relu6";registerClass(Relu6);class Linear extends Activation$1{apply(e){return e}}Linear.className="linear";registerClass(Linear);class Sigmoid extends Activation$1{apply(e){return sigmoid$2(e)}}Sigmoid.className="sigmoid";registerClass(Sigmoid);class HardSigmoid extends Activation$1{apply(e){return hardSigmoid(e)}}HardSigmoid.className="hardSigmoid";registerClass(HardSigmoid);class Softplus extends Activation$1{apply(e){return softplus$2(e)}}Softplus.className="softplus";registerClass(Softplus);class Softsign extends Activation$1{apply(e){return softsign(e)}}Softsign.className="softsign";registerClass(Softsign);class Tanh extends Activation$1{apply(e){return tanh$2(e)}}Tanh.className="tanh";registerClass(Tanh);class Softmax$1 extends Activation$1{apply(e,t=-1){return softmax$2(e,t)}}Softmax$1.className="softmax";registerClass(Softmax$1);class LogSoftmax extends Activation$1{apply(e,t=-1){return logSoftmax(e,t)}}LogSoftmax.className="logSoftmax";registerClass(LogSoftmax);class Swish extends Activation$1{apply(e,t=1){return tidy(()=>sigmoid$2(e.mul(t)).mul(e))}}Swish.className="swish";registerClass(Swish);function serializeActivation(n){return n.getClassName()}function deserializeActivation(n,e={}){return deserializeKerasObject(n,SerializationMap.getMap().classNameMap,e,"activation")}function getActivation(n){if(n==null){const e={};return e.className="linear",e.config={},deserializeActivation(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},deserializeActivation(e)}else return n instanceof Activation$1?n:deserializeActivation(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function assertObjectArgs(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class Regularizer extends Serializable{}class L1L2 extends Regularizer{constructor(e){super();assertObjectArgs(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return tidy(()=>{let t=zeros$1([1]);return this.hasL1&&(t=add$1(t,sum$2(mul(this.l1,abs$2(e))))),this.hasL2&&(t=add$1(t,sum$2(mul(this.l2,square$1(e))))),t.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}L1L2.className="L1L2";registerClass(L1L2);const REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP={l1l2:"L1L2"};function serializeRegularizer(n){return serializeKerasObject(n)}function deserializeRegularizer(n,e={}){return deserializeKerasObject(n,SerializationMap.getMap().classNameMap,e,"regularizer")}function getRegularizer(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP?REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[n]:n,config:{}};return deserializeRegularizer(t)}else return n instanceof Regularizer?n:deserializeRegularizer(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ReLU extends Layer{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=getExactlyOneTensor(e);let s=relu$2(e);return this.maxValue!=null&&(s=clipByValue$1(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}ReLU.className="ReLU";registerClass(ReLU);class LeakyReLU extends Layer{constructor(e){super(e==null?{}:e);this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=getExactlyOneTensor(e);return leakyRelu$2(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}LeakyReLU.className="LeakyReLU";registerClass(LeakyReLU);class PReLU extends Layer{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=getInitializer(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=getRegularizer(e.alphaRegularizer),this.alphaConstraint=getConstraint(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new ValueError(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=getExactlyOneShape(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)s[r]=e[r];this.inputSpec=[new InputSpec({ndim:e.length,axes:s})],this.built=!0}call(e,t){return e=getExactlyOneTensor(e),prelu$2(e,this.alpha.read())}getConfig(){const e={alphaInitializer:serializeInitializer(this.alphaInitializer),alphaRegularizer:serializeRegularizer(this.alphaRegularizer),alphaConstraint:serializeConstraint(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}PReLU.className="PReLU";registerClass(PReLU);class ELU$3 extends Layer{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new NotImplementedError(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=getExactlyOneTensor(e);return elu$3(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}ELU$3.className="ELU";registerClass(ELU$3);class ThresholdedReLU extends Layer{constructor(e){super(e==null?{}:e);this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const s=getExactlyOneTensor(e);return s.mul(cast$2(s.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}ThresholdedReLU.className="ThresholdedReLU";registerClass(ThresholdedReLU);class Softmax extends Layer{constructor(e){super(e==null?{}:e);this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new Softmax$1().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){const s=getExactlyOneTensor(e);return this.softmax(s,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}Softmax.className="Softmax";registerClass(Softmax);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function normalizeArray(n,e,t){if(typeof n=="number")return pyListRepeat(n,e);if(n.length!==e)throw new ValueError(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let s=0;s<e;++s){const r=n[s];if(!isInteger(r))throw new ValueError(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}function convOutputLength(n,e,t,s,r=1){if(n==null)return n;const i=e+(e-1)*(r-1);let a;return t==="same"?a=n:a=n-i+1,Math.floor((a+s-1)/s)}function deconvLength(n,e,t,s){if(n==null)return null;if(s==="valid")n=n*e+max$2([t-e,0]);else if(s==="same")n=n*e;else throw new ValueError(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function preprocessConv2DInput(n,e){return tidy(()=>(checkDataFormat(e),e==="channelsFirst"?transpose$3(n,[0,2,3,1]):n))}function preprocessConv3DInput(n,e){return tidy(()=>(checkDataFormat(e),e==="channelsFirst"?transpose$3(n,[0,2,3,4,1]):n))}function conv1dWithBias(n,e,t,s=1,r="valid",i,a=1){return tidy(()=>{if(i==null&&(i=imageDataFormat()),checkDataFormat(i),n.shape.length!==3)throw new ValueError(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new ValueError(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new ValueError(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(i==="channelsFirst"&&(n=transpose$3(n,[0,2,1])),r==="causal")throw new NotImplementedError("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let c=conv1d(n,e,s,r==="same"?"same":"valid","NWC",a);return t!=null&&(c=biasAdd(c,t)),c})}function conv2dWithBiasActivation(n,e,t,s=[1,1],r="valid",i,a,c=null){return tidy(()=>{if(i==null&&(i=imageDataFormat()),checkDataFormat(i),n.rank!==3&&n.rank!==4)throw new ValueError(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new ValueError(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let u=preprocessConv2DInput(n,i);if(r==="causal")throw new NotImplementedError("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=conv2d$1({x:u,filter:e,strides:s,pad:r==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:t,activation:c}),i==="channelsFirst"&&(u=transpose$3(u,[0,3,1,2])),u})}function conv3dWithBias(n,e,t,s=[1,1,1],r="valid",i,a){return tidy(()=>{if(i==null&&(i=imageDataFormat()),checkDataFormat(i),n.rank!==4&&n.rank!==5)throw new ValueError(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new ValueError(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let c=preprocessConv3DInput(n,i);if(r==="causal")throw new NotImplementedError("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return c=conv3d(c,e,s,r==="same"?"same":"valid","NDHWC",a),t!=null&&(c=biasAdd(c,t)),i==="channelsFirst"&&(c=transpose$3(c,[0,4,1,2,3])),c})}class BaseConv extends Layer{constructor(e,t){super(t);if(this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",BaseConv.verifyArgs(t),this.rank=e,assertPositiveInteger(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new NotImplementedError(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=normalizeArray(t.kernelSize,e,"kernelSize"),this.strides=normalizeArray(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,checkPaddingMode(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,checkDataFormat(this.dataFormat),this.activation=getActivation(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=getInitializer(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=getConstraint(t.biasConstraint),this.biasRegularizer=getRegularizer(t.biasRegularizer),this.activityRegularizer=getRegularizer(t.activityRegularizer),this.dilationRate=normalizeArray(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new ValueError(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new ValueError(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new ValueError(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(assert$1("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!checkArrayTypeAndLength(e.kernelSize,"number",1,3))throw new ValueError(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:serializeActivation(this.activation),useBias:this.useBias,biasInitializer:serializeInitializer(this.biasInitializer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),biasConstraint:serializeConstraint(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Conv extends BaseConv{constructor(e,t){super(e,t);this.kernel=null,Conv.verifyArgs(t),this.filters=t.filters,assertPositiveInteger(this.filters,"filters"),this.kernelInitializer=getInitializer(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=getConstraint(t.kernelConstraint),this.kernelRegularizer=getRegularizer(t.kernelRegularizer)}build(e){e=getExactlyOneShape(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new ValueError(`The channel dimension of the input should be defined. Found ${e[t]}`);const s=e[t],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:s}}],this.built=!0}call(e,t){return tidy(()=>{e=getExactlyOneTensor(e);let s;const r=this.bias==null?null:this.bias.read(),i=mapActivationToFusedKernel(this.activation.getClassName());if(i!=null&&this.rank===2)s=conv2dWithBiasActivation(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,i);else{if(this.rank===1)s=conv1dWithBias(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=conv2dWithBiasActivation(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=conv3dWithBias(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new NotImplementedError("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=getExactlyOneShape(e);const t=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let i=0;i<s.length;++i){const a=convOutputLength(s[i],this.kernelSize[i],this.padding,this.strides[i],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[i]);t.push(a)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:serializeInitializer(this.kernelInitializer),kernelRegularizer:serializeRegularizer(this.kernelRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new ValueError(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Conv2D extends Conv{constructor(e){super(2,e);Conv2D.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!checkArrayTypeAndLength(e.kernelSize,"number",1,2))throw new ValueError(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Conv2D.className="Conv2D";registerClass(Conv2D);class Conv3D extends Conv{constructor(e){super(3,e);Conv3D.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new ValueError(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Conv3D.className="Conv3D";registerClass(Conv3D);class Conv2DTranspose extends Conv2D{constructor(e){super(e);if(this.inputSpec=[new InputSpec({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new ValueError(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=getExactlyOneShape(e),e.length!==4)throw new ValueError("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new ValueError("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new InputSpec({ndim:4,axes:{[t]:s}})],this.built=!0}call(e,t){return tidy(()=>{let s=getExactlyOneTensor(e);if(s.shape.length!==4)throw new ValueError(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,i=r[0];let a,c;this.dataFormat==="channelsFirst"?(a=2,c=3):(a=1,c=2);const u=r[a],l=r[c],h=this.kernelSize[0],d=this.kernelSize[1],f=this.strides[0],y=this.strides[1],g=deconvLength(u,f,h,this.padding),x=deconvLength(l,y,d,this.padding),b=[i,g,x,this.filters];this.dataFormat!=="channelsLast"&&(s=transpose$3(s,[0,2,3,1]));let v=conv2dTranspose(s,this.kernel.read(),b,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(v=transpose$3(v,[0,3,1,2])),this.bias!=null&&(v=biasAdd(v,this.bias.read(),this.dataFormat)),this.activation!=null&&(v=this.activation.apply(v)),v})}computeOutputShape(e){e=getExactlyOneShape(e);const t=e.slice();let s,r,i;this.dataFormat==="channelsFirst"?(s=1,r=2,i=3):(s=3,r=1,i=2);const a=this.kernelSize[0],c=this.kernelSize[1],u=this.strides[0],l=this.strides[1];return t[s]=this.filters,t[r]=deconvLength(t[r],u,a,this.padding),t[i]=deconvLength(t[i],l,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Conv2DTranspose.className="Conv2DTranspose";registerClass(Conv2DTranspose);class SeparableConv extends Conv{constructor(e,t){super(e,t);if(this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new ValueError("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new ValueError("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new ValueError(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=getInitializer(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=getRegularizer(t.depthwiseRegularizer),this.depthwiseConstraint=getConstraint(t.depthwiseConstraint),this.pointwiseInitializer=getInitializer(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=getRegularizer(t.pointwiseRegularizer),this.pointwiseConstraint=getConstraint(t.pointwiseConstraint)}build(e){if(e=getExactlyOneShape(e),e.length<this.rank+2)throw new ValueError(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new ValueError(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const s=e[t],r=this.kernelSize.concat([s,this.depthMultiplier]),i=[];for(let c=0;c<this.rank;++c)i.push(1);i.push(s*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",i,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new InputSpec({ndim:this.rank+2,axes:{[t]:s}})],this.built=!0}call(e,t){return tidy(()=>{e=getExactlyOneTensor(e);let s;if(this.rank===1)throw new NotImplementedError("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=transpose$3(e,[0,2,3,1])),s=separableConv2d(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=biasAdd(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=transpose$3(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=serializeInitializer(this.depthwiseInitializer),e.pointwiseInitializer=serializeInitializer(this.pointwiseInitializer),e.depthwiseRegularizer=serializeRegularizer(this.depthwiseRegularizer),e.pointwiseRegularizer=serializeRegularizer(this.pointwiseRegularizer),e.depthwiseConstraint=serializeConstraint(this.depthwiseConstraint),e.pointwiseConstraint=serializeConstraint(this.pointwiseConstraint),e}}SeparableConv.className="SeparableConv";class SeparableConv2D extends SeparableConv{constructor(e){super(2,e)}}SeparableConv2D.className="SeparableConv2D";registerClass(SeparableConv2D);class Conv1D extends Conv{constructor(e){super(1,e);Conv1D.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!checkArrayTypeAndLength(e.kernelSize,"number",1,1))throw new ValueError(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Conv1D.className="Conv1D";registerClass(Conv1D);class Cropping2D extends Layer{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return tidy(()=>{if(e=getExactlyOneTensor(e),this.dataFormat==="channelsLast"){const s=sliceAlongAxis(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return sliceAlongAxis(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=sliceAlongAxis(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return sliceAlongAxis(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Cropping2D.className="Cropping2D";registerClass(Cropping2D);class UpSampling2D extends Layer{constructor(e){super(e);this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,checkDataFormat(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,checkInterpolationFormat(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,s]}else{const t=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],t,s,e[3]]}}call(e,t){return tidy(()=>{let s=getExactlyOneTensor(e);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=transpose$3(s,[0,2,3,1]);const i=this.size[0]*r[2],a=this.size[1]*r[3],c=this.interpolation==="nearest"?s.resizeNearestNeighbor([i,a]):s.resizeBilinear([i,a]);return transpose$3(c,[0,3,1,2])}else{const i=this.size[0]*r[1],a=this.size[1]*r[2];return this.interpolation==="nearest"?s.resizeNearestNeighbor([i,a]):s.resizeBilinear([i,a])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}UpSampling2D.className="UpSampling2D";registerClass(UpSampling2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function depthwiseConv2d(n,e,t=[1,1],s="valid",r,i){return tidy(()=>{r==null&&(r=imageDataFormat()),checkDataFormat(r);let a=preprocessConv2DInput(n,r);if(n.rank!==4)throw new ValueError(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new ValueError(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=depthwiseConv2d$1(a,e,t,s==="same"?"same":"valid","NHWC",i),r==="channelsFirst"&&(a=transpose$3(a,[0,3,1,2])),a})}class DepthwiseConv2D extends BaseConv{constructor(e){super(2,e);this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=getInitializer(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=getConstraint(e.depthwiseConstraint),this.depthwiseRegularizer=getRegularizer(e.depthwiseRegularizer)}build(e){if(e=getExactlyOneShape(e),e.length<4)throw new ValueError(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new ValueError(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const s=e[t],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return tidy(()=>{e=getExactlyOneTensor(e);let s=depthwiseConv2d(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=biasAdd(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=getExactlyOneShape(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,i=convOutputLength(t,this.kernelSize[0],this.padding,this.strides[0]),a=convOutputLength(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,i,a]:[e[0],i,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=serializeInitializer(this.depthwiseInitializer),e.depthwiseRegularizer=serializeRegularizer(this.depthwiseRegularizer),e.depthwiseConstraint=serializeConstraint(this.depthwiseRegularizer),e}}DepthwiseConv2D.className="DepthwiseConv2D";registerClass(DepthwiseConv2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function standardizeArgs(n,e,t,s){if(Array.isArray(n)){if(e!=null||t!=null)throw new ValueError("When inputs is an array, neither initialState or constants should be provided");s!=null&&(t=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function r(i){return i==null||Array.isArray(i)?i:[i]}return e=r(e),t=r(t),{inputs:n,initialState:e,constants:t}}function rnn(n,e,t,s=!1,r,i,a=!1,c=!1){return tidy(()=>{const u=e.shape.length;if(u<3)throw new ValueError(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(range$3(2,u));if(e=transpose$3(e,l),i!=null)throw new NotImplementedError("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=r.asType("bool").asType("float32"),r.rank===u-1&&(r=expandDims$3(r,-1)),r=transpose$3(r,l)),s&&(e=reverse$2(e,0),r!=null&&(r=reverse$2(r,0)));const h=[];let d,f=t;const y=e.shape[0],g=unstack(e);let x;r!=null&&(x=unstack(r));for(let v=0;v<y;++v){const S=g[v],T=tidy(()=>n(S,f));if(r==null)d=T[0],f=T[1];else{const w=tidy(()=>{const C=x[v],N=onesLike$2(C).sub(C),_=T[0].mul(C).add(f[0].mul(N)),$=f.map((E,k)=>T[1][k].mul(C).add(E.mul(N)));return{output:_,newStates:$}});d=w.output,f=w.newStates}c&&h.push(d)}let b;return c&&(b=stack(h,1)),[d,b,f]})}class RNN extends Layer{constructor(e){super(e);let t;if(e.cell==null)throw new ValueError("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new StackedRNNCells({cells:e.cell}):t=e.cell,t.stateSize==null)throw new ValueError("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new InputSpec({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return range$3(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){isArrayOfShapes(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const s=t[0];let r;if(this.returnSequences?r=[e[0],e[1],s]:r=[e[0],s],this.returnState){const i=[];for(const a of t)i.push([e[0],a]);return[r].concat(i)}else return r}computeMask(e,t){return tidy(()=>{Array.isArray(t)&&(t=t[0]);const s=this.returnSequences?t:null;if(this.returnState){const r=this.states.map(i=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let s=0;s<e;++s)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new NotImplementedError("Constants support is not implemented in RNN yet.");isArrayOfShapes(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new InputSpec({shape:[t,null,...s]});const r=[e[0]].concat(e.slice(2));this.cell.build(r);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!arraysEqual(this.stateSpec.map(a=>a.shape[a.shape.length-1]),i))throw new ValueError(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(a=>new InputSpec({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){tidy(()=>{if(!this.stateful)throw new AttributeError("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new ValueError("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>zeros$1([s,r])):this.states_=[zeros$1([s,this.cell.stateSize])];else if(e==null)dispose(this.states_),this.keptStates!=null&&(dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>zeros$1([s,r])):this.states_[0]=zeros$1([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ValueError(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):dispose(this.states_);for(let r=0;r<this.states_.length;++r){const i=e[r],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,c=[s,a];if(!arraysEqual(i.shape,c))throw new ValueError(`State ${r} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${i.shape}`);this.states_[r]=i}}this.states_=this.states_.map(r=>keep(r.clone()))})}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const i=standardizeArgs(e,s,r,this.numConstants);e=i.inputs,s=i.initialState,r=i.constants;let a=[],c=[];if(s!=null){t.initialState=s,a=a.concat(s),this.stateSpec=[];for(const l of s)this.stateSpec.push(new InputSpec({shape:l.shape}));c=c.concat(this.stateSpec)}if(r!=null&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof SymbolicTensor){const l=[e].concat(a),h=this.inputSpec.concat(c),d=this.inputSpec;this.inputSpec=h;const f=super.apply(l,t);return this.inputSpec=d,f}else return super.apply(e,t)}call(e,t){return tidy(()=>{const s=t==null?null:t.mask,r=t==null?null:t.training;let i=t==null?null:t.initialState;e=getExactlyOneTensor(e),i==null&&(this.stateful?i=this.states_:i=this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==a)throw new ValueError(`RNN Layer has ${a} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const c={training:r},l=rnn((g,x)=>{const b=this.cell.call([g].concat(x),c);return[b[0],b.slice(1)]},e,i,this.goBackwards,s,null,this.unroll,this.returnSequences),h=l[0],d=l[1],f=l[2];this.stateful&&this.resetStates(f,r);const y=this.returnSequences?d:h;return this.returnState?[y].concat(f):y})}getInitialState(e){return tidy(()=>{let t=zeros$1(e.shape);return t=sum$2(t,[1,2]),t=expandDims$2(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?tile$2(t,[1,s]):t):this.cell.stateSize>1?[tile$2(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===RNN.className&&(t.cell={className:this.cell.getClassName(),config:s}),Object.assign({},s,e,t)}static fromConfig(e,t,s={}){const r=t.cell,i=deserialize(r,s);return new e(Object.assign(t,{cell:i}))}}RNN.className="RNN";registerClass(RNN);class RNNCell extends Layer{}class SimpleRNNCell extends RNNCell{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,assertPositiveInteger(this.units,"units"),this.activation=getActivation(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=getInitializer(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=getInitializer(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=getInitializer(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=getRegularizer(e.kernelRegularizer),this.recurrentRegularizer=getRegularizer(e.recurrentRegularizer),this.biasRegularizer=getRegularizer(e.biasRegularizer),this.kernelConstraint=getConstraint(e.kernelConstraint),this.recurrentConstraint=getConstraint(e.recurrentConstraint),this.biasConstraint=getConstraint(e.biasConstraint),this.dropout=min$2([1,max$2([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=min$2([1,max$2([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=getExactlyOneShape(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return tidy(()=>{if(e=e,e.length!==2)throw new ValueError(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=generateDropoutMask({ones:()=>onesLike$2(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=generateDropoutMask({ones:()=>onesLike$2(s),rate:this.recurrentDropout,training:r}));let i;const a=this.dropoutMask,c=this.recurrentDropoutMask;a!=null?i=dot(mul(e,a),this.kernel.read()):i=dot(e,this.kernel.read()),this.bias!=null&&(i=biasAdd(i,this.bias.read())),c!=null&&(s=mul(s,c));let u=add$1(i,dot(s,this.recurrentKernel.read()));return this.activation!=null&&(u=this.activation.apply(u)),[u,u]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:serializeActivation(this.activation),useBias:this.useBias,kernelInitializer:serializeInitializer(this.kernelInitializer),recurrentInitializer:serializeInitializer(this.recurrentInitializer),biasInitializer:serializeInitializer(this.biasInitializer),kernelRegularizer:serializeRegularizer(this.kernelRegularizer),recurrentRegularizer:serializeRegularizer(this.recurrentRegularizer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint),recurrentConstraint:serializeConstraint(this.recurrentConstraint),biasConstraint:serializeConstraint(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}SimpleRNNCell.className="SimpleRNNCell";registerClass(SimpleRNNCell);class SimpleRNN extends RNN{constructor(e){e.cell=new SimpleRNNCell(e);super(e)}call(e,t){return tidy(()=>{this.cell.dropoutMask!=null&&(dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:i})})}static fromConfig(e,t){return new e(t)}}SimpleRNN.className="SimpleRNN";registerClass(SimpleRNN);class GRUCell extends RNNCell{constructor(e){super(e);if(this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new ValueError("GRUCell does not support reset_after parameter set to true.");this.units=e.units,assertPositiveInteger(this.units,"units"),this.activation=getActivation(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=getActivation(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=getInitializer(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=getInitializer(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=getInitializer(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=getRegularizer(e.kernelRegularizer),this.recurrentRegularizer=getRegularizer(e.recurrentRegularizer),this.biasRegularizer=getRegularizer(e.biasRegularizer),this.kernelConstraint=getConstraint(e.kernelConstraint),this.recurrentConstraint=getConstraint(e.recurrentConstraint),this.biasConstraint=getConstraint(e.biasConstraint),this.dropout=min$2([1,max$2([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=min$2([1,max$2([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=getExactlyOneShape(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return tidy(()=>{if(e=e,e.length!==2)throw new ValueError(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training==null?!1:t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=generateDropoutMask({ones:()=>onesLike$2(e),rate:this.dropout,training:s,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=generateDropoutMask({ones:()=>onesLike$2(r),rate:this.recurrentDropout,training:s,count:3}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let c,u,l;0<this.dropout&&this.dropout<1&&(e=mul(e,i[0]));let h=dot(e,this.kernel.read());this.useBias&&(h=biasAdd(h,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=mul(r,a[0]));const d=this.recurrentKernel.read(),[f,y]=split(d,[2*this.units,this.units],d.rank-1),g=dot(r,f),[x,b,v]=split(h,3,h.rank-1),[S,T]=split(g,2,g.rank-1);c=this.recurrentActivation.apply(add$1(x,S)),u=this.recurrentActivation.apply(add$1(b,T));const w=dot(mul(u,r),y);l=this.activation.apply(add$1(v,w));const C=add$1(mul(c,r),mul(add$1(1,neg$2(c)),l));return[C,C]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:serializeActivation(this.activation),recurrentActivation:serializeActivation(this.recurrentActivation),useBias:this.useBias,kernelInitializer:serializeInitializer(this.kernelInitializer),recurrentInitializer:serializeInitializer(this.recurrentInitializer),biasInitializer:serializeInitializer(this.biasInitializer),kernelRegularizer:serializeRegularizer(this.kernelRegularizer),recurrentRegularizer:serializeRegularizer(this.recurrentRegularizer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint),recurrentConstraint:serializeConstraint(this.recurrentConstraint),biasConstraint:serializeConstraint(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}GRUCell.className="GRUCell";registerClass(GRUCell);class GRU extends RNN{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new GRUCell(e);super(e)}call(e,t){return tidy(()=>{this.cell.dropoutMask!=null&&(dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:i})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}GRU.className="GRU";registerClass(GRU);class LSTMCell extends RNNCell{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,assertPositiveInteger(this.units,"units"),this.activation=getActivation(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=getActivation(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=getInitializer(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=getInitializer(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=getInitializer(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=getRegularizer(e.kernelRegularizer),this.recurrentRegularizer=getRegularizer(e.recurrentRegularizer),this.biasRegularizer=getRegularizer(e.biasRegularizer),this.kernelConstraint=getConstraint(e.kernelConstraint),this.recurrentConstraint=getConstraint(e.recurrentConstraint),this.biasConstraint=getConstraint(e.biasConstraint),this.dropout=min$2([1,max$2([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=min$2([1,max$2([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=getExactlyOneShape(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const i=this.biasInitializer,a=this.units;r=new(t=class extends Initializer{apply(u,l){const h=i.apply([a]),d=new Ones().apply([a]),f=i.apply([a*2]);return concatAlongFirstAxis(concatAlongFirstAxis(h,d),f)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return tidy(()=>{const s=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new ValueError(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const i=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=generateDropoutMask({ones:()=>onesLike$2(e),rate:this.dropout,training:s,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=generateDropoutMask({ones:()=>onesLike$2(r),rate:this.recurrentDropout,training:s,count:4}));const a=this.dropoutMask,c=this.recurrentDropoutMask;let u,l,h,d;0<this.dropout&&this.dropout<1&&(e=mul(e,a[0]));let f=dot(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=mul(r,c[0])),f=add$1(f,dot(r,this.recurrentKernel.read())),this.useBias&&(f=biasAdd(f,this.bias.read()));const[y,g,x,b]=split(f,4,f.rank-1);u=this.recurrentActivation.apply(y),l=this.recurrentActivation.apply(g),h=add$1(mul(l,i),mul(u,this.activation.apply(x))),d=this.recurrentActivation.apply(b);const v=mul(d,this.activation.apply(h));return[v,v,h]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:serializeActivation(this.activation),recurrentActivation:serializeActivation(this.recurrentActivation),useBias:this.useBias,kernelInitializer:serializeInitializer(this.kernelInitializer),recurrentInitializer:serializeInitializer(this.recurrentInitializer),biasInitializer:serializeInitializer(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:serializeRegularizer(this.kernelRegularizer),recurrentRegularizer:serializeRegularizer(this.recurrentRegularizer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint),recurrentConstraint:serializeConstraint(this.recurrentConstraint),biasConstraint:serializeConstraint(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}LSTMCell.className="LSTMCell";registerClass(LSTMCell);class LSTM extends RNN{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new LSTMCell(e);super(e)}call(e,t){return tidy(()=>{this.cell.dropoutMask!=null&&(dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:i})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}LSTM.className="LSTM";registerClass(LSTM);class StackedRNNCells extends RNNCell{constructor(e){super(e);this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return tidy(()=>{e=e;let s=e.slice(1);const r=[];for(const c of this.cells.slice().reverse())Array.isArray(c.stateSize)?r.push(s.splice(0,c.stateSize.length)):r.push(s.splice(0,1));r.reverse();const i=[];let a;for(let c=0;c<this.cells.length;++c){const u=this.cells[c];s=r[c],c===0?a=[e[0]].concat(s):a=[a[0]].concat(s),a=u.call(a,t),i.push(a.slice(1))}s=[];for(const c of i.slice().reverse())s.push(...c);return[a[0]].concat(s)})}build(e){isArrayOfShapes(e)&&(e=e[0]),e=e;let t;this.cells.forEach((s,r)=>{nameScope(`RNNCell_${r}`,()=>{s.build(e),Array.isArray(s.stateSize)?t=s.stateSize[0]:t=s.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=i=>({className:i.getClassName(),config:i.getConfig()}),r={cells:this.cells.map(t)};return Object.assign({},e,r)}static fromConfig(e,t,s={}){const r=[];for(const i of t.cells)r.push(deserialize(i,s));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.cells)t.push(...s.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return batchGetValue(e)}setWeights(e){const t=[];for(const s of this.cells){const r=s.weights.length,i=e.splice(r);for(let a=0;a<s.weights.length;++a)t.push([s.weights[a],i[a]])}batchSetValue(t)}}StackedRNNCells.className="StackedRNNCells";registerClass(StackedRNNCells);function generateDropoutMask(n){const{ones:e,rate:t,training:s=!1,count:r=1}=n,i=()=>dropout(e(),t),a=()=>inTrainPhase(i,e,s);return!r||r<=1?keep(a().clone()):Array(r).fill(void 0).map(a).map(u=>keep(u.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var __rest=globalThis&&globalThis.__rest||function(n,e){var t={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&e.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(n);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(t[s[r]]=n[s[r]]);return t};class ConvRNN2D extends RNN{constructor(e){if(e.unroll)throw new NotImplementedError("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new NotImplementedError("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new InputSpec({ndim:5})]}call(e,t){return tidy(()=>{if(this.cell.dropoutMask!=null&&(dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new ValueError("ConvRNN2D cell does not support constants");const s=t==null?null:t.mask,r=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:i})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return tidy(()=>{const{stateSize:t}=this.cell,s=e.shape,r=this.computeSingleOutputShape(s),i=[r[0],...r.slice(2)],a=zeros$1(i);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){tidy(()=>{if(!this.stateful)throw new AttributeError("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),i=[r[0],...r.slice(2)];if(s[0]==null)throw new ValueError("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>zeros$1(i)):this.states_=[zeros$1(i)];else if(e==null)dispose(this.states_),this.keptStates!=null&&(dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>zeros$1(i)):this.states_[0]=zeros$1(i);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ValueError(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):dispose(this.states_);for(let c=0;c<this.states_.length;++c){const u=e[c],l=i;if(!arraysEqual(u.shape,l))throw new ValueError(`State ${c} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${u.shape}`);this.states_[c]=u}}this.states_=this.states_.map(c=>keep(c.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:s,kernelSize:r,padding:i,strides:a,dilationRate:c}=this.cell,u=t==="channelsFirst",l=e[u?3:2],h=e[u?4:3],d=convOutputLength(l,r[0],i,a[0],c[0]),f=convOutputLength(h,r[1],i,a[1],c[1]);return[...e.slice(0,2),...u?[s,d,f]:[d,f,s]]}}ConvRNN2D.className="ConvRNN2D";class ConvLSTM2DCell extends LSTMCell{constructor(e){const{filters:t,kernelSize:s,strides:r,padding:i,dataFormat:a,dilationRate:c}=e;super(Object.assign({},e,{units:t}));this.filters=t,assertPositiveInteger(this.filters,"filters"),this.kernelSize=normalizeArray(s,2,"kernelSize"),this.kernelSize.forEach(u=>assertPositiveInteger(u,"kernelSize")),this.strides=normalizeArray(r||1,2,"strides"),this.strides.forEach(u=>assertPositiveInteger(u,"strides")),this.padding=i||"valid",checkPaddingMode(this.padding),this.dataFormat=a||"channelsLast",checkDataFormat(this.dataFormat),this.dilationRate=normalizeArray(c||1,2,"dilationRate"),this.dilationRate.forEach(u=>assertPositiveInteger(u,"dilationRate"))}build(e){var t;e=getExactlyOneShape(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new ValueError(`The channel dimension of the input should be defined. Found ${e[s]}`);const r=e[s],i=4,a=this.kernelSize.concat([r,this.filters*i]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const c=this.kernelSize.concat([this.filters,this.filters*i]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",c,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){const l=this.biasInitializer,h=this.filters;u=new(t=class extends Initializer{apply(f,y){const g=l.apply([h]),x=ones([h]),b=l.apply([h*2]);return concatenate([g,x,b])}},t.className="CustomInit",t)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*i],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return tidy(()=>{if(e.length!==3)throw new ValueError(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training||!1,r=e[0],i=e[1],a=e[2],c=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=generateDropoutMask({ones:()=>onesLike$2(r),rate:this.dropout,training:s,count:c}));const u=this.dropoutMask,l=(W,U,j)=>!U||!U[j]?W:mul(U[j],W);let h=l(r,u,0),d=l(r,u,1),f=l(r,u,2),y=l(r,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=generateDropoutMask({ones:()=>onesLike$2(i),rate:this.recurrentDropout,training:s,count:c}));const g=this.recurrentDropoutMask;let x=l(i,g,0),b=l(i,g,1),v=l(i,g,2),S=l(i,g,3);const T=3,[w,C,N,_]=split(this.kernel.read(),c,T),[$,E,k,F]=this.useBias?split(this.bias.read(),c):[null,null,null,null];h=this.inputConv(h,w,$,this.padding),d=this.inputConv(d,C,E,this.padding),f=this.inputConv(f,N,k,this.padding),y=this.inputConv(y,_,F,this.padding);const[P,R,O,B]=split(this.recurrentKernel.read(),c,T);x=this.recurrentConv(x,P),b=this.recurrentConv(b,R),v=this.recurrentConv(v,O),S=this.recurrentConv(S,B);const L=this.recurrentActivation.apply(add$1(h,x)),V=this.recurrentActivation.apply(add$1(d,b)),q=add$1(mul(V,a),mul(L,this.activation.apply(add$1(f,v)))),G=mul(this.recurrentActivation.apply(add$1(y,S)),this.activation.apply(q));return[G,G,q]})}getConfig(){const e=super.getConfig(),t=__rest(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},t,s)}inputConv(e,t,s,r){const i=conv2d$2(e,t,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?biasAdd(i,s,this.dataFormat):i}recurrentConv(e,t){return conv2d$2(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}ConvLSTM2DCell.className="ConvLSTM2DCell";registerClass(ConvLSTM2DCell);class ConvLSTM2D extends ConvRNN2D{constructor(e){const t=new ConvLSTM2DCell(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}ConvLSTM2D.className="ConvLSTM2D";registerClass(ConvLSTM2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Dropout extends Layer{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?t[r]:this.noiseShape[r]);return s}call(e,t){return tidy(()=>{this.invokeCallHook(e,t);const s=getExactlyOneTensor(e);if(0<this.rate&&this.rate<1){const r=t.training==null?!1:t.training,i=this.getNoiseShape(s);return inTrainPhase(()=>dropout(s,this.rate,i,this.seed),()=>s,r)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Dropout.className="Dropout";registerClass(Dropout);class SpatialDropout1D extends Dropout{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}SpatialDropout1D.className="SpatialDropout1D";registerClass(SpatialDropout1D);class Dense extends Layer{constructor(e){super(e);if(this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,assertPositiveInteger(this.units,"units"),this.activation=getActivation(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=getInitializer(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=getInitializer(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=getConstraint(e.kernelConstraint),this.biasConstraint=getConstraint(e.biasConstraint),this.kernelRegularizer=getRegularizer(e.kernelRegularizer),this.biasRegularizer=getRegularizer(e.biasRegularizer),this.activityRegularizer=getRegularizer(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=getExactlyOneShape(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=getExactlyOneShape(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return tidy(()=>{this.invokeCallHook(e,t);const s=getExactlyOneTensor(e),r=mapActivationToFusedKernel(this.activation.getClassName());let i;return r!=null?i=dot(s,this.kernel.read(),r,this.bias?this.bias.read():null):(i=dot(s,this.kernel.read()),this.bias!=null&&(i=biasAdd(i,this.bias.read())),this.activation!=null&&(i=this.activation.apply(i))),i})}getConfig(){const e={units:this.units,activation:serializeActivation(this.activation),useBias:this.useBias,kernelInitializer:serializeInitializer(this.kernelInitializer),biasInitializer:serializeInitializer(this.biasInitializer),kernelRegularizer:serializeRegularizer(this.kernelRegularizer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint),biasConstraint:serializeConstraint(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Dense.className="Dense";registerClass(Dense);class Flatten extends Layer{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=getExactlyOneShape(e);for(const t of e.slice(1))if(t==null)throw new ValueError(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],arrayProd(e,1)]}call(e,t){return tidy(()=>{this.invokeCallHook(e,t);let s=getExactlyOneTensor(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let i=2;i<s.rank;++i)r.push(i);r.push(1),s=s.transpose(r)}return batchFlatten(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Flatten.className="Flatten";registerClass(Flatten);class Activation extends Layer{constructor(e){super(e);this.supportsMasking=!0,this.activation=getActivation(e.activation)}call(e,t){return tidy(()=>{this.invokeCallHook(e,t);const s=getExactlyOneTensor(e);return this.activation.apply(s)})}getConfig(){const e={activation:serializeActivation(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Activation.className="Activation";registerClass(Activation);class RepeatVector extends Layer{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return tidy(()=>(e=getExactlyOneTensor(e),repeat(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}RepeatVector.className="RepeatVector";registerClass(RepeatVector);class Reshape extends Layer{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const s="Total size of new array must be unchanged.",r=t.slice();let i=1,a=null;for(let u=0;u<r.length;++u){const l=r[u];if(this.isUnknown(l))if(a===null)a=u;else throw new ValueError("Can only specifiy one unknown dimension.");else i*=l}const c=arrayProd(e);if(a!==null){if(i===0||c%i!=0)throw new ValueError(s);r[a]=c/i}else if(c!==i)throw new ValueError(s);return r}computeOutputShape(e){let t=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return tidy(()=>{this.invokeCallHook(e,t);const s=getExactlyOneTensor(e),r=s.shape,i=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return s.reshape(i)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Reshape.className="Reshape";registerClass(Reshape);class Permute extends Layer{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=range$3(1,e.dims.length+1);if(!arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new InputSpec({ndim:this.dims.length+1})]}computeOutputShape(e){e=getExactlyOneShape(e);const t=e.slice();return this.dims.forEach((s,r)=>{t[r+1]=e[s]}),t}call(e,t){return transpose$3(getExactlyOneTensor(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Permute.className="Permute";registerClass(Permute);class Masking extends Layer{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const s=getExactlyOneTensor(e),r=-1;return any$2(notEqual$2(s,this.maskValue),r)}call(e,t){return tidy(()=>{this.invokeCallHook(e,t);const s=getExactlyOneTensor(e),r=-1,i=!0,a=any$2(notEqual$2(s,this.maskValue),r,i);return s.mul(a.asType(s.dtype))})}}Masking.className="Masking";registerClass(Masking);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Embedding extends Layer{constructor(e){super(e);if(this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(toList(e.inputLength))}this.inputDim=e.inputDim,assertPositiveInteger(this.inputDim,"inputDim"),this.outputDim=e.outputDim,assertPositiveInteger(this.outputDim,"outputDim"),this.embeddingsInitializer=getInitializer(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=getRegularizer(e.embeddingsRegularizer),this.activityRegularizer=getRegularizer(e.activityRegularizer),this.embeddingsConstraint=getConstraint(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return tidy(()=>this.maskZero?(e=getExactlyOneTensor(e),notEqual$2(e,zerosLike$2(e))):null)}computeOutputShape(e){if(e=getExactlyOneShape(e),this.inputLength==null)return[...e,this.outputDim];const t=toList(this.inputLength);if(t.length!==e.length-1)throw new ValueError(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let r=0;r<t.length;++r){const i=t[r],a=e[r+1];if(i!=null&&a!=null&&i!==a)throw new ValueError(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);i==null&&(t[s]=a),s++}}return[e[0],...t,this.outputDim]}call(e,t){return tidy(()=>{this.invokeCallHook(e,t);let s=getExactlyOneTensor(e);return s.dtype!=="int32"&&(s=cast$2(s,"int32")),gather(this.embeddings.read(),s.as1D()).reshape(getExactlyOneShape(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:serializeInitializer(this.embeddingsInitializer),embeddingsRegularizer:serializeRegularizer(this.embeddingsRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),embeddingsConstraint:serializeConstraint(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Embedding.className="Embedding";registerClass(Embedding);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Merge$1 extends Layer{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new NotImplementedError}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const s=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const i=e[e.length-t.length+r],a=t[r];if(i==null||a==null||i<0||a<0)s.push(null);else if(i===1)s.push(a);else if(a===1)s.push(i);else{if(i!==a)throw new ValueError("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));s.push(i)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[getExactlyOneShape(e)]),e=e,e.length<2)throw new ValueError(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const i of e)i!=null&&i[0]!==null&&t.push(i[0]);if(t=unique$3(t),t.length>1)throw new ValueError(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let i=1;i<e.length;++i){const a=e[i]==null?null:e[i].slice(1);s=this.computeElementwiseOpOutputShape(s,a)}const r=e.map(i=>i.length);e.indexOf(null)===-1&&unique$3(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return tidy(()=>{if(e=e,this.reshapeRequired){const s=[],r=e.map(i=>i.rank);if(r.indexOf(null)===-1){const i=max$2(r);for(let a of e){const c=a.rank;for(let u=0;u<i-c;++u)a=expandDims$2(a,1);s.push(a)}return this.mergeFunction(s)}else{let i=!1;for(const u of e){const l=u.rank;if(l==null){const h=u.shape,d=h[0],f=h.slice(1).concat([d]);let y=u.reshape([d].concat(arrayProd(h.slice(1))));y=transpose$3(y,[1,0]),y=y.reshape(f),s.push(y),i=!0}else if(l>1){const h=range$3(1,l).concat([0]);s.push(transpose$3(u,h)),i=!0}else s.push(u)}let a=this.mergeFunction(s);const c=a.rank;if(i){if(c==null){const u=a.shape,l=u.length,h=u[l-1],d=[h].concat(u.slice(0,u.length-1));a=transpose$3(a.reshape([-1,h]),[1,0]).reshape(d)}else if(c>1){const u=[c-1].concat(range$3(0,c-1));a=transpose$3(a,u)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){const i=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,i)}let s=[];for(const r of e)r!=null&&r[0]!==null&&s.push(r[0]);return s=unique$3(s),s.length===1?t=s.concat(t):t=[null].concat(t),t}computeMask(e,t){return tidy(()=>{if(t==null)return null;if(!Array.isArray(t))throw new ValueError("`mask` should be an Array");if(!Array.isArray(e))throw new ValueError("`inputs` should be an Array");if(t.length!==e.length)throw new ValueError(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:expandDims$3(r,0));let s=t[0];for(let r=1;r<t.length-1;++r)s=logicalAnd$2(s,t[r]);return s})}}class Add$1 extends Merge$1{constructor(e){super(e)}mergeFunction(e){return tidy(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=add$1(t,e[s]);return t})}}Add$1.className="Add";registerClass(Add$1);class Multiply$1 extends Merge$1{constructor(e){super(e)}mergeFunction(e){return tidy(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=mul(t,e[s]);return t})}}Multiply$1.className="Multiply";registerClass(Multiply$1);class Average extends Merge$1{constructor(e){super(e)}mergeFunction(e){return tidy(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=add$1(t,e[s]);return mul(1/e.length,t)})}}Average.className="Average";registerClass(Average);class Maximum extends Merge$1{constructor(e){super(e)}mergeFunction(e){return tidy(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=maximum$2(t,e[s]);return t})}}Maximum.className="Maximum";registerClass(Maximum);class Minimum extends Merge$1{constructor(e){super(e)}mergeFunction(e){return tidy(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=minimum$2(t,e[s]);return t})}}Minimum.className="Minimum";registerClass(Minimum);class Concatenate extends Merge$1{constructor(e){super(e);this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new ValueError("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(r!=null){t=!1;break}if(t)return;const s=[];for(let r=0;r<e.length;++r){const i=e[r].slice();i.splice(this.axis,1);let a=!1;for(const c of s)if(arraysEqual(c,i)){a=!0;break}a||s.push(i)}if(s.length>1)throw new ValueError("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return tidy(()=>concatenate(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new ValueError("A `Concatenate` layer should be called on a list of inputs.");const t=e,s=t[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const i of t.slice(1)){if(s[r]==null||i[r]==null){s[r]=null;break}s[r]+=i[r]}return s}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new ValueError("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new ValueError("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new ValueError(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return tidy(()=>{let s=!0;if(t.forEach(a=>{if(a!=null){s=!1;return}}),s)return null;const r=[];for(let a=0;a<e.length;++a)t[a]==null?r.push(onesLike$2(e[a]).asType("bool")):t[a].rank<e[a].rank?r.push(expandDims$3(t[a],-1)):r.push(t[a]);const i=concat$2(r,this.axis);return all$2(i,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}Concatenate.className="Concatenate";registerClass(Concatenate);function interpretAxis(n,e){for(;n<0;)n+=e;return n}function batchDot(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new NotImplementedError("batchDot is not implemented for tensors of 4D or higher rank yet");if(assert$2(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),assert$2(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new NotImplementedError("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=e.shape.length;t==null&&(t=[s-1,r-2]);const i=t;return tidy(()=>{let a;if(s>r){a=s-r;const u=[];for(let l=0;l<a;++l)u.push(1);e=e.reshape(e.shape.concat(u))}else if(r>s){a=r-s;const u=[];for(let l=0;l<a;++l)u.push(1);n=n.reshape(n.shape.concat(u))}else a=0;let c;if(n.shape.length===2&&e.shape.length===2)i[0]===i[1]?c=n.mul(e).sum(i[0]):c=n.transpose([1,0]).mul(e).sum(i[1]);else{const u=i[0]!==n.shape.length-1,l=i[1]===e.shape.length-1;c=n.matMul(e,u,l)}if(a>0){let u;s>r?u=s+r-3:u=s-1;const l=[];for(let h=u;h<u+a;++h)l.push(h);c=c.squeeze(l)}return c.shape.length===1&&(c=c.expandDims(1)),c})}class Dot extends Merge$1{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){assert$2(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],s=e[1];if(t.length>3||s.length>3)throw new NotImplementedError("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);if(t[r[0]]!==s[r[1]])throw new ValueError(`Dimension incompatibility: ${t[r[0]]} !== ${s[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new ValueError(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],s=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((i,a)=>interpretAxis(i,e[a].shape.length)):r=[interpretAxis(this.axes,t.shape.length),interpretAxis(this.axes,s.shape.length)],this.normalize&&(t=l2Normalize(t,r[0]),s=l2Normalize(s,r[1])),batchDot(t,s,r)}interpretAxes(e,t){let s;return Array.isArray(this.axes)?s=this.axes:s=[interpretAxis(this.axes,e.length),interpretAxis(this.axes,t.length)],s}computeOutputShape(e){assert$2(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),s=e[1].slice();if(t.length>3||s.length>3)throw new NotImplementedError("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);t.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const i=t.concat(s);return i.length===1&&i.push(1),i}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Dot.className="Dot";registerClass(Dot);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class GaussianNoise extends Layer{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return tidy(()=>{this.invokeCallHook(e,t);const s=getExactlyOneTensor(e);return inTrainPhase(()=>randomNormal(s.shape,0,this.stddev).add(s),()=>s,t.training||!1)})}}GaussianNoise.className="GaussianNoise";registerClass(GaussianNoise);class GaussianDropout extends Layer{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return tidy(()=>{this.invokeCallHook(e,t);const s=getExactlyOneTensor(e);return this.rate>0&&this.rate<1?inTrainPhase(()=>{const i=Math.sqrt(this.rate/(1-this.rate));return s.mul(randomNormal(s.shape,1,i))},()=>s,t.training||!1):s})}}GaussianDropout.className="GaussianDropout";registerClass(GaussianDropout);class AlphaDropout extends Layer{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||getExactlyOneTensor(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return tidy(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return inTrainPhase(()=>{const i=getExactlyOneTensor(e),a=1.6732632423543772,c=1.0507009873554805,u=-a*c;let l=greaterEqual$2(randomUniform(s),this.rate);l=cast$2(l,"float32");const h=((1-this.rate)*(1+this.rate*u**2))**-.5,d=-h*u*this.rate;return i.mul(l).add(l.add(-1).mul(u)).mul(h).add(d)},()=>getExactlyOneTensor(e),t.training||!1)}return e})}}AlphaDropout.className="AlphaDropout";registerClass(AlphaDropout);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function batchNormalization(n,e,t,s,r,i=.001){let a;if(n.rank===2)a=batchNorm2d(n,e,t,s,r,i);else if(n.rank===3)a=batchNorm3d(n,e,t,s,r,i);else if(n.rank===4)a=batchNorm4d(n,e,t,s,r,i);else throw new NotImplementedError(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return a}function regularNormalizeBatchInTraining(n,e,t,s,r=.001){return tidy(()=>{const i=moments(n,s),a=i.mean,c=i.variance;return[batchNormalization(n,a,c,t,e,r),a,c]})}function broadcastNormalizeBatchInTraining(n,e,t,s,r=.001){return tidy(()=>{const i=moments(n,s),a=i.mean,c=i.variance,u=[];for(const g of range$3(0,n.rank))s.indexOf(g)!==-1?u.push(1):u.push(n.shape[g]);const l=a.reshape(u),h=c.reshape(u),d=e==null?null:e.reshape(u),f=t==null?null:t.reshape(u);return[batchNormalization(n,l,h,f,d,r),a,c]})}function normalizeBatchInTraining(n,e,t,s,r=.001){return arraysEqual(s.slice().sort(),range$3(0,n.rank-1))?regularNormalizeBatchInTraining(n,e,t,s,r):broadcastNormalizeBatchInTraining(n,e,t,s,r)}class BatchNormalization extends Layer{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=getInitializer(e.betaInitializer||"zeros"),this.gammaInitializer=getInitializer(e.gammaInitializer||"ones"),this.movingMeanInitializer=getInitializer(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=getInitializer(e.movingVarianceInitializer||"ones"),this.betaConstraint=getConstraint(e.betaConstraint),this.gammaConstraint=getConstraint(e.gammaConstraint),this.betaRegularizer=getRegularizer(e.betaRegularizer),this.gammaRegularizer=getRegularizer(e.gammaRegularizer)}build(e){e=getExactlyOneShape(e);const t=this.axis>=0?this.axis:this.axis+e.length,s=e[t];if(s==null)throw new ValueError(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new InputSpec({ndim:e.length,axes:{[t]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return tidy(()=>{const s=t.training==null?!1:t.training,r=getExactlyOneTensor(e),i=r.shape,a=i.length,c=range$3(0,a),u=this.axis>=0?this.axis:this.axis+a;c.splice(u,1);const l=pyListRepeat(1,a);l[u]=i[u];const h=c.slice();h.sort();const d=!arraysEqual(h,range$3(0,a).slice(0,a-1)),f=()=>{if(d){const S=this.movingMean.read().reshape(l),T=this.movingVariance.read().reshape(l),w=this.center?this.beta.read().reshape(l):null,C=this.scale?this.gamma.read().reshape(l):null;return batchNormalization(r,S,T,w,C,this.epsilon)}else return batchNormalization(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return f();const[y,g,x]=normalizeBatchInTraining(r,this.gamma.read(),this.beta.read(),c,this.epsilon),b=(S,T,w)=>{tidy(()=>{const C=1-w,N=S.read(),_=N.sub(T).mul(C);S.write(N.sub(_))})};return(()=>{b(this.movingMean,g,this.momentum),b(this.movingVariance,x,this.momentum)})(),y})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:serializeInitializer(this.betaInitializer),gammaInitializer:serializeInitializer(this.gammaInitializer),movingMeanInitializer:serializeInitializer(this.movingMeanInitializer),movingVarianceInitializer:serializeInitializer(this.movingVarianceInitializer),betaRegularizer:serializeRegularizer(this.betaRegularizer),gammaRegularizer:serializeRegularizer(this.gammaRegularizer),betaConstraint:serializeConstraint(this.betaConstraint),gammaConstraint:serializeConstraint(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}BatchNormalization.className="BatchNormalization";registerClass(BatchNormalization);class LayerNormalization extends Layer{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=getInitializer(e.betaInitializer||"zeros"),this.gammaInitializer=getInitializer(e.gammaInitializer||"ones"),this.betaRegularizer=getRegularizer(e.betaRegularizer),this.gammaRegularizer=getRegularizer(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=getExactlyOneShape(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let i=0;i<this.axis.length;++i)this.axis[i]<0&&(this.axis[i]+=t);for(const i of this.axis)if(i<0||i>=t)throw new Error(`Invalid axis: ${i}`);if(this.axis.length!==unique$3(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(i=>e[i]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const s=getExactlyOneTensor(e),r=s.shape,i=r.length;return tidy(()=>{const a=!0;let{mean:c,variance:u}=moments(s,this.axis,a);const l=pyListRepeat(1,i);for(const x of this.axis)l[x]=r[x];const h=x=>x!=null&&x.shape.length!==i&&this.axis!==[i-1]?x.reshape(l):x;let d=h(this.gamma.read()),f=h(this.beta.read());const y=[],g=[];for(let x=0;x<i;++x)this.axis.indexOf(x)!==-1?(y.push(r[x]),g.push(1)):(y.push(1),g.push(r[x]));return c=c.tile(y),u=u.tile(y),d=d.tile(g),f=f.tile(g),batchNormalization(s,c,u,f,d,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:serializeInitializer(this.betaInitializer),gammaInitializer:serializeInitializer(this.gammaInitializer),betaRegularizer:serializeRegularizer(this.betaRegularizer),gammaRegularizer:serializeRegularizer(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}LayerNormalization.className="LayerNormalization";registerClass(LayerNormalization);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function spatial2dPadding(n,e,t){return tidy(()=>{if(n.rank!==4)throw new ValueError(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new ValueError("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=imageDataFormat()),t!=="channelsLast"&&t!=="channelsFirst")throw new ValueError(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return t==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],pad(n,s)})}class ZeroPadding2D extends Layer{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?imageDataFormat():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new ValueError(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,s;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new ValueError(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new ValueError(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[t,s]}this.inputSpec=[new InputSpec({ndim:4})]}computeOutputShape(e){e=getExactlyOneShape(e);let t,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],t,s]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],t,s,e[3]])}call(e,t){return tidy(()=>spatial2dPadding(getExactlyOneTensor(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}ZeroPadding2D.className="ZeroPadding2D";registerClass(ZeroPadding2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pool2d(n,e,t,s,r,i){return tidy(()=>{checkDataFormat(r),checkPoolMode(i),checkPaddingMode(s),t==null&&(t=[1,1]),s==null&&(s="valid"),r==null&&(r=imageDataFormat()),i==null&&(i="max"),n=preprocessConv2DInput(n,r);let a;const c=s==="same"?"same":"valid";return i==="max"?a=maxPool$2(n,e,t,c):a=avgPool$2(n,e,t,c),r==="channelsFirst"&&(a=transpose$3(a,[0,3,1,2])),a})}function pool3d$1(n,e,t,s,r,i){return tidy(()=>{checkDataFormat(r),checkPoolMode(i),checkPaddingMode(s),t==null&&(t=[1,1,1]),s==null&&(s="valid"),r==null&&(r=imageDataFormat()),i==null&&(i="max"),n=preprocessConv3DInput(n,r);let a;const c=s==="same"?"same":"valid";return i==="max"?a=maxPool3d$1(n,e,t,c):a=avgPool3d(n,e,t,c),r==="channelsFirst"&&(a=transpose$3(a,[0,4,1,2,3])),a})}class Pooling1D extends Layer{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new ValueError(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(assertPositiveInteger(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new ValueError(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);assertPositiveInteger(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,checkPaddingMode(this.padding),this.inputSpec=[new InputSpec({ndim:3})]}computeOutputShape(e){e=getExactlyOneShape(e);const t=convOutputLength(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return tidy(()=>{this.invokeCallHook(e,t),e=expandDims$2(getExactlyOneTensor(e),2);const s=this.poolingFunction(getExactlyOneTensor(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return squeeze(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class MaxPooling1D extends Pooling1D{constructor(e){super(e)}poolingFunction(e,t,s,r,i){return checkDataFormat(i),checkPaddingMode(r),pool2d(e,t,s,r,i,"max")}}MaxPooling1D.className="MaxPooling1D";registerClass(MaxPooling1D);class AveragePooling1D extends Pooling1D{constructor(e){super(e)}poolingFunction(e,t,s,r,i){return checkDataFormat(i),checkPaddingMode(r),pool2d(e,t,s,r,i,"avg")}}AveragePooling1D.className="AveragePooling1D";registerClass(AveragePooling1D);class Pooling2D extends Layer{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new ValueError(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];assertPositiveInteger(this.poolSize,"poolSize"),assertPositiveInteger(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,checkDataFormat(this.dataFormat),checkPaddingMode(this.padding),this.inputSpec=[new InputSpec({ndim:4})]}computeOutputShape(e){e=getExactlyOneShape(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=convOutputLength(t,this.poolSize[0],this.padding,this.strides[0]),s=convOutputLength(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s]:[e[0],t,s,e[3]]}call(e,t){return tidy(()=>(this.invokeCallHook(e,t),this.poolingFunction(getExactlyOneTensor(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class MaxPooling2D extends Pooling2D{constructor(e){super(e)}poolingFunction(e,t,s,r,i){return checkDataFormat(i),checkPaddingMode(r),pool2d(e,t,s,r,i,"max")}}MaxPooling2D.className="MaxPooling2D";registerClass(MaxPooling2D);class AveragePooling2D extends Pooling2D{constructor(e){super(e)}poolingFunction(e,t,s,r,i){return checkDataFormat(i),checkPaddingMode(r),pool2d(e,t,s,r,i,"avg")}}AveragePooling2D.className="AveragePooling2D";registerClass(AveragePooling2D);class Pooling3D extends Layer{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new ValueError(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];assertPositiveInteger(this.poolSize,"poolSize"),assertPositiveInteger(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,checkDataFormat(this.dataFormat),checkPaddingMode(this.padding),this.inputSpec=[new InputSpec({ndim:5})]}computeOutputShape(e){e=getExactlyOneShape(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=convOutputLength(t,this.poolSize[0],this.padding,this.strides[0]),s=convOutputLength(s,this.poolSize[1],this.padding,this.strides[1]),r=convOutputLength(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s,r]:[e[0],t,s,r,e[4]]}call(e,t){return tidy(()=>(this.invokeCallHook(e,t),this.poolingFunction(getExactlyOneTensor(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class MaxPooling3D extends Pooling3D{constructor(e){super(e)}poolingFunction(e,t,s,r,i){return checkDataFormat(i),checkPaddingMode(r),pool3d$1(e,t,s,r,i,"max")}}MaxPooling3D.className="MaxPooling3D";registerClass(MaxPooling3D);class AveragePooling3D extends Pooling3D{constructor(e){super(e)}poolingFunction(e,t,s,r,i){return checkDataFormat(i),checkPaddingMode(r),pool3d$1(e,t,s,r,i,"avg")}}AveragePooling3D.className="AveragePooling3D";registerClass(AveragePooling3D);class GlobalPooling1D extends Layer{constructor(e){super(e);this.inputSpec=[new InputSpec({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new NotImplementedError}}class GlobalAveragePooling1D extends GlobalPooling1D{constructor(e){super(e||{})}call(e,t){return tidy(()=>{const s=getExactlyOneTensor(e);return mean$1(s,1)})}}GlobalAveragePooling1D.className="GlobalAveragePooling1D";registerClass(GlobalAveragePooling1D);class GlobalMaxPooling1D extends GlobalPooling1D{constructor(e){super(e||{})}call(e,t){return tidy(()=>{const s=getExactlyOneTensor(e);return max$3(s,1)})}}GlobalMaxPooling1D.className="GlobalMaxPooling1D";registerClass(GlobalMaxPooling1D);class GlobalPooling2D extends Layer{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,checkDataFormat(this.dataFormat),this.inputSpec=[new InputSpec({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new NotImplementedError}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class GlobalAveragePooling2D extends GlobalPooling2D{call(e,t){return tidy(()=>{const s=getExactlyOneTensor(e);return this.dataFormat==="channelsLast"?mean$1(s,[1,2]):mean$1(s,[2,3])})}}GlobalAveragePooling2D.className="GlobalAveragePooling2D";registerClass(GlobalAveragePooling2D);class GlobalMaxPooling2D extends GlobalPooling2D{call(e,t){return tidy(()=>{const s=getExactlyOneTensor(e);return this.dataFormat==="channelsLast"?max$3(s,[1,2]):max$3(s,[2,3])})}}GlobalMaxPooling2D.className="GlobalMaxPooling2D";registerClass(GlobalMaxPooling2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Wrapper extends Layer{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,s={}){const r=t.layer,i=deserialize(r,s);delete t.layer;const a={layer:i};return Object.assign(a,t),new e(a)}}class TimeDistributed extends Wrapper{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=getExactlyOneShape(e),e.length<3)throw new ValueError(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=getExactlyOneShape(e);const t=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(t),r=e[1];return[s[0],r].concat(s.slice(1))}call(e,t){return tidy(()=>(e=getExactlyOneTensor(e),rnn((a,c)=>[getExactlyOneTensor(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}TimeDistributed.className="TimeDistributed";registerClass(TimeDistributed);function checkBidirectionalMergeMode(n){checkStringTypeUnionValue(VALID_BIDIRECTIONAL_MERGE_MODES,"BidirectionalMergeMode",n)}const DEFAULT_BIDIRECTIONAL_MERGE_MODE="concat";class Bidirectional extends Wrapper{constructor(e){super(e);const t=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=t,this.forwardLayer=deserialize(s),t.goBackwards=t.goBackwards!==!0;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=deserialize(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?DEFAULT_BIDIRECTIONAL_MERGE_MODE:e.mergeMode,checkBidirectionalMergeMode(this.mergeMode),e.weights)throw new NotImplementedError("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,s=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let s,r,i;return this.returnState&&(i=t.slice(1)),s=t[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(i).concat(i.slice()):[s].concat(i).concat(i.slice()):singletonOrArray(r)}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const i=standardizeArgs(e,s,r,this.numConstants);if(e=i.inputs,s=i.initialState,r=i.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&r==null)return super.apply(e,t);const a=[],c=[];if(s!=null){const l=s.length;if(l%2>0)throw new ValueError("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=s,a.push(...s);const h=s.map(d=>new InputSpec({shape:d.shape}));this.forwardLayer.stateSpec=h.slice(0,l/2),this.backwardLayer.stateSpec=h.slice(l/2),c.push(...h)}if(r!=null)throw new NotImplementedError("Support for constants in Bidirectional layers is not implemented yet.");const u=a[0]instanceof SymbolicTensor;for(const l of a)if(l instanceof SymbolicTensor!==u)throw new ValueError("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){const l=[e].concat(a),h=this.inputSpec.concat(c),d=this.inputSpec;this.inputSpec=h;const f=super.apply(l,t);return this.inputSpec=d,f}else return super.apply(e,t)}call(e,t){return tidy(()=>{const s=t.initialState;let r,i;if(s==null)r=this.forwardLayer.call(e,t),i=this.backwardLayer.call(e,t);else{const u=s.slice(0,s.length/2),l=s.slice(s.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:u})),i=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let a;this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(i.slice(1))),r=r[0],i=i[0]),this.returnSequences&&(i=reverse$2(i,1));let c;return this.mergeMode==="concat"?c=concatenate([r,i]):this.mergeMode==="sum"?c=add$1(r,i):this.mergeMode==="ave"?c=mul(.5,add$1(r,i)):this.mergeMode==="mul"?c=mul(r,i):this.mergeMode==null&&(c=[r,i]),this.returnState?this.mergeMode==null?c.concat(a):[c].concat(a):c})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){nameScope(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),nameScope(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[t,t]:s=t:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const i=this.forwardLayer.states.map(a=>null);return Array.isArray(s)?s.concat(i).concat(i):[s].concat(i).concat(i)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const s=deserialize(t.layer);if(delete t.layer,t.numConstants!=null)throw new NotImplementedError("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=s,new e(r)}}Bidirectional.className="Bidirectional";registerClass(Bidirectional);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var DataType;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"})(DataType||(DataType={}));var SaverDef;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(SaverDef||(SaverDef={}));/** @license See the LICENSE file. */const version$5="2.8.6";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var ZipMismatchMode;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(ZipMismatchMode||(ZipMismatchMode={}));/** @license See the LICENSE file. */const version$4="2.8.6";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function assertNotComplex$1(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&assert$2(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const whereImpl$1=whereImpl$2;class MathBackendCPU extends KernelBackend{constructor(){super();this.blockSize=48,this.firstUse=!0,this.data=new DataStorage(this,engine())}write(e,t,s){this.firstUse&&(this.firstUse=!1,env().get("IS_NODE")&&warn$1(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));const r={};return this.data.set(r,{values:e,dtype:s,refCount:1}),r}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&isString$1(s[0])){const i=s.map(a=>encodeString(a));r=this.write(i,e,t)}else r=this.write(s,e,t);return{dataId:r,shape:e,dtype:t}}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,s,r){this.data.set(e,{values:t,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:s}=this.data.get(e);if(t==="complex64"){const r=this.readSync(s.real.dataId),i=this.readSync(s.imag.dataId);return mergeRealAndImagArrays(r,i)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let s=t;if(e.dtype==="string")try{s=t.map(r=>decodeString(r))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return buffer(e.shape,e.dtype,s)}makeOutput(e,t,s){const r=this.write(e,t,s);return engine().makeTensorFromDataId(r,t,s,this)}disposeData(e){if(this.data.has(e)){const{complexTensorInfos:t}=this.data.get(e);t!=null&&(this.disposeData(t.real.dataId),this.disposeData(t.imag.dataId)),this.data.delete(e)}}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.data.has(t)){const s=this.data.get(t);s.refCount--,s.refCount<1&&this.disposeData(t)}}async time(e){const t=now$1();return e(),{kernelMs:now$1()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){assertNotComplex$1([e],"where");const t=this.readSync(e.dataId);return whereImpl$1(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function simpleAbsImpl(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const abs$1=n=>{const{x:e}=n.inputs,t=n.backend;assertNotComplex$1(e,"abs");let s=new Float32Array(sizeFromShape(e.shape));const r=t.data.get(e.dataId).values;return s=simpleAbsImpl(r),t.makeOutput(s,e.shape,"float32")},absConfig$1={kernelName:Abs$1,backendName:"cpu",kernelFunc:abs$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function createSimpleBinaryKernelImpl(n){return(e,t,s,r,i)=>{const a=assertAndGetBroadcastShape(e,t),c=a.length,u=computeStrides(a),l=sizeFromShape(a),h=getTypedArrayFromDType(i,l),d=e.length,f=t.length,y=computeStrides(e),g=computeStrides(t),x=getBroadcastDims$1(e,a),b=getBroadcastDims$1(t,a);if(x.length+b.length===0)for(let v=0;v<h.length;++v)h[v]=n(s[v%s.length],r[v%r.length]);else for(let v=0;v<h.length;++v){const S=indexToLoc(v,c,u),T=S.slice(-d);x.forEach(_=>T[_]=0);const w=locToIndex(T,d,y),C=S.slice(-f);b.forEach(_=>C[_]=0);const N=locToIndex(C,f,g);h[v]=n(s[w],r[N])}return[h,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function complex$1(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,i=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,c=t.makeTensorInfo(s.shape,"complex64"),u=t.data.get(c.dataId);return u.complexTensorInfos={real:t.makeTensorInfo(s.shape,"float32",i),imag:t.makeTensorInfo(r.shape,"float32",a)},c}const complexConfig$1={kernelName:Complex,backendName:"cpu",kernelFunc:complex$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zeros(n,e,t="float32"){if(t==="complex64"){const r=zeros(n,e,"float32"),i=zeros(n,e,"float32");return complex$1({inputs:{real:r,imag:i},backend:n})}const s=makeZerosTypedArray(sizeFromShape(e),t);return n.makeTensorInfo(e,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function identity$1(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const identityConfig$1={kernelName:Identity$1,backendName:"cpu",kernelFunc:identity$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function real$1(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.real,i=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,i)}const realConfig$1={kernelName:Real,backendName:"cpu",kernelFunc:real$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cast$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:i}=s;if(i==="complex64"){if(r.dtype==="complex64")return identity$1({inputs:{x:r},backend:t});const a=zeros(t,r.shape,r.dtype),c=cast$1({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),u=complex$1({inputs:{real:c,imag:a},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(c),u}if(r.dtype==="complex64"){const a=real$1({inputs:{input:r},backend:t}),c=cast$1({inputs:{x:a},backend:t,attrs:{dtype:i}});return t.disposeIntermediateTensorInfo(a),c}if(!hasEncodingLoss(r.dtype,i)){const a=identity$1({inputs:{x:r},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:i}}if(i==="int32"){const a=t.data.get(r.dataId).values,c=Int32Array.from(a);return t.makeTensorInfo(r.shape,"int32",c)}if(i==="bool"){const a=t.data.get(r.dataId).values,c=toTypedArray([0],r.dtype),[u,l]=createSimpleBinaryKernelImpl((h,d)=>h!==d?1:0)(r.shape,[],a,c,"bool");return t.makeTensorInfo(l,"bool",u)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${i}`)}const castConfig$1={kernelName:Cast,backendName:"cpu",kernelFunc:cast$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function binaryKernelFunc$1(n,e,t,s){return t==null?({inputs:r,backend:i})=>{const{a,b:c}=r,u=i;assertNotComplex$1([a,c],n);const l=u.data.get(a.dataId).values,h=u.data.get(c.dataId).values,d=s||a.dtype,[f,y]=e(a.shape,c.shape,l,h,d);return u.makeTensorInfo(y,d,f)}:({inputs:r,backend:i})=>{const{a,b:c}=r,u=i;if(a.dtype==="complex64"||c.dtype==="complex64"){const l=cast$1({inputs:{x:a},backend:u,attrs:{dtype:"complex64"}}),h=u.data.get(l.dataId),d=h.complexTensorInfos.real,f=h.complexTensorInfos.imag,y=u.data.get(d.dataId).values,g=u.data.get(f.dataId).values,x=cast$1({inputs:{x:c},backend:u,attrs:{dtype:"complex64"}}),b=u.data.get(x.dataId),v=b.complexTensorInfos.real,S=b.complexTensorInfos.imag,T=u.data.get(v.dataId).values,w=u.data.get(S.dataId).values,[C,N,_]=t(a.shape,c.shape,y,g,T,w),$=u.makeTensorInfo(_,"float32",C),E=u.makeTensorInfo(_,"float32",N),k=complex$1({inputs:{real:$,imag:E},backend:u});return u.disposeIntermediateTensorInfo(l),u.disposeIntermediateTensorInfo(x),u.disposeIntermediateTensorInfo($),u.disposeIntermediateTensorInfo(E),k}else{const l=u.data.get(a.dataId).values,h=u.data.get(c.dataId).values,d=s||a.dtype,[f,y]=e(a.shape,c.shape,l,h,d);return u.makeTensorInfo(y,d,f)}}}function createComplexBinaryKernelImpl(n){return(e,t,s,r,i,a)=>{const c=assertAndGetBroadcastShape(e,t),u=sizeFromShape(c),l=c.length,h=computeStrides(c),d=getTypedArrayFromDType("float32",u),f=getTypedArrayFromDType("float32",u),y=getBroadcastDims$1(e,c),g=getBroadcastDims$1(t,c),x=mergeRealAndImagArrays(s,r),b=mergeRealAndImagArrays(i,a),v=e.length,S=computeStrides(e),T=t.length,w=computeStrides(t);if(y.length+g.length===0)for(let C=0;C<d.length;C++){const N=C%x.length,_=C%b.length,$=n(x[N*2],x[N*2+1],b[_*2],b[_*2+1]);d[C]=$.real,f[C]=$.imag}else for(let C=0;C<d.length;C++){const N=indexToLoc(C,l,h),_=N.slice(-v);y.forEach(P=>_[P]=0);const $=locToIndex(_,v,S),E=N.slice(-T);g.forEach(P=>E[P]=0);const k=locToIndex(E,T,w),F=n(x[$*2],x[$*2+1],b[k*2],b[k*2+1]);d[C]=F.real,f[C]=F.imag}return[d,f,c]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const addImpl=createSimpleBinaryKernelImpl((n,e)=>n+e),addComplexImpl=createComplexBinaryKernelImpl((n,e,t,s)=>({real:n+t,imag:e+s})),add=binaryKernelFunc$1(Add$2,addImpl,addComplexImpl),addConfig$1={kernelName:Add$2,backendName:"cpu",kernelFunc:add};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bincountImpl(n,e,t,s,r){const i=sizeFromShape(s),a=makeZerosTypedArray(r,t);for(let c=0;c<n.length;c++){const u=n[c];if(u<0)throw new Error("Input x must be non-negative!");u>=r||(i>0?a[u]+=e[c]:a[u]+=1)}return a}function bincountReduceImpl(n,e,t,s=!1){const r=n.shape[0],i=n.shape[1],a=buffer([r,t],e.dtype);for(let c=0;c<r;c++)for(let u=0;u<i;u++){const l=n.get(c,u);if(l<0)throw new Error("Input x must be non-negative!");l>=t||(s?a.set(1,c,l):e.size>0?a.set(a.get(c,l)+e.get(c,u),c,l):a.set(a.get(c,l)+1,c,l))}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function createSimpleUnaryImpl(n){return(e,t,s)=>{const r=getTypedArrayFromDType(t,e.length);for(let i=0;i<e.length;++i)r[i]=n(e[i],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unaryKernelFunc$1(n,e,t){return({inputs:s,attrs:r,backend:i})=>{const{x:a}=s;if(assertNotComplex$1(a,n),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");const c=i,u=c.data.get(a.dataId).values,l=sizeFromShape(a.shape),h=t||a.dtype,d=getArrayFromDType(h,l);for(let f=0;f<l;++f)d[f]=e(u[f],r);return c.makeTensorInfo(a.shape,h,d)}}function unaryKernelFuncFromImpl(n,e,t){return({inputs:s,attrs:r,backend:i})=>{const{x:a}=s;if(assertNotComplex$1(a,n),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");const c=i,u=c.data.get(a.dataId).values,l=t||a.dtype,h=e(u,l,r);return c.makeTensorInfo(a.shape,l,h)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ceilImpl=createSimpleUnaryImpl(n=>Math.ceil(n)),ceil$1=unaryKernelFuncFromImpl(Ceil,ceilImpl),ceilConfig$1={kernelName:Ceil,backendName:"cpu",kernelFunc:ceil$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concatImpl$1(n,e,t,s){const r=getArrayFromDType(t,sizeFromShape(e));if(s&&t!=="string"){let i=0;n.forEach(a=>{const c=sizeFromShape(a.shape);r.set(a.vals,i),i+=c})}else{let i=0;n.forEach(a=>{const c=t==="string"?fromUint8ToStringArray(a.vals):a.vals;let u=0;for(let l=0;l<a.shape[0];++l){const h=l*e[1]+i;for(let d=0;d<a.shape[1];++d)r[h+d]=c[u++]}i+=a.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expImpl=createSimpleUnaryImpl(n=>Math.exp(n)),exp$1=unaryKernelFuncFromImpl(Exp,expImpl),expConfig$1={kernelName:Exp,backendName:"cpu",kernelFunc:exp$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expm1Impl=createSimpleUnaryImpl(n=>Math.expm1(n)),expm1$1=unaryKernelFuncFromImpl(Expm1,expm1Impl),expm1Config$1={kernelName:Expm1,backendName:"cpu",kernelFunc:expm1$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const floorImpl=createSimpleUnaryImpl(n=>Math.floor(n)),floor$1=unaryKernelFuncFromImpl(Floor,floorImpl),floorConfig$1={kernelName:Floor,backendName:"cpu",kernelFunc:floor$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherV2Impl(n,e,t){const s=buffer(t,n.dtype);for(let r=0;r<s.size;++r){const a=s.indexToLoc(r).slice(),c=a[0],u=a[2],l=e.locToIndex([c,u]);a[2]=e.values[l];const h=n.locToIndex(a);s.values[r]=n.values[h]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const greaterImpl=createSimpleBinaryKernelImpl((n,e)=>n>e?1:0),greater$1=binaryKernelFunc$1(Greater,greaterImpl,null,"bool"),greaterConfig$1={kernelName:Greater,backendName:"cpu",kernelFunc:greater$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lessImpl=createSimpleBinaryKernelImpl((n,e)=>n<e?1:0),less$1=binaryKernelFunc$1(Less,lessImpl,null,"bool"),lessConfig$1={kernelName:Less,backendName:"cpu",kernelFunc:less$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function linSpaceImpl(n,e,t){const s=(e-n)/(t-1),r=makeZerosTypedArray(t,"float32");r[0]=n;for(let i=1;i<r.length;i++)r[i]=r[i-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logImpl=createSimpleUnaryImpl(n=>Math.log(n)),log$3=unaryKernelFuncFromImpl(Log,logImpl),logConfig$1={kernelName:Log,backendName:"cpu",kernelFunc:log$3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxImpl$1(n,e,t,s){const r=getTypedArrayFromDType(s,sizeFromShape(t));for(let i=0;i<r.length;++i){const a=i*e;let c=n[a];for(let u=0;u<e;++u){const l=n[a+u];l>c&&(c=l)}r[i]=c}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maximumImpl=createSimpleBinaryKernelImpl((n,e)=>Math.max(n,e)),maximum$1=binaryKernelFunc$1(Maximum$1,maximumImpl),maximumConfig$1={kernelName:Maximum$1,backendName:"cpu",kernelFunc:maximum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const minimumImpl=createSimpleBinaryKernelImpl((n,e)=>Math.min(n,e)),minimum$1=binaryKernelFunc$1(Minimum$1,minimumImpl),minimumConfig$1={kernelName:Minimum$1,backendName:"cpu",kernelFunc:minimum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const multiplyImpl=createSimpleBinaryKernelImpl((n,e)=>n*e),multiplyComplexImpl=createComplexBinaryKernelImpl((n,e,t,s)=>({real:n*t-e*s,imag:n*s+e*t})),multiply$2=binaryKernelFunc$1(Multiply$2,multiplyImpl,multiplyComplexImpl),multiplyConfig$1={kernelName:Multiply$2,backendName:"cpu",kernelFunc:multiply$2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function negImpl(n,e,t){const s=createScalarValue(-1,t);return multiplyImpl([],e,s,n,t)}function neg$1(n){const{inputs:e,backend:t}=n,{x:s}=e;assertNotComplex$1(s,"neg");const r=t.data.get(s.dataId).values,[i,a]=negImpl(r,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,i)}const negConfig$1={kernelName:Neg,backendName:"cpu",kernelFunc:neg$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const notEqualImpl=createSimpleBinaryKernelImpl((n,e)=>n!==e?1:0),notEqual$1=binaryKernelFunc$1(NotEqual,notEqualImpl,null,"bool"),notEqualConfig$1={kernelName:NotEqual,backendName:"cpu",kernelFunc:notEqual$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transposeImpl$1(n,e,t,s,r){const i=e.length,a=sizeFromShape(e),c=computeStrides(e),u=computeStrides(r),l=getTypedArrayFromDType(t,sizeFromShape(r));for(let h=0;h<a;++h){const d=indexToLoc(h,i,c),f=new Array(d.length);for(let g=0;g<f.length;g++)f[g]=d[s[g]];const y=locToIndex(f,i,u);l[y]=n[h]}return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transpose$2(n){const{inputs:e,attrs:t,backend:s}=n,{x:r}=e,{perm:i}=t;assertNotComplex$1(r,"transpose");const a=r.shape.length,c=new Array(a);for(let d=0;d<c.length;d++)c[d]=r.shape[i[d]];const u=s.data.get(r.dataId).values,l=transposeImpl$1(u,r.shape,r.dtype,i,c);return{dataId:s.write(l,c,r.dtype),shape:c,dtype:r.dtype}}const transposeConfig$1={kernelName:Transpose,backendName:"cpu",kernelFunc:transpose$2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function prodImpl(n,e,t,s){const[r,i]=computeOutAndReduceShapes(n,s),a=upcastType(e,"int32"),c=makeZerosTypedArray(sizeFromShape(r),a),u=sizeFromShape(i);for(let l=0;l<c.length;++l){const h=l*u;let d=1;for(let f=0;f<u;++f)d*=t[h+f];c[l]=d}return{outVals:c,outShape:r,outDtype:a}}function prod$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s;assertNotComplex$1(r,"prod");const c=r.shape.length,u=parseAxisParam(i,r.shape),l=getAxesPermutation(u,c);let h=u,d=r;const f=[];l!=null&&(d=transpose$2({inputs:{x:r},backend:t,attrs:{perm:l}}),f.push(d),h=getInnerMostAxes(h.length,c));const y=t.data.get(d.dataId).values,{outVals:g,outShape:x,outDtype:b}=prodImpl(d.shape,d.dtype,y,h);let v=x;return a&&(v=expandShapeToKeepDim(x,u)),f.forEach(S=>t.disposeIntermediateTensorInfo(S)),t.makeTensorInfo(v,b,g)}const prodConfig$1={kernelName:Prod,backendName:"cpu",kernelFunc:prod$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rangeImpl(n,e,t,s){const r=n===e,i=n<e&&t<0,a=e<n&&t>1;if(r||i||a)return makeZerosTypedArray(0,s);const c=Math.abs(Math.ceil((e-n)/t)),u=makeZerosTypedArray(c,s);e<n&&t===1&&(t=-1),u[0]=n;for(let l=1;l<u.length;l++)u[l]=u[l-1]+t;return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rsqrtImpl=createSimpleUnaryImpl(n=>1/Math.sqrt(n)),rsqrt$1=unaryKernelFuncFromImpl(Rsqrt,rsqrtImpl),rsqrtConfig$1={kernelName:Rsqrt,backendName:"cpu",kernelFunc:rsqrt$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sliceImpl(n,e,t,s,r){const i=isSliceContinous(s,e,t),a=sizeFromShape(t),c=computeStrides(s);if(i){const d=computeFlatOffset(e,c);return r==="string"?n.slice(d,d+a):n.subarray(d,d+a)}const u=r==="string"?fromUint8ToStringArray(n):n,l=buffer(s,r,u),h=buffer(t,r);for(let d=0;d<h.size;++d){const f=h.indexToLoc(d),y=f.map((g,x)=>g+e[x]);h.set(l.get(...y),...f)}return r==="string"?fromStringArrayToUint8(h.values):h.values}function slice$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:i,size:a}=s;assertNotComplex$1(r,"slice");const[c,u]=parseSliceParams(r,i,a);assertParamsValid(r,c,u);const l=t.data.get(r.dataId).values,h=sliceImpl(l,c,u,r.shape,r.dtype);return t.makeTensorInfo(u,r.dtype,h)}const sliceConfig$1={kernelName:Slice,backendName:"cpu",kernelFunc:slice$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const squaredDifferenceImpl=createSimpleBinaryKernelImpl((n,e)=>{const t=n-e;return t*t}),squaredDifference$1=binaryKernelFunc$1(SquaredDifference,squaredDifferenceImpl),squaredDifferenceConfig$1={kernelName:SquaredDifference,backendName:"cpu",kernelFunc:squaredDifference$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stridedSliceImpl(n,e,t,s){const r=buffer(n,e.dtype);for(let i=0;i<r.size;i++){const a=r.indexToLoc(i),c=new Array(a.length);for(let u=0;u<c.length;u++)c[u]=a[u]*t[u]+s[u];r.set(e.get(...c),...a)}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const subImpl=createSimpleBinaryKernelImpl((n,e)=>n-e),subComplexImpl=createComplexBinaryKernelImpl((n,e,t,s)=>({real:n-t,imag:e-s})),sub$1=binaryKernelFunc$1(Sub,subImpl,subComplexImpl),subConfig$1={kernelName:Sub,backendName:"cpu",kernelFunc:sub$1};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tileImpl(n,e){const t=new Array(n.rank);for(let r=0;r<t.length;r++)t[r]=n.shape[r]*e[r];const s=buffer(t,n.dtype);for(let r=0;r<s.values.length;++r){const i=s.indexToLoc(r),a=new Array(n.rank);for(let u=0;u<a.length;u++)a[u]=i[u]%n.shape[u];const c=n.locToIndex(a);s.values[r]=n.values[c]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function topKImpl(n,e,t,s,r){const i=e[e.length-1],[a,c]=[n.length/i,i],u=getTypedArrayFromDType(t,a*s),l=getTypedArrayFromDType("int32",a*s);for(let d=0;d<a;d++){const f=d*c,y=n.subarray(f,f+c),g=[];for(let S=0;S<y.length;S++)g.push({value:y[S],index:S});g.sort((S,T)=>T.value-S.value);const x=d*s,b=u.subarray(x,x+s),v=l.subarray(x,x+s);for(let S=0;S<s;S++)b[S]=g[S].value,v[S]=g[S].index}const h=e.slice();return h[h.length-1]=s,[buffer(h,t,u),buffer(h,"int32",l)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uniqueImpl(n,e,t,s){const r=parseAxisParam(e,t)[0],i=[1,t[0],1];for(let g=0;g<r;g++)i[0]*=t[g];i[1]=t[r];for(let g=r+1;g<t.length;g++)i[2]*=t[g];const a={},c=new Int32Array(t[r]),u=new TensorBuffer(i,s,n),l=[],h=i[0]===1&&i[2]===1;for(let g=0;g<t[r];g++){let x;if(h)x=n[g].toString();else{const b=[];for(let v=0;v<i[0];v++)for(let S=0;S<i[2];S++)b.push(u.get(v,g,S));x=b.join(",")}if(a[x]!==void 0)c[g]=a[x];else{const b=Object.keys(a).length;a[x]=b,c[g]=b,l.push(g)}}const d=i.slice();d[1]=Object.keys(a).length;const f=new TensorBuffer(d,s);l.forEach((g,x)=>{for(let b=0;b<i[0];b++)for(let v=0;v<i[2];v++)f.set(u.get(b,g,v),b,x,v)});const y=t.slice();return y[r]=d[1],{outputValues:f.values,outputShape:y,indices:c}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var shared=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",simpleAbsImpl,addImpl,bincountImpl,bincountReduceImpl,ceilImpl,concatImpl:concatImpl$1,expImpl,expm1Impl,floorImpl,gatherV2Impl,greaterImpl,lessImpl,linSpaceImpl,logImpl,maxImpl:maxImpl$1,maximumImpl,minimumImpl,multiplyImpl,negImpl,notEqualImpl,prodImpl,rangeImpl,rsqrtImpl,sliceImpl,squaredDifferenceImpl,stridedSliceImpl,subImpl,tileImpl,topKImpl,transposeImpl:transposeImpl$1,uniqueImpl});/** @license See the LICENSE file. */const version$3="2.8.6";/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */registerBackend("cpu",()=>new MathBackendCPU,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const elu$1=unaryKernelFunc$1(Elu$1,n=>n>=0?n:Math.exp(n)-1),eluConfig$1={kernelName:Elu$1,backendName:"cpu",kernelFunc:elu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function leakyRelu$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:i}=s;assertNotComplex$1([r],"leakyRelu");const a=sizeFromShape(r.shape),c=t.data.get(r.dataId).values,u=getTypedArrayFromDType("float32",a);for(let l=0;l<c.length;l++)u[l]=c[l]<0?i*c[l]:c[l];return t.makeTensorInfo(r.shape,"float32",u)}const leakyReluConfig$1={kernelName:LeakyRelu,backendName:"cpu",kernelFunc:leakyRelu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const preluImpl=createSimpleBinaryKernelImpl((n,e)=>n<0?e*n:n);function prelu$1(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e;assertNotComplex$1([s,r],"prelu");const i=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,[c,u]=preluImpl(s.shape,r.shape,i,a,s.dtype);return t.makeTensorInfo(u,s.dtype,c)}const preluConfig$1={kernelName:Prelu,backendName:"cpu",kernelFunc:prelu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const relu$1=unaryKernelFunc$1(Relu$1,n=>Math.max(0,n)),reluConfig$1={kernelName:Relu$1,backendName:"cpu",kernelFunc:relu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const relu6$1=unaryKernelFunc$1(Relu6$1,n=>Math.min(Math.max(0,n),6)),relu6Config$1={kernelName:Relu6$1,backendName:"cpu",kernelFunc:relu6$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function applyActivation(n,e,t,s,r){if(t==="linear")return identity$1({inputs:{x:e},backend:n});if(t==="relu")return relu$1({inputs:{x:e},backend:n});if(t==="elu")return elu$1({inputs:{x:e},backend:n});if(t==="relu6")return relu6$1({inputs:{x:e},backend:n});if(t==="prelu")return prelu$1({inputs:{x:e,alpha:s},backend:n});if(t==="leakyrelu")return leakyRelu$1({inputs:{x:e},backend:n,attrs:{alpha:r}});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reshape$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:i}=s,a=sizeFromShape(r.shape),c=inferFromImplicitShape(i,a),u=sizeFromShape(c);assert$2(a===u,()=>`The new shape (${c}) has ${u} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(r.dataId);const l=t.data.get(r.dataId);if(l.complexTensorInfos!=null){const h=l.complexTensorInfos.real,d=l.complexTensorInfos.imag;h.shape=c,d.shape=c}return{dataId:r.dataId,shape:c,dtype:r.dtype}}const reshapeConfig$1={kernelName:Reshape$1,backendName:"cpu",kernelFunc:reshape$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchMatMul$1(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:i}=e,{transposeA:a,transposeB:c}=s;assertNotComplex$1([r,i],"matMul");const u=r.shape.length,l=i.shape.length,h=a?r.shape[u-2]:r.shape[u-1],d=c?i.shape[l-1]:i.shape[l-2],f=a?r.shape[u-1]:r.shape[u-2],y=c?i.shape[l-2]:i.shape[l-1],g=r.shape.slice(0,-2),x=i.shape.slice(0,-2),b=sizeFromShape(g),v=sizeFromShape(x),S=b===v||b===1||v===1;assert$2(u>=2&&l>=2&&S,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${x}).`);const w=(b>v?r.shape.slice(0,-2):i.shape.slice(0,-2)).concat([f,y]);assert$2(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${r.shape} and ${i.shape} and transposeA=${a} and transposeB=${c} must match.`);const C=a?[b,h,f]:[b,f,h],N=c?[v,y,d]:[v,d,y],_=reshape$1({inputs:{x:r},backend:t,attrs:{shape:C}}),$=reshape$1({inputs:{x:i},backend:t,attrs:{shape:N}}),E=a?_.shape[1]:_.shape[2],k=a?_.shape[2]:_.shape[1],F=c?$.shape[1]:$.shape[2],P=Math.max(b,v),R=t.data.get(_.dataId).values,O=t.data.get($.dataId).values,B=computeStrides(_.shape),L=computeStrides($.shape),[V,q,G]=a?[B[0],1,B[1]]:[B[0],B[1],1],[W,U,j]=c?[1,L[1],L[0]]:[L[1],1,L[0]],Y=k*F,Q=buffer([P,k,F],_.dtype),ee=Q.values,K=t.blockSize;for(let X=0;X<P;X++)for(let oe=0;oe<k;oe+=K)for(let ie=0;ie<F;ie+=K)for(let Z=0;Z<E;Z+=K){const pe=Math.min(oe+K,k),ye=Math.min(ie+K,F),be=Math.min(Z+K,E);for(let ge=oe;ge<pe;ge++)for(let J=ie;J<ye;J++){let se=0;for(let le=Z;le<be;le++){const he=Math.min(X,b-1)*V,ne=Math.min(X,v-1)*j,fe=R[he+ge*q+le*G],Ce=O[le*W+J*U+ne];se+=fe*Ce}ee[X*Y+(ge*F+J)]+=se}}return t.disposeIntermediateTensorInfo(_),t.disposeIntermediateTensorInfo($),t.makeTensorInfo(w,Q.dtype,Q.values)}const batchMatMulConfig$1={kernelName:BatchMatMul,backendName:"cpu",kernelFunc:batchMatMul$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _fusedMatMul$1(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:i,bias:a,preluActivationWeights:c}=e,{transposeA:u,transposeB:l,activation:h,leakyreluAlpha:d}=s;let f,y,g;const x=[];f=batchMatMul$1({inputs:{a:r,b:i},attrs:{transposeA:u,transposeB:l},backend:t}),a&&(y=add({inputs:{a:f,b:a},backend:t}),x.push(f),f=y),h&&(g=applyActivation(t,f,h,c,d),x.push(f),f=g);for(const v of x)t.disposeIntermediateTensorInfo(v);return f}const _fusedMatMulConfig$1={kernelName:_FusedMatMul,backendName:"cpu",kernelFunc:_fusedMatMul$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const acos$1=unaryKernelFunc$1(Acos,n=>Math.acos(n)),acosConfig$1={kernelName:Acos,backendName:"cpu",kernelFunc:acos$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const acosh$1=unaryKernelFunc$1(Acosh,n=>Math.acosh(n)),acoshConfig$1={kernelName:Acosh,backendName:"cpu",kernelFunc:acosh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function addN$1(n){const{inputs:e,backend:t}=n,s=e;assertNotComplex$1(e,"addN");const r=s.map(c=>t.data.get(c.dataId).values),i=buffer(s[0].shape,s[0].dtype),a=i.values;for(let c=0;c<s.length;c++){const u=r[c];for(let l=0;l<a.length;l++)a[l]+=u[l]}return t.makeTensorInfo(i.shape,i.dtype,i.values)}const addNConfig$1={kernelName:AddN,backendName:"cpu",kernelFunc:addN$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function all$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s;assertNotComplex$1(r,"all");const c=parseAxisParam(i,r.shape);let u=c;const l=getAxesPermutation(u,r.shape.length);let h=r;l!=null&&(h=transpose$2({inputs:{x:r},backend:t,attrs:{perm:l}}),u=getInnerMostAxes(u.length,r.shape.length)),assertAxesAreInnerMostDims("all",u,h.shape.length);const[d,f]=computeOutAndReduceShapes(h.shape,u),y=sizeFromShape(f),g=makeZerosTypedArray(sizeFromShape(d),h.dtype),x=t.data.get(h.dataId).values;for(let v=0;v<g.length;++v){const S=v*y;let T=x[S];for(let w=0;w<y;++w){const C=x[S+w];T=T&&C}g[v]=T}l!=null&&t.disposeIntermediateTensorInfo(h);const b=t.makeTensorInfo(d,h.dtype,g);if(a){const v=expandShapeToKeepDim(d,c),S=reshape$1({inputs:{x:b},backend:t,attrs:{shape:v}});return t.disposeIntermediateTensorInfo(b),S}return b}const allConfig$1={kernelName:All,backendName:"cpu",kernelFunc:all$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function any$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s;assertNotComplex$1(r,"any");const c=parseAxisParam(i,r.shape);let u=c;const l=getAxesPermutation(u,r.shape.length);let h=r;l!=null&&(h=transpose$2({inputs:{x:r},backend:t,attrs:{perm:l}}),u=getInnerMostAxes(u.length,r.shape.length)),assertAxesAreInnerMostDims("any",u,h.shape.length);const[d,f]=computeOutAndReduceShapes(h.shape,u),y=sizeFromShape(f),g=makeZerosTypedArray(sizeFromShape(d),h.dtype),x=t.data.get(h.dataId).values;for(let v=0;v<g.length;++v){const S=v*y;let T=x[S];for(let w=0;w<y;++w){const C=x[S+w];T=T||C}g[v]=T}l!=null&&t.disposeIntermediateTensorInfo(h);const b=t.makeTensorInfo(d,h.dtype,g);if(a){const v=expandShapeToKeepDim(d,c),S=reshape$1({inputs:{x:b},backend:t,attrs:{shape:v}});return t.disposeIntermediateTensorInfo(b),S}return b}const anyConfig$1={kernelName:Any,backendName:"cpu",kernelFunc:any$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMax$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i}=s;assertNotComplex$1(r,"argMax");let a=parseAxisParam(i,r.shape);const c=getAxesPermutation(a,r.shape.length);let u=r;const l=[];c!=null&&(u=transpose$2({inputs:{x:r},backend:t,attrs:{perm:c}}),l.push(u),a=getInnerMostAxes(a.length,u.shape.length)),a=[a[0]],assertAxesAreInnerMostDims("argMax",a,u.shape.length);const[h,d]=computeOutAndReduceShapes(u.shape,a),f=sizeFromShape(h),y=makeZerosTypedArray(f,"int32"),g=sizeFromShape(d),x=t.data.get(u.dataId).values;for(let b=0;b<y.length;++b){const v=b*g;let S=x[v],T=0;for(let w=0;w<g;++w){const C=x[v+w];C>S&&(S=C,T=w)}y[b]=T}return l.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.makeTensorInfo(h,"int32",y)}const argMaxConfig$1={kernelName:ArgMax,backendName:"cpu",kernelFunc:argMax$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMin$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i}=s;assertNotComplex$1(r,"argMin");let a=parseAxisParam(i,r.shape);const c=getAxesPermutation(a,r.shape.length);let u=r;const l=[];c!=null&&(u=transpose$2({inputs:{x:r},backend:t,attrs:{perm:c}}),l.push(u),a=getInnerMostAxes(a.length,u.shape.length)),a=[a[0]],assertAxesAreInnerMostDims("argMin",a,u.shape.length);const[h,d]=computeOutAndReduceShapes(u.shape,a),f=sizeFromShape(h),y=makeZerosTypedArray(f,"int32"),g=sizeFromShape(d),x=t.data.get(u.dataId).values;for(let b=0;b<y.length;++b){const v=b*g;let S=x[v],T=0;for(let w=0;w<g;++w){const C=x[v+w];C<S&&(S=C,T=w)}y[b]=T}return l.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.makeTensorInfo(h,"int32",y)}const argMinConfig$1={kernelName:ArgMin,backendName:"cpu",kernelFunc:argMin$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const asin$1=unaryKernelFunc$1(Asin,n=>Math.asin(n)),asinConfig$1={kernelName:Asin,backendName:"cpu",kernelFunc:asin$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const asinh$1=unaryKernelFunc$1(Asinh,n=>Math.asinh(n)),asinhConfig$1={kernelName:Asinh,backendName:"cpu",kernelFunc:asinh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atan$1=unaryKernelFunc$1(Atan,n=>Math.atan(n)),atanConfig$1={kernelName:Atan,backendName:"cpu",kernelFunc:atan$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atan2Impl=createSimpleBinaryKernelImpl((n,e)=>Math.atan2(n,e)),atan2$1=binaryKernelFunc$1(Atan2,atan2Impl),atan2Config$1={kernelName:Atan2,backendName:"cpu",kernelFunc:atan2$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atanh$1=unaryKernelFunc$1(Atanh,n=>Math.atanh(n)),atanhConfig$1={kernelName:Atanh,backendName:"cpu",kernelFunc:atanh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pool$1(n,e,t,s,r,i){const a=r.strideHeight,c=r.strideWidth,u=r.dilationHeight,l=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,f=r.padInfo.top,y=r.padInfo.left,g=i==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=buffer(r.outShape,t),b=x.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3],S=r.outShape[2]*r.outShape[3],T=r.outShape[3];for(let w=0;w<r.batchSize;++w){const C=w*v,N=w*s[0];for(let _=0;_<r.inChannels;++_)for(let $=0;$<r.outHeight;++$){const E=$*a-f,k=Math.max(0,E),F=Math.min(r.inHeight,h+E),P=C+$*S;for(let R=0;R<r.outWidth;++R){const O=R*c-y,B=Math.max(0,O),L=Math.min(r.inWidth,d+O);let V=g,q=0,G=0;for(let U=k;U<F;U+=u){const j=N+U*s[1];for(let Y=B;Y<L;Y+=l){const Q=j+Y*s[2],ee=n[Q+_];i==="max"&&ee>V?V=ee:i==="avg"&&(q+=ee,G++)}if(isNaN(V))break}const W=P+R*T+_;b[W]=i==="avg"?q/G:V}}}return x}function maxPoolPositions(n,e,t,s,r=!1,i=!1){const a=buffer(s.outShape,"int32"),c=s.strideHeight,u=s.strideWidth,l=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterHeight,f=s.effectiveFilterWidth,y=s.padInfo.top,g=s.padInfo.left,x=buffer(e,t,n);for(let b=0;b<s.batchSize;++b)for(let v=0;v<s.inChannels;++v)for(let S=0;S<s.outHeight;++S){const T=S*c-y;let w=T;for(;w<0;)w+=l;const C=Math.min(s.inHeight,d+T);for(let N=0;N<s.outWidth;++N){const _=N*u-g;let $=_;for(;$<0;)$+=h;const E=Math.min(s.inWidth,f+_);let k=Number.NEGATIVE_INFINITY,F=-1;for(let P=w;P<C;P+=l){const R=P-T;for(let O=$;O<E;O+=h){const B=O-_,L=x.get(b,P,O,v);L>k&&(k=L,r?F=i?((b*s.inHeight+P)*s.inWidth+O)*s.inChannels+v:(P*s.inWidth+O)*s.inChannels+v:F=R*f+B)}}a.set(F,b,S,N,v)}}return a}function pool3d(n,e,t,s,r,i){const a=r.strideDepth,c=r.strideHeight,u=r.strideWidth,l=r.dilationDepth,h=r.dilationHeight,d=r.dilationWidth,f=r.effectiveFilterDepth,y=r.effectiveFilterHeight,g=r.effectiveFilterWidth,x=r.padInfo.front,b=r.padInfo.top,v=r.padInfo.left,S=i==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,T=buffer(r.outShape,t),w=T.values,C=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],N=r.outShape[2]*r.outShape[3]*r.outShape[4],_=r.outShape[3]*r.outShape[4],$=r.outShape[4];for(let E=0;E<r.batchSize;++E){const k=E*C,F=E*s[0];for(let P=0;P<r.inChannels;++P)for(let R=0;R<r.outDepth;++R){const O=R*a-x;let B=O;for(;B<0;)B+=l;const L=Math.min(r.inDepth,f+O),V=k+R*N;for(let q=0;q<r.outHeight;++q){const G=q*c-b;let W=G;for(;W<0;)W+=h;const U=Math.min(r.inHeight,y+G),j=V+q*_;for(let Y=0;Y<r.outWidth;++Y){const Q=Y*u-v;let ee=Q;for(;ee<0;)ee+=d;const K=Math.min(r.inWidth,g+Q),X=j+Y*$;let oe=S,ie=0,Z=0;for(let ye=B;ye<L;ye+=l){const be=F+ye*s[1];for(let ge=W;ge<U;ge+=h){const J=be+ge*s[2];for(let se=ee;se<K;se+=d){const le=J+se*s[3],he=n[le+P];if(i==="max"&&he>oe?oe=he:i==="avg"&&(ie+=he,Z++),isNaN(oe))break}if(isNaN(oe))break}if(isNaN(oe))break}const pe=X+P;w[pe]=i==="avg"?ie/Z:oe}}}}return T}function maxPool3dPositions(n,e){const t=buffer(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,i=e.strideWidth,a=e.dilationDepth,c=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,f=e.padInfo.front,y=e.padInfo.top,g=e.padInfo.left;for(let x=0;x<e.batchSize;++x)for(let b=0;b<e.inChannels;++b)for(let v=0;v<e.outDepth;++v){const S=v*s-f;let T=S;for(;T<0;)T+=a;const w=Math.min(e.inDepth,l+S);for(let C=0;C<e.outHeight;++C){const N=C*r-y;let _=N;for(;_<0;)_+=c;const $=Math.min(e.inHeight,h+N);for(let E=0;E<e.outWidth;++E){const k=E*i-g;let F=k;for(;F<0;)F+=u;const P=Math.min(e.inWidth,d+k);let R=Number.NEGATIVE_INFINITY,O=-1;for(let B=T;B<w;B+=a){const L=B-S;for(let V=_;V<$;V+=c){const q=V-N;for(let G=F;G<P;G+=u){const W=G-k,U=n.get(x,B,V,G,b);U>=R&&(R=U,O=L*h*d+q*h+W)}}}t.set(O,x,v,C,E,b)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;assertNotComplex$1(r,"avgPool");const{filterSize:i,strides:a,pad:c,dimRoundingMode:u}=s,l=1;assert$2(eitherStridesOrDilationsAreOne(a,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const h=computePool2DInfo(r.shape,i,a,l,c,u);let d;if(h.filterWidth===1&&h.filterHeight===1&&arraysEqual(h.inShape,h.outShape))d=identity$1({inputs:{x:r},backend:t});else{const f=t.data.get(r.dataId).values,y=computeStrides(r.shape),g=pool$1(f,r.shape,r.dtype,y,h,"avg");d=t.makeTensorInfo(h.outShape,r.dtype,g.values)}return d}const avgPoolConfig$1={kernelName:AvgPool,backendName:"cpu",kernelFunc:avgPool$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3D$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:i,strides:a,pad:c,dimRoundingMode:u,dataFormat:l,dilations:h}=s;assertNotComplex$1(r,"avgPool3d");let d=h;d==null&&(d=[1,1,1]);const f=computePool3DInfo(r.shape,i,a,d,c,u,l),y=t.data.get(r.dataId).values,g=pool3d(y,r.shape,r.dtype,computeStrides(r.shape),f,"avg");return t.makeTensorInfo(g.shape,"float32",g.values)}const avgPool3DConfig$1={kernelName:AvgPool3D,backendName:"cpu",kernelFunc:avgPool3D$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3DGrad$1(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,{filterSize:a,strides:c,pad:u,dilations:l,dimRoundingMode:h}=s;assertNotComplex$1([r,i],"avgPool3DGrad");const d=computePool3DInfo(i.shape,a,c,l,u,h),f=d.strideDepth,y=d.strideHeight,g=d.strideWidth,x=d.filterDepth,b=d.filterHeight,v=d.filterWidth,S=d.dilationDepth,T=d.dilationHeight,w=d.dilationWidth,C=d.effectiveFilterDepth,N=d.effectiveFilterHeight,_=d.effectiveFilterWidth,$=C-1-d.padInfo.front,E=_-1-d.padInfo.left,k=N-1-d.padInfo.top,F=buffer(i.shape,"float32"),P=1/(x*b*v),R=t.bufferSync(r);for(let O=0;O<d.batchSize;++O)for(let B=0;B<d.inChannels;++B)for(let L=0;L<d.inDepth;++L)for(let V=0;V<d.inHeight;++V)for(let q=0;q<d.inWidth;++q){const G=L-$,W=V-k,U=q-E;let j=0;for(let Y=0;Y<C;Y+=S){const Q=(G+Y)/f;if(!(Q<0||Q>=d.outDepth||Math.floor(Q)!==Q))for(let ee=0;ee<N;ee+=T){const K=(W+ee)/y;if(!(K<0||K>=d.outHeight||Math.floor(K)!==K))for(let X=0;X<_;X+=w){const oe=(U+X)/g;if(oe<0||oe>=d.outWidth||Math.floor(oe)!==oe)continue;j+=R.get(O,Q,K,oe,B)}}}F.set(j*P,O,L,V,q,B)}return t.makeTensorInfo(F.shape,F.dtype,F.values)}const avgPool3DGradConfig={kernelName:AvgPool3DGrad,backendName:"cpu",kernelFunc:avgPool3DGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPoolGrad$1(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,a=i;assertNotComplex$1([r,i],"avgPoolGrad");const{filterSize:c,strides:u,pad:l}=s,h=computePool2DInfo(a.shape,c,u,1,l),d=h.strideHeight,f=h.strideWidth,y=h.filterHeight,g=h.filterWidth,x=h.dilationHeight,b=h.dilationWidth,v=h.effectiveFilterHeight,S=h.effectiveFilterWidth,T=S-1-h.padInfo.left,w=v-1-h.padInfo.top,C=buffer(a.shape,"float32"),N=1/(y*g),_=t.data.get(r.dataId).values,$=buffer(r.shape,"float32",_);for(let E=0;E<h.batchSize;++E)for(let k=0;k<h.inChannels;++k)for(let F=0;F<h.inHeight;++F)for(let P=0;P<h.inWidth;++P){const R=F-w,O=P-T;let B=0;for(let L=0;L<v;L+=x){const V=(R+L)/d;if(!(V<0||V>=h.outHeight||Math.floor(V)!==V))for(let q=0;q<S;q+=b){const G=(O+q)/f;if(G<0||G>=h.outWidth||Math.floor(G)!==G)continue;B+=$.get(E,V,G,k)}}C.set(B*N,E,F,P,k)}return t.makeTensorInfo(C.shape,C.dtype,C.values)}const avgPoolGradConfig$1={kernelName:AvgPoolGrad,backendName:"cpu",kernelFunc:avgPoolGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchNorm$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,scale:i,offset:a,mean:c,variance:u}=e;assert$2(c.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),assert$2(a==null||c.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),assert$2(i==null||c.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),assertNotComplex$1([r,c,u,i,a],"batchNorm");let{varianceEpsilon:l}=s;l==null&&(l=.001);const h=t.data.get(r.dataId).values,d=t.data.get(c.dataId).values,f=t.data.get(u.dataId).values,y=i?t.data.get(i.dataId).values:new Float32Array([1]),g=a?t.data.get(a.dataId).values:new Float32Array([0]),x=new Float32Array(h.length),b=g.length,v=y.length,S=f.length,T=d.length;let w=0,C=0,N=0,_=0;for(let $=0;$<h.length;++$)x[$]=g[w++]+(h[$]-d[C++])*y[N++]/Math.sqrt(f[_++]+l),w>=b&&(w=0),C>=T&&(C=0),N>=v&&(N=0),_>=S&&(_=0);return t.makeTensorInfo(r.shape,r.dtype,x)}const batchNormConfig$1={kernelName:FusedBatchNorm,backendName:"cpu",kernelFunc:batchNorm$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchToSpaceND$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:i,crops:a}=s;assertNotComplex$1([r],"batchToSpaceND");const c=i.reduce((v,S)=>v*S),u=getReshaped(r.shape,i,c),l=getPermuted(u.length,i.length),h=getReshapedPermuted(r.shape,i,c),d=getSliceBeginCoords(a,i.length),f=getSliceSize(h,a,i.length),y=reshape$1({inputs:{x:r},backend:t,attrs:{shape:u}}),g=transpose$2({inputs:{x:y},backend:t,attrs:{perm:l}}),x=reshape$1({inputs:{x:g},backend:t,attrs:{shape:h}}),b=slice$1({inputs:{x},backend:t,attrs:{begin:d,size:f}});return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(x),b}const batchToSpaceNDConfig$1={kernelName:BatchToSpaceND,backendName:"cpu",kernelFunc:batchToSpaceND$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bincount$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:i}=e,{size:a}=s,c=t.data.get(r.dataId).values,u=t.data.get(i.dataId).values,l=bincountImpl(c,u,i.dtype,i.shape,a);return t.makeTensorInfo([a],i.dtype,l)}const bincountConfig$1={kernelName:Bincount,backendName:"cpu",kernelFunc:bincount$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const clip=unaryKernelFunc$1(ClipByValue,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),clipConfig={kernelName:ClipByValue,backendName:"cpu",kernelFunc:clip};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const complexAbs$1=n=>{const{x:e}=n.inputs,t=n.backend,s=new Float32Array(sizeFromShape(e.shape)),r=t.data.get(e.dataId),i=r.complexTensorInfos.real,a=r.complexTensorInfos.imag,c=t.data.get(i.dataId).values,u=t.data.get(a.dataId).values;for(let l=0;l<c.length;l++){const h=c[l],d=u[l];s[l]=Math.hypot(h,d)}return t.makeOutput(s,e.shape,"float32")},complexAbsConfig$1={kernelName:ComplexAbs,backendName:"cpu",kernelFunc:complexAbs$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function imag$1(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.imag,i=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,i)}const imagConfig$1={kernelName:Imag,backendName:"cpu",kernelFunc:imag$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concat$1(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,i=parseAxisParam(r,e[0].shape)[0];let a=computeOutShape$1(e.map(x=>x.shape),i);if(sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const c=e.filter(x=>sizeFromShape(x.shape)>0);if(c.length===1)return identity$1({inputs:{x:c[0]},backend:t});const u=c.map(x=>x.shape);if(assertParamsConsistent(u,i),c[0].dtype==="complex64"){const x=c.map(w=>real$1({inputs:{input:w},backend:t})),b=c.map(w=>imag$1({inputs:{input:w},backend:t})),v=concat$1({inputs:x,backend:t,attrs:{axis:i}}),S=concat$1({inputs:b,backend:t,attrs:{axis:i}}),T=complex$1({inputs:{real:v,imag:S},backend:t});return x.forEach(w=>t.disposeIntermediateTensorInfo(w)),b.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(S),T}const l=c.map(x=>{const b=sizeFromShape(x.shape.slice(i));return reshape$1({inputs:{x},backend:t,attrs:{shape:[-1,b]}})}),h=l.map(x=>({vals:t.data.get(x.dataId).values,shape:x.shape}));a=computeOutShape$1(l.map(x=>x.shape),1);const d=l[0].shape[0]===1,f=concatImpl$1(h,a,e[0].dtype,d),y=computeOutShape$1(c.map(x=>x.shape),i),g=t.makeTensorInfo(y,e[0].dtype,f);return l.forEach(x=>t.disposeIntermediateTensorInfo(x)),g}const concatConfig$1={kernelName:Concat,backendName:"cpu",kernelFunc:concat$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2D(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:a,pad:c,dataFormat:u,dilations:l,dimRoundingMode:h}=s;assertNotComplex$1([r,i],"conv2d");const d=convertConv2DDataFormat(u),f=computeConv2DInfo(r.shape,i.shape,a,l,c,h,!1,d),y=f.filterHeight,g=f.filterWidth,x=f.dilationHeight,b=f.dilationWidth,v=f.padInfo.left,S=f.padInfo.top,T=f.dataFormat==="channelsLast",w=new TensorBuffer(f.outShape,r.dtype),C=computeStrides(r.shape),N=computeStrides(i.shape),_=C[0],$=T?C[1]:C[2],E=T?C[2]:1,k=T?1:C[1],F=w.strides[0],P=T?w.strides[1]:w.strides[2],R=T?w.strides[2]:1,O=T?1:w.strides[1],B=t.data.get(r.dataId).values,L=t.data.get(i.dataId).values,V=w.values;for(let q=0;q<f.batchSize;++q){const G=q*_,W=q*F;for(let U=0;U<f.outHeight;++U){const j=W+U*P,Y=U*f.strideHeight-S;for(let Q=0;Q<y;++Q){const ee=Y+Q*x;if(ee<0||ee>=f.inHeight)continue;const K=Q*N[0],X=G+ee*$;for(let oe=0;oe<f.outWidth;++oe){const ie=j+oe*R,Z=oe*f.strideWidth-v;for(let pe=0;pe<g;++pe){const ye=Z+pe*b;if(ye<0||ye>=f.inWidth)continue;const be=K+pe*N[1],ge=X+ye*E;let J=be;for(let se=0;se<f.inChannels;++se){const le=B[ge+se*k];for(let he=0;he<f.outChannels;++he)V[ie+he*O]+=le*L[J+he];J+=f.outChannels}}}}}}return t.makeTensorInfo(w.shape,w.dtype,V)}const conv2DConfig$1={kernelName:Conv2D$1,backendName:"cpu",kernelFunc:conv2D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropFilter$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:a,pad:c,dataFormat:u,dimRoundingMode:l,filterShape:h}=s;assertNotComplex$1([r,i],"conv2dBackpropFilter");const d=convertConv2DDataFormat(u),f=computeConv2DInfo(r.shape,h,a,1,c,l,!1,d),{strideHeight:y,strideWidth:g,filterHeight:x,filterWidth:b}=f,v=f.dataFormat==="channelsLast",S=new TensorBuffer(f.filterShape,"float32"),T=f.padInfo.left,w=f.padInfo.top,C=t.data.get(r.dataId).values,N=t.data.get(i.dataId).values,_=new TensorBuffer(r.shape,r.dtype,C),$=new TensorBuffer(i.shape,i.dtype,N);for(let E=0;E<x;++E){const k=Math.max(0,Math.ceil((w-E)/y)),F=Math.min(f.outHeight,(f.inHeight+w-E)/y);for(let P=0;P<b;++P){const R=Math.max(0,Math.ceil((T-P)/g)),O=Math.min(f.outWidth,(f.inWidth+T-P)/g);for(let B=0;B<f.inChannels;++B)for(let L=0;L<f.outChannels;++L){let V=0;for(let q=0;q<f.batchSize;++q)for(let G=k;G<F;++G){const W=E+G*y-w;for(let U=R;U<O;++U){const j=P+U*g-T;v?V+=_.get(q,W,j,B)*$.get(q,G,U,L):V+=_.get(q,B,W,j)*$.get(q,L,G,U)}}S.set(V,E,P,B,L)}}}return t.makeTensorInfo(S.shape,S.dtype,S.values)}const conv2DBackpropFilterConfig$1={kernelName:Conv2DBackpropFilter,backendName:"cpu",kernelFunc:conv2DBackpropFilter$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropInput$1(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{inputShape:a,strides:c,pad:u,dataFormat:l,dimRoundingMode:h}=s;assertNotComplex$1([r,i],"conv2dBackpropInput");const d=computeStrides(i.shape),f=computeStrides(r.shape);let y=convertConv2DDataFormat(l);const g=computeConv2DInfo(a,i.shape,c,1,u,h,!1,y),x=new TensorBuffer(g.inShape,"float32"),b=x.values,v=t.data.get(r.dataId).values,S=t.data.get(i.dataId).values,[T,w,C]=d,{batchSize:N,filterHeight:_,filterWidth:$,inChannels:E,inHeight:k,inWidth:F,outChannels:P,outHeight:R,outWidth:O,strideHeight:B,strideWidth:L}=g;y=g.dataFormat;const V=_-1-g.padInfo.top,q=$-1-g.padInfo.left,G=y==="channelsLast",W=x.strides[0],U=G?x.strides[1]:x.strides[2],j=G?x.strides[2]:1,Y=G?1:x.strides[1],Q=f[0],ee=G?f[1]:f[2],K=G?f[2]:1,X=G?1:f[1];for(let oe=0;oe<N;++oe)for(let ie=0;ie<E;++ie)for(let Z=0;Z<k;++Z){const pe=Z-V,ye=Math.max(0,Math.ceil(pe/B)),be=Math.min(R,(_+pe)/B);for(let ge=0;ge<F;++ge){const J=ge-q,se=Math.max(0,Math.ceil(J/L)),le=Math.min(O,($+J)/L);let he=0;for(let fe=ye;fe<be;++fe){const Ce=fe*B-pe;for(let Te=se;Te<le;++Te){const _e=Te*L-J,ue=Q*oe+ee*fe+K*Te,me=T*(_-1-Ce)+w*($-1-_e)+C*ie;for(let Ae=0;Ae<P;++Ae){const ae=v[ue+X*Ae],Se=S[me+Ae];he+=ae*Se}}}const ne=W*oe+U*Z+j*ge+Y*ie;b[ne]=he}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const conv2DBackpropInputConfig$1={kernelName:Conv2DBackpropInput,backendName:"cpu",kernelFunc:conv2DBackpropInput$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3D$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:a,pad:c,dilations:u}=s;assertNotComplex$1([r,i],"conv3d");const l=computeConv3DInfo(r.shape,i.shape,a,u,c),{filterDepth:h,filterHeight:d,filterWidth:f,dilationDepth:y,dilationHeight:g,dilationWidth:x,padInfo:b}=l,v=b.front,S=b.left,T=b.top,w=new TensorBuffer(l.outShape,r.dtype),C=t.data.get(r.dataId).values,N=t.data.get(i.dataId).values,_=w.values,$=computeStrides(r.shape),E=computeStrides(i.shape);for(let k=0;k<l.batchSize;++k){const F=k*$[0],P=k*w.strides[0];for(let R=0;R<l.outDepth;++R){const O=P+R*w.strides[1],B=R*l.strideDepth-v;for(let L=0;L<h;++L){const V=B+L*y;if(V<0||V>=l.inDepth)continue;const q=L*E[0],G=F+V*$[1];for(let W=0;W<l.outHeight;++W){const U=O+W*w.strides[2],j=W*l.strideHeight-T;for(let Y=0;Y<d;++Y){const Q=j+Y*g;if(Q<0||Q>=l.inHeight)continue;const ee=q+Y*E[1],K=G+Q*$[2];for(let X=0;X<l.outWidth;++X){const oe=U+X*l.outChannels,ie=X*l.strideWidth-S;for(let Z=0;Z<f;++Z){const pe=ie+Z*x;if(pe<0||pe>=l.inWidth)continue;const ye=ee+Z*E[2],be=K+pe*l.inChannels;let ge=ye;for(let J=0;J<l.inChannels;++J){const se=C[be+J];for(let le=0;le<l.outChannels;++le)_[oe+le]+=se*N[ge+le];ge+=l.outChannels}}}}}}}}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const conv3DConfig$1={kernelName:Conv3D$1,backendName:"cpu",kernelFunc:conv3D$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropFilterV2$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:a,pad:c,filterShape:u}=s;assertNotComplex$1([r,i],"conv3dBackpropFilterV2");const l=computeStrides(r.shape),h=computeStrides(i.shape),d=computeConv3DInfo(r.shape,u,a,1,c),f=d.strideDepth,y=d.strideHeight,g=d.strideWidth,x=d.filterDepth,b=d.filterHeight,v=d.filterWidth,S=new TensorBuffer(d.filterShape,"float32"),T=S.values,[w,C,N,_]=S.strides,$=t.data.get(i.dataId).values,[E,k,F,P]=h,R=t.data.get(r.dataId).values,[O,B,L,V]=l,q=d.padInfo.front,G=d.padInfo.left,W=d.padInfo.top;for(let U=0;U<x;++U){const j=Math.max(0,Math.ceil((q-U)/f)),Y=Math.min(d.outDepth,(d.inDepth+q-U)/f),Q=U*w;for(let ee=0;ee<b;++ee){const K=Math.max(0,Math.ceil((W-ee)/y)),X=Math.min(d.outHeight,(d.inHeight+W-ee)/y),oe=ee*C+Q;for(let ie=0;ie<v;++ie){const Z=Math.max(0,Math.ceil((G-ie)/g)),pe=Math.min(d.outWidth,(d.inWidth+G-ie)/g),ye=ie*N+oe;for(let be=0;be<d.inChannels;++be){const ge=be*_+ye;for(let J=0;J<d.outChannels;++J){let se=0;for(let le=0;le<d.batchSize;++le){const he=le*O,ne=le*E;for(let fe=j;fe<Y;++fe){const Te=(U+fe*f-q)*B+he,_e=fe*k+ne;for(let ue=K;ue<X;++ue){const Ae=(ee+ue*y-W)*L+Te,ae=ue*F+_e;for(let Se=Z;Se<pe;++Se){const we=(ie+Se*g-G)*V+Ae,Re=Se*P+ae;se+=R[we+be]*$[Re+J]}}}}T[ge+J]=se}}}}}return t.makeTensorInfo(S.shape,S.dtype,S.values)}const conv3DBackpropFilterV2Config$1={kernelName:Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:conv3DBackpropFilterV2$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropInputV2(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{pad:a,strides:c,inputShape:u}=s;assertNotComplex$1([r],"conv3dBackpropInputV2");const l=computeStrides(r.shape),h=computeStrides(i.shape),d=computeConv3DInfo(u,i.shape,c,1,a),f=new TensorBuffer(d.inShape,"float32"),y=f.values,[g,x,b,v]=f.strides,S=t.data.get(r.dataId).values,[T,w,C,N]=l,_=t.data.get(i.dataId).values,[$,E,k,F]=h,{batchSize:P,filterDepth:R,filterHeight:O,filterWidth:B,inChannels:L,inDepth:V,inHeight:q,inWidth:G,outChannels:W,outDepth:U,outHeight:j,outWidth:Y,strideDepth:Q,strideHeight:ee,strideWidth:K}=d,X=R-1-d.padInfo.front,oe=O-1-d.padInfo.top,ie=B-1-d.padInfo.left;for(let Z=0;Z<P;++Z)for(let pe=0;pe<L;++pe)for(let ye=0;ye<V;++ye){const be=ye-X,ge=Math.max(0,Math.ceil(be/Q)),J=Math.min(U,(R+be)/Q);for(let se=0;se<q;++se){const le=se-oe,he=Math.max(0,Math.ceil(le/ee)),ne=Math.min(j,(O+le)/ee);for(let fe=0;fe<G;++fe){const Ce=fe-ie,Te=Math.max(0,Math.ceil(Ce/K)),_e=Math.min(Y,(B+Ce)/K);let ue=0;for(let me=ge;me<J;++me){const Ae=me*Q-be;for(let ae=he;ae<ne;++ae){const Se=ae*ee-le;for(let ce=Te;ce<_e;++ce){const we=ce*K-Ce,Re=T*Z+w*me+C*ae+N*ce,Ee=$*(R-1-Ae)+E*(O-1-Se)+k*(B-1-we)+F*pe;for(let Oe=0;Oe<W;++Oe){const Ge=S[Re+Oe],Me=_[Ee+Oe];ue+=Ge*Me}}}}y[g*Z+x*ye+b*se+v*fe+pe]=ue}}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}const conv3DBackpropInputV2Config={kernelName:Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:conv3DBackpropInputV2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cos$1=unaryKernelFunc$1(Cos,n=>Math.cos(n)),cosConfig$1={kernelName:Cos,backendName:"cpu",kernelFunc:cos$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cosh$1=unaryKernelFunc$1(Cosh,n=>Math.cosh(n)),coshConfig$1={kernelName:Cosh,backendName:"cpu",kernelFunc:cosh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cropAndResize$1(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:i,boxInd:a}=e,{cropSize:c,method:u,extrapolationValue:l}=s,[h,d,f,y]=r.shape,g=i.shape[0],[x,b]=c,v=buffer([g,x,b,y],"float32"),S=t.data.get(i.dataId).values,T=t.data.get(a.dataId).values,w=t.data.get(r.dataId).values,C=computeStrides(r.shape),N=computeStrides(v.shape);for(let _=0;_<g;_++){const $=_*4,E=S[$],k=S[$+1],F=S[$+2],P=S[$+3],R=T[_];if(R>=h)continue;const O=x>1?(F-E)*(d-1)/(x-1):0,B=b>1?(P-k)*(f-1)/(b-1):0;for(let L=0;L<x;L++){const V=x>1?E*(d-1)+L*O:.5*(E+F)*(d-1);if(V<0||V>d-1){for(let q=0;q<b;q++)for(let G=0;G<y;G++){const W=G+q*N[2]+L*N[1]+_*N[0];v.values[W]=l}continue}if(u==="bilinear"){const q=Math.floor(V),G=Math.ceil(V),W=V-q;for(let U=0;U<b;U++){const j=b>1?k*(f-1)+U*B:.5*(k+P)*(f-1);if(j<0||j>f-1){for(let K=0;K<y;K++){const X=K+U*N[2]+L*N[1]+_*N[0];v.values[X]=l}continue}const Y=Math.floor(j),Q=Math.ceil(j),ee=j-Y;for(let K=0;K<y;K++){let X=K+Y*C[2]+q*C[1]+R*C[0];const oe=w[X];X=K+Q*C[2]+q*C[1]+R*C[0];const ie=w[X];X=K+Y*C[2]+G*C[1]+R*C[0];const Z=w[X];X=K+Q*C[2]+G*C[1]+R*C[0];const pe=w[X],ye=oe+(ie-oe)*ee,be=Z+(pe-Z)*ee;X=K+U*N[2]+L*N[1]+_*N[0],v.values[X]=ye+(be-ye)*W}}}else for(let q=0;q<b;++q){const G=b>1?k*(f-1)+q*B:.5*(k+P)*(f-1);if(G<0||G>f-1){for(let j=0;j<y;j++){const Y=j+q*N[2]+L*N[1]+_*N[0];v.values[Y]=l}continue}const W=Math.round(G),U=Math.round(V);for(let j=0;j<y;j++){const Y=j+W*C[2]+U*C[1]+R*C[0],Q=j+q*N[2]+L*N[1]+_*N[0];v.values[Q]=w[Y]}}}}return t.makeTensorInfo(v.shape,v.dtype,v.values)}const cropAndResizeConfig$1={kernelName:CropAndResize,backendName:"cpu",kernelFunc:cropAndResize$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cumsum$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,exclusive:a,reverse:c}=s;assertNotComplex$1(r,"cumsum");const u=getAxesPermutation([i],r.shape.length);let l=r;u!=null&&(l=transpose$2({inputs:{x:r},backend:t,attrs:{perm:u}}));const h=getInnerMostAxes(1,r.shape.length)[0];if(h!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${h}`);const d=upcastType(l.dtype,"int32"),f=makeZerosTypedArray(sizeFromShape(l.shape),d),y=t.data.get(l.dataId).values,g=l.shape[l.shape.length-1],x=c?(v,S)=>v+g-S-1:(v,S)=>v+S;for(let v=0;v<y.length;v+=g)for(let S=0;S<g;S++){const T=x(v,S);if(S===0)f[T]=a?0:y[T];else{const w=x(v,S-1);f[T]=a?y[w]+f[w]:y[T]+f[w]}}const b=t.makeTensorInfo(l.shape,d,f);if(u!=null){const v=getUndoAxesPermutation(u),S=transpose$2({inputs:{x:b},backend:t,attrs:{perm:v}});return t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(l),S}return b}const cumsumConfig$1={kernelName:Cumsum,backendName:"cpu",kernelFunc:cumsum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function denseBincount$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:i}=e,{size:a,binaryOutput:c}=s;if(r.shape.length===1){const u=t.data.get(r.dataId).values,l=t.data.get(i.dataId).values,h=bincountImpl(u,l,i.dtype,i.shape,a);return t.makeTensorInfo([a],i.dtype,h)}else if(r.shape.length===2){const u=t.bufferSync(r),l=t.bufferSync(i),h=bincountReduceImpl(u,l,a,c);return t.makeTensorInfo(h.shape,i.dtype,h.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const denseBincountConfig$1={kernelName:DenseBincount,backendName:"cpu",kernelFunc:denseBincount$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthToSpace$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:i,dataFormat:a}=s;assert$2(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`),assert$2(i>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${i}`);const c=r.shape[0],u=r.shape[1],l=r.shape[2],h=r.shape[3],d=u*i,f=l*i,y=h/(i*i),g=t.data.get(r.dataId).values,x=new Float32Array(c*d*f*y);let b=0;for(let v=0;v<c;++v)for(let S=0;S<d;++S){const T=Math.floor(S/i),w=S%i;for(let C=0;C<f;++C){const N=Math.floor(C/i),_=C%i,$=(w*i+_)*y;for(let E=0;E<y;++E){const F=E+$+h*(N+l*(T+u*v));x[b++]=g[F]}}}return t.makeTensorInfo([c,d,f,y],r.dtype,x)}const depthToSpaceConfig$1={kernelName:DepthToSpace,backendName:"cpu",kernelFunc:depthToSpace$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNative$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:a,pad:c,dilations:u,dimRoundingMode:l}=s;assertNotComplex$1([r,i],"depthwiseConv2DNative");const h=computeStrides(r.shape),d=computeStrides(i.shape);let f=u;f==null&&(f=[1,1]),assert$2(eitherStridesOrDilationsAreOne(a,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${f}'`);const y=computeConv2DInfo(r.shape,i.shape,a,f,c,l,!0),{filterHeight:g,filterWidth:x,dilationHeight:b,dilationWidth:v,padInfo:S}=y,T=S.left,w=S.top,C=y.outChannels/y.inChannels,N=new TensorBuffer(y.outShape,r.dtype),_=t.data.get(r.dataId).values,$=t.data.get(i.dataId).values,E=N.values;for(let k=0;k<y.batchSize;++k){const F=k*h[0],P=k*N.strides[0];for(let R=0;R<y.outHeight;++R){const O=P+R*N.strides[1],B=R*y.strideHeight-T;for(let L=0;L<g;++L){const V=B+L*b;if(V<0||V>=y.inHeight)continue;const q=L*d[0],G=F+V*h[1];for(let W=0;W<y.outWidth;++W){const U=O+W*N.strides[2],j=W*y.strideWidth-w;for(let Y=0;Y<x;++Y){const Q=j+Y*v;if(Q<0||Q>=y.inWidth)continue;const ee=q+Y*d[1],K=G+Q*y.inChannels;let X=U,oe=ee;for(let ie=0;ie<y.inChannels;++ie){const Z=_[K+ie];for(let pe=0;pe<C;++pe)E[X+pe]+=Z*$[oe+pe];X+=C,oe+=C}}}}}}return t.makeTensorInfo(N.shape,N.dtype,N.values)}const depthwiseConv2dNativeConfig$1={kernelName:DepthwiseConv2dNative,backendName:"cpu",kernelFunc:depthwiseConv2dNative$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropFilter$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:a,dilations:c,pad:u,dimRoundingMode:l,filterShape:h}=s;assertNotComplex$1([r,i],"depthwiseConv2dNativeBackpropFilter");const d=computeConv2DInfo(r.shape,h,a,c,u,l,!0),{strideHeight:f,strideWidth:y,filterHeight:g,filterWidth:x}=d,b=new TensorBuffer(d.filterShape,"float32"),v=d.padInfo.left,S=d.padInfo.top,T=d.outChannels/d.inChannels,w=t.data.get(r.dataId).values,C=new TensorBuffer(r.shape,r.dtype,w),N=t.data.get(i.dataId).values,_=new TensorBuffer(i.shape,i.dtype,N);for(let $=0;$<g;++$){const E=Math.max(0,Math.ceil((S-$)/f)),k=Math.min(d.outHeight,(d.inHeight+S-$)/f);for(let F=0;F<x;++F){const P=Math.max(0,Math.ceil((v-F)/y)),R=Math.min(d.outWidth,(d.inWidth+v-F)/y);for(let O=0;O<d.outChannels;++O){const B=Math.trunc(O/T),L=O%T;let V=0;for(let q=0;q<d.batchSize;++q)for(let G=E;G<k;++G){const W=$+G*f-S;for(let U=P;U<R;++U){const j=F+U*y-v;V+=C.get(q,W,j,B)*_.get(q,G,U,O)}}b.set(V,$,F,B,L)}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const depthwiseConv2dNativeBackpropFilterConfig$1={kernelName:DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:depthwiseConv2dNativeBackpropFilter$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropInput$1(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{strides:a,dilations:c,pad:u,dimRoundingMode:l,inputShape:h}=s;assertNotComplex$1([r,i],"depthwiseConv2DNativeBackpropInput");const d=computeStrides(r.shape),f=computeStrides(i.shape),y=computeConv2DInfo(h,i.shape,a,c,u,l,!0),g=new TensorBuffer(y.inShape,"float32"),x=g.values,[b,v,S]=g.strides,T=t.data.get(r.dataId).values,[w,C,N]=d,_=t.data.get(i.dataId).values,[$,E,k]=f,{batchSize:F,filterHeight:P,filterWidth:R,inChannels:O,inHeight:B,inWidth:L,outChannels:V,outHeight:q,outWidth:G,strideHeight:W,strideWidth:U}=y,j=P-1-y.padInfo.top,Y=R-1-y.padInfo.left,Q=V/O;for(let ee=0;ee<F;++ee)for(let K=0;K<O;++K)for(let X=0;X<B;++X){const oe=X-j,ie=Math.max(0,Math.ceil(oe/W)),Z=Math.min(q,(P+oe)/W);for(let pe=0;pe<L;++pe){const ye=pe-Y,be=Math.max(0,Math.ceil(ye/U)),ge=Math.min(G,(R+ye)/U);let J=0;for(let se=ie;se<Z;++se){const le=se*W-oe;for(let he=be;he<ge;++he){const ne=he*U-ye,fe=w*ee+C*se+N*he,Ce=$*(P-1-le)+E*(R-1-ne)+k*K;for(let Te=0;Te<Q;++Te){const _e=K*Q+Te,ue=T[fe+_e],me=_[Ce+Te];J+=ue*me}}}x[b*ee+v*X+S*pe+K]=J}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const depthwiseConv2dNativeBackpropInputConfig$1={kernelName:DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:depthwiseConv2dNativeBackpropInput$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function diag$1(n){const{inputs:e,backend:t}=n,{x:s}=e,r=sizeFromShape(s.shape),i=t.data.get(s.dataId).values,a=buffer([r,r],s.dtype),c=a.values;for(let l=0;l<i.length;l++)c[l*r+l]=i[l];const u=[...s.shape,...s.shape];return t.makeTensorInfo(u,a.dtype,a.values)}const diagConfig$1={kernelName:Diag,backendName:"cpu",kernelFunc:diag$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dilation2dConfig={kernelName:Dilation2D,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r}=n,{strides:i,pad:a,dilations:c}=t,u=e,l=u.data.get(s.dataId).values,h=s.shape.length,d=u.data.get(r.dataId).values,f=r.shape.length,{batchSize:y,inHeight:g,inWidth:x,inChannels:b,outHeight:v,outWidth:S,padInfo:T,strideHeight:w,strideWidth:C,filterHeight:N,filterWidth:_,dilationHeight:$,dilationWidth:E,outShape:k}=computeDilation2DInfo(s.shape,r.shape,i,a,"NHWC",c),F=sizeFromShape(k),P=k.length,R=getArrayFromDType(s.dtype,F);for(let B=0;B<y;++B)for(let L=0;L<v;++L){const V=L*w-T.top;for(let q=0;q<S;++q){const G=q*C-T.left;for(let W=0;W<b;++W){let U=Number.MIN_SAFE_INTEGER;for(let Y=0;Y<N;++Y){const Q=V+Y*$;if(Q>=0&&Q<g)for(let ee=0;ee<_;++ee){const K=G+ee*E;if(K>=0&&K<x){const X=locToIndex([B,Q,K,W],h,computeStrides(s.shape)),oe=locToIndex([Y,ee,W],f,computeStrides(r.shape)),ie=l[X]+d[oe];ie>U&&(U=ie)}}}const j=locToIndex([B,L,q,W],P,computeStrides(k));R[j]=U}}}return{dataId:u.write(toTypedArray(R,s.dtype),k,s.dtype),shape:k,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dilation2dBackpropFilterConfig={kernelName:Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:i}=n,{strides:a,pad:c,dilations:u}=t,l=e,h=toNestedArray(s.shape,l.data.get(s.dataId).values),d=toNestedArray(r.shape,l.data.get(r.dataId).values),{batchSize:f,inHeight:y,inWidth:g,inChannels:x,outHeight:b,outWidth:v,padInfo:S,strideHeight:T,strideWidth:w,filterHeight:C,filterWidth:N,dilationHeight:_,dilationWidth:$,outShape:E}=computeDilation2DInfo(s.shape,r.shape,a,c,"NHWC",u);assert$2(i.rank===E.length,()=>`Error in ${Dilation2DBackpropFilter}, dy must have the same rank as output ${E.length}, but got ${i.rank}`);const k=toNestedArray(E,l.data.get(i.dataId).values),F=makeZerosNestedTypedArray(r.shape,r.dtype);for(let R=0;R<f;++R)for(let O=0;O<b;++O){const B=O*T-S.top;for(let L=0;L<v;++L){const V=L*w-S.left;for(let q=0;q<x;++q){let G=Number.MIN_SAFE_INTEGER,W=0,U=0;for(let j=0;j<C;++j){const Y=B+j*_;if(Y>=0&&Y<y)for(let Q=0;Q<N;++Q){const ee=V+Q*$;if(ee>=0&&ee<g){const K=h[R][Y][ee][q]+d[j][Q][q];K>G&&(G=K,W=j,U=Q)}}}F[W][U][q]+=k[R][O][L][q]}}}return{dataId:l.write(toTypedArray(F,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dilation2dBackpropInputConfig={kernelName:Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:i}=n,{strides:a,pad:c,dilations:u}=t,l=e,h=toNestedArray(s.shape,l.data.get(s.dataId).values),d=toNestedArray(r.shape,l.data.get(r.dataId).values),{batchSize:f,inHeight:y,inWidth:g,inChannels:x,outHeight:b,outWidth:v,padInfo:S,strideHeight:T,strideWidth:w,filterHeight:C,filterWidth:N,dilationHeight:_,dilationWidth:$,outShape:E}=computeDilation2DInfo(s.shape,r.shape,a,c,"NHWC",u);assert$2(i.rank===E.length,()=>`Error in ${Dilation2DBackpropInput}, dy must have the same rank as output ${E.length}, but got ${i.rank}`);const k=toNestedArray(E,l.data.get(i.dataId).values),F=makeZerosNestedTypedArray(s.shape,s.dtype);for(let R=0;R<f;++R)for(let O=0;O<b;++O){const B=O*T-S.top;for(let L=0;L<v;++L){const V=L*w-S.left;for(let q=0;q<x;++q){let G=Number.MIN_SAFE_INTEGER,W=B<0?0:B,U=V<0?0:V;for(let j=0;j<C;++j){const Y=B+j*_;if(Y>=0&&Y<y)for(let Q=0;Q<N;++Q){const ee=V+Q*$;if(ee>=0&&ee<g){const K=h[R][Y][ee][q]+d[j][Q][q];K>G&&(G=K,W=Y,U=ee)}}}F[R][W][U][q]+=k[R][O][L][q]}}}return{dataId:l.write(toTypedArray(F,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eluGrad$1(n){const{inputs:e,backend:t}=n,{dy:s,y:r}=e;assertNotComplex$1([s,r],"eluGrad");const i=new Float32Array(sizeFromShape(r.shape)),a=t.data.get(r.dataId).values,c=t.data.get(s.dataId).values;for(let u=0;u<a.length;++u){const l=a[u];l>=1?i[u]=c[u]:i[u]=c[u]*(l+1)}return t.makeTensorInfo(r.shape,"float32",i)}const eluGradConfig$1={kernelName:EluGrad,backendName:"cpu",kernelFunc:eluGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const equalImpl=createSimpleBinaryKernelImpl((n,e)=>n===e?1:0),equal$1=binaryKernelFunc$1(Equal,equalImpl,null,"bool"),equalConfig$1={kernelName:Equal,backendName:"cpu",kernelFunc:equal$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p=ERF_P,a1=ERF_A1,a2=ERF_A2,a3=ERF_A3,a4=ERF_A4,a5=ERF_A5,erf$1=unaryKernelFunc$1(Erf,n=>{const e=Math.sign(n),t=Math.abs(n),s=1/(1+p*t);return e*(1-((((a5*s+a4)*s+a3)*s+a2)*s+a1)*s*Math.exp(-t*t))}),erfConfig$1={kernelName:Erf,backendName:"cpu",kernelFunc:erf$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function expandDims$1(n){const{inputs:e,backend:t,attrs:s}=n,{input:r}=e,{dim:i}=s,a=r.shape.length,c=r.shape.slice();let u=i;return i<0&&(assert$2(-(a+1)<=i,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+i+1),c.splice(u,0,1),reshape$1({inputs:{x:r},backend:t,attrs:{shape:c}})}const expandDimsConfig$1={kernelName:ExpandDims,backendName:"cpu",kernelFunc:expandDims$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const realDivImpl=createSimpleBinaryKernelImpl((n,e)=>n/e),div=binaryKernelFunc$1(RealDiv,realDivImpl),realDivConfig$1={kernelName:RealDiv,backendName:"cpu",kernelFunc:div};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fftBatch(n,e,t){const s=n.shape,r=s[0],i=s[1],a=t.data.get(n.dataId),c=a.complexTensorInfos.real,u=a.complexTensorInfos.imag,l=[r,i],h=sizeFromShape(l),d=getTypedArrayFromDType("float32",h),f=getTypedArrayFromDType("float32",h);for(let b=0;b<r;b++){const v=slice$1({inputs:{x:c},backend:t,attrs:{begin:[b,0],size:[1,i]}}),S=slice$1({inputs:{x:u},backend:t,attrs:{begin:[b,0],size:[1,i]}}),T=complex$1({inputs:{real:v,imag:S},backend:t}),{real:w,imag:C}=fftImpl$1(T,e,t),N=mergeRealAndImagArrays(w,C);for(let _=0;_<i;_++){const $=getComplexWithIndex(N,_);d[b*i+_]=$.real,f[b*i+_]=$.imag}t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(S),t.disposeIntermediateTensorInfo(T)}const y=t.makeTensorInfo(l,"float32",d),g=t.makeTensorInfo(l,"float32",f),x=complex$1({inputs:{real:y,imag:g},backend:t});return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(g),x}function fftImpl$1(n,e,t){const s=sizeFromShape(n.shape),r=t.data.get(n.dataId),i=t.data.get(r.complexTensorInfos.real.dataId).values,a=t.data.get(r.complexTensorInfos.imag.dataId).values;if(isExponentOf2(s)){const c=fftRadix2$1(i,a,s,e,t),u=[n.shape[0],n.shape[1]];if(e){const l=t.makeTensorInfo(u,"float32",c.real),h=t.makeTensorInfo(u,"float32",c.imag),d=t.makeTensorInfo([],"float32",createScalarValue(s,"float32")),f=identity$1({inputs:{x:d},backend:t}),y=realDivConfig$1.kernelFunc({inputs:{a:l,b:d},backend:t}),g=realDivConfig$1.kernelFunc({inputs:{a:h,b:f},backend:t}),x=t.data.get(y.dataId).values,b=t.data.get(g.dataId).values;return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(g),{real:x,imag:b}}return c}else{const c=mergeRealAndImagArrays(i,a),u=fourierTransformByMatmul(c,s,e);return splitRealAndImagArrays(u)}}function isExponentOf2(n){return(n&n-1)==0}function fftRadix2$1(n,e,t,s,r){if(t===1)return{real:n,imag:e};const i=mergeRealAndImagArrays(n,e),a=t/2,c=complexWithEvenIndex(i),u=c.real,l=c.imag,h=[u.length],d=r.makeTensorInfo(h,"float32",u),f=r.makeTensorInfo(h,"float32",l),y=complex$1({inputs:{real:d,imag:f},backend:r}),g=complexWithOddIndex(i),x=g.real,b=g.imag,v=[x.length],S=r.makeTensorInfo(v,"float32",x),T=r.makeTensorInfo(v,"float32",b),w=complex$1({inputs:{real:S,imag:T},backend:r}),C=fftRadix2$1(u,l,a,s,r),N=C.real,_=C.imag,$=[N.length],E=r.makeTensorInfo($,"float32",N),k=r.makeTensorInfo($,"float32",_),F=complex$1({inputs:{real:E,imag:k},backend:r}),P=fftRadix2$1(x,b,a,s,r),R=P.real,O=P.imag,B=[R.length],L=r.makeTensorInfo(B,"float32",R),V=r.makeTensorInfo(B,"float32",O),q=complex$1({inputs:{real:L,imag:V},backend:r}),G=exponents(t,s),W=[G.real.length],U=r.makeTensorInfo(W,"float32",G.real),j=r.makeTensorInfo(W,"float32",G.imag),Y=complex$1({inputs:{real:U,imag:j},backend:r}),Q=multiply$2({inputs:{a:Y,b:q},backend:r}),ee=add({inputs:{a:F,b:Q},backend:r}),K=sub$1({inputs:{a:F,b:Q},backend:r}),X=real$1({inputs:{input:ee},backend:r}),oe=real$1({inputs:{input:K},backend:r}),ie=imag$1({inputs:{input:ee},backend:r}),Z=imag$1({inputs:{input:K},backend:r}),pe=concat$1({inputs:[X,oe],backend:r,attrs:{axis:0}}),ye=concat$1({inputs:[ie,Z],backend:r,attrs:{axis:0}}),be=r.data.get(pe.dataId).values,ge=r.data.get(ye.dataId).values;return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(k),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(Y),r.disposeIntermediateTensorInfo(Q),r.disposeIntermediateTensorInfo(ee),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(ie),r.disposeIntermediateTensorInfo(oe),r.disposeIntermediateTensorInfo(Z),r.disposeIntermediateTensorInfo(pe),r.disposeIntermediateTensorInfo(ye),{real:be,imag:ge}}function fourierTransformByMatmul(n,e,t){const s=new Float32Array(e*2);for(let r=0;r<e;r++){let i=0,a=0;for(let c=0;c<e;c++){const u=exponent(r*c,e,t),l=getComplexWithIndex(n,c);i+=l.real*u.real-l.imag*u.imag,a+=l.real*u.imag+l.imag*u.real}t&&(i/=e,a/=e),assignToTypedArray(s,i,a,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fft$2(n){const{inputs:e,backend:t}=n,{input:s}=e,r=sizeFromShape(s.shape),i=s.shape[s.shape.length-1],a=r/i,c=reshape$1({inputs:{x:s},backend:t,attrs:{shape:[a,i]}}),u=fftBatch(c,!1,t),l=reshape$1({inputs:{x:u},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(u),l}const fftConfig$1={kernelName:FFT$1,backendName:"cpu",kernelFunc:fft$2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fill$1(n){const{backend:e,attrs:t}=n,{shape:s,value:r,dtype:i}=t,a=i||inferDtype(r),c=getArrayFromDType(a,sizeFromShape(s));return fillValues(c,r,a),e.makeTensorInfo(s,a,c)}const fillConfig$1={kernelName:Fill,backendName:"cpu",kernelFunc:fill$1};function fillValues(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const flipLeftRightConfig$1={kernelName:FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,r=t,i=getTypedArrayFromDType(s.dtype,sizeFromShape(s.shape)),[a,c,u,l]=s.shape,h=r.data.get(s.dataId).values;for(let f=0;f<a;f++){const y=f*u*c*l;for(let g=0;g<c;g++){const x=g*(u*l);for(let b=0;b<u;b++){const v=b*l;for(let S=0;S<l;S++){const w=[a,g,b,S][2],C=Math.round(u-w),N=y+x+v+S;let _=h[N];if(C>=0&&C<u){const $=C*l,E=y+x+$+S;_=h[E]}i[N]=_}}}}return{dataId:r.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const floorDivImpl=createSimpleBinaryKernelImpl((n,e)=>Math.floor(n/e)),floorDiv$1=binaryKernelFunc$1(FloorDiv,floorDivImpl,null,"int32"),floorDivConfig$1={kernelName:FloorDiv,backendName:"cpu",kernelFunc:floorDiv$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedConv2D(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i,bias:a,preluActivationWeights:c}=e,{strides:u,pad:l,dataFormat:h,dilations:d,dimRoundingMode:f,activation:y,leakyreluAlpha:g}=s;let x=conv2D({inputs:{x:r,filter:i},backend:t,attrs:{strides:u,pad:l,dataFormat:h,dilations:d,dimRoundingMode:f}});if(a){const b=x;x=add({inputs:{a:x,b:a},backend:t}),t.disposeIntermediateTensorInfo(b)}if(y){const b=x;x=applyActivation(t,x,y,c,g),t.disposeIntermediateTensorInfo(b)}return x}const fusedConv2DConfig$1={kernelName:FusedConv2D,backendName:"cpu",kernelFunc:fusedConv2D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedDepthwiseConv2D$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i,bias:a,preluActivationWeights:c}=e,{strides:u,pad:l,dataFormat:h,dilations:d,dimRoundingMode:f,activation:y,leakyreluAlpha:g}=s;let x=depthwiseConv2dNative$1({inputs:{x:r,filter:i},backend:t,attrs:{strides:u,pad:l,dataFormat:h,dilations:d,dimRoundingMode:f}});if(a){const b=x;x=add({inputs:{a:x,b:a},backend:t}),t.disposeIntermediateTensorInfo(b)}if(y){const b=x;x=applyActivation(t,x,y,c,g),t.disposeIntermediateTensorInfo(b)}return x}const fusedDepthwiseConv2DConfig$1={kernelName:FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:fusedDepthwiseConv2D$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherNd$1(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,i=sizeFromShape(s.shape),a=r.shape,c=a[a.length-1],[u,l,h,d]=prepareAndValidate(s,r);if(l===0)return t.makeTensorInfo(u,s.dtype,[]);const f=buffer([l,h],s.dtype),y=t.data.get(r.dataId).values,g=t.data.get(s.dataId).values;for(let x=0;x<l;x++){const b=[];let v=0;for(let S=0;S<c;S++){const T=y[x*c+S];v+=T*d[S],b.push(T)}if(v<0||v>=i/h)throw new Error(`Invalid indices: ${b} does not index into ${s.shape}`);for(let S=0;S<h;S++)f.values[x*h+S]=g[v*h+S]}return t.makeTensorInfo(u,f.dtype,f.values)}const gatherNdConfig$1={kernelName:GatherNd,backendName:"cpu",kernelFunc:gatherNd$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherV2$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:i}=e,{axis:a,batchDims:c}=s;assertNotComplex$1([r,i],"gatherV2");let u=c;c==null&&(u=0);const l=sizeFromShape(i.shape),h=parseAxisParam(a,r.shape)[0],d=collectGatherOpShapeInfo(r,i,h,u),f=reshape$1({inputs:{x:r},backend:t,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),y=reshape$1({inputs:{x:i},backend:t,attrs:{shape:[d.batchSize,l/d.batchSize]}}),g=[d.batchSize,d.outerSize,l/d.batchSize,d.sliceSize],x=t.bufferSync(y),b=t.bufferSync(f),v=gatherV2Impl(b,x,g);return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(y),t.makeTensorInfo(d.outputShape,v.dtype,v.values)}const gatherV2Config$1={kernelName:GatherV2,backendName:"cpu",kernelFunc:gatherV2$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const greaterEqualImpl=createSimpleBinaryKernelImpl((n,e)=>n>=e?1:0),greaterEqual$1=binaryKernelFunc$1(GreaterEqual,greaterEqualImpl,null,"bool"),greaterEqualConfig$1={kernelName:GreaterEqual,backendName:"cpu",kernelFunc:greaterEqual$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ifft$1(n){const{inputs:e,backend:t}=n,{input:s}=e,r=sizeFromShape(s.shape),i=s.shape[s.shape.length-1],a=r/i,c=reshape$1({inputs:{x:s},backend:t,attrs:{shape:[a,i]}}),u=fftBatch(c,!0,t),l=reshape$1({inputs:{x:u},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(u),l}const ifftConfig$1={kernelName:IFFT,backendName:"cpu",kernelFunc:ifft$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isFinite$2=unaryKernelFunc$1(IsFinite,n=>Number.isFinite(n)?1:0,"bool"),isFiniteConfig$1={kernelName:IsFinite,backendName:"cpu",kernelFunc:isFinite$2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isInf$1=unaryKernelFunc$1(IsInf,n=>Math.abs(n)===1/0?1:0,"bool"),isInfConfig$1={kernelName:IsInf,backendName:"cpu",kernelFunc:isInf$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isNaN$2=unaryKernelFunc$1(IsNan,n=>Number.isNaN(n)?1:0,"bool"),isNaNConfig$1={kernelName:IsNan,backendName:"cpu",kernelFunc:isNaN$2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lessEqualImpl=createSimpleBinaryKernelImpl((n,e)=>n<=e?1:0),lessEqual$1=binaryKernelFunc$1(LessEqual,lessEqualImpl,null,"bool"),lessEqualConfig$1={kernelName:LessEqual,backendName:"cpu",kernelFunc:lessEqual$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function linSpace$1(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:i}=t,a=linSpaceImpl(s,r,i);return e.makeTensorInfo([a.length],"float32",a)}const linSpaceConfig$1={kernelName:LinSpace,backendName:"cpu",kernelFunc:linSpace$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const log1p$1=unaryKernelFunc$1(Log1p,n=>Math.log1p(n)),log1pConfig$1={kernelName:Log1p,backendName:"cpu",kernelFunc:log1p$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logicalAndImpl=createSimpleBinaryKernelImpl((n,e)=>n&&e),logicalAnd$1=binaryKernelFunc$1(LogicalAnd,logicalAndImpl,null,"bool"),logicalAndConfig$1={kernelName:LogicalAnd,backendName:"cpu",kernelFunc:logicalAnd$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logicalNot$1=unaryKernelFunc$1(LogicalNot,n=>n?0:1,"bool"),logicalNotConfig$1={kernelName:LogicalNot,backendName:"cpu",kernelFunc:logicalNot$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logicalOrImpl=createSimpleBinaryKernelImpl((n,e)=>n||e),logicalOr$1=binaryKernelFunc$1(LogicalOr,logicalOrImpl,null,"bool"),logicalOrConfig$1={kernelName:LogicalOr,backendName:"cpu",kernelFunc:logicalOr$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lRN(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:i,bias:a,alpha:c,beta:u}=s;assertNotComplex$1(r,"LRN");const l=r.shape[3],h=l-1,d=t.data.get(r.dataId).values,f=sizeFromShape(r.shape),y=new Float32Array(f);function g(x){const b=x%l;let v=x-b+Math.max(0,b-i);const S=x-b+Math.min(b+i,h);let T=0;for(;v<=S;v++){const w=d[v];T+=w*w}return T}for(let x=0;x<f;x++){const b=g(x),v=d[x]*Math.pow(a+c*b,-u);y[x]=v}return t.makeTensorInfo(r.shape,r.dtype,y)}const lRNConfig={kernelName:LRN,backendName:"cpu",kernelFunc:lRN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lRNGrad(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,y:i,dy:a}=e,{depthRadius:c,bias:u,alpha:l,beta:h}=s;assertNotComplex$1(a,"LRNGrad");const d=sizeFromShape(a.shape),f=a.shape[3],y=t.data.get(a.dataId).values,g=t.data.get(r.dataId).values,x=t.data.get(i.dataId).values,b=new Float32Array(d),v=d;for(let S=0;S<v;S++){const T=S%f,w=S-T+Math.max(0,T-c),C=S-T+Math.min(f,T+c+1);let N=0;for(let _=w;_<C;_++)N+=Math.pow(g[_],2);N=l*N+u;for(let _=w;_<C;_++){let $=-2*l*h*g[_]*x[S]/N;S===_&&($+=Math.pow(N,-h)),$*=y[S],b[_]+=$}}return t.makeTensorInfo(a.shape,r.dtype,b)}const lRNGradConfig={kernelName:LRNGrad,backendName:"cpu",kernelFunc:lRNGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function max$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:i,keepDims:a}=s,c=t;let u=r.shape;const l=u.length,h=parseAxisParam(i,u);let d=h;const f=getAxesPermutation(d,l);let y=c.data.get(r.dataId).values;if(f!=null){const w=new Array(l);for(let C=0;C<w.length;C++)w[C]=u[f[C]];y=transposeImpl$1(y,u,r.dtype,f,w),d=getInnerMostAxes(d.length,l),u=w}assertNotComplex$1(r,"max"),assertAxesAreInnerMostDims("max",d,l);const[g,x]=computeOutAndReduceShapes(u,d),b=sizeFromShape(x),v=maxImpl$1(y,b,g,r.dtype),S=c.write(v,g,r.dtype);let T=g;return a&&(T=expandShapeToKeepDim(g,h)),{dataId:S,shape:T,dtype:r.dtype}}const maxConfig$1={kernelName:Max,backendName:"cpu",kernelFunc:max$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;assertNotComplex$1(r,"maxPool");const{filterSize:i,strides:a,pad:c,dimRoundingMode:u}=s,l=1;assert$2(eitherStridesOrDilationsAreOne(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const h=computePool2DInfo(r.shape,i,a,l,c,u);let d;if(h.filterWidth===1&&h.filterHeight===1&&arraysEqual(h.inShape,h.outShape))d=identity$1({inputs:{x:r},backend:t});else{const f=t.data.get(r.dataId).values,y=computeStrides(r.shape),g=pool$1(f,r.shape,r.dtype,y,h,"max");d=t.makeTensorInfo(h.outShape,r.dtype,g.values)}return d}const maxPoolConfig$1={kernelName:MaxPool,backendName:"cpu",kernelFunc:maxPool$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3D(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:i,strides:a,pad:c,dimRoundingMode:u,dataFormat:l,dilations:h}=s;assertNotComplex$1(r,"maxPool3d");let d=h;d==null&&(d=[1,1,1]);const f=computePool3DInfo(r.shape,i,a,d,c,u,l),y=t.data.get(r.dataId).values,g=pool3d(y,r.shape,r.dtype,computeStrides(r.shape),f,"max");return t.makeTensorInfo(g.shape,"float32",g.values)}const maxPool3DConfig$1={kernelName:MaxPool3D,backendName:"cpu",kernelFunc:maxPool3D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3DGrad$1(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,{filterSize:a,strides:c,pad:u,dilations:l,dimRoundingMode:h}=s;assertNotComplex$1([r,i],"maxPool3DGrad");const d=computePool3DInfo(i.shape,a,c,l,u,h),f=t.bufferSync(i),y=maxPool3dPositions(f,d),g=d.strideDepth,x=d.strideHeight,b=d.strideWidth,v=d.dilationDepth,S=d.dilationHeight,T=d.dilationWidth,w=d.effectiveFilterDepth,C=d.effectiveFilterHeight,N=d.effectiveFilterWidth,_=w-1-d.padInfo.front,$=N-1-d.padInfo.left,E=C-1-d.padInfo.top,k=buffer(i.shape,"float32"),F=t.bufferSync(r);for(let P=0;P<d.batchSize;++P)for(let R=0;R<d.inChannels;++R)for(let O=0;O<d.inDepth;++O)for(let B=0;B<d.inHeight;++B)for(let L=0;L<d.inWidth;++L){const V=O-_,q=B-E,G=L-$;let W=0;for(let U=0;U<w;U+=v){const j=(V+U)/g;if(!(j<0||j>=d.outDepth||Math.floor(j)!==j))for(let Y=0;Y<C;Y+=S){const Q=(q+Y)/x;if(!(Q<0||Q>=d.outHeight||Math.floor(Q)!==Q))for(let ee=0;ee<N;ee+=T){const K=(G+ee)/b;if(K<0||K>=d.outWidth||Math.floor(K)!==K)continue;const X=w*C*N-1-y.get(P,j,Q,K,R),oe=U*C*N+Y*N+ee,ie=X===oe?1:0;if(ie===0)continue;W+=F.get(P,j,Q,K,R)*ie}}}k.set(W,P,O,B,L,R)}return t.makeTensorInfo(k.shape,k.dtype,k.values)}const maxPool3DGradConfig={kernelName:MaxPool3DGrad,backendName:"cpu",kernelFunc:maxPool3DGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolGrad$1(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i,output:a}=e,c=i;assertNotComplex$1([i,a],"maxPoolGrad");const{filterSize:u,strides:l,pad:h,dimRoundingMode:d}=s,f=computePool2DInfo(c.shape,u,l,1,h,d),y=t.data.get(c.dataId).values,g=buffer(f.outShape,c.dtype,maxPoolPositions(y,c.shape,c.dtype,f).values),x=f.strideHeight,b=f.strideWidth,v=f.dilationHeight,S=f.dilationWidth,T=f.effectiveFilterHeight,w=f.effectiveFilterWidth,C=w-1-f.padInfo.left,N=T-1-f.padInfo.top,_=buffer(c.shape,"float32"),$=t.data.get(r.dataId).values,E=buffer(r.shape,"float32",$);for(let k=0;k<f.batchSize;++k)for(let F=0;F<f.inChannels;++F)for(let P=0;P<f.inHeight;++P)for(let R=0;R<f.inWidth;++R){const O=P-N,B=R-C;let L=0;for(let V=0;V<T;V+=v){const q=(O+V)/x;if(!(q<0||q>=f.outHeight||Math.floor(q)!==q))for(let G=0;G<w;G+=S){const W=(B+G)/b;if(W<0||W>=f.outWidth||Math.floor(W)!==W)continue;const U=T*w-1-g.get(k,q,W,F),j=V*w+G,Y=U===j?1:0;if(Y===0)continue;L+=E.get(k,q,W,F)*Y}}_.set(L,k,P,R,F)}return t.makeTensorInfo(_.shape,_.dtype,_.values)}const maxPoolGradConfig$1={kernelName:MaxPoolGrad,backendName:"cpu",kernelFunc:maxPoolGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolWithArgmaxImpl$1(n,e,t,s,r){const i=computeStrides(e),a=pool$1(n,e,t,i,r,"max"),c=maxPoolPositions(n,e,t,r,!0,s);return[a.values,c.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxPoolWithArgmaxConfig$1={kernelName:MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:i,pad:a,includeBatchInIndex:c}=e,u=t;assertNotComplex$1(s,"MaxPoolWithArgmax");const l=u.data.get(s.dataId).values,h=computePool2DInfo(s.shape,r,i,[1,1],a),[d,f]=maxPoolWithArgmaxImpl$1(l,s.shape,s.dtype,c,h),y=u.write(d,h.outShape,s.dtype),g=u.write(f,h.outShape,s.dtype);return[{dataId:y,shape:h.outShape,dtype:s.dtype},{dataId:g,shape:h.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sum$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s;assertNotComplex$1(r,"sum");let c;r.dtype==="bool"?c=cast$1({inputs:{x:r},backend:t,attrs:{dtype:"int32"}}):c=identity$1({inputs:{x:r},backend:t});const u=c.shape.length,l=parseAxisParam(i,c.shape),h=getAxesPermutation(l,u);let d=l,f=c;h!=null&&(f=transpose$2({inputs:{x:c},backend:t,attrs:{perm:h}}),d=getInnerMostAxes(d.length,u)),assertAxesAreInnerMostDims("sum",d,f.shape.length);const[y,g]=computeOutAndReduceShapes(f.shape,d),x=upcastType(f.dtype,"int32");let b=zeros(t,y,x);const v=sizeFromShape(g),S=t.data.get(b.dataId).values,T=t.data.get(f.dataId).values;for(let w=0;w<S.length;++w){const C=w*v;let N=0;for(let _=0;_<v;++_)N+=T[C+_];S[w]=N}if(a){const w=expandShapeToKeepDim(b.shape,l),C=b;b=reshape$1({inputs:{x:b},backend:t,attrs:{shape:w}}),t.disposeIntermediateTensorInfo(C)}return t.disposeIntermediateTensorInfo(c),h!=null&&t.disposeIntermediateTensorInfo(f),b}const sumConfig$1={kernelName:Sum,backendName:"cpu",kernelFunc:sum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mean(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s,c=parseAxisParam(i,r.shape),l=computeOutAndReduceShapes(r.shape,c)[1],h=sizeFromShape(l),d=[],f=t.makeTensorInfo([],"float32",new Float32Array([h]));d.push(f);const y=cast$1({inputs:{x:r},backend:t,attrs:{dtype:"float32"}});d.push(y);const g=div({inputs:{a:y,b:f},backend:t});d.push(g);const x=sum$1({inputs:{x:g},backend:t,attrs:{axis:i,keepDims:a}});return d.forEach(b=>t.disposeIntermediateTensorInfo(b)),x}const meanConfig$1={kernelName:Mean,backendName:"cpu",kernelFunc:mean};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function min$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s;assertNotComplex$1(r,"min");const c=parseAxisParam(i,r.shape);let u=c;const l=getAxesPermutation(u,r.shape.length);let h=r;l!=null&&(h=transpose$2({inputs:{x:r},backend:t,attrs:{perm:l}}),u=getInnerMostAxes(u.length,r.shape.length)),assertAxesAreInnerMostDims("min",u,h.shape.length);const[d,f]=computeOutAndReduceShapes(h.shape,u),y=sizeFromShape(f),g=makeZerosTypedArray(sizeFromShape(d),h.dtype),x=t.data.get(h.dataId).values;for(let v=0;v<g.length;++v){const S=v*y;let T=x[S];for(let w=0;w<y;++w){const C=x[S+w];C<T&&(T=C)}g[v]=T}l!=null&&t.disposeIntermediateTensorInfo(h);const b=t.makeTensorInfo(d,h.dtype,g);if(a){const v=expandShapeToKeepDim(d,c),S=reshape$1({inputs:{x:b},backend:t,attrs:{shape:v}});return t.disposeIntermediateTensorInfo(b),S}return b}const minConfig$1={kernelName:Min,backendName:"cpu",kernelFunc:min$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mirrorPad(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:i,mode:a}=s;assertNotComplex$1(r,"mirrorPad");const c=i.map((T,w)=>T[0]+r.shape[w]+T[1]),u=i.map(T=>T[0]),l=i.map((T,w)=>T[0]+r.shape[w]),h=a==="reflect"?0:1,d=t.data.get(r.dataId).values,f=r.shape.length,y=computeStrides(r.shape),g=sizeFromShape(c),x=c.length,b=computeStrides(c),v=getTypedArrayFromDType(r.dtype,g);for(let T=0;T<g;T++){let w=indexToLoc(T,x,b);for(let N=0;N<x;N++)w[N]<u[N]?w[N]=u[N]*2-w[N]-h:w[N]>=l[N]&&(w[N]=(l[N]-1)*2-w[N]+h);w=w.map((N,_)=>N-u[_]);const C=locToIndex(w,f,y);v[T]=d[C]}return{dataId:t.write(v,c,r.dtype),shape:c,dtype:r.dtype}}const mirrorPadConfig$1={kernelName:MirrorPad,backendName:"cpu",kernelFunc:mirrorPad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const modImpl=createSimpleBinaryKernelImpl((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),mod$1=binaryKernelFunc$1(Mod,modImpl),modConfig$1={kernelName:Mod,backendName:"cpu",kernelFunc:mod$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function softmax$1(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:i}=s,a=r.shape.length;let c=i;if(c===-1&&(c=a-1),c!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${c}`);const u=parseAxisParam([c],r.shape),l=max$1({inputs:{x:r},backend:t,attrs:{reductionIndices:u,keepDims:!1}}),h=expandShapeToKeepDim(l.shape,u),d=reshape$1({inputs:{x:l},backend:t,attrs:{shape:h}}),f=sub$1({inputs:{a:r,b:d},backend:t}),y=exp$1({inputs:{x:f},backend:t}),g=sum$1({inputs:{x:y},backend:t,attrs:{axis:u,keepDims:!1}}),x=reshape$1({inputs:{x:g},backend:t,attrs:{shape:h}}),b=div({inputs:{a:y,b:x},backend:t});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(x),b}const softmaxConfig$1={kernelName:Softmax$2,backendName:"cpu",kernelFunc:softmax$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function multinomial$1(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:i,seed:a,normalized:c}=s;assertNotComplex$1(r,"multinomial");const u=c?r:softmax$1({inputs:{logits:r},backend:t,attrs:{dim:-1}}),l=u.shape[0],h=u.shape[1],d=t.data.get(u.dataId).values,f=[l,i],y=makeZerosTypedArray(sizeFromShape(f),"int32");for(let g=0;g<l;++g){const x=g*h,b=new Float32Array(h-1);b[0]=d[x];for(let T=1;T<b.length;++T)b[T]=b[T-1]+d[x+T];const v=seedrandom.alea(a.toString()),S=g*i;for(let T=0;T<i;++T){const w=v();y[S+T]=b.length;for(let C=0;C<b.length;C++)if(w<b[C]){y[S+T]=C;break}}}return c||t.disposeIntermediateTensorInfo(u),t.makeTensorInfo(f,"int32",y)}const multinomialConfig$1={kernelName:Multinomial,backendName:"cpu",kernelFunc:multinomial$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV3Impl$1=nonMaxSuppressionV3Impl$2;function nonMaxSuppressionV3$1(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:c,scoreThreshold:u}=s;assertNotComplex$1(r,"NonMaxSuppression");const l=t.data.get(r.dataId).values,h=t.data.get(i.dataId).values,{selectedIndices:d}=nonMaxSuppressionV3Impl$1(l,h,a,c,u);return t.makeTensorInfo([d.length],"int32",new Int32Array(d))}const nonMaxSuppressionV3Config$1={kernelName:NonMaxSuppressionV3,backendName:"cpu",kernelFunc:nonMaxSuppressionV3$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV4Impl$1=nonMaxSuppressionV4Impl$2;function nonMaxSuppressionV4$1(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:c,scoreThreshold:u,padToMaxOutputSize:l}=s;assertNotComplex$1(r,"NonMaxSuppressionPadded");const h=t.data.get(r.dataId).values,d=t.data.get(i.dataId).values,{selectedIndices:f,validOutputs:y}=nonMaxSuppressionV4Impl$1(h,d,a,c,u,l);return[t.makeTensorInfo([f.length],"int32",new Int32Array(f)),t.makeTensorInfo([],"int32",new Int32Array([y]))]}const nonMaxSuppressionV4Config$1={kernelName:NonMaxSuppressionV4,backendName:"cpu",kernelFunc:nonMaxSuppressionV4$1};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV5Impl$1=nonMaxSuppressionV5Impl$2;function nonMaxSuppressionV5$1(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:c,scoreThreshold:u,softNmsSigma:l}=s;assertNotComplex$1(r,"NonMaxSuppressionWithScore");const h=t.data.get(r.dataId).values,d=t.data.get(i.dataId).values,f=a,y=c,g=u,x=l,{selectedIndices:b,selectedScores:v}=nonMaxSuppressionV5Impl$1(h,d,f,y,g,x);return[t.makeTensorInfo([b.length],"int32",new Int32Array(b)),t.makeTensorInfo([v.length],"float32",new Float32Array(v))]}const nonMaxSuppressionV5Config$1={kernelName:NonMaxSuppressionV5,backendName:"cpu",kernelFunc:nonMaxSuppressionV5$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oneHot$1(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{depth:i,onValue:a,offValue:c}=s;assertNotComplex$1(r,"oneHot");const u=sizeFromShape(r.shape),l=new Float32Array(u*i);l.fill(c);const h=t.data.get(r.dataId).values;for(let d=0;d<u;++d)h[d]>=0&&h[d]<i&&(l[d*i+h[d]]=a);return t.makeTensorInfo([...r.shape,i],"int32",l)}const oneHotConfig$1={kernelName:OneHot,backendName:"cpu",kernelFunc:oneHot$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zerosLike$1(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=real$1({inputs:{input:s},backend:t}),i=zerosLike$1({inputs:{x:r},backend:t}),a=imag$1({inputs:{input:s},backend:t}),c=zerosLike$1({inputs:{x:a},backend:t}),u=complex$1({inputs:{real:i,imag:c},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(c),u}else return fill$1({backend:t,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const zerosLikeConfig$1={kernelName:ZerosLike,backendName:"cpu",kernelFunc:zerosLike$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function onesLike$1(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=real$1({inputs:{input:s},backend:t}),i=onesLike$1({inputs:{x:r},backend:t}),a=imag$1({inputs:{input:s},backend:t}),c=zerosLike$1({inputs:{x:a},backend:t}),u=complex$1({inputs:{real:i,imag:c},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(c),u}else return fill$1({backend:t,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const onesLikeConfig$1={kernelName:OnesLike,backendName:"cpu",kernelFunc:onesLike$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pack$1(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return expandDims$1({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const i=e[0].shape,a=e[0].dtype;e.forEach(h=>{assertShapesMatch(i,h.shape,"All tensors passed to stack must have matching shapes"),assert$2(a===h.dtype,()=>"All tensors passed to stack must have matching dtypes")});const c=[],u=e.map(h=>{const d=expandDims$1({inputs:{input:h},backend:t,attrs:{dim:r}});return c.push(d),d}),l=concat$1({inputs:u,backend:t,attrs:{axis:r}});return c.forEach(h=>t.disposeIntermediateTensorInfo(h)),l}const packConfig$1={kernelName:Pack,backendName:"cpu",kernelFunc:pack$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function padV2$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:i,constantValue:a}=s;assertNotComplex$1(r,"pad");const c=i.map((S,T)=>S[0]+r.shape[T]+S[1]),u=i.map(S=>S[0]),l=t.data.get(r.dataId).values,h=sizeFromShape(r.shape),d=r.shape.length,f=computeStrides(r.shape),y=sizeFromShape(c),g=c.length,x=computeStrides(c),b=getTypedArrayFromDType(r.dtype,y);a!==0&&b.fill(a);for(let S=0;S<h;S++){const w=indexToLoc(S,d,f).map((N,_)=>N+u[_]),C=locToIndex(w,g,x);b[C]=l[S]}return{dataId:t.write(b,c,r.dtype),shape:c,dtype:r.dtype}}const padV2Config$1={kernelName:PadV2,backendName:"cpu",kernelFunc:padV2$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const powImpl=createSimpleBinaryKernelImpl((n,e)=>Math.pow(n,e)),pow$1=binaryKernelFunc$1(Pow$1,powImpl),powConfig$1={kernelName:Pow$1,backendName:"cpu",kernelFunc:pow$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function range$2(n){const{backend:e,attrs:t}=n,{start:s,stop:r,dtype:i,step:a}=t,c=rangeImpl(s,r,a,i);return e.makeTensorInfo([c.length],i,c)}const rangeConfig$1={kernelName:Range,backendName:"cpu",kernelFunc:range$2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reciprocal$1=unaryKernelFunc$1(Reciprocal,n=>1/n),reciprocalConfig$1={kernelName:Reciprocal,backendName:"cpu",kernelFunc:reciprocal$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinear$1(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:i,halfPixelCenters:a,size:c}=s;assertNotComplex$1(r,"resizeBilinear");const u=computeStrides(r.shape),[l,h]=c,[d,f,y,g]=r.shape,x=t.data.get(r.dataId).values,b=new Float32Array(sizeFromShape([d,l,h,g])),v=[i&&l>1?f-1:f,i&&h>1?y-1:y],S=[i&&l>1?l-1:l,i&&h>1?h-1:h];let T=0;const w=v[0]/S[0],C=v[1]/S[1];for(let N=0;N<d;N++)for(let _=0;_<l;_++){let $;a?$=w*(_+.5)-.5:$=w*_;const E=Math.max(0,Math.floor($)),k=$-E,F=Math.min(f-1,Math.ceil($)),P=N*u[0]+E*u[1],R=N*u[0]+F*u[1];for(let O=0;O<h;O++){let B;a?B=C*(O+.5)-.5:B=C*O;const L=Math.max(0,Math.floor(B)),V=B-L,q=Math.min(y-1,Math.ceil(B)),G=P+L*u[2],W=R+L*u[2],U=P+q*u[2],j=R+q*u[2];for(let Y=0;Y<g;Y++){const Q=x[G+Y],ee=x[W+Y],K=x[U+Y],X=x[j+Y],oe=Q+(K-Q)*V,ie=ee+(X-ee)*V,Z=oe+(ie-oe)*k;b[T++]=Z}}}return t.makeTensorInfo([d,l,h,g],"float32",b)}const resizeBilinearConfig$1={kernelName:ResizeBilinear,backendName:"cpu",kernelFunc:resizeBilinear$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinearGrad$1(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:i}=e,{alignCorners:a}=s;assertNotComplex$1([i,r],"resizeBilinearGrad");const c=computeStrides(r.shape),[u,l,h,d]=r.shape,[,f,y]=i.shape,g=new Float32Array(u*l*h*d),x=[a&&f>1?l-1:l,a&&y>1?h-1:h],b=[a&&f>1?f-1:f,a&&y>1?y-1:y],v=x[0]/b[0],S=x[1]/b[1],T=t.data.get(i.dataId).values;let w=0;for(let C=0;C<u;C++){const N=C*c[0];for(let _=0;_<f;_++){const $=_*v,E=Math.floor($),k=Math.min(Math.ceil($),l-1),F=N+E*c[1],P=N+k*c[1],R=$-E,O=1-R;for(let B=0;B<y;B++){const L=B*S,V=Math.floor(L),q=Math.min(Math.ceil(L),h-1),G=L-V,W=1-G,U=F+V*c[2],j=F+q*c[2],Y=P+V*c[2],Q=P+q*c[2],ee=O*W,K=O*G,X=R*W,oe=R*G;for(let ie=0;ie<d;ie++){const Z=T[w++];g[U+ie]+=Z*ee,g[j+ie]+=Z*K,g[Y+ie]+=Z*X,g[Q+ie]+=Z*oe}}}}return t.makeTensorInfo([u,h,l,d],"float32",g)}const resizeBilinearGradConfig$1={kernelName:ResizeBilinearGrad,backendName:"cpu",kernelFunc:resizeBilinearGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighbor$1(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:i,halfPixelCenters:a,size:c}=s;assertNotComplex$1(r,"resizeNearestNeighbor");const u=computeStrides(r.shape),[l,h]=c,[d,f,y,g]=r.shape,x=t.data.get(r.dataId).values,b=new Float32Array(d*l*h*g),v=[i&&l>1?f-1:f,i&&h>1?y-1:y],S=[i&&l>1?l-1:l,i&&h>1?h-1:h],T=v[0]/S[0],w=v[1]/S[1];let C=0;for(let N=0;N<d;N++){const _=N*u[0];for(let $=0;$<l;$++){const E=a?T*($+.5):T*$;let k=Math.min(f-1,i?Math.round(E):Math.floor(E));a&&(k=Math.max(0,k));const F=_+k*u[1];for(let P=0;P<h;P++){const R=a?w*(P+.5):w*P;let O=Math.min(y-1,i?Math.round(R):Math.floor(R));a&&(O=Math.max(0,O));const B=F+O*u[2];for(let L=0;L<g;L++){const V=x[B+L];b[C++]=V}}}}return t.makeTensorInfo([d,l,h,g],r.dtype,b)}const resizeNearestNeighborConfig$1={kernelName:ResizeNearestNeighbor,backendName:"cpu",kernelFunc:resizeNearestNeighbor$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighborGrad$1(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:i}=e,{alignCorners:a}=s;assertNotComplex$1([i,r],"resizeNearestNeighborGrad");const c=computeStrides(r.shape),u=computeStrides(i.shape),[l,h,d,f]=r.shape,[,y,g]=i.shape,x=new Float32Array(l*h*d*f),b=t.data.get(i.dataId).values,v=[a&&y>1?h-1:h,a&&g>1?d-1:d],S=[a&&y>1?y-1:y,a&&g>1?g-1:g],T=v[0]/S[0],w=v[1]/S[1],C=1/T,N=1/w,_=Math.ceil(C)*2+2,$=Math.ceil(N)*2+2;for(let E=0;E<l;E++){const k=E*c[0];for(let F=0;F<h;F++){const P=k+F*c[1],R=Math.floor(F*C),O=Math.floor(R-_/2);for(let B=0;B<d;B++){const L=P+B*c[2],V=Math.floor(B*N),q=Math.floor(V-$/2);for(let G=0;G<f;G++){let W=0;for(let U=0;U<_;U++){const j=U+O;if(j<0||j>=y)continue;const Y=k+j*u[1],Q=j*T,ee=Math.min(h-1,a?Math.round(Q):Math.floor(Q));if(F===ee)for(let K=0;K<$;K++){const X=K+q;if(X<0||X>=g)continue;const oe=Y+X*u[2],ie=X*w,Z=Math.min(d-1,a?Math.round(ie):Math.floor(ie));B===Z&&(W+=b[oe+G])}}x[L+G]=W}}}}return t.makeTensorInfo(r.shape,r.dtype,x)}const resizeNearestNeighborGradConfig$1={kernelName:ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:resizeNearestNeighborGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reverse$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:i}=s;assertNotComplex$1(r,"reverse");const a=r.shape.length,c=parseAxisParam(i,r.shape);if(a===0)return identity$1({inputs:{x:r},backend:t});const u=new TensorBuffer(r.shape,r.dtype),l=t.bufferSync(r);for(let h=0;h<u.size;h++){const d=u.indexToLoc(h),f=d.slice();c.forEach(y=>f[y]=r.shape[y]-1-f[y]),u.set(l.get(...f),...d)}return t.makeTensorInfo(u.shape,u.dtype,u.values)}const reverseConfig$1={kernelName:Reverse,backendName:"cpu",kernelFunc:reverse$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rotateWithOffsetConfig$1={kernelName:RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:i,center:a}=e,c=t,u=getTypedArrayFromDType(s.dtype,sizeFromShape(s.shape)),[l,h,d,f]=s.shape,[y,g]=getImageCenter(a,h,d),x=255,b=Math.sin(r),v=Math.cos(r),S=c.data.get(s.dataId).values;for(let w=0;w<l;w++){const C=w*d*h*f;for(let N=0;N<h;N++){const _=N*(d*f);for(let $=0;$<d;$++){const E=$*f;for(let k=0;k<f;k++){const F=[l,N,$,k],P=F[2],R=F[1];let O=(P-y)*v-(R-g)*b,B=(P-y)*b+(R-g)*v;O=Math.round(O+y),B=Math.round(B+g);let L=i;if(typeof i!="number"&&(k===3?L=x:L=i[k]),O>=0&&O<d&&B>=0&&B<h){const q=B*(d*f),G=O*f,W=C+q+G+k;L=S[W]}const V=C+_+E+k;u[V]=L}}}}return{dataId:c.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const round$1=unaryKernelFunc$1(Round,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2==0?e:e+1}),roundConfig$1={kernelName:Round,backendName:"cpu",kernelFunc:round$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function scatterImpl(n,e,t,s,r,i,a,c,u,l){const h=[s/r,r],d=n.values,f=e.values;if(s===0)return buffer(t,e.dtype);const y=buffer(h,e.dtype);y.values.fill(u);for(let g=0;g<i;g++){const x=[];let b=0;for(let v=0;v<a;v++){const S=d[g*a+v];x.push(S),b+=S*c[v]}if(b<0||b>=s/r)throw new Error(`Invalid indices: ${x} does not index into ${t}`);for(let v=0;v<r;v++)l?y.values[b*r+v]+=f[g*r+v]:y.values[b*r+v]=e.rank===0?f[0]:f[g*r+v]}return y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function scatterNd$1(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:i}=e,{shape:a}=s,{sliceRank:c,numUpdates:u,sliceSize:l,strides:h,outputSize:d}=calculateShapes(i,r,a),f=!0,y=t.bufferSync(r),g=t.bufferSync(i),x=scatterImpl(y,g,a,d,l,u,c,h,0,f);return t.makeTensorInfo(a,x.dtype,x.values)}const scatterNdConfig$1={kernelName:ScatterNd,backendName:"cpu",kernelFunc:scatterNd$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function select$1(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:i}=e;assertNotComplex$1([s,r,i],"select");const a=s.shape.length,c=t.data.get(s.dataId).values,u=t.data.get(r.dataId).values,l=t.data.get(i.dataId).values,h=upcastType(r.dtype,i.dtype),d=makeZerosTypedArray(sizeFromShape(r.shape),h);let f=0;const y=a===0||a>1||r.shape.length===1?1:sizeFromShape(r.shape.slice(1));for(let g=0;g<c.length;g++)for(let x=0;x<y;x++)c[g]===1?d[f++]=u[g]:d[f++]=l[g];return t.makeTensorInfo(r.shape,h,d)}const selectConfig$1={kernelName:Select,backendName:"cpu",kernelFunc:select$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const scaleAlpha=SELU_SCALEALPHA,scale$1=SELU_SCALE,selu$1=unaryKernelFunc$1(Selu$1,n=>n>=0?scale$1*n:scaleAlpha*(Math.exp(n)-1)),seluConfig$1={kernelName:Selu$1,backendName:"cpu",kernelFunc:selu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sigmoid$1=unaryKernelFunc$1(Sigmoid$1,n=>1/(1+Math.exp(-n))),sigmoidConfig$1={kernelName:Sigmoid$1,backendName:"cpu",kernelFunc:sigmoid$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sign$1=unaryKernelFunc$1(Sign,n=>n<0?-1:n>0?1:0),signConfig$1={kernelName:Sign,backendName:"cpu",kernelFunc:sign$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sin$1=unaryKernelFunc$1(Sin,n=>Math.sin(n)),sinConfig$1={kernelName:Sin,backendName:"cpu",kernelFunc:sin$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sinh$1=unaryKernelFunc$1(Sinh,n=>Math.sinh(n)),sinhConfig$1={kernelName:Sinh,backendName:"cpu",kernelFunc:sinh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const epsilon=11920928955078125e-23,threshold=Math.log(epsilon)+2,softplus$1=unaryKernelFunc$1(Softplus$1,n=>{const e=n>-threshold,t=n<threshold,s=Math.exp(n);let r;return t?r=s:e?r=n:r=Math.log(1+s),r}),softplusConfig$1={kernelName:Softplus$1,backendName:"cpu",kernelFunc:softplus$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function spaceToBatchND$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:i,paddings:a}=s;assertNotComplex$1([r],"spaceToBatchND");const c=sizeFromShape(i),u=[[0,0]];u.push(...a);for(let N=1+i.length;N<r.shape.length;++N)u.push([0,0]);const l=padV2Config$1.kernelFunc({inputs:{x:r},backend:t,attrs:{paddings:u,constantValue:0}}),h=getReshaped(l.shape,i,c,!1),d=getPermuted(h.length,i.length,!1),f=getReshapedPermuted(l.shape,i,c,!1),x=reshape$1({inputs:{x:l},backend:t,attrs:{shape:h}}),S=transpose$2({inputs:{x},backend:t,attrs:{perm:d}}),C=reshape$1({inputs:{x:S},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(S),C}const spaceToBatchNDConfig$1={kernelName:SpaceToBatchND,backendName:"cpu",kernelFunc:spaceToBatchND$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseToDense$1(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:i,defaultValue:a}=e,{outputShape:c}=s,{sliceRank:u,numUpdates:l,sliceSize:h,strides:d,outputSize:f}=calculateShapes(i,r,c),y=!1,g=t.bufferSync(r),x=t.bufferSync(i),b=t.data.get(a.dataId).values[0],v=scatterImpl(g,x,c,f,h,l,u,d,b,y);return t.makeTensorInfo(c,v.dtype,v.values)}const sparseToDenseConfig$1={kernelName:SparseToDense,backendName:"cpu",kernelFunc:sparseToDense$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function splitV$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:i,axis:a}=s,c=parseAxisParam(a,r.shape)[0],u=prepareSplitSize(r,i,c),l=new Array(r.shape.length).fill(0),h=r.shape.slice();return u.map(d=>{const f=[...h];f[c]=d;const y=slice$1({inputs:{x:r},backend:t,attrs:{begin:l,size:f}});return l[c]+=d,y})}const splitVConfig$1={kernelName:SplitV,backendName:"cpu",kernelFunc:splitV$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sqrt$1=unaryKernelFunc$1(Sqrt,n=>Math.sqrt(n)),sqrtConfig$1={kernelName:Sqrt,backendName:"cpu",kernelFunc:sqrt$1};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const squareConfig$1={kernelName:Square,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e;assertNotComplex$1(t,"square");const r=s.data.get(t.dataId).values,i=new Float32Array(r.length);for(let c=0;c<r.length;++c){const u=r[c];i[c]=u*u}return{dataId:s.write(i,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const step$1=unaryKernelFunc$1(Step,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),stepConfig$1={kernelName:Step,backendName:"cpu",kernelFunc:step$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stridedSlice$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:i,end:a,strides:c,beginMask:u,endMask:l,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:f}=s;assertNotComplex$1(r,"stridedSlice");const{nonStrided:y,$begin:g,$strides:x,size:b,newShape:v,outShape:S}=sliceInfo(r.shape,i,a,c,u,l,h,d,f),T=reshape$1({inputs:{x:r},backend:t,attrs:{shape:v}});let w;if(y){const N=slice$1({inputs:{x:T},backend:t,attrs:{begin:g,size:b}});w=reshape$1({inputs:{x:N},backend:t,attrs:{shape:S}}),t.disposeIntermediateTensorInfo(N)}else if(S.some(N=>N===0))w=t.makeTensorInfo(S,r.dtype,[]);else{const N=t.bufferSync(T),_=stridedSliceImpl(S,N,x,g);w=t.makeTensorInfo(_.shape,_.dtype,_.values)}const C=reshape$1({inputs:{x:w},backend:t,attrs:{shape:S}});return t.disposeIntermediateTensorInfo(T),t.disposeIntermediateTensorInfo(w),C}const stridedSliceConfig$1={kernelName:StridedSlice,backendName:"cpu",kernelFunc:stridedSlice$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tan$1=unaryKernelFunc$1(Tan,n=>Math.tan(n)),tanConfig$1={kernelName:Tan,backendName:"cpu",kernelFunc:tan$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tanh$1=unaryKernelFunc$1(Tanh$1,n=>Math.tanh(n)),tanhConfig$1={kernelName:Tanh$1,backendName:"cpu",kernelFunc:tanh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tile$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:i}=s;assertNotComplex$1(r,"tile");const a=tileImpl(t.bufferSync(r),i);return t.makeTensorInfo(a.shape,a.dtype,a.values)}const tileConfig$1={kernelName:Tile,backendName:"cpu",kernelFunc:tile$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function topK$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:i,sorted:a}=s;assertNotComplex$1(r,"topk");const c=t.data.get(r.dataId).values,[u,l]=topKImpl(c,r.shape,r.dtype,i);return[t.makeTensorInfo(u.shape,u.dtype,u.values),t.makeTensorInfo(l.shape,l.dtype,l.values)]}const topKConfig$1={kernelName:TopK,backendName:"cpu",kernelFunc:topK$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unique$2(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:i}=e;assertNotComplex$1(i,"unique");const a=s.data.get(i.dataId).values,{outputValues:c,outputShape:u,indices:l}=uniqueImpl(a,r,i.shape,i.dtype);return[s.makeTensorInfo(u,i.dtype,c),s.makeTensorInfo([l.length],"int32",l)]}const uniqueConfig$1={kernelName:Unique,backendName:"cpu",kernelFunc:unique$2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unpack$1(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:i}=s;i<0&&(i+=r.shape.length);const a=r.shape.length,c=r.shape[i],u=new Array(a-1);let l=0;for(let y=0;y<a;y++)y!==i&&(u[l++]=r.shape[y]);const h=new Array(a).fill(0),d=r.shape.slice();d[i]=1;const f=new Array(c);for(let y=0;y<f.length;y++){h[i]=y;const g=slice$1({inputs:{x:r},backend:t,attrs:{begin:h,size:d}});f[y]=reshape$1({inputs:{x:g},backend:t,attrs:{shape:u}}),t.disposeIntermediateTensorInfo(g)}return f}const unpackConfig$1={kernelName:Unpack,backendName:"cpu",kernelFunc:unpack$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unsortedSegmentSum$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:i}=e,{numSegments:a}=s;assertNotComplex$1(r,"unsortedSegmentSum");const c=r.shape.length,u=i.shape.length,l=[],h=[],d=c-u;let f=i;for(let g=0;g<d;++g){const x=expandDims$1({inputs:{input:f},backend:t,attrs:{dim:g+1}});f=x,h.push(x)}for(let g=0;g<a;++g){const x=createScalarValue(g,"int32"),b=t.makeTensorInfo([],"int32",x),v=equal$1({inputs:{a:b,b:f},backend:t}),S=cast$1({inputs:{x:v},backend:t,attrs:{dtype:"float32"}}),T=multiply$2({inputs:{a:S,b:r},backend:t}),w=sum$1({inputs:{x:T},backend:t,attrs:{axis:0,keepDims:!1}});l.push(w),h.push(b),h.push(v),h.push(S),h.push(T),h.push(w)}const y=pack$1({inputs:l,backend:t,attrs:{axis:0}});return h.forEach(g=>t.disposeIntermediateTensorInfo(g)),y}const unsortedSegmentSumConfig$1={kernelName:UnsortedSegmentSum,backendName:"cpu",kernelFunc:unsortedSegmentSum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kernelConfigs$1=[_fusedMatMulConfig$1,absConfig$1,acosConfig$1,acoshConfig$1,addConfig$1,addNConfig$1,allConfig$1,anyConfig$1,argMaxConfig$1,argMinConfig$1,asinConfig$1,asinhConfig$1,atanConfig$1,atan2Config$1,atanhConfig$1,avgPoolConfig$1,avgPool3DConfig$1,avgPool3DGradConfig,avgPoolGradConfig$1,batchMatMulConfig$1,batchNormConfig$1,batchToSpaceNDConfig$1,bincountConfig$1,castConfig$1,ceilConfig$1,clipConfig,complexConfig$1,complexAbsConfig$1,concatConfig$1,conv2DBackpropFilterConfig$1,conv2DBackpropInputConfig$1,conv2DConfig$1,conv3DBackpropFilterV2Config$1,conv3DBackpropInputV2Config,conv3DConfig$1,cosConfig$1,coshConfig$1,cropAndResizeConfig$1,cumsumConfig$1,denseBincountConfig$1,depthToSpaceConfig$1,depthwiseConv2dNativeConfig$1,depthwiseConv2dNativeBackpropFilterConfig$1,depthwiseConv2dNativeBackpropInputConfig$1,diagConfig$1,dilation2dConfig,dilation2dBackpropInputConfig,dilation2dBackpropFilterConfig,realDivConfig$1,eluConfig$1,eluGradConfig$1,equalConfig$1,erfConfig$1,expConfig$1,expandDimsConfig$1,expm1Config$1,fftConfig$1,fillConfig$1,flipLeftRightConfig$1,floorConfig$1,floorDivConfig$1,fusedConv2DConfig$1,fusedDepthwiseConv2DConfig$1,gatherNdConfig$1,gatherV2Config$1,greaterConfig$1,greaterEqualConfig$1,identityConfig$1,ifftConfig$1,imagConfig$1,isFiniteConfig$1,isInfConfig$1,isNaNConfig$1,leakyReluConfig$1,lessConfig$1,lessEqualConfig$1,linSpaceConfig$1,logConfig$1,log1pConfig$1,logicalAndConfig$1,logicalNotConfig$1,logicalOrConfig$1,lRNConfig,lRNGradConfig,maximumConfig$1,maxPoolConfig$1,maxPool3DConfig$1,maxPool3DGradConfig,maxPoolGradConfig$1,maxPoolWithArgmaxConfig$1,maxConfig$1,meanConfig$1,minConfig$1,minimumConfig$1,mirrorPadConfig$1,modConfig$1,multinomialConfig$1,multiplyConfig$1,negConfig$1,nonMaxSuppressionV3Config$1,nonMaxSuppressionV4Config$1,nonMaxSuppressionV5Config$1,notEqualConfig$1,oneHotConfig$1,onesLikeConfig$1,packConfig$1,padV2Config$1,powConfig$1,preluConfig$1,prodConfig$1,rangeConfig$1,realConfig$1,reciprocalConfig$1,reluConfig$1,relu6Config$1,reshapeConfig$1,resizeBilinearConfig$1,resizeBilinearGradConfig$1,resizeNearestNeighborConfig$1,resizeNearestNeighborGradConfig$1,reverseConfig$1,rotateWithOffsetConfig$1,roundConfig$1,rsqrtConfig$1,scatterNdConfig$1,selectConfig$1,seluConfig$1,sigmoidConfig$1,signConfig$1,sinConfig$1,sinhConfig$1,sliceConfig$1,softmaxConfig$1,softplusConfig$1,spaceToBatchNDConfig$1,sparseToDenseConfig$1,splitVConfig$1,sqrtConfig$1,squareConfig$1,squaredDifferenceConfig$1,stepConfig$1,stridedSliceConfig$1,subConfig$1,sumConfig$1,tanConfig$1,tanhConfig$1,tileConfig$1,topKConfig$1,transposeConfig$1,uniqueConfig$1,unpackConfig$1,unsortedSegmentSumConfig$1,zerosLikeConfig$1];for(const n of kernelConfigs$1)registerKernel(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const contexts={},WEBGL_ATTRIBUTES={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function setWebGLContext(n,e){contexts[n]=e}function getWebGLContext(n){if(!(n in contexts)){const t=getWebGLRenderingContext(n);if(t!==null)contexts[n]=t;else return console.log("Could not get context for WebGL version",n),null}const e=contexts[n];return e.isContextLost()?(delete contexts[n],getWebGLContext(n)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),contexts[n])}function createCanvas(n){if(typeof OffscreenCanvas!="undefined"&&n===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function getWebGLRenderingContext(n){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=createCanvas(n);return e.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete contexts[n]},!1),n===1?e.getContext("webgl",WEBGL_ATTRIBUTES)||e.getContext("experimental-webgl",WEBGL_ATTRIBUTES):e.getContext("webgl2",WEBGL_ATTRIBUTES)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var PackingScheme;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(PackingScheme||(PackingScheme={}));var TextureUsage;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(TextureUsage||(TextureUsage={}));var PhysicalTextureType;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(PhysicalTextureType||(PhysicalTextureType={}));function getUnpackedMatrixTextureShapeWidthHeight(n,e){return[e,n]}function getUnpackedArraySizeFromMatrixSize(n,e){return n*e}function getDenseTexShape(n){const e=sizeFromShape(n),t=Math.ceil(e/4);return sizeToSquarishShape(t)}function getPackedMatrixTextureShapeWidthHeight(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function getPackedRGBAArraySizeFromMatrixShape(n,e){const[t,s]=getPackedMatrixTextureShapeWidthHeight(n,e);return t*s*4}function getTextureConfig(n,e){const t=n;let s,r,i,a,c,u,l,h,d,f;return env().getNumber("WEBGL_VERSION")===2?(s=t.R32F,r=t.R16F,i=t.RGBA16F,a=t.RGBA32F,c=t.RED,l=4,h=1,d=t.HALF_FLOAT,f=t.FLOAT):(s=n.RGBA,r=n.RGBA,i=n.RGBA,a=t.RGBA,c=n.RGBA,l=4,h=4,d=e!=null?e.HALF_FLOAT_OES:null,f=n.FLOAT),u=n.RGBA,{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:a,textureFormatFloat:c,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:h,textureTypeHalfFloat:d,textureTypeFloat:f}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function callAndCheck(n,e){const t=e();return env().getBool("DEBUG")&&checkWebGLError(n),t}function checkWebGLError(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+getWebGLErrorMessage(n,e))}const MIN_FLOAT16=596e-10,MAX_FLOAT16=65504;function canBeRepresented(n){return!!(env().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||MIN_FLOAT16<Math.abs(n)&&Math.abs(n)<MAX_FLOAT16)}function getWebGLErrorMessage(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function getExtensionOrThrow(n,e){return throwIfNull(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function createVertexShader$1(n,e){const t=throwIfNull(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(callAndCheck(n,()=>n.shaderSource(t,e)),callAndCheck(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function createFragmentShader(n,e){const t=throwIfNull(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(callAndCheck(n,()=>n.shaderSource(t,e)),callAndCheck(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw logShaderSourceAndInfoLog(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const lineNumberRegex=/ERROR: [0-9]+:([0-9]+):/g;function logShaderSourceAndInfoLog(n,e){const t=lineNumberRegex.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const s=+t[1],r=n.split(`
`),i=r.length.toString().length+2,a=r.map((d,f)=>rightPad((f+1).toString(),i)+d);let c=0;for(let d=0;d<a.length;d++)c=Math.max(a[d].length,c);const u=a.slice(0,s-1),l=a.slice(s-1,s),h=a.slice(s);console.log(u.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${rightPad(l[0],c)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join(`
`))}function createProgram(n){return throwIfNull(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function linkProgram(n,e){if(callAndCheck(n,()=>n.linkProgram(e)),n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function validateProgram(n,e){if(callAndCheck(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function createStaticVertexBuffer(n,e){const t=throwIfNull(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return callAndCheck(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),callAndCheck(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function createStaticIndexBuffer(n,e){const t=throwIfNull(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return callAndCheck(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),callAndCheck(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function createTexture(n){return throwIfNull(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function validateTextureSize(n,e){const t=env().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const s=`[${n}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>t||e>t){const s=`[${n}x${e}]`,r=`[${t}x${t}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function createFramebuffer(n){return throwIfNull(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function bindVertexBufferToProgramAttribute(n,e,t,s,r,i,a){const c=n.getAttribLocation(e,t);return c===-1?!1:(callAndCheck(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),callAndCheck(n,()=>n.vertexAttribPointer(c,r,n.FLOAT,!1,i,a)),callAndCheck(n,()=>n.enableVertexAttribArray(c)),!0)}function bindTextureUnit(n,e,t){validateTextureUnit(n,t),callAndCheck(n,()=>n.activeTexture(n.TEXTURE0+t)),callAndCheck(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function getProgramUniformLocationOrThrow(n,e,t){return throwIfNull(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function getProgramUniformLocation(n,e,t){return n.getUniformLocation(e,t)}function bindTextureToProgramUniformSampler(n,e,t,s){callAndCheck(n,()=>bindTextureUnit(n,e,s)),callAndCheck(n,()=>n.uniform1i(t,s))}function bindColorTextureToFramebuffer(n,e,t){callAndCheck(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),callAndCheck(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function unbindColorTextureFromFramebuffer(n,e){callAndCheck(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),callAndCheck(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function validateFramebuffer(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+getFramebufferErrorMessage(n,e))}function getFramebufferErrorMessage(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function throwIfNull(n,e,t){const s=callAndCheck(n,()=>e());if(s==null)throw new Error(t);return s}function validateTextureUnit(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+n.TEXTURE0;if(s<n.TEXTURE0||s>t){const r=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${r}.`)}}function getBatchDim(n,e=2){return sizeFromShape(n.slice(0,n.length-e))}function getRowsCols(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function getShapeAs3D(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[getBatchDim(n),...getRowsCols(n)]),e}function getTextureShapeFromLogicalShape(n,e=!1){let t=env().getNumber("WEBGL_MAX_TEXTURE_SIZE");e&&(t=t*2,n=n.map((r,i)=>i>=n.length-2?nearestLargerEven(n[i]):n[i]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=squeezeShape(n).newShape);let s=sizeFromShape(n);if(n.length<=1&&s<=t)return[1,s];if(n.length===2&&n[0]<=t&&n[1]<=t)return n;if(n.length===3&&n[0]*n[1]<=t&&n[2]<=t)return[n[0]*n[1],n[2]];if(n.length===3&&n[0]<=t&&n[1]*n[2]<=t)return[n[0],n[1]*n[2]];if(n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t)return[n[0]*n[1]*n[2],n[3]];if(n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t)return[n[0],n[1]*n[2]*n[3]];if(e){const r=getBatchDim(n);let i=2,a=2;return n.length&&([i,a]=getRowsCols(n)),s=r*(i/2)*(a/2),sizeToSquarishShape(s).map(c=>c*2)}return sizeToSquarishShape(s)}function isEven(n){return n%2==0}function isReshapeFree(n,e){if(n=n.slice(-2),e=e.slice(-2),arraysEqual(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n.slice(-1)[0],s=e.slice(-1)[0];if(t===s||isEven(t)&&isEven(s)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&isEven(n[0])&&isEven(e[0])}let MAX_TEXTURE_SIZE,MAX_TEXTURES_IN_SHADER;function getWebGLMaxTextureSize(n){if(MAX_TEXTURE_SIZE==null){const e=getWebGLContext(n);MAX_TEXTURE_SIZE=e.getParameter(e.MAX_TEXTURE_SIZE)}return MAX_TEXTURE_SIZE}function getMaxTexturesInShader(n){if(MAX_TEXTURES_IN_SHADER==null){const e=getWebGLContext(n);MAX_TEXTURES_IN_SHADER=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,MAX_TEXTURES_IN_SHADER)}function getWebGLDisjointQueryTimerVersion(n){if(n===0)return 0;let e;const t=getWebGLContext(n);return hasExtension(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:hasExtension(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function hasExtension(n,e){return n.getExtension(e)!=null}function isWebGLVersionEnabled(n){try{if(getWebGLContext(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function isCapableOfRenderingToFloatTexture(n){if(n===0)return!1;const e=getWebGLContext(n);if(n===1){if(!hasExtension(e,"OES_texture_float"))return!1}else if(!hasExtension(e,"EXT_color_buffer_float"))return!1;return createFloatTextureAndBindToFramebuffer(e)}function isDownloadFloatTextureEnabled(n){if(n===0)return!1;const e=getWebGLContext(n);if(n===1){if(!hasExtension(e,"OES_texture_float")||!hasExtension(e,"WEBGL_color_buffer_float"))return!1}else{if(hasExtension(e,"EXT_color_buffer_float"))return createFloatTextureAndBindToFramebuffer(e);const s="EXT_color_buffer_half_float";if(hasExtension(e,s)){const r=e.getExtension(s);return createHalfFloatTextureAndBindToFramebuffer(e,r)}return!1}return createFloatTextureAndBindToFramebuffer(e)}function createFloatTextureAndBindToFramebuffer(n){const e=getTextureConfig(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t);const s=1,r=1;n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,s,r,0,e.textureFormatFloat,e.textureTypeFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(i),a}function createHalfFloatTextureAndBindToFramebuffer(n,e){const t=getTextureConfig(n,e),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s);const r=1,i=1;n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,r,i,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const a=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const c=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(a),c}function isWebGLFenceEnabled(n){return n!==2?!1:getWebGLContext(n).fenceSync!=null}function assertNotComplex(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&assert$2(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ENV=env();ENV.registerFlag("HAS_WEBGL",()=>ENV.getNumber("WEBGL_VERSION")>0);ENV.registerFlag("WEBGL_VERSION",()=>isWebGLVersionEnabled(2)?2:isWebGLVersionEnabled(1)?1:0);ENV.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);ENV.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>ENV.get("WEBGL_VERSION")===2);ENV.registerFlag("WEBGL_CPU_FORWARD",()=>!0);ENV.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);ENV.registerFlag("WEBGL_PACK",()=>ENV.getBool("HAS_WEBGL"));ENV.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_CLIP",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1);ENV.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_REDUCE",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_LAZILY_UNPACK",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_CONV_IM2COL",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>getWebGLMaxTextureSize(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>getMaxTexturesInShader(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=ENV.getNumber("WEBGL_VERSION");return n===0?0:getWebGLDisjointQueryTimerVersion(n)});ENV.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ENV.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!isMobile());ENV.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>isCapableOfRenderingToFloatTexture(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>ENV.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:ENV.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));ENV.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>isDownloadFloatTextureEnabled(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_FENCE_API_ENABLED",()=>isWebGLFenceEnabled(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>ENV.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);ENV.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getGlslDifferences(){let n,e,t,s,r,i,a,c,u,l;return env().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",s="in",r="texture",i="outputColor",a="out vec4 outputColor;",c=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,u="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",s="varying",r="texture2D",i="gl_FragColor",a="",c=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:s,texture2D:r,output:i,defineOutput:a,defineSpecialNaN:c,defineSpecialInf:u,defineRound:l}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getLogicalCoordinatesFromFlatIndex(n,e,t="index"){const s=computeStrides(e);return s.map((r,i)=>{const a=`int ${n[i]} = ${t} / ${r}`,c=i===s.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * ${r}`:`index -= ${n[i]} * ${r}`;return`${a}; ${c};`}).join("")}function getFlatIndexFrom3D(n){const e=computeStrides(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}const ENCODE_FLOAT_SNIPPET=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DecodeMatrixProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=PackingScheme.DENSE;const t=getDenseTexShape(e),s=getGlslDifferences();this.outputShape=e,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${getLogicalCoordinatesFromFlatIndex(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${t[0]}, ${t[1]}));
        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${s.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DecodeMatrixPackedProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=PackingScheme.DENSE;const t=getDenseTexShape(e),s=getGlslDifferences();this.outputShape=e,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${getLogicalCoordinatesFromFlatIndex(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${t[0]}, ${t[1]}));
        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${s.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EncodeFloatProgram{constructor(e){this.variableNames=["A"],this.outTexUsage=TextureUsage.DOWNLOAD;const t=getGlslDifferences();this.outputShape=e,this.userCode=`
      ${ENCODE_FLOAT_SNIPPET}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EncodeFloatPackedProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=TextureUsage.DOWNLOAD;const t=getGlslDifferences();this.outputShape=e,this.userCode=`
      ${ENCODE_FLOAT_SNIPPET}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EncodeMatrixProgram{constructor(e,t,s=!1){this.variableNames=["A"];const r=getGlslDifferences(),[i,a]=t;this.outputShape=e;let c="result";s&&(c="floor(result * 255. + 0.5)"),this.userCode=`
      ${getFlatIndexFrom3D(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / ${a};
        int c = imod(flatIndex, ${a});
        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${i}.0);
        vec4 values = ${r.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${r.output} = vec4(${c}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EncodeMatrixPackedProgram{constructor(e,t,s=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=getGlslDifferences(),[i,a]=t;this.outputShape=e;let c="",u="result";s&&(u="floor(result * 255. + 0.5)");for(let l=0;l<=1;l++)for(let h=0;h<=1;h++){const d=l*2+h;c+=`
          localCoords = coords;
          if(localCoords[2] + ${h} < ${e[2]}) {
            localCoords[2] += ${h};
            if(localCoords[1] + ${l} < ${e[1]}) {
              localCoords[1] += ${l};

              flatIndex = getFlatIndex(localCoords);
              offset = imod(flatIndex, 4);

              flatIndex = idiv(flatIndex, 4, 1.);

              r = flatIndex / ${a};
              c = imod(flatIndex, ${a});
              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${i}.0);
              values = ${r.texture2D}(A, uv);

              if(offset == 0) {
                result[${d}] = values[0];
              } else if(offset == 1) {
                result[${d}] = values[1];
              } else if(offset == 2) {
                result[${d}] = values[2];
              } else {
                result[${d}] = values[3];
              }
            }
          }
        `}this.userCode=`
      ${getFlatIndexFrom3D(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        vec4 result = vec4(0.);
        int flatIndex, r, c, offset;
        ivec3 localCoords;
        vec2 uv;
        vec4 values;

        ${c}

        ${r.output} = ${u};
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function createVertexShader(n){const e=getGlslDifferences(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return createVertexShader$1(n,t)}function createVertexBuffer(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return createStaticVertexBuffer(n,e)}function createIndexBuffer(n){const e=new Uint16Array([0,1,2,2,1,3]);return createStaticIndexBuffer(n,e)}function createAndConfigureTexture(n,e,t,s,r,i){validateTextureSize(e,t);const a=createTexture(n),c=n.TEXTURE_2D;return callAndCheck(n,()=>n.bindTexture(c,a)),callAndCheck(n,()=>n.texParameteri(c,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),callAndCheck(n,()=>n.texParameteri(c,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),callAndCheck(n,()=>n.texParameteri(c,n.TEXTURE_MIN_FILTER,n.NEAREST)),callAndCheck(n,()=>n.texParameteri(c,n.TEXTURE_MAG_FILTER,n.NEAREST)),callAndCheck(n,()=>n.texImage2D(c,0,s,e,t,0,r,i,null)),callAndCheck(n,()=>n.bindTexture(n.TEXTURE_2D,null)),a}function getInternalFormatForFloat32MatrixTexture(n){return n.internalFormatFloat}function createFloat32MatrixTexture(n,e,t,s){const[r,i]=getUnpackedMatrixTextureShapeWidthHeight(e,t);return createAndConfigureTexture(n,r,i,getInternalFormatForFloat32MatrixTexture(s),s.textureFormatFloat,n.FLOAT)}function getInternalFormatForFloat16MatrixTexture(n){return n.internalFormatHalfFloat}function createFloat16MatrixTexture(n,e,t,s){const[r,i]=getUnpackedMatrixTextureShapeWidthHeight(e,t);return createAndConfigureTexture(n,r,i,getInternalFormatForFloat16MatrixTexture(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function getInternalFormatForUnsignedBytesMatrixTexture(n){return n.downloadTextureFormat}function createUnsignedBytesMatrixTexture(n,e,t,s){const[r,i]=getUnpackedMatrixTextureShapeWidthHeight(e,t);return createAndConfigureTexture(n,r,i,getInternalFormatForUnsignedBytesMatrixTexture(s),n.RGBA,n.UNSIGNED_BYTE)}function getInternalFormatForPackedMatrixTexture(n){return n.internalFormatPackedFloat}function createPackedMatrixTexture(n,e,t,s){const[r,i]=getPackedMatrixTextureShapeWidthHeight(e,t);return createAndConfigureTexture(n,r,i,getInternalFormatForPackedMatrixTexture(s),n.RGBA,n.FLOAT)}function getInternalFormatForFloat16PackedMatrixTexture(n){return n.internalFormatPackedHalfFloat}function createFloat16PackedMatrixTexture(n,e,t,s){const[r,i]=getPackedMatrixTextureShapeWidthHeight(e,t);return createAndConfigureTexture(n,r,i,getInternalFormatForFloat16PackedMatrixTexture(s),n.RGBA,s.textureTypeHalfFloat)}function bindVertexProgramAttributeStreams(n,e,t){const s=0,r=3*4,i=3*4+2*4;return callAndCheck(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),bindVertexBufferToProgramAttribute(n,e,"clipSpacePos",t,3,i,s)&&bindVertexBufferToProgramAttribute(n,e,"uv",t,2,i,r)}function uploadDenseMatrixToTexture(n,e,t,s,r,i){callAndCheck(n,()=>n.bindTexture(n.TEXTURE_2D,e));let a,c,u;r instanceof Uint8Array?(a=new Uint8Array(t*s*4),c=n.UNSIGNED_BYTE,u=n.RGBA):(a=new Float32Array(t*s*4),c=n.FLOAT,u=i.internalFormatPackedFloat),a.set(r),callAndCheck(n,()=>n.texImage2D(n.TEXTURE_2D,0,u,t,s,0,n.RGBA,c,a)),callAndCheck(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function uploadPixelDataToTexture(n,e,t){callAndCheck(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?callAndCheck(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):callAndCheck(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),callAndCheck(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function createBufferFromOutputTexture(n,e,t,s){const r=n.createBuffer();callAndCheck(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const c=4*4*e*t;return callAndCheck(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,c,n.STREAM_READ)),callAndCheck(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),callAndCheck(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}function downloadFloat32MatrixFromBuffer(n,e,t){const s=n,r=new Float32Array(t);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function downloadByteEncodedFloatMatrixFromOutputTexture(n,e,t,s){const[r,i]=getUnpackedMatrixTextureShapeWidthHeight(e,t),a=4,c=new Uint8Array(getUnpackedArraySizeFromMatrixSize(e*t,a));return callAndCheck(n,()=>n.readPixels(0,0,r,i,s.downloadTextureFormat,n.UNSIGNED_BYTE,c)),new Float32Array(c.buffer)}function downloadPackedMatrixFromBuffer(n,e,t,s,r,i,a,c){const u=n,l=new Float32Array(getPackedRGBAArraySizeFromMatrixShape(i,a));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function downloadMatrixFromPackedOutputTexture(n,e,t){const s=new Float32Array(e*t*4);return callAndCheck(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GPGPUContext{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=env().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,setWebGLContext(t,e)):this.gl=getWebGLContext(t);let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(env().getNumber("WEBGL_VERSION")===1){const i="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=getExtensionOrThrow(this.gl,i),hasExtension(this.gl,a))this.textureHalfFloatExtension=getExtensionOrThrow(this.gl,a);else if(env().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),hasExtension(this.gl,r))this.colorBufferHalfFloatExtension=getExtensionOrThrow(this.gl,r);else if(env().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",hasExtension(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(hasExtension(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=createVertexBuffer(this.gl),this.indexBuffer=createIndexBuffer(this.gl),this.framebuffer=createFramebuffer(this.gl),this.textureConfig=getTextureConfig(this.gl,this.textureHalfFloatExtension)}get debug(){return env().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;callAndCheck(e,()=>e.finish()),callAndCheck(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),callAndCheck(e,()=>e.deleteFramebuffer(this.framebuffer)),callAndCheck(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),callAndCheck(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),callAndCheck(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),createFloat32MatrixTexture(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),createFloat16MatrixTexture(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),createUnsignedBytesMatrixTexture(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),uploadPixelDataToTexture(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,s,r){this.throwIfDisposed(),uploadDenseMatrixToTexture(this.gl,e,t,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),createFloat16PackedMatrixTexture(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),createPackedMatrixTexture(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(unbindColorTextureFromFramebuffer(this.gl,this.framebuffer),this.outputTexture=null),callAndCheck(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>downloadByteEncodedFloatMatrixFromOutputTexture(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,r,i,a){return downloadPackedMatrixFromBuffer(this.gl,e,t,s,r,i,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return downloadFloat32MatrixFromBuffer(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const r=createBufferFromOutputTexture(this.gl,t,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(env().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,i=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const a=r.clientWaitSync(i,0,0);return a===r.ALREADY_SIGNALED||a===r.CONDITION_SATISFIED},t=i}else env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(t,env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>downloadMatrixFromPackedOutputTexture(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl,s=createFragmentShader(t,e),r=createVertexShader(t),i=createProgram(t);return callAndCheck(t,()=>t.attachShader(i,r)),callAndCheck(t,()=>t.attachShader(i,s)),linkProgram(t,i),this.debug&&validateProgram(t,i),this.vertexAttrsAreBound||(this.setProgram(i),this.vertexAttrsAreBound=bindVertexProgramAttributeStreams(t,this.program,this.vertexBuffer)),i}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&callAndCheck(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&validateProgram(this.gl,this.program),callAndCheck(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?getProgramUniformLocationOrThrow(this.gl,e,t):getProgramUniformLocation(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),callAndCheck(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),bindTextureToProgramUniformSampler(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[r,i]=getPackedMatrixTextureShapeWidthHeight(t,s);this.setOutputMatrixTextureDriver(e,r,i)}setOutputMatrixWriteRegion(e,t,s,r){this.setOutputMatrixWriteRegionDriver(s,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&validateProgram(this.gl,this.program),validateFramebuffer(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),callAndCheck(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),callAndCheck(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=getExtensionOrThrow(this.gl,env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),i=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,i),i}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();t.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await repeatedTry(()=>this.disposed||this.isQueryAvailable(e,env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),i=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),i&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=linearSearchLastTrue(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),bindColorTextureToFramebuffer(this.gl,e,this.framebuffer),this.debug&&validateFramebuffer(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(bindColorTextureToFramebuffer(this.gl,this.outputTexture,this.framebuffer),this.debug&&validateFramebuffer(this.gl)):unbindColorTextureFromFramebuffer(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const r=this.gl;bindColorTextureToFramebuffer(r,e,this.framebuffer),this.debug&&validateFramebuffer(r),this.outputTexture=e,callAndCheck(r,()=>r.viewport(0,0,t,s)),callAndCheck(r,()=>r.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,r){this.throwIfDisposed(),callAndCheck(this.gl,()=>this.gl.scissor(e,t,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function linearSearchLastTrue(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims}=backend_util;function makeShader(n,e,t,s){const r=[];n.forEach(g=>{const x=sizeFromShape(g.shapeInfo.logicalShape);g.shapeInfo.isUniform?r.push(`uniform float ${g.name}${x>1?`[${x}]`:""};`):(r.push(`uniform sampler2D ${g.name};`),r.push(`uniform int offset${g.name};`))});const i=r.join(`
`),a=n.map(g=>getInputSamplingSnippet(g,e,s)).join(`
`),c=e.texShape,u=getGlslDifferences(),l=getFloatTextureSampleSnippet(u);let h,d,f=getShaderPrefix(u);return e.isPacked?(h=getPackedOutputSamplingSnippet(e.logicalShape,c),d=getFloatTextureSetRGBASnippet(u)):(h=getOutputSamplingSnippet(e.logicalShape,c),d=getFloatTextureSetRSnippet(u)),s&&(f+=SHADER_PACKED_PREFIX),[f,l,d,i,h,a,t].join(`
`)}function getSamplerFromInInfo(n){const e=n.shapeInfo.logicalShape;switch(e.length){case 0:return getSamplerScalar(n);case 1:return getSampler1D(n);case 2:return getSampler2D(n);case 3:return getSampler3D(n);case 4:return getSampler4D(n);case 5:return getSampler5D(n);case 6:return getSampler6D(n);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function getPackedSamplerFromInInfo(n){switch(n.shapeInfo.logicalShape.length){case 0:return getPackedSamplerScalar(n);case 1:return getPackedSampler1D(n);case 2:return getPackedSampler2D(n);case 3:return getPackedSampler3D(n);default:return getPackedSamplerND(n)}}function getInputSamplingSnippet(n,e,t=!1){let s="";t?s+=getPackedSamplerFromInInfo(n):s+=getSamplerFromInInfo(n);const r=n.shapeInfo.logicalShape,i=e.logicalShape;return r.length<=i.length&&(t?s+=getPackedSamplerAtOutputCoords(n,e):s+=getSamplerAtOutputCoords(n,e)),s}function getPackedOutputSamplingSnippet(n,e){switch(n.length){case 0:return getOutputScalarCoords();case 1:return getOutputPacked1DCoords(n,e);case 2:return getOutputPacked2DCoords(n,e);case 3:return getOutputPacked3DCoords(n,e);default:return getOutputPackedNDCoords(n,e)}}function getOutputSamplingSnippet(n,e){switch(n.length){case 0:return getOutputScalarCoords();case 1:return getOutput1DCoords(n,e);case 2:return getOutput2DCoords(n,e);case 3:return getOutput3DCoords(n,e);case 4:return getOutput4DCoords(n,e);case 5:return getOutput5DCoords(n,e);case 6:return getOutput6DCoords(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function getFloatTextureSampleSnippet(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function getFloatTextureSetRSnippet(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function getFloatTextureSetRGBASnippet(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function getShaderPrefix(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${SAMPLE_1D_SNIPPET}
    ${SAMPLE_2D_SNIPPET}
    ${SAMPLE_3D_SNIPPET}
  `}const SAMPLE_1D_SNIPPET=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,SAMPLE_2D_SNIPPET=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,SAMPLE_3D_SNIPPET=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,SHADER_PACKED_PREFIX=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function getOutputScalarCoords(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function getOutputPacked1DCoords(n,e){const t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return t[0]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${t[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return 2 * (resTexRC.x * ${t[1]} + resTexRC.y);
    }
  `}function getOutput1DCoords(n,e){return e[0]===1?`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function getOutputPacked3DCoords(n,e){const t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[2]/2),r=s*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec3(b, r, c);
    }
  `}function getOutput3DCoords(n,e){const t=getLogicalCoordinatesFromFlatIndex(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${t}
      return ivec3(r, c, d);
    }
  `}function getOutputPackedNDCoords(n,e){const t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[n.length-1]/2),r=s*Math.ceil(n[n.length-2]/2);let i=r,a="",c="b, r, c";for(let u=2;u<n.length-1;u++)i*=n[n.length-u-1],a=`
      int b${u} = index / ${i};
      index -= b${u} * ${i};
    `+a,c=`b${u}, `+c;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${a}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec${n.length}(${c});
    }
  `}function getOutput4DCoords(n,e){const t=getLogicalCoordinatesFromFlatIndex(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${t}
      return ivec4(r, c, d, d2);
    }
  `}function getOutput5DCoords(n,e){const t=getLogicalCoordinatesFromFlatIndex(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function getOutput6DCoords(n,e){const t=getLogicalCoordinatesFromFlatIndex(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function getOutputPacked2DCoords(n,e){const t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(arraysEqual(n,e))return`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `;const s=Math.ceil(n[1]/2);return`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec2(r, c);
    }
  `}function getOutput2DCoords(n,e){return arraysEqual(n,e)?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function getFlatOffsetUniformName(n){return`offset${n}`}function getPackedSamplerScalar(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=getGlslDifferences();return`
    vec4 ${t}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function getSamplerScalar(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`float ${t}() {return ${e};}`;const[s,r]=n.shapeInfo.texShape;if(s===1&&r===1)return`
      float ${t}() {
        return sampleTexture(${e}, halfCR);
      }
    `;const[i,a]=n.shapeInfo.texShape,c=getFlatOffsetUniformName(e);return`
    float ${t}() {
      vec2 uv = uvFromFlat(${i}, ${a}, ${c});
      return sampleTexture(${e}, uv);
    }
  `}function getPackedSampler1D(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=n.shapeInfo.texShape,r=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],i=getGlslDifferences();return`
    vec4 ${t}(int index) {
      vec2 uv = packedUVfrom1D(
        ${r[0]}, ${r[1]}, index);
      return ${i.texture2D}(${e}, uv);
    }
  `}function getSampler1D(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`
      float ${t}(int index) {
        ${getUniformSampler(n)}
      }
    `;const s=n.shapeInfo.texShape,r=s[0],i=s[1];if(i===1&&r===1)return`
      float ${t}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;const a=getFlatOffsetUniformName(e);return i===1?`
      float ${t}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${r}.0);
        return sampleTexture(${e}, uv);
      }
    `:r===1?`
      float ${t}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
    float ${t}(int index) {
      vec2 uv = uvFromFlat(${r}, ${i}, index + ${a});
      return sampleTexture(${e}, uv);
    }
  `}function getPackedSampler2D(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=n.shapeInfo.texShape,i=r[0],a=r[1],c=getGlslDifferences();if(r!=null&&arraysEqual(e,r))return`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);

        return ${c.texture2D}(${t}, uv);
      }
    `;const u=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],l=Math.ceil(e[1]/2);return`
    vec4 ${s}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${u[0]}, ${u[1]}, row, col);
      return ${c.texture2D}(${t}, uv);
    }
  `}function getSampler2D(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=n.shapeInfo.texShape;if(r!=null&&arraysEqual(e,r)){const d=r[0],f=r[1];return`
    float ${s}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${d}.0);
      return sampleTexture(${t}, uv);
    }
  `}const{newShape:i,keptDims:a}=squeezeShape(e),c=i;if(c.length<e.length){const d=squeezeInputInfo(n,c),f=["row","col"];return`
      ${getSamplerFromInInfo(d)}
      float ${s}(int row, int col) {
        return ${s}(${getSqueezedParams(f,a)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${getUniformSampler(n)}
      }
    `;const u=r[0],l=r[1],h=getFlatOffsetUniformName(t);return l===1?`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${t}, uv);
    }
  `:u===1?`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${t}, uv);
    }
  `:`
  float ${s}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${h};
    vec2 uv = uvFromFlat(${u}, ${l}, index);
    return sampleTexture(${t}, uv);
  }
`}function getPackedSampler3D(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=n.shapeInfo.texShape,i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(e[0]===1){const d=e.slice(1),f=[1,2],y=squeezeInputInfo(n,d),g=["b","row","col"];return`
        ${getPackedSamplerFromInInfo(y)}
        vec4 ${s}(int b, int row, int col) {
          return ${s}(${getSqueezedParams(g,f)});
        }
      `}const a=i[0],c=i[1],u=Math.ceil(e[2]/2),l=u*Math.ceil(e[1]/2),h=getGlslDifferences();return`
    vec4 ${s}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${a}, ${c}, ${l}, ${u}, b, row, col);
      return ${h.texture2D}(${t}, uv);
    }
  `}function getSampler3D(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e[1]*e[2],i=e[2],{newShape:a,keptDims:c}=squeezeShape(e),u=a;if(u.length<e.length){const g=squeezeInputInfo(n,u),x=["row","col","depth"];return`
        ${getSamplerFromInInfo(g)}
        float ${s}(int row, int col, int depth) {
          return ${s}(${getSqueezedParams(x,c)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${i}, 1)));
        ${getUniformSampler(n)}
      }
    `;const l=n.shapeInfo.texShape,h=l[0],d=l[1],f=n.shapeInfo.flatOffset;if(d===r&&f==null)return`
        float ${s}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${t}, uv);
        }
      `;if(d===i&&f==null)return`
    float ${s}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${t}, uv);
    }
  `;const y=getFlatOffsetUniformName(t);return`
      float ${s}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${i} + depth + ${y};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${t}, uv);
      }
  `}function getPackedSamplerND(n){const e=n.shapeInfo.logicalShape,t=e.length,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=a[0],u=a[1],l=Math.ceil(e[t-1]/2);let h=l*Math.ceil(e[t-2]/2),d="int b, int row, int col",f=`b * ${h} + (row / 2) * ${l} + (col / 2)`;for(let g=2;g<t-1;g++)d=`int b${g}, `+d,h*=e[t-g-1],f=`b${g} * ${h} + `+f;const y=getGlslDifferences();return`
    vec4 ${r}(${d}) {
      int index = ${f};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});
      return ${y.texture2D}(${s}, uv);
    }
  `}function getSampler4D(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e[3],i=e[2]*r,a=e[1]*i,{newShape:c,keptDims:u}=squeezeShape(e);if(c.length<e.length){const g=squeezeInputInfo(n,c),x=["row","col","depth","depth2"];return`
      ${getSamplerFromInInfo(g)}
      float ${s}(int row, int col, int depth, int depth2) {
        return ${s}(${getSqueezedParams(x,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${i}, ${r}, 1)));
        ${getUniformSampler(n)}
      }
    `;const l=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],f=h[1];if(f===a&&l==null)return`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===r&&l==null)return`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;const y=getFlatOffsetUniformName(t);return`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${d}, ${f}, index + ${y});
      return sampleTexture(${t}, uv);
    }
  `}function getSampler5D(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e[4],i=e[3]*r,a=e[2]*i,c=e[1]*a,{newShape:u,keptDims:l}=squeezeShape(e);if(u.length<e.length){const x=squeezeInputInfo(n,u),b=["row","col","depth","depth2","depth3"];return`
      ${getSamplerFromInInfo(x)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${getSqueezedParams(b,l)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${a}, ${i}, ${r})) +
          depth3;
        ${getUniformSampler(n)}
      }
    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,f=d[0],y=d[1];if(y===c&&h==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${i}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${y}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(y===r&&h==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${y}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;const g=getFlatOffsetUniformName(t);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${a} + depth * ${i} +
          depth2 * ${r} + depth3 + ${g};
      vec2 uv = uvFromFlat(${f}, ${y}, index);
      return sampleTexture(${t}, uv);
    }
  `}function getSampler6D(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:r,keptDims:i}=squeezeShape(e);if(r.length<e.length){const b=squeezeInputInfo(n,r),v=["row","col","depth","depth2","depth3","depth4"];return`
      ${getSamplerFromInInfo(b)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${getSqueezedParams(v,i)});
      }
    `}const a=e[5],c=e[4]*a,u=e[3]*c,l=e[2]*u,h=e[1]*l;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${h}, ${l}, ${u}, ${c})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${getUniformSampler(n)}
      }
    `;const d=n.shapeInfo.flatOffset,f=n.shapeInfo.texShape,y=f[0],g=f[1];if(g===h&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${u}, ${c}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${g}.0, ${y}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(g===a&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${g}.0, ${y}.0);
        return sampleTexture(${t}, uv);
      }
    `;const x=getFlatOffsetUniformName(t);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${h} + col * ${l} + depth * ${u} +
          depth2 * ${c} + depth3 * ${a} + depth4 + ${x};
      vec2 uv = uvFromFlat(${y}, ${g}, index);
      return sampleTexture(${t}, uv);
    }
  `}function getUniformSampler(n){const e=n.name,t=sizeFromShape(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function getPackedSamplerAtOutputCoords(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",i=n.shapeInfo.logicalShape.length,a=e.logicalShape.length,c=getBroadcastDims(n.shapeInfo.logicalShape,e.logicalShape),u=getCoordsDataType(a),l=a-i;let h;const d=["x","y","z","w","u","v"];i===0?h="":a<2&&c.length>=1?h="coords = 0;":h=c.map(S=>`coords.${d[S+l]} = 0;`).join(`
`);let f="";a<2&&i>0?f="coords":f=n.shapeInfo.logicalShape.map((S,T)=>`coords.${d[T+l]}`).join(", ");let y="return outputValue;";const x=sizeFromShape(n.shapeInfo.logicalShape)===1,v=sizeFromShape(e.logicalShape)===1;if(i===1&&!x&&!v)y=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(x&&!v)a===1?y=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:y=`
        return vec4(outputValue.x);
      `;else if(c.length){const S=i-2,T=i-1;c.indexOf(S)>-1&&c.indexOf(T)>-1?y="return vec4(outputValue.x);":c.indexOf(S)>-1?y="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":c.indexOf(T)>-1&&(y="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${u} coords = getOutputCoords();
      ${h}
      vec4 outputValue = get${s}(${f});
      ${y}
    }
  `}function getSamplerAtOutputCoords(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",i=e.texShape,a=n.shapeInfo.texShape,c=n.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!n.shapeInfo.isUniform&&c===u&&n.shapeInfo.flatOffset==null&&arraysEqual(a,i))return`
      float ${r}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const l=getCoordsDataType(u),h=getBroadcastDims(n.shapeInfo.logicalShape,e.logicalShape),d=u-c;let f;const y=["x","y","z","w","u","v"];c===0?f="":u<2&&h.length>=1?f="coords = 0;":f=h.map(x=>`coords.${y[x+d]} = 0;`).join(`
`);let g="";return u<2&&c>0?g="coords":g=n.shapeInfo.logicalShape.map((x,b)=>`coords.${y[b+d]}`).join(", "),`
    float ${r}() {
      ${l} coords = getOutputCoords();
      ${f}
      return get${s}(${g});
    }
  `}function getCoordsDataType(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function squeezeInputInfo(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function getSqueezedParams(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function compileProgram(n,e,t,s){const r=e.userCode,i=t.map((y,g)=>{const x={logicalShape:y.shape,texShape:y.isUniform?null:y.texData.texShape,isUniform:y.isUniform,isPacked:y.isUniform?!1:y.texData.isPacked,flatOffset:null};return y.texData!=null&&y.texData.slice!=null&&y.texData.slice.flatOffset>0&&(x.flatOffset=y.texData.slice.flatOffset),{name:e.variableNames[g],shapeInfo:x}}),a=i.map(y=>y.shapeInfo),c={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},u=makeShader(i,c,r,e.packedInputs),l=n.createProgram(u);let h=null;const d=n.getUniformLocation(l,"NAN",!1);env().getNumber("WEBGL_VERSION")===1&&(h=n.getUniformLocation(l,"INFINITY",!1));const f={};for(let y=0;y<e.variableNames.length;y++){const g=e.variableNames[y],x=!1;f[g]=n.getUniformLocation(l,g,x),f[`offset${g}`]=n.getUniformLocation(l,`offset${g}`,x)}return{program:e,source:u,webGLProgram:l,uniformLocations:f,inShapeInfos:a,outShapeInfo:c,infLoc:h,nanLoc:d}}function validateBinaryAndProgram(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,s)=>{const r=t.logicalShape,i=e[s],a=i.shape;if(!arraysEqual(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(t.isUniform&&i.isUniform)return;const c=t.texShape,u=i.isUniform?null:i.texData.texShape;if(!arraysEqual(c,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${c} and ${u} must match`)})}function runProgram(n,e,t,s,r){validateBinaryAndProgram(e.inShapeInfos,t),validateBinaryAndProgram([e.outShapeInfo],[s]);const i=s.texData.texture,a=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(i,a[0],a[1]):n.setOutputMatrixTexture(i,a[0],a[1]),n.setProgram(e.webGLProgram),env().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN),t.forEach((c,u)=>{const l=e.program.variableNames[u],h=e.uniformLocations[l],d=e.uniformLocations[`offset${l}`];if(h!=null){if(c.isUniform){if(sizeFromShape(c.shape)<2)n.gl.uniform1f(h,c.uniformValues[0]);else{let f=c.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),n.gl.uniform1fv(h,f)}return}c.texData.slice!=null&&d!=null&&n.gl.uniform1i(d,c.texData.slice.flatOffset),n.setInputMatrixTexture(c.texData.texture,h,u)}}),r!=null&&r(n,e.webGLProgram),n.executeProgram()}function makeShaderKey(n,e,t){let s="";e.concat(t).forEach(a=>{const c=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0,u=a.isUniform?"uniform":a.texData.texShape;s+=`${a.shape}_${u}_${c}`});const r=n.userCode;let i=n.constructor.name;return i+="_"+s+"_"+r,i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:addImplCPU,bincountImpl:bincountImplCPU,bincountReduceImpl:bincountReduceImplCPU,ceilImpl:ceilImplCPU,concatImpl:concatImplCPU,expImpl:expImplCPU,expm1Impl:expm1ImplCPU,floorImpl:floorImplCPU,gatherV2Impl:gatherV2ImplCPU,greaterImpl:greaterImplCPU,lessImpl:lessImplCPU,linSpaceImpl:linSpaceImplCPU,logImpl:logImplCPU,maxImpl:maxImplCPU,maximumImpl:maximumImplCPU,minimumImpl:minimumImplCPU,multiplyImpl:multiplyImplCPU,negImpl:negImplCPU,prodImpl:prodImplCPU,rangeImpl:rangeImplCPU,rsqrtImpl:rsqrtImplCPU,simpleAbsImpl:simpleAbsImplCPU,sliceImpl:sliceImplCPU,stridedSliceImpl:stridedSliceImplCPU,subImpl:subImplCPU,tileImpl:tileImplCPU,topKImpl:topKImplCPU,transposeImpl:transposeImplCPU,uniqueImpl:uniqueImplCPU}=shared;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getVecChannels(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function getChannels(n,e){return e===1?[n]:getVecChannels(n,e)}function getSourceCoords$2(n,e){if(n===1)return"rc";let t="";for(let s=0;s<n;s++)t+=e[s],s<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PackProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(t===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const s=getChannels("rc",t),r=getCoordsDataType(t),i=getOutOfBoundsCondition(t,e,s),a=getSetup(t,e[e.length-1],e[e.length-2],s),c=getOutput(e,s);this.userCode=`
        void main() {
          ${r} rc = getOutputCoords();

          if(${i}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${c}));
          }
        }
      `}}}function getSourceCoordsArr(n,e){const t=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let i=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let a=2;a<n;a++)i=`${e[e.length-1-a]},`+i;t.push(i)}return t}function getOutOfBoundsCondition(n,e,t){if(n===1)return`rc > ${e[0]}`;let s="";for(let r=n-2;r<n;r++)s+=`${t[r]} >= ${e[r]}`,r<n-1&&(s+="||");return s}function getSetup(n,e,t,s){if(n===1)return"";const r=s.slice(-2);return`
    int r = ${r[0]};
    int c = ${r[1]};
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= ${e};
    bool rEdge = rp1 >= ${t};
  `}function getOutput(n,e){const t=n.length,s=getSourceCoordsArr(t,e);return t===1?`getA(rc),
            rc + 1 >= ${n[0]} ? 0. : getA(rc + 1),
            0, 0`:`getA(${s[0]}),
          cEdge ? 0. : getA(${s[1]}),
          rEdge ? 0. : getA(${s[2]}),
          rEdge || cEdge ? 0. : getA(${s[3]})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ReshapePackedProgram{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let s="";for(let r=0;r<4;r++){let i="thisRC = rc;";r%2==1&&(i+="thisRC.z += 1;"),r>1&&(i+="thisRC.y += 1;"),s+=`
        ${i}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${getReshapedInputCoords(t)}
      ${getFlatIndexFrom3D(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${e[1]};
        int cols = ${e[2]};

        ${s}

        setOutput(result);
      }
    `}}function getReshapedInputCoords(n){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${getLogicalCoordinatesFromFlatIndex(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TextureManager{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,s){const r=getPhysicalFromLogicalTextureType(t,s),i=getKeyFromTextureShape(e,r,s);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);const a=computeBytes(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const u=this.freeTextures[i].shift();return this.usedTextures[i].push(u),u}let c;return r===PhysicalTextureType.PACKED_2X2_FLOAT32?c=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===PhysicalTextureType.PACKED_2X2_FLOAT16?c=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===PhysicalTextureType.UNPACKED_FLOAT32?c=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===PhysicalTextureType.UNPACKED_FLOAT16?c=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE&&(c=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[i].push(c),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),c}releaseTexture(e,t,s,r){if(this.freeTextures==null)return;const i=getPhysicalFromLogicalTextureType(s,r),a=getKeyFromTextureShape(t,i,r);a in this.freeTextures||(this.freeTextures[a]=[]);const c=computeBytes(t,i,this.gpgpu.gl,this.gpgpu.textureConfig,r),u=env().get("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=c):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=c),this.numUsedTextures--;const l=this.usedTextures[a],h=l.indexOf(e);if(h<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(h,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function numBytesForInternalFormat(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;throw new Error(`Unknown internal format ${e}`)}function computeBytes(n,e,t,s,r){const i=internalFormatForPhysicalTexType(e,s);let a;if(r){const[u,l]=getPackedMatrixTextureShapeWidthHeight(n[0],n[1]);a=u*l}else{const[u,l]=getUnpackedMatrixTextureShapeWidthHeight(n[0],n[1]);a=u*l}const c=numBytesForInternalFormat(t,i);return a*c}function internalFormatForPhysicalTexType(n,e){switch(n){case PhysicalTextureType.PACKED_2X2_FLOAT32:return getInternalFormatForPackedMatrixTexture(e);case PhysicalTextureType.PACKED_2X2_FLOAT16:return getInternalFormatForFloat16PackedMatrixTexture(e);case PhysicalTextureType.UNPACKED_FLOAT32:return getInternalFormatForFloat32MatrixTexture(e);case PhysicalTextureType.UNPACKED_FLOAT16:return getInternalFormatForFloat16MatrixTexture(e);case PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE:return getInternalFormatForUnsignedBytesMatrixTexture(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function getPhysicalTextureForRendering(n){return env().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?PhysicalTextureType.PACKED_2X2_FLOAT32:PhysicalTextureType.UNPACKED_FLOAT32:n?PhysicalTextureType.PACKED_2X2_FLOAT16:PhysicalTextureType.UNPACKED_FLOAT16}function getPhysicalFromLogicalTextureType(n,e){if(n===TextureUsage.UPLOAD)return PhysicalTextureType.PACKED_2X2_FLOAT32;if(n===TextureUsage.RENDER||n==null)return getPhysicalTextureForRendering(e);if(n===TextureUsage.DOWNLOAD||n===TextureUsage.PIXELS)return PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function getKeyFromTextureShape(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UnaryOpProgram{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const CHECK_NAN_SNIPPET$2="if (isnan(x)) return x;",LINEAR$1="return x;",ABS$1="return abs(x);",ELU$2="return (x >= 0.0) ? x : (exp(x) - 1.0);",RELU$2=CHECK_NAN_SNIPPET$2+`
  return (x < 0.0) ? 0.0 : x;
`,RELU6$2=CHECK_NAN_SNIPPET$2+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,CLONE="return x;";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LINEAR="return x;",ELU$1=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,RELU$1=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,RELU6$1=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;class UnaryOpPackedProgram{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UnpackProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,s=getChannels("rc",t),r=getCoordsDataType(t),i=getSourceCoords$2(t,s),a=s.slice(-2),c=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${i});

        setOutput(getChannel(packedInput, ${c}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const whereImpl=whereImpl$2,EPSILON_FLOAT32=1e-7,EPSILON_FLOAT16=1e-4,binaryCaches={};function getBinaryCache(n){return n in binaryCaches||(binaryCaches[n]={}),binaryCaches[n]}const CPU_HANDOFF_SIZE_THRESHOLD=128,BEFORE_PAGING_CONSTANT=600;function numMBBeforeWarning(){return env().global.screen==null?1024:env().global.screen.height*env().global.screen.width*window.devicePixelRatio*BEFORE_PAGING_CONSTANT/1024/1024}class MathBackendWebGL extends KernelBackend{constructor(e){super();if(this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!env().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(e==null){const t=getWebGLContext(env().getNumber("WEBGL_VERSION"));this.binaryCache=getBinaryCache(env().getNumber("WEBGL_VERSION")),this.gpgpu=new GPGPUContext(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new TextureManager(this.gpgpu),this.numMBBeforeWarning=numMBBeforeWarning(),this.texData=new DataStorage(this,engine())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,s){if((env().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||env().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:t,dtype:s,values:e,usage:TextureUsage.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}decComplexRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.complexParentRefCount>0&&t.refCount--}}move(e,t,s,r){if(env().getBool("DEBUG")&&this.checkNumericalProblems(t),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:r,values:t,usage:TextureUsage.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.texData.has(t)){const s=this.texData.get(t);s.refCount--,s.refCount<1&&this.disposeData(t)}}readSync(e){const t=this.texData.get(e),{values:s,dtype:r,complexTensorInfos:i,slice:a,shape:c,isPacked:u}=t;if(a!=null){let f;u?f=new UnaryOpPackedProgram(c,CLONE):f=new UnaryOpProgram(c,CLONE);const y=this.runWebGLProgram(f,[{dataId:e,shape:c,dtype:r}],r),g=this.readSync(y.dataId);return this.disposeIntermediateTensorInfo(y),g}if(s!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return s;const l=this.activeTimers!=null;let h;l&&(h=now$1());let d;if(r==="complex64"){const f=this.readSync(i.real.dataId),y=this.readSync(i.imag.dataId);d=mergeRealAndImagArrays(f,y)}else d=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=now$1()-h),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const g=this.pendingRead.get(e);return new Promise(x=>g.push(x))}const t=this.texData.get(e),{values:s,shape:r,slice:i,dtype:a,complexTensorInfos:c,isPacked:u}=t;if(i!=null){let g;u?g=new UnaryOpPackedProgram(r,CLONE):g=new UnaryOpProgram(r,CLONE);const x=this.runWebGLProgram(g,[{dataId:e,shape:r,dtype:a}],a),b=this.read(x.dataId);return this.disposeIntermediateTensorInfo(x),b}if(s!=null)return this.convertAndCacheOnCPU(e);if(!env().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&env().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,h;if(a!=="complex64"&&env().get("WEBGL_BUFFER_SUPPORTED")){h=this.decode(e);const g=this.texData.get(h.dataId);l=this.gpgpu.createBufferFromTexture(g.texture,...getDenseTexShape(r))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let d;if(a==="complex64"){const g=await Promise.all([this.read(c.real.dataId),this.read(c.imag.dataId)]),x=g[0],b=g[1];d=mergeRealAndImagArrays(x,b)}else if(l==null)d=this.getValuesFromTexture(e);else{const g=sizeFromShape(r);d=this.gpgpu.downloadFloat32MatrixFromBuffer(l,g)}h!=null&&this.disposeIntermediateTensorInfo(h);const f=this.convertAndCacheOnCPU(e,d),y=this.pendingRead.get(e);return this.pendingRead.delete(e),y.forEach(g=>g(f)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e),this.pendingDeletes--),f}bufferSync(e){const t=this.readSync(e.dataId);let s=t;if(e.dtype==="string")try{s=t.map(r=>decodeString(r))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return buffer(e.shape,e.dtype,s)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const s=e[t];if(!canBeRepresented(s))throw env().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:r}=this.texData.get(e),i=sizeFromShape(t);if(env().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const f=this.decode(e),y=this.texData.get(f.dataId),g=this.gpgpu.downloadMatrixFromPackedTexture(y.texture,...getDenseTexShape(t)).subarray(0,i);return this.disposeIntermediateTensorInfo(f),g}const a=env().getBool("WEBGL_PACK")&&r===!0,c=a?getShapeAs3D(t):t,u=a?new EncodeFloatPackedProgram(c):new EncodeFloatProgram(c),l=this.runWebGLProgram(u,[{shape:c,dtype:s,dataId:e}],"float32"),h=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(h.texture,h.texShape[0],h.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(l),d}async time(e){const t=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const i=flatten$2(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=flatten$2(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,r&&(this.programTimersStack=null);const c={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const u=await Promise.all(i);c.kernelMs=sum$3(u),c.getExtraProfileInfo=()=>u.map((l,h)=>({name:a[h],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else c.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,c}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:now$1(),endMs:null}}endTimer(e){return env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=now$1(),e)}async getQueryTime(e){if(env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){if(this.pendingDisposal.has(e))return;if(this.pendingRead.has(e)){this.pendingDisposal.add(e),this.pendingDeletes++;return}if(!this.texData.has(e))return;if(this.texData.get(e).complexParentRefCount>0){this.texData.get(e).refCount--;return}this.releaseGPUData(e);const{complexTensorInfos:t}=this.texData.get(e);t!=null&&(this.texData.get(t.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.real),this.texData.get(t.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.imag)),this.texData.delete(e)}releaseGPUData(e){const{texture:t,dtype:s,texShape:r,usage:i,isPacked:a,slice:c}=this.texData.get(e),u=c&&c.origDataId||e,l=this.dataRefCount.get(u);l>1?this.dataRefCount.set(u,l-1):(this.dataRefCount.delete(u),t!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(t,r,i,a)));const h=this.texData.get(e);h.texture=null,h.texShape=null,h.isPacked=!1,h.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return env().getBool("WEBGL_CPU_FORWARD")?(this.cpuBackend==null&&(this.cpuBackend=engine().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=CPU_HANDOFF_SIZE_THRESHOLD){const s=this.getCPUBackend();return!env().getBool("IS_TEST")&&!this.warnedAboutCPUBackend&&s==null&&(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),s!=null&&e.every(r=>this.texData.get(r.dataId).texture==null&&sizeFromShape(r.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){warn$1("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return whereImpl(e.shape,t)}packedUnaryOp(e,t,s){const r=new UnaryOpPackedProgram(e.shape,t);return this.compileAndRun(r,[e],s)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const s=simpleAbsImplCPU(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(env().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,ABS$1,e.dtype);const t=new UnaryOpProgram(e.shape,ABS$1);return this.compileAndRun(t,[e])}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&isString$1(s[0])){const i=s.map(a=>encodeString(a));r=this.write(i,e,t)}else r=this.write(s,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,s){const{dataId:r}=this.makeTensorInfo(e,t,s);return engine().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new UnpackProgram(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new PackProgram(e.shape),s=!0;return this.runWebGLProgram(t,[e],e.dtype,null,s)}packedReshape(e,t){const s=[getBatchDim(e.shape),...getRowsCols(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},i=[getBatchDim(t),...getRowsCols(t)],a=new ReshapePackedProgram(i,s),c=!0,u=this.runWebGLProgram(a,[r],e.dtype,null,c);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e){const t=this.texData.get(e),{isPacked:s,shape:r,dtype:i}=t,a=getShapeAs3D(r);let c;s?c=new DecodeMatrixPackedProgram(a):c=new DecodeMatrixProgram(a);const u=!0,l=this.runWebGLProgram(c,[{shape:a,dtype:i,dataId:e}],i,null,u);return{dtype:i,shape:r,dataId:l.dataId}}runWebGLProgram(e,t,s,r,i=!1){const a=this.makeTensorInfo(e.outputShape,s),c=this.texData.get(a.dataId);if(e.packedOutput&&(c.isPacked=!0),e.outPackingScheme===PackingScheme.DENSE){const x=getDenseTexShape(e.outputShape);c.texShape=x.map(b=>b*2)}if(e.outTexUsage!=null&&(c.usage=e.outTexUsage),sizeFromShape(a.shape)===0)return c.values=getTypedArrayFromDType(a.dtype,0),a;const u=[],l=t.map(x=>{if(x.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(x.dataId);if(b.texture==null){if(!e.packedInputs&&sizeFromShape(x.shape)<=env().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:b.values};e.packedInputs&&(b.isPacked=!0,b.shape=x.shape)}else if(!!b.isPacked!=!!e.packedInputs)x=b.isPacked?this.unpackTensor(x):this.packTensor(x),u.push(x),b=this.texData.get(x.dataId);else if(b.isPacked&&!isReshapeFree(b.shape,x.shape)){const v=x,S=x.shape;x.shape=b.shape,x=this.packedReshape(x,S),u.push(x),b=this.texData.get(x.dataId),v.shape=S}return this.uploadToGPU(x.dataId),{shape:x.shape,texData:b,isUniform:!1}});this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:c,isUniform:!1},d=makeShaderKey(e,l,h),f=this.getAndSaveBinary(d,()=>compileProgram(this.gpgpu,e,l,h)),y=this.activeTimers!=null;let g;if(y&&(g=this.startTimer()),runProgram(this.gpgpu,f,l,h,r),u.forEach(x=>this.disposeIntermediateTensorInfo(x)),y&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)})),!env().getBool("WEBGL_LAZILY_UNPACK")&&c.isPacked&&i===!1){const x=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),x}return a}compileAndRun(e,t,s,r,i=!1){s=s||t[0].dtype;const a=this.runWebGLProgram(e,t,s,r,i);return engine().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(env().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=tidy(()=>{if(!env().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=env().getBool("DEBUG");env().set("DEBUG",!1);const t=this.abs(scalar(1e-8)).dataSync()[0];if(env().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?EPSILON_FLOAT32:EPSILON_FLOAT16}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:r,values:i,texture:a,usage:c,isPacked:u}=t;if(a!=null)return;const l=this.activeTimers!=null;let h;l&&(h=now$1());let d=t.texShape;if(d==null&&(d=getTextureShapeFromLogicalShape(s,u),t.texShape=d),i!=null){const f=getShapeAs3D(s);let y,g=d[1],x=d[0];const b=i instanceof Uint8Array;u?([g,x]=getPackedMatrixTextureShapeWidthHeight(d[0],d[1]),y=new EncodeMatrixPackedProgram(f,[x,g],b)):y=new EncodeMatrixProgram(f,[x,g],b);const v=this.makeTensorInfo([x,g],r);b?this.texData.get(v.dataId).usage=TextureUsage.PIXELS:this.texData.get(v.dataId).usage=TextureUsage.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(v.dataId),g,x,i);const S=!0,T=this.runWebGLProgram(y,[v],r,null,S),w=this.texData.get(T.dataId);t.texture=w.texture,t.texShape=w.texShape,t.isPacked=w.isPacked,t.usage=w.usage,this.disposeIntermediateTensorInfo(v),this.texData.delete(T.dataId),t.values=null,l&&(this.uploadWaitMs+=now$1()-h)}else{const f=this.acquireTexture(d,c,r,u);t.texture=f}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:r}=s;return this.releaseGPUData(e),t!=null&&(s.values=float32ToTypedArray(t,r)),s.values}acquireTexture(e,t,s,r){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const i=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${i} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*bytesPerElement(t)}}function float32ToTypedArray(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<t.length;++s)t[s]=Math.round(n[s]);return t}else throw new Error(`Unknown dtype ${e}`)}/** @license See the LICENSE file. */const version$2="2.8.6";/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */isBrowser()&&registerBackend("webgl",()=>new MathBackendWebGL,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CHECK_NAN_SNIPPET$1=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class BinaryOpProgram{constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=assertAndGetBroadcastShape(t,s),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CHECK_NAN_SNIPPET=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;class BinaryOpPackedProgram{constructor(e,t,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=assertAndGetBroadcastShape(t,s);const i=this.outputShape.length;let a="";if(r)if(i===0||sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${getCoordsDataType(i)} coords = getOutputCoords();
        `,i===1)a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const u=getChannels("coords",i);a+=`
            bool nextRowOutOfBounds =
              (${u[i-2]} + 1) >= ${this.outputShape[i-2]};
            bool nextColOutOfBounds =
              (${u[i-1]} + 1) >= ${this.outputShape[i-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function identity(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const identityConfig={kernelName:Identity$1,backendName:"webgl",kernelFunc:identity};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function complex(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,i=t.makeTensorInfo(s.shape,"complex64"),a=t.texData.get(i.dataId),c=identity({inputs:{x:s},backend:t}),u=t.texData.get(c.dataId);u.complexParentRefCount++;const l=identity({inputs:{x:r},backend:t}),h=t.texData.get(l.dataId);return h.complexParentRefCount++,a.complexTensorInfos={real:c,imag:l},i}const complexConfig={kernelName:Complex,backendName:"webgl",kernelFunc:complex};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LEAKYRELU="return (a < 0.) ? b * a : a;",LEAKYRELU_PACKED=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function leakyRelu(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:i}=s,a=t.makeTensorInfo([],"float32",createScalarValue(i,"float32")),c=env().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BinaryOpPackedProgram(LEAKYRELU_PACKED,r.shape,a.shape):new BinaryOpProgram(LEAKYRELU,r.shape,a.shape),u=t.runWebGLProgram(c,[r,a],r.dtype);return t.disposeIntermediateTensorInfo(a),u}const leakyReluConfig={kernelName:LeakyRelu,backendName:"webgl",kernelFunc:leakyRelu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PRELU="return (a < 0.) ? b * a : a;",PRELU_PACKED=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function prelu(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,i=env().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BinaryOpPackedProgram(PRELU_PACKED,s.shape,r.shape):new BinaryOpProgram(PRELU,s.shape,r.shape);return t.runWebGLProgram(i,[s,r],s.dtype)}const preluConfig={kernelName:Prelu,backendName:"webgl",kernelFunc:prelu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CHECK_NAN_SNIPPET_UNARY="if (isnan(x)) return x;",CHECK_NAN_SNIPPET_BINARY=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,CHECK_NAN_SNIPPET_BINARY_PACKED=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function unaryKernelFunc({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:r,backend:i})=>{const{x:a}=r,c=i,u=s||a.dtype;if(c.shouldExecuteOnCPU([a])&&t!=null){const d=c.texData.get(a.dataId),f=t(d.values,u);return c.makeTensorInfo(a.shape,u,f)}const l=env().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let h;return l?h=new UnaryOpPackedProgram(a.shape,e):h=new UnaryOpProgram(a.shape,n),c.runWebGLProgram(h,[a],u)}}function binaryKernelFunc({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:i}){return({inputs:a,backend:c})=>{const{a:u,b:l}=a,h=c;if(s&&u.dtype==="complex64"){const g=h.texData.get(u.dataId),x=h.texData.get(l.dataId),[b,v]=[[g.complexTensorInfos.real,x.complexTensorInfos.real],[g.complexTensorInfos.imag,x.complexTensorInfos.imag]].map(T=>{const[w,C]=T,N={dataId:w.dataId,dtype:w.dtype,shape:u.shape},_={dataId:C.dataId,dtype:C.dtype,shape:l.shape},$=new BinaryOpProgram(n,u.shape,l.shape);return h.runWebGLProgram($,[N,_],upcastType(w.dtype,C.dtype))}),S=complex({inputs:{real:b,imag:v},backend:h});return h.disposeIntermediateTensorInfo(b),h.disposeIntermediateTensorInfo(v),S}const d=i||upcastType(u.dtype,l.dtype);if(h.shouldExecuteOnCPU([u,l])&&r!=null){const g=h.texData.get(u.dataId),x=h.texData.get(l.dataId),[b,v]=r(u.shape,l.shape,g.values,x.values,d),S=h.makeTensorInfo(v,d),T=h.texData.get(S.dataId);return T.values=b,S}const f=env().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let y;return f?y=new BinaryOpPackedProgram(e,u.shape,l.shape,t):y=new BinaryOpProgram(n,u.shape,l.shape),h.runWebGLProgram(y,[u,l],d)}}function mapActivationToShaderProgram(n,e=!1){if(n==="linear")return e?LINEAR:LINEAR$1;if(n==="relu")return e?RELU$1:RELU$2;if(n==="elu")return e?ELU$1:ELU$2;if(n==="relu6")return e?RELU6$1:RELU6$2;if(n==="prelu")return e?PRELU_PACKED:PRELU;if(n==="leakyrelu")return e?LEAKYRELU_PACKED:LEAKYRELU;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MatMulPackedProgram{constructor(e,t,s,r=!1,i=!1,a=!1,c=null,u=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const h=r?e[1]:e[2],d=Math.ceil(h/2),f=r?"i * 2, rc.y":"rc.y, i * 2",y=i?"rc.z, i * 2":"i * 2, rc.z",g=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],x=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let b="",v="";c&&(u?b=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${c}
        }`:l?b=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${c}
        }`:b=`vec4 activation(vec4 x) {
          ${c}
        }`,v="result = activation(result);");const S=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let T="rc.x",w="rc.x";e[0]<t[0]?T=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(w=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${b}

      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${d}; i++) {
          int batchA = ${T};
          int batchB = ${w};
          vec4 a = getMatrixA(batchA, ${f});
          vec4 b = getMatrixB(batchB, ${y});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${g[0]} * ${x[0]});
          result += (${g[1]} * ${x[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${S}

        ${v}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const COMPLEX_MULTIPLY={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class BinaryOpComplexProgram{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=assertAndGetBroadcastShape(t,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MUL="return a * b;";function multiply$1(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,i=upcastType(s.dtype,r.dtype);if(s.dtype==="complex64"){const c=t.texData.get(s.dataId),u=t.texData.get(r.dataId),l=new BinaryOpComplexProgram(COMPLEX_MULTIPLY.REAL,s.shape,r.shape),h=new BinaryOpComplexProgram(COMPLEX_MULTIPLY.IMAG,s.shape,r.shape),d=[{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:s.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:r.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:r.shape}],f=t.runWebGLProgram(l,d,"float32"),y=t.runWebGLProgram(h,d,"float32"),g=complex({inputs:{real:f,imag:y},backend:t});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(y),g}if(t.shouldExecuteOnCPU([s,r])){const c=t.texData.get(s.dataId),u=t.texData.get(r.dataId),[l,h]=multiplyImplCPU(s.shape,r.shape,c.values,u.values,i),d=t.makeTensorInfo(h,i),f=t.texData.get(d.dataId);return f.values=l,d}let a;return env().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new BinaryOpPackedProgram(MUL,s.shape,r.shape):a=new BinaryOpProgram(MUL,s.shape,r.shape),t.runWebGLProgram(a,[s,r],i)}const multiplyConfig={kernelName:Multiply$2,backendName:"webgl",kernelFunc:multiply$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function packedReshape(n,e,t){const s=[getBatchDim(n.shape),...getRowsCols(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},i=[getBatchDim(e),...getRowsCols(e)],a=new ReshapePackedProgram(i,s),c=!0,u=t.runWebGLProgram(a,[r],n.dtype,null,c);return{dataId:u.dataId,shape:e,dtype:u.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reshape(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:i}=s,a=t,c=sizeFromShape(r.shape),u=inferFromImplicitShape(i,c),l=sizeFromShape(u);assert$2(c===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${r.shape}) has ${c} elements. The new shape and old shape must have the same number of elements.`);const h=a.texData.get(r.dataId);return h.isPacked&&!isReshapeFree(r.shape,u)&&!(h.texture!==null&&isReshapeFree(h.shape,u))?packedReshape(r,u,a):(a.incRef(r.dataId),{dataId:r.dataId,shape:u,dtype:r.dtype})}const reshapeConfig={kernelName:Reshape$1,backendName:"webgl",kernelFunc:reshape};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MeanProgram{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:i,outSize:a}=e;this.outputShape=[r,a];const c=Math.floor(s/4)*4,u=s%4;let l="sumValue += dot(values, ones);";if(t!=null){const d=1/t;l=`sumValue += dot(values * ${isInt(d)?d.toPrecision(2):d}, ones);`}let h="";i%s>0&&(h=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${c};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ReduceProgram{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:i,outSize:a}=e;this.outputShape=[r,a];let c="0.0",u="";t==="prod"?c="1.0":t==="min"?(c="1.0 / 1e-20",u="min"):t==="max"&&(c="-1.0 / 1e-20",u="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");const h=Math.floor(s/4)*4,d=s%4;let f=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
      }
    `,y="vec4";t==="all"?(c="1.0",f=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,y="bvec4"):t==="any"&&(c="0.0",f=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,y="bvec4");let g="";i%s>0&&(g=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${c};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${g}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${c});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${h}; i += 4) {
          int inIdx = inOffset + i;
          ${y} values = ${y}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${f}
        }

        int inIdx = inOffset + ${h};
        if (${d===1}) {
          ${y} values = ${y}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${f}
        } else if (${d===2}) {
          ${y} values = ${y}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${f}
        } else if (${d===3}) {
          ${y} values = ${y}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${f}
        }
        setOutput(${l});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getReductionStages(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],s=computeOptimalWindowSize(t);e.push({inSize:t,windowSize:s,outSize:Math.ceil(t/s)})}return e}function reduce(n,e,t,s){const r=getReductionStages(n.shape);let i=n;for(let a=0;a<r.length;a++){const{inSize:c,windowSize:u,outSize:l}=r[a];let h,d;t==="mean"?h=a===0?new MeanProgram({windowSize:u,inSize:c,batchSize:n.shape[0],outSize:l},c):new MeanProgram({windowSize:u,inSize:c,batchSize:n.shape[0],outSize:l}):h=new ReduceProgram({windowSize:u,inSize:c,batchSize:n.shape[0],outSize:l},t),d=i,i=s.runWebGLProgram(h,[i],e),d.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(d)}return i}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TransposeProgram{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[t[a]];this.outputShape=s,this.rank=s.length;const r=getCoordsDataType(this.rank),i=getSwitchedCoords(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${i}));
    }
    `}}function getSwitchedCoords(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let r=0;r<n.length;r++)s[n[r]]=t[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TransposePackedProgram{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let h=0;h<s.length;h++)s[h]=e[t[h]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=getCoordsDataType(this.rank),i=getVecChannels("rc",this.rank),a=new Array(this.rank);for(let h=0;h<t.length;h++)a[t[h]]=i[h];const c=`vec2(${a.slice(-2).join()})`,u=`++${i[this.rank-1]} < ${s[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${c})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${u}) {
        result[1] = ${l};
      }
      --${i[this.rank-1]};
      if(++${i[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${l};
        if(${u}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transposeImpl(n,e,t){const s=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new TransposePackedProgram(n.shape,e):new TransposeProgram(n.shape,e);return t.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sumImpl(n,e,t,s){const r=e,i=n.shape.length,a=parseAxisParam(r,n.shape);let c=a;const u=getAxesPermutation(c,i),l=u!=null;let h=n;l&&(h=transposeImpl(n,u,s),c=getInnerMostAxes(c.length,i)),assertAxesAreInnerMostDims("sum",c,i);const[d,f]=computeOutAndReduceShapes(h.shape,c);let y=d;t&&(y=expandShapeToKeepDim(d,a));const g=sizeFromShape(f),b=sizeFromShape(n.shape)/g,v=reshape({inputs:{x:h},attrs:{shape:[b,g]},backend:s}),S=sumOutType(n.dtype),T=reduce(v,S,"sum",s),w=reshape({inputs:{x:T},attrs:{shape:y},backend:s});return s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(T),l&&s.disposeIntermediateTensorInfo(h),w}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sum(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s;return sumImpl(r,i,a,t)}const sumConfig={kernelName:Sum,backendName:"webgl",kernelFunc:sum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transpose$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{perm:i}=s,a=t,c=r.shape.length,u=new Array(c);for(let h=0;h<u.length;h++)u[h]=r.shape[i[h]];let l;if(a.shouldExecuteOnCPU([r])){const d=a.texData.get(r.dataId).values,f=transposeImplCPU(d,r.shape,r.dtype,i,u);l=a.makeTensorInfo(u,r.dtype);const y=a.texData.get(l.dataId);y.values=f}else l=transposeImpl(r,i,a);return l}const transposeConfig={kernelName:Transpose,backendName:"webgl",kernelFunc:transpose$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MATMUL_SHARED_DIM_THRESHOLD=1e3;function batchMatMulImpl({a:n,b:e,transposeA:t,transposeB:s,backend:r,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:c=0,activation:u=null}){const l=n.shape.length,h=e.shape.length,d=t?n.shape[l-2]:n.shape[l-1],f=s?e.shape[h-1]:e.shape[h-2],y=t?n.shape[l-1]:n.shape[l-2],g=s?e.shape[h-2]:e.shape[h-1],x=n.shape.slice(0,-2),b=e.shape.slice(0,-2),v=sizeFromShape(x),S=sizeFromShape(b),T=v===S||v===1||S===1;assert$2(l>=2&&h>=2&&T,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${x}) and (${b}).`);const C=(v>S?n.shape.slice(0,-2):e.shape.slice(0,-2)).concat([y,g]);assert$2(d===f,()=>`Error in matMul: inner shapes (${d}) and (${f}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const N=t?[v,d,y]:[v,y,d],_=s?[S,g,f]:[S,f,g],$=reshape({inputs:{x:n},backend:r,attrs:{shape:N}}),E=reshape({inputs:{x:e},backend:r,attrs:{shape:_}}),k=[$,E],F=Math.max(v,S),P=t?$.shape[1]:$.shape[2],R=i!=null,O=a!=null,B=u==="leakyrelu",L=u!=null?mapActivationToShaderProgram(u,!0):null,V=R||O||B||L!=null;let q;if((y===1||g===1)&&P>MATMUL_SHARED_DIM_THRESHOLD&&V===!1){let W=$,U=E;t&&(W=transpose$1({inputs:{x:$},backend:r,attrs:{perm:[0,2,1]}}),k.push(W)),s&&(U=transpose$1({inputs:{x:E},backend:r,attrs:{perm:[0,2,1]}}),k.push(U));const j=g!==1,Y=g===1;let Q=W;j&&(Q=reshape({inputs:{x:W},backend:r,attrs:{shape:[F,P,1]}}),k.push(Q));const ee=g===1?2:1;let K=U;Y&&(K=reshape({inputs:{x:U},backend:r,attrs:{shape:[F,1,P]}}),k.push(K));const X=multiply$1({inputs:{a:Q,b:K},backend:r});q=sum({inputs:{x:X},backend:r,attrs:{axis:ee,keepDims:!0}}),k.push(X)}else{const W=upcastType(n.dtype,e.dtype),U=new MatMulPackedProgram(N,_,[F,y,g],t,s,R,L,O,B),j=[$,E];if(i!=null&&j.push(i),O&&j.push(a),B){const Y=r.makeTensorInfo([],"float32",createScalarValue(c,"float32"));j.push(Y),k.push(Y)}q=r.runWebGLProgram(U,j,W)}const G=reshape({inputs:{x:q},backend:r,attrs:{shape:C}});k.push(q);for(const W of k)r.disposeIntermediateTensorInfo(W);return G}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _fusedMatMul(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:i,bias:a,preluActivationWeights:c}=e,{transposeA:u,transposeB:l,activation:h,leakyreluAlpha:d}=s;return batchMatMulImpl({a:r,b:i,transposeA:u,transposeB:l,backend:t,bias:a,preluActivationWeights:c,leakyreluAlpha:d,activation:h})}const _fusedMatMulConfig={kernelName:_FusedMatMul,backendName:"webgl",kernelFunc:_fusedMatMul};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ABS="return abs(x);";function abs(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const i=t.texData.get(s.dataId),a=simpleAbsImplCPU(i.values);return t.makeTensorInfo(s.shape,s.dtype,a)}let r;return env().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new UnaryOpPackedProgram(s.shape,ABS):r=new UnaryOpProgram(s.shape,ABS),t.runWebGLProgram(r,[s],s.dtype)}const absConfig={kernelName:Abs$1,backendName:"webgl",kernelFunc:abs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ACOS=CHECK_NAN_SNIPPET$2+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,acos=unaryKernelFunc({opSnippet:ACOS}),acosConfig={kernelName:Acos,backendName:"webgl",kernelFunc:acos};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ACOSH=CHECK_NAN_SNIPPET$2+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,acosh=unaryKernelFunc({opSnippet:ACOSH}),acoshConfig={kernelName:Acosh,backendName:"webgl",kernelFunc:acosh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ADD="return a + b;",addKernelFunc=binaryKernelFunc({opSnippet:ADD,packedOpSnippet:ADD,supportsComplex:!0,cpuKernelImpl:addImplCPU}),addConfig={kernelName:Add$2,backendName:"webgl",kernelFunc:addKernelFunc};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AddNProgram{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((i,a)=>`T${a}`);const s=[];this.variableNames.forEach(i=>{s.push(`float v${i} = get${i}AtOutCoords();`)});const r=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AddNPackedProgram{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((i,a)=>`T${a}`);const s=[];this.variableNames.forEach(i=>{s.push(`vec4 v${i} = get${i}AtOutCoords();`)});const r=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function addN(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return identity({inputs:{x:s[0]},backend:t});if(s.length>env().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const u=Math.floor(s.length/2),l=addN({inputs:s.slice(0,u),backend:t}),h=addN({inputs:s.slice(u),backend:t});return addN({inputs:[l,h],backend:t})}const r=s.map(u=>u.dtype).reduce((u,l)=>upcastType(u,l)),i=s.map(u=>u.shape),c=env().getBool("WEBGL_PACK")?new AddNPackedProgram(s[0].shape,i):new AddNProgram(s[0].shape,i);return t.runWebGLProgram(c,s,r)}const addNConfig={kernelName:AddN,backendName:"webgl",kernelFunc:addN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function all(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s,c=r.shape.length,u=parseAxisParam(i,r.shape);let l=u;const h=getAxesPermutation(l,c);let d=r;h!=null&&(d=transpose$1({inputs:{x:r},backend:t,attrs:{perm:h}}),l=getInnerMostAxes(l.length,c)),assertAxesAreInnerMostDims("all",l,c);const[f,y]=computeOutAndReduceShapes(d.shape,l),g=sizeFromShape(y),x=reshape({inputs:{x:d},backend:t,attrs:{shape:[-1,g]}}),b=reduce(x,x.dtype,"all",t);let v;if(a){const S=expandShapeToKeepDim(f,u);v=reshape({inputs:{x:b},backend:t,attrs:{shape:S}})}else v=reshape({inputs:{x:b},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(b),h!=null&&t.disposeIntermediateTensorInfo(d),v}const allConfig={kernelName:All,backendName:"webgl",kernelFunc:all};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function any(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s,c=r.shape.length,u=parseAxisParam(i,r.shape);let l=u;const h=getAxesPermutation(l,c);let d=r;h!=null&&(d=transpose$1({inputs:{x:r},backend:t,attrs:{perm:h}}),l=getInnerMostAxes(l.length,c)),assertAxesAreInnerMostDims("any",l,c);const[f,y]=computeOutAndReduceShapes(d.shape,l),g=sizeFromShape(y),x=reshape({inputs:{x:d},backend:t,attrs:{shape:[-1,g]}}),b=reduce(x,x.dtype,"any",t);let v;if(a){const S=expandShapeToKeepDim(f,u);v=reshape({inputs:{x:b},backend:t,attrs:{shape:S}})}else v=reshape({inputs:{x:b},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(b),h!=null&&t.disposeIntermediateTensorInfo(d),v}const anyConfig={kernelName:Any,backendName:"webgl",kernelFunc:any};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ArgMinMaxProgram{constructor(e,t,s){this.variableNames=["A"];const{windowSize:r,batchSize:i,outSize:a}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[i,a];const c=t==="max"?">":"<",u=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${c} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ArgMinMaxPackedProgram{constructor(e,t,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,assert$2(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const i=e[e.length-1],a=Math.ceil(i/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const c=this.outputShape,u=c.length,l=getCoordsDataType(u),h=getChannels("coords",u);let d,f;if(a===1){f=u+1;const $=getCoordsDataType(f);d=`
        ${$} sourceLocR = ${$}(${h.join()}, 0);
        ++${h[u-1]};
        ${$} sourceLocG = ${$}(${h.join()}, 0);
        ++${h[u-2]};
        ${$} sourceLocA = ${$}(${h.join()}, 0);
        --${h[u-1]};
        ${$} sourceLocB = ${$}(${h.join()}, 0);
        --${h[u-2]};`}else f=u,d=`
        ${l} sourceLocR = coords;
        ++${h[u-1]};
        ${l} sourceLocG = coords;
        ++${h[u-2]};
        ${l} sourceLocA = coords;
        --${h[u-1]};
        ${l} sourceLocB = coords;
        --${h[u-2]};`;const y=["x","y","z","w","u","v"].slice(0,f),g="."+y[f-1],x=y.map($=>"int "+$),b=getChannels("sourceLocR",f-1).concat("inIdx.r"),v=getChannels("sourceLocG",f-1).concat("inIdx.g"),S=getChannels("sourceLocB",f-1).concat("inIdx.b"),T=getChannels("sourceLocA",f-1).concat("inIdx.a"),w=s==="max"?"greaterThan":"lessThan",C=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${v.join()}),
                             getBestIndicesAChannel(${S.join()}),
                             getBestIndicesAChannel(${T.join()})));`,N=`vec4(
            getAChannel(${b.join()}),
            hasNextCol ? getAChannel(${v.join()}) : 0.,
            hasNextRow ? getAChannel(${S.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${T.join()}) : 0.)`,_=r?"":`
      float getBestIndicesAChannel(${x.join()}) {
        return getChannel(getBestIndicesA(${y.join()}),
                                          vec2(${y.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${x.join()}) {
        return getChannel(getA(${y.join()}),
                               vec2(${y.slice(-2).join()}));
      }
      ${_}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${h[u-1]} < ${c[u-1]-1};
        bool hasNextRow = ${h[u-2]} < ${c[u-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${g}, sourceLocG${g},
          sourceLocB${g}, sourceLocA${g}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${N};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${C}
          vec4 candidate = ${N};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argReduce(n,e,t,s=null){let r=e.shape[0],i=e.shape[1];s!=null&&(r=s.shape[0],i=s.shape[1]);const a=computeOptimalWindowSize(i),c={windowSize:a,inSize:i,batchSize:r,outSize:Math.ceil(i/a)},u=new ArgMinMaxProgram(c,t,s==null),l=[e];s!=null&&l.push(s);const h=n.runWebGLProgram(u,l,"int32");if(h.shape[1]===1)return h;const d=argReduce(n,e,t,h);return n.disposeIntermediateTensorInfo(h),d}function argReducePacked(n,e,t,s=null){const r=s!=null?s.shape:e.shape,i=r[r.length-1],a=computeOptimalWindowSize(i),c=new ArgMinMaxPackedProgram(r,a,t,s==null),u=s==null?[e]:[e,s],l=n.runWebGLProgram(c,u,"int32");if(l.shape.length===e.shape.length){const h=argReducePacked(n,e,t,l);return n.disposeIntermediateTensorInfo(l),h}return l}function argMinMaxReduce(n,e,t,s){const r=[t];if(assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,e.shape.length),!env().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const i=[],[a,c]=computeOutAndReduceShapes(e.shape,r),u=sizeFromShape(c),l=reshape({inputs:{x:e},backend:n,attrs:{shape:[-1,u]}});i.push(l);const h=argReduce(n,l,s);i.push(h);const d=reshape({inputs:{x:h},backend:n,attrs:{shape:a}});return i.forEach(f=>n.disposeIntermediateTensorInfo(f)),d}return argReducePacked(n,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMax(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i}=s;let a=parseAxisParam(i,r.shape);const c=getAxesPermutation(a,r.shape.length);let u=r;const l=[];c!=null&&(u=transpose$1({inputs:{x:r},backend:t,attrs:{perm:c}}),l.push(u),a=getInnerMostAxes(a.length,u.shape.length)),assertAxesAreInnerMostDims("argMax",[a[0]],u.shape.length);const h=argMinMaxReduce(t,u,a[0],"max");return l.forEach(d=>t.disposeIntermediateTensorInfo(d)),h}const argMaxConfig={kernelName:ArgMax,backendName:"webgl",kernelFunc:argMax};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMin(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i}=s;let a=parseAxisParam(i,r.shape);const c=getAxesPermutation(a,r.shape.length);let u=r;const l=[];c!=null&&(u=transpose$1({inputs:{x:r},backend:t,attrs:{perm:c}}),l.push(u),a=getInnerMostAxes(a.length,u.shape.length)),assertAxesAreInnerMostDims("argMin",[a[0]],u.shape.length);const h=argMinMaxReduce(t,u,a[0],"min");return l.forEach(d=>t.disposeIntermediateTensorInfo(d)),h}const argMinConfig={kernelName:ArgMin,backendName:"webgl",kernelFunc:argMin};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ASIN=CHECK_NAN_SNIPPET$2+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,asin=unaryKernelFunc({opSnippet:ASIN}),asinConfig={kernelName:Asin,backendName:"webgl",kernelFunc:asin};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ASINH=CHECK_NAN_SNIPPET$2+"return log(x + sqrt(x * x + 1.0));",asinh=unaryKernelFunc({opSnippet:ASINH}),asinhConfig={kernelName:Asinh,backendName:"webgl",kernelFunc:asinh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ATAN=CHECK_NAN_SNIPPET$2+`
  return atan(x);
`,atan=unaryKernelFunc({opSnippet:ATAN}),atanConfig={kernelName:Atan,backendName:"webgl",kernelFunc:atan};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ATAN2=CHECK_NAN_SNIPPET_BINARY+`
  return atan(a, b);
`,ATAN2_PACKED=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+CHECK_NAN_SNIPPET_BINARY_PACKED+`
  return result;
`,atan2=binaryKernelFunc({opSnippet:ATAN2,packedOpSnippet:ATAN2_PACKED}),atan2Config={kernelName:Atan2,backendName:"webgl",kernelFunc:atan2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ATANH=CHECK_NAN_SNIPPET$2+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,atanh=unaryKernelFunc({opSnippet:ATANH}),atanhConfig={kernelName:Atanh,backendName:"webgl",kernelFunc:atanh};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pool2DProgram{constructor(e,t,s,r=!1,i=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,c=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,y=e.padInfo.top,g=e.padInfo.left;this.outputShape=e.outShape;const x=t==="avg",b=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,v=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let S="0.0";if(x||(S="-1.0 / 1e-20"),s){const $=">=";this.userCode=`
        const ivec2 strides = ivec2(${c}, ${u});
        const ivec2 pads = ivec2(${y}, ${g});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f};
                wC += ${h}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${$} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?i?b:v:`wR * ${f} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const T="max";let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(w="avgValue / count");const C=Math.floor(a/4)*4,N=a%4,_=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${T}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${c}, ${u});
      const ivec2 pads = ivec2(${y}, ${g});
      const float initializationValue = ${S};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${S});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${C}; wC += 4) {
            int xC = xCCorner + wC * ${h};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${h}, d),
              getValue(batch, xR, xC + 2 * ${h}, d),
              getValue(batch, xR, xC + 3 * ${h}, d)
            );

            ${_}
          }

          int xC = xCCorner + ${C};
          if (${N===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${_}
          } else if (${N===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${h}, d),
              initializationValue,
              initializationValue
            );

            ${_}
          } else if (${N===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${h}, d),
              getValue(batch, xR, xC + 2 * ${h}, d),
              initializationValue
            );

            ${_}
          }
        }
        setOutput(${w});
      }
    `}}class Pool3DProgram{constructor(e,t,s,r=!1,i=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,c=e.strideDepth,u=e.strideHeight,l=e.strideWidth,h=e.dilationDepth,d=e.dilationHeight,f=e.dilationWidth,y=e.effectiveFilterDepth,g=e.effectiveFilterHeight,x=e.effectiveFilterWidth,b=e.padInfo.front,v=e.padInfo.top,S=e.padInfo.left;this.outputShape=e.outShape;const T=t==="avg";let w="0.0";if(T||(w="-1.0 / 1e-20"),s){const k=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${c}, ${u}, ${l});
        const ivec3 pads = ivec3(${b}, ${v}, ${S});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${y};
              wD += ${h}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${g};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${x};
                  wC += ${f}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${k} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?i?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${g} * ${x} +
                      wR * ${x} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const C="max";let N=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(N="avgValue / count");const _=Math.floor(a/4)*4,$=a%4,E=`
      if (${T}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${C}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${c}, ${u}, ${l});
      const ivec3 pads = ivec3(${b}, ${v}, ${S});
      const float initializationValue = ${w};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${w});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${y};
            wD += ${h}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${g};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${_}; wC += 4) {
              int xC = xCCorner + wC * ${f};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${f}, ch),
                getValue(batch, xD, xR, xC + 2 * ${f}, ch),
                getValue(batch, xD, xR, xC + 3 * ${f}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${_};
            if (${$===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${$===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${f}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${$===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${f}, ch),
                getValue(batch, xD, xR, xC + 2 * ${f}, ch),
                initializationValue
              );

              ${E}
            }
          }
          setOutput(${N});
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;assertNotComplex(r,"avgPool");const{filterSize:i,strides:a,pad:c,dimRoundingMode:u}=s,l=1;assert$2(eitherStridesOrDilationsAreOne(a,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const h=computePool2DInfo(r.shape,i,a,l,c,u);if(h.filterWidth===1&&h.filterHeight===1&&arraysEqual(h.inShape,h.outShape))return identity({inputs:{x:r},backend:t});const d=new Pool2DProgram(h,"avg",!1);return t.runWebGLProgram(d,[r],"float32")}const avgPoolConfig={kernelName:AvgPool,backendName:"webgl",kernelFunc:avgPool};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3D(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:i,strides:a,pad:c,dimRoundingMode:u,dataFormat:l}=s,h=[1,1,1],d=computePool3DInfo(r.shape,i,a,h,c,u,l),f=new Pool3DProgram(d,"avg",!1);return t.runWebGLProgram(f,[r],"float32")}const avgPool3DConfig={kernelName:AvgPool3D,backendName:"webgl",kernelFunc:avgPool3D};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AvgPool2DBackpropProgram{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,i=e.strideWidth,a=e.dilationHeight,c=e.dilationWidth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,h=u-1-e.padInfo.top,d=l-1-e.padInfo.left,f=1/(t*s);this.userCode=`
      const ivec2 pads = ivec2(${h}, ${d});
      const float avgMultiplier = float(${f});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${c}) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class AvgPool3DBackpropProgram{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,i=e.strideDepth,a=e.strideHeight,c=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,f=e.effectiveFilterHeight,y=e.effectiveFilterWidth,g=d-1-e.padInfo.front,x=f-1-e.padInfo.top,b=y-1-e.padInfo.left,v=1/(t*s*r);this.userCode=`
      const ivec3 pads = ivec3(${g}, ${x}, ${b});
      const float avgMultiplier = float(${v});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${i}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${f};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${y};
                wC += ${h}) {
              float dyC = float(dyCCorner + wC) / ${c}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3DGrad(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,a=i,{filterSize:c,strides:u,pad:l,dimRoundingMode:h}=s,d=[1,1,1],f=computePool3DInfo(a.shape,c,u,d,l,h),y=new AvgPool3DBackpropProgram(f);return t.runWebGLProgram(y,[r],a.dtype)}const avgPoolGrad3DConfig={kernelName:AvgPool3DGrad,backendName:"webgl",kernelFunc:avgPool3DGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPoolGrad(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,a=i;assertNotComplex([r,i],"avgPoolGrad");const{filterSize:c,strides:u,pad:l}=s,h=computePool2DInfo(a.shape,c,u,1,l),d=new AvgPool2DBackpropProgram(h);return t.runWebGLProgram(d,[r],a.dtype)}const avgPoolGradConfig={kernelName:AvgPoolGrad,backendName:"webgl",kernelFunc:avgPoolGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchMatMul(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:i}=e,{transposeA:a,transposeB:c}=s;return batchMatMulImpl({a:r,b:i,transposeA:a,transposeB:c,backend:t})}const batchMatMulConfig={kernelName:BatchMatMul,backendName:"webgl",kernelFunc:batchMatMul};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BatchNormProgram{constructor(e,t,s,r,i,a){this.outputShape=[],this.variableNames=["x","mean","variance"],assertAndGetBroadcastShape(e,t),assertAndGetBroadcastShape(e,s);let c="0.0";r!=null&&(assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),c="getOffsetAtOutCoords()");let u="1.0";i!=null&&(assertAndGetBroadcastShape(e,i),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${c};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BatchNormPackedProgram{constructor(e,t,s,r,i,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],assertAndGetBroadcastShape(e,t),assertAndGetBroadcastShape(e,s);let c="vec4(0.0)";r!=null&&(assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),c="getOffsetAtOutCoords()");let u="vec4(1.0)";i!=null&&(assertAndGetBroadcastShape(e,i),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${c};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const batchNorm=({inputs:n,backend:e,attrs:t})=>{const{x:s,mean:r,variance:i,offset:a,scale:c}=n;assert$2(r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),assert$2(a==null||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),assert$2(c==null||r.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=t;u==null&&(u=.001);const l=[s,r,i];let h=null;a!=null&&(h=a.shape,l.push(a));let d=null;c!=null&&(d=c.shape,l.push(c));const f=env().getBool("WEBGL_PACK_NORMALIZATION")?new BatchNormPackedProgram(s.shape,r.shape,i.shape,h,d,u):new BatchNormProgram(s.shape,r.shape,i.shape,h,d,u);return e.runWebGLProgram(f,l,l[0].dtype)},batchNormConfig={kernelName:FusedBatchNorm,backendName:"webgl",kernelFunc:batchNorm};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SliceProgram{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=getCoordsDataType(this.rank),s=`uniform int start[${this.rank}];`,r=getCoords$1(this.rank);let i;const a=e.map((c,u)=>`sourceLoc.${coords[u]} = start[${u}] + coords.${coords[u]};`);i=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${a.join(`
`)}
      `,this.userCode=`
      ${s}
      void main() {
        ${i}
        setOutput(getSource(${r}));
      }
    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,s)=>{this.startLoc==null&&(this.startLoc=t.getUniformLocationNoThrow(s,"start"),this.startLoc==null)||t.gl.uniform1iv(this.startLoc,e)}}}const coords=["x","y","z","w","u","v"];function getCoords$1(n){if(n===1)return"sourceLoc";if(n<=6)return coords.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SlicePackedProgram{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=getCoordsDataType(this.rank),s=getChannels("coords",this.rank),r=getChannels("sourceLoc",this.rank),i=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${i})`,c=`
      result.x = ${a};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${a};
        --${r[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${a};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${a};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((h,d)=>`start[${d}]`).join()});`:e.map((h,d)=>`${r[d]} = ${s[d]} + start[${d}];`).join(`
`);this.userCode=`
      uniform int start[${this.rank}];
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${c}
        ${u}
        setOutput(result);
      }
    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,s)=>{this.startLoc==null&&(this.startLoc=t.getUniformLocationNoThrow(s,"start"),this.startLoc==null)||t.gl.uniform1iv(this.startLoc,e)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function shallowSlice(n,e,t,s){const r=s.texData.get(n.dataId),i=s.makeTensorInfo(t,n.dtype),a=s.texData.get(i.dataId);Object.assign(a,r),a.complexParentRefCount=0,a.refCount=1,a.shape=t,a.dtype=n.dtype;let c=computeFlatOffset(e,computeStrides(n.shape));r.slice&&(c+=r.slice.flatOffset),a.slice={flatOffset:c,origDataId:r.slice&&r.slice.origDataId||n.dataId};const u=s.dataRefCount.get(a.slice.origDataId)||1;return s.dataRefCount.set(a.slice.origDataId,u+1),i}function slice(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:i,size:a}=s,[c,u]=parseSliceParams(r,i,a);if(assertParamsValid(r,c,u),sizeFromShape(u)===0)return t.makeTensorInfo(u,r.dtype,[]);if(t.shouldExecuteOnCPU([r])||r.dtype==="string"){const d=t.texData.get(r.dataId),f=sliceImplCPU(d.values,c,u,r.shape,r.dtype);return t.makeTensorInfo(u,r.dtype,f)}const{isPacked:l}=t.texData.get(r.dataId),h=isSliceContinous(r.shape,c,u);if(l||!h){const d=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new SlicePackedProgram(u):new SliceProgram(u),f=d.getCustomSetupFunc(c);return t.runWebGLProgram(d,[r],r.dtype,f)}return t.uploadToGPU(r.dataId),shallowSlice(r,c,u,t)}const sliceConfig={kernelName:Slice,backendName:"webgl",kernelFunc:slice};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const batchToSpaceND=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:i,crops:a}=s;assert$2(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const c=i.reduce((S,T)=>S*T),u=getReshaped(r.shape,i,c),l=getPermuted(u.length,i.length),h=getReshapedPermuted(r.shape,i,c),d=getSliceBeginCoords(a,i.length),f=getSliceSize(h,a,i.length),y=[],g=reshape({inputs:{x:r},backend:t,attrs:{shape:u}}),x=transpose$1({inputs:{x:g},backend:t,attrs:{perm:l}}),b=reshape({inputs:{x},backend:t,attrs:{shape:h}}),v=slice({inputs:{x:b},backend:t,attrs:{begin:d,size:f}});return y.push(g),y.push(x),y.push(b),y.forEach(S=>t.disposeIntermediateTensorInfo(S)),v},batchToSpaceNDConfig={kernelName:BatchToSpaceND,backendName:"webgl",kernelFunc:batchToSpaceND};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bincount(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:i}=e,{size:a}=s,c=t.readSync(r.dataId),u=t.readSync(i.dataId),l=bincountImplCPU(c,u,i.dtype,i.shape,a);return t.makeTensorInfo([a],i.dtype,l)}const bincountConfig={kernelName:Bincount,backendName:"webgl",kernelFunc:bincount};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NOT_EQUAL="return float(a != b);",notEqual=binaryKernelFunc({opSnippet:NOT_EQUAL,dtype:"bool"}),notEqualConfig={kernelName:NotEqual,backendName:"webgl",kernelFunc:notEqual};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function real(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return identity({inputs:{x:r.complexTensorInfos.real},backend:t})}const realConfig={kernelName:Real,backendName:"webgl",kernelFunc:real};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TO_INT="return float(int(x));";function int(n,e){const t=new UnaryOpProgram(n.shape,TO_INT),s=e.runWebGLProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cast(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:i}=s;if(i==="complex64"){if(r.dtype==="complex64")return identity({inputs:{x:r},backend:t});const a=zeros$1(r.shape),c=cast({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),u=complex({inputs:{real:c,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(c),u}if(r.dtype==="complex64"){const a=real({inputs:{input:r},backend:t}),c=cast({inputs:{x:a},backend:t,attrs:{dtype:i}});return t.disposeIntermediateTensorInfo(a),c}if(!hasEncodingLoss(r.dtype,i)){const a=identity({inputs:{x:r},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:i}}if(i==="int32")return int(r,t);if(i==="bool"){const a=t.makeTensorInfo([],"bool",getTypedArrayFromDType("bool",1)),u=notEqual({inputs:{a:r,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),u}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${i}`)}const castConfig={kernelName:Cast,backendName:"webgl",kernelFunc:cast};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CEIL="return ceil(x);",ceil=unaryKernelFunc({opSnippet:CEIL,packedOpSnippet:CEIL,cpuKernelImpl:ceilImplCPU}),ceilConfig={kernelName:Ceil,backendName:"webgl",kernelFunc:ceil};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ClipProgram{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}getCustomSetupFunc(e,t){return(s,r)=>{this.minLoc==null&&(this.minLoc=s.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=s.getUniformLocationNoThrow(r,"maxVal")),s.gl.uniform1f(this.minLoc,e),s.gl.uniform1f(this.maxLoc,t)}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ClipPackedProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}getCustomSetupFunc(e,t){return(s,r)=>{this.minLoc==null&&(this.minLoc=s.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=s.getUniformLocationNoThrow(r,"maxVal")),s.gl.uniform1f(this.minLoc,e),s.gl.uniform1f(this.maxLoc,t)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function clipByValue(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:i,clipValueMax:a}=s;let c;env().getBool("WEBGL_PACK_CLIP")?c=new ClipPackedProgram(r.shape):c=new ClipProgram(r.shape);const u=c.getCustomSetupFunc(i,a);return t.runWebGLProgram(c,[r],r.dtype,u)}const clipByValueConfig={kernelName:ClipByValue,backendName:"webgl",kernelFunc:clipByValue};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ComplexAbsProgram{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function makeComplexComponentTensorInfo(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function complexAbs(n){const{inputs:e,backend:t}=n,{x:s}=e,r=t.texData.get(s.dataId),i=new ComplexAbsProgram(s.shape),a=[makeComplexComponentTensorInfo(s,r.complexTensorInfos.real),makeComplexComponentTensorInfo(s,r.complexTensorInfos.imag)];return t.runWebGLProgram(i,a,a[0].dtype)}const complexAbsConfig={kernelName:ComplexAbs,backendName:"webgl",kernelFunc:complexAbs};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ConcatProgram{constructor(e){this.outputShape=[],this.outputShape=computeOutShape$1(e,1),this.variableNames=e.map((a,c)=>`T${c}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const c=t[a-1];s.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${c}));`)}const r=t.length,i=t[t.length-1];s.push(`else setOutput(getT${r}(yR, yC-${i}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ConcatPackedProgram{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=computeOutShape$1(e,t);const s=this.outputShape,r=s.length,i=getCoordsDataType(r),a=getChannels("coords",r),c=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((x,b)=>`T${b}`);const u=new Array(e.length-1);u[0]=e[0][t];for(let x=1;x<u.length;x++)u[x]=u[x-1]+e[x][t];const l=c[t],h=c.slice(-2),d=c.join();let f=`if (${l} < ${u[0]}) {
        return getChannel(
            getT0(${d}), vec2(${h.join()}));
        }`;for(let x=1;x<u.length;x++){const b=u[x-1];f+=`
        if (${l} < ${u[x]}  && ${l} >= ${u[x-1]}) {
          return getChannel(
            getT${x}(${shiftedChannels(c,l,b)}),
            vec2(${shiftedChannels(h,l,b)}));
        }`}const y=u.length,g=u[u.length-1];f+=`
        return getChannel(
          getT${y}(${shiftedChannels(c,l,g)}),
          vec2(${shiftedChannels(h,l,g)}));`,this.userCode=`
      float getValue(${c.map(x=>"int "+x)}) {
        ${f}
      }

      void main() {
        ${i} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[r-1]} = ${a[r-1]} + 1;
        if (${a[r-1]} < ${s[r-1]}) {
          result.g = getValue(${a});
        }

        ${a[r-2]} = ${a[r-2]} + 1;
        if (${a[r-2]} < ${s[r-2]}) {
          result.a = getValue(${a});
        }

        ${a[r-1]} = ${a[r-1]} - 1;
        if (${a[r-2]} < ${s[r-2]} &&
            ${a[r-1]} < ${s[r-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function shiftedChannels(n,e,t){const s=n.indexOf(e);return n.map((i,a)=>a===s?`${i} - ${t}`:i).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function imag(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return identity({inputs:{x:r.complexTensorInfos.imag},backend:t})}const imagConfig={kernelName:Imag,backendName:"webgl",kernelFunc:imag};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concatImpl(n,e,t){const s=n[0].dtype;if(s==="complex64"){const l=n.map(g=>real({inputs:{input:g},backend:t})),h=n.map(g=>imag({inputs:{input:g},backend:t})),d=concatImpl(l,e,t),f=concatImpl(h,e,t),y=complex({inputs:{real:d,imag:f},backend:t});return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),h.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),y}if(s==="string"){const{tensors2D:l,outShape:h}=computeTensors2D(n,e,t),d=l.map(b=>({vals:t.readSync(b.dataId),shape:b.shape})),f=l[0].shape[0]===1,y=concatImplCPU(d,h,s,f),g=computeOutShape$1(n.map(b=>b.shape),e),x=t.makeTensorInfo(g,s,y);return l.forEach(b=>t.disposeIntermediateTensorInfo(b)),x}if(n.length>env().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(n.length/2),h=concatImpl(n.slice(0,l),e,t),d=concatImpl(n.slice(l),e,t),f=concatImpl([h,d],e,t);return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),f}if(env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&n[0].shape.length>1){const l=new ConcatPackedProgram(n.map(h=>h.shape),e);return t.runWebGLProgram(l,n,s)}const{tensors2D:r,outShape:i}=computeTensors2D(n,e,t),a=new ConcatProgram(r.map(l=>l.shape)),c=t.runWebGLProgram(a,r,s);r.forEach(l=>t.disposeIntermediateTensorInfo(l));const u=reshape({inputs:{x:c},attrs:{shape:i},backend:t});return t.disposeIntermediateTensorInfo(c),u}function computeTensors2D(n,e,t){const s=computeOutShape$1(n.map(i=>i.shape),e);return{tensors2D:n.map(i=>reshape({inputs:{x:i},attrs:{shape:[-1,sizeFromShape(i.shape.slice(e))]},backend:t})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concat(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,i=parseAxisParam(r,e[0].shape)[0],a=computeOutShape$1(e.map(l=>l.shape),i);if(sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const c=e.filter(l=>sizeFromShape(l.shape)>0);if(c.length===1)return identity({inputs:{x:c[0]},backend:t});const u=c.map(l=>l.shape);return assertParamsConsistent(u,i),concatImpl(c,i,t)}const concatConfig={kernelName:Concat,backendName:"webgl",kernelFunc:concat};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Conv2DProgram{constructor(e,t=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,c=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,h=e.dilationHeight,d=e.dilationWidth,f=e.filterHeight,y=e.filterWidth,g=Math.floor(e.inChannels/4)*4,x=e.inChannels%4,b=e.dataFormat==="channelsLast",v=b?1:2,S=b?2:3,T=b?3:1;let w="",C="";s&&(r?w=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?w=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:w=`
          float activation(float x) {
            ${s}
          }
        `,C="result = activation(result);");const N=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${w}

      const ivec2 strides = ivec2(${u}, ${l});
      const ivec2 pads = ivec2(${a}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${T}];

        ivec2 xRCCorner =
            ivec2(coords[${v}], coords[${S}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${f}; wR++) {
          int xR = xRCorner + wR * ${h};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${y}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${g}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${b}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${x===1}) {

              if (${b}) {
                dotProd +=
                    getX(batch, xR, xC, ${g}) *
                    getW(wR, wC, ${g}, d2);
              } else {
                dotProd +=
                    getX(batch, ${g}, xR, xC) *
                    getW(wR, wC, ${g}, d2);
              }

            } else if (${x===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${g}, d2),
                getW(wR, wC, ${g} + 1, d2)
              );

              if (${b}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${g}),
                  getX(batch, xR, xC, ${g} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${g}, xR, xC),
                  getX(batch, ${g} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${x===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${g}, d2),
                getW(wR, wC, ${g} + 1, d2),
                getW(wR, wC, ${g} + 2, d2)
              );

              if (${b}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${g}),
                  getX(batch, xR, xC, ${g} + 1),
                  getX(batch, xR, xC, ${g} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${g}, xR, xC),
                  getX(batch, ${g} + 1, xR, xC),
                  getX(batch, ${g} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${N}
        ${C}
        setOutput(result);
      }
    `}}class Conv3DProgram{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,r=e.padInfo.left,i=e.strideDepth,a=e.strideHeight,c=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,h=e.dilationWidth,d=e.filterDepth,f=e.filterHeight,y=e.filterWidth,g=Math.floor(e.inChannels/4)*4,x=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${i}, ${a}, ${c});
      const ivec3 pads = ivec3(${t}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${y}; wC++) {
              int xC = xCCorner + wC * ${h};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${g}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${x===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${g}) *
                  getW(wF, wR, wC, ${g}, d2);
              } else if (${x===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${g}),
                  getX(batch, xF, xR, xC, ${g} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${g}, d2),
                  getW(wF, wR, wC, ${g} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${x===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${g}),
                  getX(batch, xF, xR, xC, ${g} + 1),
                  getX(batch, xF, xR, xC, ${g} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${g}, d2),
                  getW(wF, wR, wC, ${g} + 1, d2),
                  getW(wF, wR, wC, ${g} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Im2ColPackedProgram{constructor(e,t,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:i,strideWidth:a,strideHeight:c,padInfo:u,outWidth:l,dilationWidth:h,dilationHeight:d,dataFormat:f}=s,{left:y,top:g}=u,x=i*r,b=getGlslDifferences(),v=f==="channelsLast",S=v?0:1,T=v?1:2;let w="";for(let C=0;C<=1;C++)for(let N=0;N<=1;N++)w+=`
          blockIndex = rc.y + ${N};
          pos = rc.x + ${C};

          if(blockIndex < ${e[1]} && pos < ${e[0]}) {
            offsetY = int(blockIndex / (${l})) * ${c} - ${g};
            d0 = offsetY + ${d} * (pos / ${x});

            if(d0 < ${t[S]} && d0 >= 0) {

              offsetX = int(mod(float(blockIndex), ${l}.) * ${a}. - ${y}.);
              d1 = offsetX + ${h} * (int(mod(float(pos), ${x}.) / ${i}.));

              if(d1 < ${t[T]} && d1 >= 0) {

                ch = int(mod(float(pos), ${i}.));

                if (${v}) {
                  innerDims = vec2(d1, ch);
                  result[${C*2+N}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${C*2+N}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${w}

        ${b.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2dByMatMul({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:c=null}){const u=n.shape,l=s.texData.get(n.dataId),h=t.inChannels,d=u[0]*u[1]*u[2],f=t.outChannels,y=t.dataFormat==="channelsLast",g=!1,x=!1;let b;const v=[],S=(d===1||f===1)&&h>MATMUL_SHARED_DIM_THRESHOLD,T=u[2]%2!=0&&!!l.isPacked;if(S||!env().getBool("WEBGL_LAZILY_UNPACK")||!env().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!T){const w=y?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],C=reshape({inputs:{x:n},backend:s,attrs:{shape:[1,w,t.inChannels]}}),N=reshape({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),_=batchMatMulImpl({a:C,b:N,transposeA:g,transposeB:x,backend:s,bias:r,activation:c,preluActivationWeights:i,leakyreluAlpha:a});b=reshape({inputs:{x:_},backend:s,attrs:{shape:t.outShape}}),v.push(C),v.push(N),v.push(_)}else{const w=y?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),C={dataId:n.dataId,shape:[1,w,t.inChannels],dtype:n.dtype},N=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,assert$2(isReshapeFree(l.shape,C.shape),()=>`packed reshape ${l.shape} to ${C.shape} isn't free`);const _=reshape({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});v.push(_);const $=batchMatMulImpl({a:C,b:_,backend:s,transposeA:g,transposeB:x,bias:r,activation:c,preluActivationWeights:i,leakyreluAlpha:a}),E=s.texData.get($.dataId);assert$2(E.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=N,E.shape=t.outShape,b=identity({inputs:{x:$},backend:s}),b.shape=t.outShape,v.push($)}for(const w of v)s.disposeIntermediateTensorInfo(w);return b}function conv2dWithIm2Row({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:c=null}){const{filterWidth:u,filterHeight:l,inChannels:h,outWidth:d,outHeight:f,dataFormat:y}=t,g=y==="channelsLast",x=u*l*h,b=f*d,v=[x,b],S=!0,T=!1,w=[],C=reshape({inputs:{x:n},backend:s,attrs:{shape:n.shape.slice(1)}}),N=reshape({inputs:{x:e},backend:s,attrs:{shape:[1,x,sizeFromShape(e.shape)/x]}});w.push(C),w.push(N);const _=new Im2ColPackedProgram(v,C.shape,t),$=s.runWebGLProgram(_,[C],"float32"),E=reshape({inputs:{x:$},backend:s,attrs:{shape:[1,v[0],v[1]]}});w.push($),w.push(E);const k=r!=null,F=i!=null,P=c==="leakyrelu",R=c?mapActivationToShaderProgram(c,!0):null,O=new MatMulPackedProgram(E.shape,N.shape,[1,b,t.outChannels],S,T,k,R,F,P),B=[E,N];if(r&&B.push(r),F&&B.push(i),P){const G=s.makeTensorInfo([],"float32",createScalarValue(a,"float32"));B.push(G),w.push(G)}const L=s.runWebGLProgram(O,B,"float32"),V=g?[1,f,d,t.outChannels]:[1,t.outChannels,f,d],q=reshape({inputs:{x:L},backend:s,attrs:{shape:V}});w.push(L);for(const G of w)s.disposeIntermediateTensorInfo(G);return q}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2d(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:a,pad:c,dataFormat:u,dilations:l,dimRoundingMode:h}=s,d=convertConv2DDataFormat(u),f=computeConv2DInfo(r.shape,i.shape,a,l,c,h,!1,d);let y;if(f.filterHeight===1&&f.filterWidth===1&&f.dilationHeight===1&&f.dilationWidth===1&&f.strideHeight===1&&f.strideWidth===1&&(f.padInfo.type==="SAME"||f.padInfo.type==="VALID"))y=conv2dByMatMul({x:r,filter:i,convInfo:f,backend:t});else if(env().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)y=conv2dWithIm2Row({x:r,filter:i,convInfo:f,backend:t});else{const x=new Conv2DProgram(f);y=t.runWebGLProgram(x,[r,i],"float32")}const g=reshape({inputs:{x:y},backend:t,attrs:{shape:f.outShape}});return t.disposeIntermediateTensorInfo(y),g}const conv2DConfig={kernelName:Conv2D$1,backendName:"webgl",kernelFunc:conv2d};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Conv2DDerFilterProgram{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,i=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${i};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Conv2DDerInputProgram{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,i=e.strideWidth,a=e.dataFormat==="channelsLast",c=t-1-e.padInfo.top,u=s-1-e.padInfo.left,l=a?1:2,h=a?2:3,d=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${c}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${h}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Conv3DDerFilterProgram{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,i=e.padInfo.front,a=e.padInfo.top,c=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${i};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${c};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Conv3DDerInputProgram{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,i=e.strideDepth,a=e.strideHeight,c=e.strideWidth,u=t-1-e.padInfo.front,l=s-1-e.padInfo.top,h=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${l}, ${h});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${i}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${c}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropFilter(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:a,pad:c,dataFormat:u,dimRoundingMode:l,filterShape:h}=s,d=convertConv2DDataFormat(u),f=computeConv2DInfo(r.shape,h,a,1,c,l,!1,d),y=new Conv2DDerFilterProgram(f);return t.runWebGLProgram(y,[r,i],"float32")}const conv2DBackpropFilterConfig={kernelName:Conv2DBackpropFilter,backendName:"webgl",kernelFunc:conv2DBackpropFilter};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropInput(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{inputShape:a,strides:c,pad:u,dataFormat:l,dimRoundingMode:h}=s,d=convertConv2DDataFormat(l),f=computeConv2DInfo(a,i.shape,c,1,u,h,!1,d),y=new Conv2DDerInputProgram(f);return t.runWebGLProgram(y,[r,i],"float32")}const conv2DBackpropInputConfig={kernelName:Conv2DBackpropInput,backendName:"webgl",kernelFunc:conv2DBackpropInput};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3D(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:a,pad:c,dilations:u}=s,l=computeConv3DInfo(r.shape,i.shape,a,u,c),h=new Conv3DProgram(l);return t.runWebGLProgram(h,[r,i],"float32")}const conv3DConfig={kernelName:Conv3D$1,backendName:"webgl",kernelFunc:conv3D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropFilterV2(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:a,pad:c,filterShape:u}=s,l=computeConv3DInfo(r.shape,u,a,1,c),h=new Conv3DDerFilterProgram(l);return t.runWebGLProgram(h,[r,i],"float32")}const conv3DBackpropFilterV2Config={kernelName:Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:conv3DBackpropFilterV2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropInput(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{pad:a,strides:c,inputShape:u}=s,l=computeConv3DInfo(u,i.shape,c,1,a),h=new Conv3DDerInputProgram(l);return t.runWebGLProgram(h,[r,i],"float32")}const conv3DBackpropInputConfig={kernelName:Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:conv3DBackpropInput};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const COS=CHECK_NAN_SNIPPET_UNARY+`
  return cos(x);
`,cos=unaryKernelFunc({opSnippet:COS}),cosConfig={kernelName:Cos,backendName:"webgl",kernelFunc:cos};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const COSH=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,cosh=unaryKernelFunc({opSnippet:COSH}),coshConfig={kernelName:Cosh,backendName:"webgl",kernelFunc:cosh};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CropAndResizeProgram{constructor(e,t,s,r,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,c,u,l]=e,[h]=t,[d,f]=s;this.outputShape=[h,d,f,l];const y=r==="bilinear"?1:0,[g,x]=[`${c-1}.0`,`${u-1}.0`],[b,v,S]=d>1?[`${(c-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${g} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${g}`],[T,w,C]=f>1?[`${(u-1)/(f-1)}`,"(x2-x1) * width_ratio",`x1*${x} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${x}`];this.userCode=`
      const float height_ratio = float(${b});
      const float width_ratio = float(${T});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${v};
        float width_scale = ${w};

        float in_y = ${S};
        if( in_y < 0.0 || in_y > ${g} ) {
          setOutput(float(${i}));
          return;
        }
        float in_x = ${C};
        if( in_x < 0.0 || in_x > ${x} ) {
          setOutput(float(${i}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${y} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cropAndResize=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:i,boxInd:a}=e,{cropSize:c,method:u,extrapolationValue:l}=s,h=new CropAndResizeProgram(r.shape,i.shape,c,u,l);return t.runWebGLProgram(h,[r,i,a],"float32")},cropAndResizeConfig={kernelName:CropAndResize,backendName:"webgl",kernelFunc:cropAndResize};class CumSumProgram{constructor(e,t,s){this.variableNames=["x"],this.outputShape=e;const r=e.length,i=t?"0.0":`getX(${getCoords(r,"coords")})`,a=e[e.length-1];let c="",u="";t?(c=s?`end != ${a-1}`:"end != 0",u=s?"end + 1":"end - 1"):(c=s?`end + pow2 < ${a}`:"end >= pow2",u=s?"end + pow2":"end - pow2"),this.userCode=`
      uniform float index;
      void main() {
        ${getCoordsDataType(r)} coords = getOutputCoords();
        int end = ${getFinalCoord(r,"coords")};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${u};
          ${getFinalCoord(r,"coords")} = idx;
          val += getX(${getCoords(r,"coords")});
        }
        setOutput(val);
      }
    `}getCustomSetupFunc(e){return(t,s)=>{this.index==null&&(this.index=t.getUniformLocation(s,"index")),t.gl.uniform1f(this.index,e)}}}function getCoords(n,e){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${n} is not yet supported`)}function getFinalCoord(n,e){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw Error(`Cumulative sum for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cumsum(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,exclusive:a,reverse:c}=s,u=r.shape.length,l=getAxesPermutation([i],u);let h=r;l!=null&&(h=transpose$1({inputs:{x:r},backend:t,attrs:{perm:l}}));const d=getInnerMostAxes(1,u)[0];if(d!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${i}`);const f=h.shape[d];let y=identity({inputs:{x:h},backend:t});for(let g=0;g<=Math.ceil(Math.log2(f))-1;g++){const x=new CumSumProgram(h.shape,!1,c),b=x.getCustomSetupFunc(g),v=y;y=t.runWebGLProgram(x,[y],y.dtype,b),t.disposeIntermediateTensorInfo(v)}if(a){const g=new CumSumProgram(h.shape,a,c),x=y;y=t.runWebGLProgram(g,[y],y.dtype),t.disposeIntermediateTensorInfo(x)}if(l!=null){const g=getUndoAxesPermutation(l),x=transpose$1({inputs:{x:y},backend:t,attrs:{perm:g}});return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(h),x}return y}const cumsumConfig={kernelName:Cumsum,backendName:"webgl",kernelFunc:cumsum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function denseBincount(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:i}=e,{size:a,binaryOutput:c}=s;if(r.shape.length===1){const u=t.readSync(r.dataId),l=t.readSync(i.dataId),h=bincountImplCPU(u,l,i.dtype,i.shape,a);return t.makeTensorInfo([a],i.dtype,h)}else if(r.shape.length===2){const u=t.bufferSync(r),l=t.bufferSync(i),h=bincountReduceImplCPU(u,l,a,c);return t.makeTensorInfo(h.shape,i.dtype,h.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const denseBincountConfig={kernelName:DenseBincount,backendName:"webgl",kernelFunc:denseBincount};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DepthToSpaceProgram{constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthToSpace(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:i,dataFormat:a}=s;assert$2(i>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${i}`);const c=r.shape[0],u=a==="NHWC"?r.shape[1]:r.shape[2],l=a==="NHWC"?r.shape[2]:r.shape[3],h=a==="NHWC"?r.shape[3]:r.shape[1],d=u*i,f=l*i,y=h/(i*i),g=a==="NHWC"?[c,d,f,y]:[c,y,d,f],x=new DepthToSpaceProgram(g,i,a);return t.runWebGLProgram(x,[r],r.dtype)}const depthToSpaceConfig={kernelName:DepthToSpace,backendName:"webgl",kernelFunc:depthToSpace};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DepthwiseConv2DProgram{constructor(e,t=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.inHeight,c=e.inWidth,u=e.padInfo.top,l=e.padInfo.left,h=e.strideHeight,d=e.strideWidth,f=e.dilationHeight,y=e.dilationWidth,g=e.filterHeight,x=e.filterWidth,b=e.outChannels/e.inChannels;let v="",S="";s&&(r?v=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?v=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:v=`
          float activation(float x) {
            ${s}
          }
        `,S="result = activation(result);");const T=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${v}

      const ivec2 strides = ivec2(${h}, ${d});
      const ivec2 pads = ivec2(${u}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${b};
        int q = d2 - d1 * ${b};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${g}; wR++) {
          int xR = xRCorner + wR * ${f};

          if (xR < 0 || xR >= ${a}) {
            continue;
          }

          for (int wC = 0; wC < ${x}; wC++) {
            int xC = xCCorner + wC * ${y};

            if (xC < 0 || xC >= ${c}) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${T}
        ${S}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DepthwiseConvPacked2DProgram{constructor(e,t=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const a=e.inHeight,c=e.inWidth,u=e.padInfo.top,l=e.padInfo.left,h=e.strideHeight,d=e.strideWidth,f=e.dilationHeight,y=e.dilationWidth,g=e.filterHeight,x=e.filterWidth,b=x;let v="int xR; int xC; int xCOffset;";for(let C=0;C<g;C++)for(let N=0;N<x;N++)v+=`
          vec4 xTexelR${C}C${N*2} = vec4(0.);
          vec4 wR${C}C${N} = vec4(0.);
          vec4 xR${C}C${N} = vec4(0.);`;for(let C=0;C<g;C++)for(let N=0;N<b;N++){const _=N*2;if(v+=`
          xR = xRCorner + ${C*f};
          xC = xCCorner + ${_*y};
        `,d===1){if(_<x&&(l%2==1?v+=`
                xCOffset = xC + 1;
                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${c}) {
                  xTexelR${C}C${_} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${c}) {
                    xTexelR${C}C${_}.zw = vec2(0.);
                  }
                } else {
                  xTexelR${C}C${_} = vec4(0.);
                }

                xCOffset = xC + 1 - 2;
                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${c}) {
                  vec4 previous = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${c}) {
                    previous.zw = vec2(0.);
                  }

                  xR${C}C${_} = vec4(previous.zw, xTexelR${C}C${_}.xy);
                } else {
                  xR${C}C${_} = vec4(0, 0, xTexelR${C}C${_}.xy);
                }
              `:v+=`
                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${c}) {
                  xTexelR${C}C${_} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${C}C${_} = vec4(0.);
                }

                xR${C}C${_} = xTexelR${C}C${_};
              `,_+1<x)){const $=l%2==0?nearestLargerEven(y):y;y%2==0&&l%2==1||y%2!=0&&l%2!=1?(v+=`
                  xCOffset = xC + ${l%2} + ${$};

                  if(xR >= 0 && xR < ${a} &&
                    xCOffset >= 0 && xCOffset < ${c}) {
                    xTexelR${C}C${_+2} = getX(batch, xR, xCOffset, d1);
                  }
                `,y>1&&(v+=`
                    xCOffset -= 2;
                    if(xR >= 0 && xR < ${a} &&
                      xCOffset >= 0 && xCOffset < ${c}) {
                      xTexelR${C}C${_} = getX(batch, xR, xCOffset, d1);
                    } else {
                      xTexelR${C}C${_} = vec4(0.);
                    }
                  `),v+=`
                  xR${C}C${_+1} = vec4(
                    xTexelR${C}C${_}.zw, xTexelR${C}C${_+2}.xy);
                `):v+=`
                  xCOffset = xC + ${$};

                  if(xR >= 0 && xR < ${a} &&
                    xCOffset >= 0 && xCOffset < ${c}) {
                    xTexelR${C}C${_+2} = getX(batch, xR, xCOffset, d1);
                  }

                  xR${C}C${_+1} = xTexelR${C}C${_+2};
                `}}else _<x&&(v+=`
              if(xR >= 0 && xR < ${a}) {
            `,l%2==1?(v+=`
                xCOffset = xC + 1 - ${d};
                if(xCOffset >= 0 && xCOffset < ${c}) {
                  xTexelR${C}C${_} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${C}C${_} = vec4(0.);
                }

                if(xC + 1 >= 0 && xC + 1 < ${c}) {
                  xTexelR${C}C${_+2} = getX(batch, xR, xC + 1, d1);
                } else {
                  xTexelR${C}C${_+2} = vec4(0.);
                }

                xR${C}C${_} = vec4(
                  xTexelR${C}C${_}.zw, xTexelR${C}C${_+2}.zw);
              `,_+1<x&&(v+=`
                  vec4 final = vec4(0.);
                  xCOffset = xC + 1 + ${d};
                  if(xCOffset >= 0 && xCOffset < ${c}) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xR${C}C${_+1} = vec4(xTexelR${C}C${_+2}.xy, final.xy);
                `)):(v+=`
                if(xC >= 0 && xC < ${c}) {
                  xTexelR${C}C${_} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${C}C${_} = vec4(0.);
                }

                xCOffset = xC + ${d};
                if(xCOffset >= 0 && xCOffset < ${c}) {
                  xTexelR${C}C${_+2} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${C}C${_+2} = vec4(0.);
                }

                xR${C}C${_} = vec4(
                  xTexelR${C}C${_}.xy, xTexelR${C}C${_+2}.xy);
              `,_+1<x&&(v+=`
                  xR${C}C${_+1} = vec4(
                    xTexelR${C}C${_}.zw, xTexelR${C}C${_+2}.zw);
                `)),v+="}");_<x&&(v+=`
            vec4 wTexelR${C}C${_} = getW(${C}, ${_}, d1, q);
            wR${C}C${_} = vec4(wTexelR${C}C${_}.xz, wTexelR${C}C${_}.xz);
          `,_+1<x&&(v+=`
              vec4 wTexelR${C}C${_+1} = getW(${C}, ${_+1}, d1, q);
              wR${C}C${_+1} =
                vec4(wTexelR${C}C${_+1}.xz, wTexelR${C}C${_+1}.xz);`))}for(let C=0;C<g;C++)for(let N=0;N<x;N++)v+=`dotProd += xR${C}C${N} * wR${C}C${N};`;let S="",T="";s&&(r?S=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?S=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:S=`vec4 activation(vec4 x) {
          ${s}
        }`,T="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${S}

      const ivec2 strides = ivec2(${h}, ${d});
      const ivec2 pads = ivec2(${u}, ${l});

      void main() {

        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2;
        int q = 0;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        vec4 dotProd = vec4(0.);

        ${v}

        vec4 result = dotProd;
        ${w}
        ${T}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNative(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:a,pad:c,dilations:u,dimRoundingMode:l}=s;let h=u;h==null&&(h=[1,1]),assert$2(eitherStridesOrDilationsAreOne(a,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${h}'`);const d=computeConv2DInfo(r.shape,i.shape,a,h,c,l,!0);let f;return env().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?f=new DepthwiseConvPacked2DProgram(d):f=new DepthwiseConv2DProgram(d),t.runWebGLProgram(f,[r,i],"float32")}const depthwiseConv2dNativeConfig={kernelName:DepthwiseConv2dNative,backendName:"webgl",kernelFunc:depthwiseConv2dNative};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DepthwiseConv2DDerFilterProgram{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,i=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${i};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class DepthwiseConv2DDerInputProgram{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,i=e.strideWidth,a=t-1-e.padInfo.top,c=s-1-e.padInfo.left,u=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropFilter(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:a,dilations:c,pad:u,dimRoundingMode:l,filterShape:h}=s,d=computeConv2DInfo(r.shape,h,a,c,u,l,!0),f=new DepthwiseConv2DDerFilterProgram(d);return t.runWebGLProgram(f,[r,i],"float32")}const depthwiseConv2dNativeBackpropFilterConfig={kernelName:DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:depthwiseConv2dNativeBackpropFilter};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropInput(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{strides:a,dilations:c,pad:u,dimRoundingMode:l,inputShape:h}=s,d=computeConv2DInfo(h,i.shape,a,c,u,l,!0),f=new DepthwiseConv2DDerInputProgram(d);return t.runWebGLProgram(f,[r,i],"float32")}const depthwiseConv2dNativeBackpropInputConfig={kernelName:DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:depthwiseConv2dNativeBackpropInput};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DiagProgram{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function diag(n){const{inputs:e,backend:t}=n,{x:s}=e,r=[...s.shape,...s.shape],i=sizeFromShape(s.shape),a=reshape({inputs:{x:s},backend:t,attrs:{shape:[i]}}),c=new DiagProgram(i),u=t.runWebGLProgram(c,[a],a.dtype),l=reshape({inputs:{x:u},backend:t,attrs:{shape:r}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),l}const diagConfig={kernelName:Diag,backendName:"webgl",kernelFunc:diag};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dilation2DProgram{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:r,strideHeight:i,strideWidth:a,filterHeight:c,filterWidth:u,dilationHeight:l,dilationWidth:h}=e,{top:d,left:f}=r;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${a});
      const ivec2 pads = ivec2(${d}, ${f});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${c}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${h};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dilation2D(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:a,pad:c,dilations:u}=s,l=computeDilation2DInfo(r.shape,i.shape,a,c,"NHWC",u);let h;const d=new Dilation2DProgram(l);h=t.runWebGLProgram(d,[r,i],"float32");const f=reshape({inputs:{x:h},backend:t,attrs:{shape:l.outShape}});return t.disposeIntermediateTensorInfo(h),f}const dilation2DConfig={kernelName:Dilation2D,backendName:"webgl",kernelFunc:dilation2D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ELU="return (x >= 0.0) ? x : (exp(x) - 1.0);",ELU_PACKED=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,elu=unaryKernelFunc({opSnippet:ELU,packedOpSnippet:ELU_PACKED}),eluConfig={kernelName:Elu$1,backendName:"webgl",kernelFunc:elu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ELU_DER="return (b >= 1.0) ? a : a * (b + 1.0);",ELU_DER_PACKED=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,eluGrad=n=>{const{inputs:e,backend:t}=n,{dy:s,y:r}=e,i=env().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BinaryOpPackedProgram(ELU_DER_PACKED,s.shape,r.shape):new BinaryOpProgram(ELU_DER,s.shape,r.shape);return t.runWebGLProgram(i,[s,r],s.dtype)},eluGradConfig={kernelName:EluGrad,backendName:"webgl",kernelFunc:eluGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PACKED_EQUAL=`
  return vec4(equal(a, b));
`,EQUAL="return float(a == b);",equal=binaryKernelFunc({opSnippet:EQUAL,packedOpSnippet:PACKED_EQUAL,dtype:"bool"}),equalConfig={kernelName:Equal,backendName:"webgl",kernelFunc:equal};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ERF=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${ERF_P};
  float a1 = ${ERF_A1};
  float a2 = ${ERF_A2};
  float a3 = ${ERF_A3};
  float a4 = ${ERF_A4};
  float a5 = ${ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,erf=unaryKernelFunc({opSnippet:ERF}),erfConfig={kernelName:Erf,backendName:"webgl",kernelFunc:erf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EXP="return exp(x);",exp=unaryKernelFunc({opSnippet:EXP,packedOpSnippet:EXP,cpuKernelImpl:expImplCPU}),expConfig={kernelName:Exp,backendName:"webgl",kernelFunc:exp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function expandDims(n){const{inputs:e,attrs:t,backend:s}=n,{dim:r}=t,{input:i}=e,a=i.shape.length,c=i.shape.slice();let u=r;return r<0&&(assert$2(-(a+1)<=r,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+r+1),c.splice(u,0,1),reshape({inputs:{x:i},backend:s,attrs:{shape:c}})}const expandDimsConfig={kernelName:ExpandDims,backendName:"webgl",kernelFunc:expandDims};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EXPM1="return exp(x) - 1.0;",expm1=unaryKernelFunc({opSnippet:EXPM1,packedOpSnippet:EXPM1,cpuKernelImpl:expm1ImplCPU}),expm1Config={kernelName:Expm1,backendName:"webgl",kernelFunc:expm1};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FFTProgram{constructor(e,t,s){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const i=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=s?`${r}.0`:"1.0";let c;if(e==="real")c="return real * expR - imag * expI;";else if(e==="imag")c="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${i};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${c}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fftImpl(n,e,t){const s=t.texData.get(n.dataId),r=sizeFromShape(n.shape),i=n.shape[n.shape.length-1],a=r/i,c=reshape({inputs:{x:n},backend:t,attrs:{shape:[a,i]}}),u=c.shape,l=new FFTProgram("real",u,e),h=new FFTProgram("imag",u,e),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:u},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:u}],f=t.runWebGLProgram(l,d,"float32"),y=t.runWebGLProgram(h,d,"float32"),g=complex({inputs:{real:f,imag:y},backend:t});t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(y);const x=reshape({inputs:{x:g},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(g),x}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fft$1(n){const{inputs:e,backend:t}=n,{input:s}=e;return fftImpl(s,!1,t)}const fftConfig={kernelName:FFT$1,backendName:"webgl",kernelFunc:fft$1};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FillProgram{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      uniform float value;
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}getCustomSetupFunc(e){return(t,s)=>{this.valueLoc==null&&(this.valueLoc=t.getUniformLocationNoThrow(s,"value")),t.gl.uniform1f(this.valueLoc,e)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fill(n){const{backend:e,attrs:t}=n,{shape:s,value:r}=t;let{dtype:i}=t;if(i=i||inferDtype(r),i==="string"){const a=getArrayFromDType(i,sizeFromShape(s));return a.fill(r),e.makeTensorInfo(s,i,a)}else{const a=new FillProgram(s,r),c=a.getCustomSetupFunc(r);return e.runWebGLProgram(a,[],i,c)}}const fillConfig={kernelName:Fill,backendName:"webgl",kernelFunc:fill};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FlipLeftRightProgram{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const flipLeftRightConfig={kernelName:FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,r=new FlipLeftRightProgram(t.shape);return s.runWebGLProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FLOOR="return floor(x);",floor=unaryKernelFunc({opSnippet:FLOOR,packedOpSnippet:FLOOR,cpuKernelImpl:floorImplCPU}),floorConfig={kernelName:Floor,backendName:"webgl",kernelFunc:floor};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const INT_DIV=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,INT_DIV_PACKED=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,floorDiv=binaryKernelFunc({opSnippet:INT_DIV,packedOpSnippet:INT_DIV_PACKED,dtype:"int32"}),floorDivConfig={kernelName:FloorDiv,backendName:"webgl",kernelFunc:floorDiv};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FromPixelsProgram{constructor(e){this.variableNames=["A"];const t=getGlslDifferences(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FromPixelsPackedProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=getGlslDifferences(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fromPixelsConfig={kernelName:FromPixels,backendName:"webgl",kernelFunc:fromPixels};let fromPixels2DContext;function fromPixels(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:r}=e;const{numChannels:i}=s,a=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,c=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,u=typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap,[l,h]=a?[r.videoWidth,r.videoHeight]:[r.width,r.height],d=[h,l],f=[h,l,i];(c||a||u)&&(fromPixels2DContext==null&&(fromPixels2DContext=document.createElement("canvas").getContext("2d")),fromPixels2DContext.canvas.width=l,fromPixels2DContext.canvas.height=h,fromPixels2DContext.drawImage(r,0,0,l,h),r=fromPixels2DContext.canvas);const y=t.makeTensorInfo(d,"int32");t.texData.get(y.dataId).usage=TextureUsage.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(y.dataId),r);const g=env().getBool("WEBGL_PACK")?new FromPixelsPackedProgram(f):new FromPixelsProgram(f),x=t.runWebGLProgram(g,[y],"int32");return t.disposeData(y.dataId),x}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedConv2d(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i,bias:a,preluActivationWeights:c}=e,{strides:u,pad:l,dataFormat:h,dilations:d,dimRoundingMode:f,activation:y,leakyreluAlpha:g}=s,x=convertConv2DDataFormat(h),b=computeConv2DInfo(r.shape,i.shape,u,d,l,f,!1,x);let v;const S=[];if(b.filterHeight===1&&b.filterWidth===1&&b.dilationHeight===1&&b.dilationWidth===1&&b.strideHeight===1&&b.strideWidth===1&&(b.padInfo.type==="SAME"||b.padInfo.type==="VALID"))v=conv2dByMatMul({x:r,filter:i,convInfo:b,backend:t,bias:a,activation:y,preluActivationWeights:c,leakyreluAlpha:g});else if(env().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)v=conv2dWithIm2Row({x:r,filter:i,convInfo:b,backend:t,bias:a,activation:y,preluActivationWeights:c,leakyreluAlpha:g});else{const w=a!=null,C=c!=null,N=y==="leakyrelu",_=y?mapActivationToShaderProgram(y,!1):null,$=new Conv2DProgram(b,w,_,C,N),E=[r,i];if(a&&E.push(a),c&&E.push(c),N){const k=t.makeTensorInfo([],"float32",createScalarValue(g,"float32"));E.push(k),S.push(k)}v=t.runWebGLProgram($,E,"float32")}const T=reshape({inputs:{x:v},backend:t,attrs:{shape:b.outShape}});return S.push(v),S.forEach(w=>t.disposeIntermediateTensorInfo(w)),T}const fusedConv2DConfig={kernelName:FusedConv2D,backendName:"webgl",kernelFunc:fusedConv2d};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedDepthwiseConv2D(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i,bias:a,preluActivationWeights:c}=e,{strides:u,pad:l,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:y}=s,g=[];let x=h;x==null&&(x=[1,1]),assert$2(eitherStridesOrDilationsAreOne(u,x),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${x}'`);const b=computeConv2DInfo(r.shape,i.shape,u,x,l,d,!0),v=env().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,S=f?mapActivationToShaderProgram(f,v):null,T=[r,i],w=a!=null,C=c!=null,N=f==="leakyrelu";if(w&&T.push(a),C&&T.push(c),N){const E=t.makeTensorInfo([],"float32",createScalarValue(y,"float32"));T.push(E),g.push(E)}let _;v?_=new DepthwiseConvPacked2DProgram(b,w,S,C,N):_=new DepthwiseConv2DProgram(b,w,S,C,N);const $=t.runWebGLProgram(_,T,"float32");return g.forEach(E=>t.disposeIntermediateTensorInfo(E)),$}const fusedDepthwiseConv2DConfig={kernelName:FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:fusedDepthwiseConv2D};class GatherNDProgram{constructor(e,t,s){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=s;const r=getCoordsDataType(t.length),i=getCoordsDataType(s.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${r} strides = ${r}(${this.strides});
         void main() {
          ${i} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherNd(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,i=r.shape,a=i[i.length-1],[c,u,l,h]=prepareAndValidate(s,r),d=reshape({inputs:{x:r},backend:t,attrs:{shape:[u,a]}}),f=reshape({inputs:{x:s},backend:t,attrs:{shape:[sizeFromShape(s.shape)/l,l]}}),y=new GatherNDProgram(a,h,[u,l]),g=t.runWebGLProgram(y,[f,d],f.dtype),x=reshape({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g),x}const gatherNdConfig={kernelName:GatherNd,backendName:"webgl",kernelFunc:gatherNd};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GatherProgram{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=getCoordsDataType(this.rank),r=getSourceCoords$1(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function getSourceCoords$1(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)r===2?s.push("int(getIndices(resRC.x, resRC.z))"):s.push(`${t[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherV2(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:i}=e,{axis:a,batchDims:c}=s,u=parseAxisParam(a,r.shape)[0],l=collectGatherOpShapeInfo(r,i,u,c),h=sizeFromShape(i.shape),d=[],f=reshape({inputs:{x:r},backend:t,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),y=reshape({inputs:{x:i},backend:t,attrs:{shape:[l.batchSize,h/l.batchSize]}});d.push(f),d.push(y);const g=[l.batchSize,l.outerSize,h/l.batchSize,l.sliceSize];if(t.shouldExecuteOnCPU([r,i])||r.dtype==="string"){const S=t.bufferSync(y),T=t.bufferSync(f),w=gatherV2ImplCPU(T,S,g);return d.forEach(C=>t.disposeIntermediateTensorInfo(C)),t.makeTensorInfo(l.outputShape,w.dtype,w.values)}const x=new GatherProgram(f.shape,g),b=t.runWebGLProgram(x,[f,y],f.dtype);d.push(b);const v=reshape({inputs:{x:b},backend:t,attrs:{shape:l.outputShape}});return d.forEach(S=>t.disposeIntermediateTensorInfo(S)),v}const gatherV2Config={kernelName:GatherV2,backendName:"webgl",kernelFunc:gatherV2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GREATER="return float(a > b);",GREATER_PACKED=`
  return vec4(greaterThan(a, b));
`,greater=binaryKernelFunc({opSnippet:GREATER,packedOpSnippet:GREATER_PACKED,cpuKernelImpl:greaterImplCPU,dtype:"bool"}),greaterConfig={kernelName:Greater,backendName:"webgl",kernelFunc:greater};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GREATER_EQUAL="return float(a >= b);",GREATER_EQUAL_PACKED=`
  return vec4(greaterThanEqual(a, b));
`,greaterEqual=binaryKernelFunc({opSnippet:GREATER_EQUAL,packedOpSnippet:GREATER_EQUAL_PACKED,dtype:"bool"}),greaterEqualConfig={kernelName:GreaterEqual,backendName:"webgl",kernelFunc:greaterEqual};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ifft(n){const{inputs:e,backend:t}=n,{input:s}=e;return fftImpl(s,!0,t)}const ifftConfig={kernelName:IFFT,backendName:"webgl",kernelFunc:ifft};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IS_FINITE="return float(!isnan(x) && !isinf(x));",isFinite$1=unaryKernelFunc({opSnippet:IS_FINITE,dtype:"bool"}),isFiniteConfig={kernelName:IsFinite,backendName:"webgl",kernelFunc:isFinite$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IS_INF="return float(isinf(x));",isInf=unaryKernelFunc({opSnippet:IS_INF,dtype:"bool"}),isInfConfig={kernelName:IsInf,backendName:"webgl",kernelFunc:isInf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IS_NAN="return float(isnan(x));",isNaN$1=unaryKernelFunc({opSnippet:IS_NAN,dtype:"bool"}),isNaNConfig={kernelName:IsNan,backendName:"webgl",kernelFunc:isNaN$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LESS="return float(a < b);",LESS_PACKED=`
  return vec4(lessThan(a, b));
`,less=binaryKernelFunc({opSnippet:LESS,packedOpSnippet:LESS_PACKED,cpuKernelImpl:lessImplCPU,dtype:"bool"}),lessConfig={kernelName:Less,backendName:"webgl",kernelFunc:less};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LESS_EQUAL="return float(a <= b);",LESS_EQUAL_PACKED=`
  return vec4(lessThanEqual(a, b));
`,lessEqual=binaryKernelFunc({opSnippet:LESS_EQUAL,packedOpSnippet:LESS_EQUAL_PACKED,dtype:"bool"}),lessEqualConfig={kernelName:LessEqual,backendName:"webgl",kernelFunc:lessEqual};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function linSpace(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:i}=t,a=linSpaceImplCPU(s,r,i);return e.makeTensorInfo([a.length],"float32",a)}const linSpaceConfig={kernelName:LinSpace,backendName:"webgl",kernelFunc:linSpace};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOG=`if (x < 0.0) return NAN;
  return log(x);`,LOG_PACKED=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,log$2=unaryKernelFunc({opSnippet:LOG,packedOpSnippet:LOG_PACKED,cpuKernelImpl:logImplCPU}),logConfig={kernelName:Log,backendName:"webgl",kernelFunc:log$2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOG1P="return log(1.0 + x);",log1p=unaryKernelFunc({opSnippet:LOG1P}),log1pConfig={kernelName:Log1p,backendName:"webgl",kernelFunc:log1p};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOGICAL_AND="return float(a >= 1.0 && b >= 1.0);",LOGICAL_AND_PACKED=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,logicalAnd=binaryKernelFunc({opSnippet:LOGICAL_AND,packedOpSnippet:LOGICAL_AND_PACKED,dtype:"bool"}),logicalAndConfig={kernelName:LogicalAnd,backendName:"webgl",kernelFunc:logicalAnd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOGICAL_NOT="return float(!(x >= 1.0));",logicalNot=unaryKernelFunc({opSnippet:LOGICAL_NOT}),logicalNotConfig={kernelName:LogicalNot,backendName:"webgl",kernelFunc:logicalNot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOGICAL_OR="return float(a >= 1.0 || b >= 1.0);",LOGICAL_OR_PACKED=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,logicalOr=binaryKernelFunc({opSnippet:LOGICAL_OR,packedOpSnippet:LOGICAL_OR_PACKED,dtype:"bool"}),logicalOrConfig={kernelName:LogicalOr,backendName:"webgl",kernelFunc:logicalOr};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LRNProgram{constructor(e,t,s,r,i){this.variableNames=["x"],this.outputShape=[];const a=t,c=e[3]-1;this.outputShape=e;let u;const l=`float(${s}) + float(${r}) * sum`;i===.5?u=`inversesqrt(${l})`:i===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${c}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LRNPackedProgram{constructor(e,t,s,r,i){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,c=e[3]-1;this.outputShape=e;let u;const l=`float(${s}) + float(${r}) * sum`;i===.5?u=`inversesqrt(${l})`:i===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${c}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lrn=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:i,bias:a,alpha:c,beta:u}=s,l=env().getBool("WEBGL_PACK_NORMALIZATION")?new LRNPackedProgram(r.shape,i,a,c,u):new LRNProgram(r.shape,i,a,c,u);return t.runWebGLProgram(l,[r],r.dtype)},LRNConfig={kernelName:LRN,backendName:"webgl",kernelFunc:lrn};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LRNGradProgram{constructor(e,t,s,r,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=r,this.beta=i,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${i})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${i});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lrnGrad=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r,y:i,dy:a}=e,{depthRadius:c,bias:u,alpha:l,beta:h}=s,d=new LRNGradProgram(r.shape,c,u,l,h);return t.runWebGLProgram(d,[r,i,a],r.dtype)},LRNGradConfig={kernelName:LRNGrad,backendName:"webgl",kernelFunc:lrnGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxImpl(n,e,t,s){const r=sizeFromShape(e),a=sizeFromShape(n.shape)/r,c=reshape({inputs:{x:n},attrs:{shape:[a,r]},backend:s}),u=reduce(c,n.dtype,"max",s),l=reshape({inputs:{x:u},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(c),s.disposeIntermediateTensorInfo(u),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function max(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:i,keepDims:a}=s,c=r.shape.length,u=parseAxisParam(i,r.shape);let l=u;const h=getAxesPermutation(l,c),d=h!=null,f=t.shouldExecuteOnCPU([r]);let y=r;if(d){if(f){const T=t.texData.get(y.dataId).values,w=new Array(c);for(let _=0;_<w.length;_++)w[_]=r.shape[h[_]];const C=transposeImplCPU(T,r.shape,r.dtype,h,w);y=t.makeTensorInfo(w,r.dtype);const N=t.texData.get(y.dataId);N.values=C}else y=transposeImpl(r,h,t);l=getInnerMostAxes(l.length,c)}assertAxesAreInnerMostDims("max",l,c);const[g,x]=computeOutAndReduceShapes(y.shape,l);let b=g;a&&(b=expandShapeToKeepDim(g,u));let v;if(f){const T=t.texData.get(y.dataId).values,w=maxImplCPU(T,sizeFromShape(x),b,r.dtype);v=t.makeTensorInfo(b,r.dtype);const C=t.texData.get(v.dataId);C.values=w}else v=maxImpl(y,x,b,t);return d&&t.disposeIntermediateTensorInfo(y),v}const maxConfig={kernelName:Max,backendName:"webgl",kernelFunc:max};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MAXIMUM=CHECK_NAN_SNIPPET$1+`
  return max(a, b);
`,MAXIMUM_PACKED=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+CHECK_NAN_SNIPPET+`
  return result;
`,maximum=binaryKernelFunc({opSnippet:MAXIMUM,packedOpSnippet:MAXIMUM_PACKED,cpuKernelImpl:maximumImplCPU}),maximumConfig={kernelName:Maximum$1,backendName:"webgl",kernelFunc:maximum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;assertNotComplex(r,"maxPool");const{filterSize:i,strides:a,pad:c,dimRoundingMode:u}=s,l=1;assert$2(eitherStridesOrDilationsAreOne(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const h=computePool2DInfo(r.shape,i,a,l,c,u);if(h.filterWidth===1&&h.filterHeight===1&&arraysEqual(h.inShape,h.outShape))return identity({inputs:{x:r},backend:t});const d=new Pool2DProgram(h,"max",!1);return t.runWebGLProgram(d,[r],r.dtype)}const maxPoolConfig={kernelName:MaxPool,backendName:"webgl",kernelFunc:maxPool};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3d(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:i,strides:a,pad:c,dataFormat:u,dimRoundingMode:l}=s,h=[1,1,1],d=computePool3DInfo(r.shape,i,a,h,c,l,u),f=new Pool3DProgram(d,"max",!1);return t.runWebGLProgram(f,[r],r.dtype)}const maxPool3DConfig={kernelName:MaxPool3D,backendName:"webgl",kernelFunc:maxPool3d};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MaxPool2DBackpropProgram{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,s=e.strideWidth,r=e.dilationHeight,i=e.effectiveFilterHeight,a=e.effectiveFilterWidth,c=i-1-e.padInfo.top,u=a-1-e.padInfo.left,l=i*a-1;this.userCode=`
      const ivec2 pads = ivec2(${c}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class MaxPool3DBackpropProgram{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,i=e.dilationDepth,a=e.dilationHeight,c=e.dilationWidth,u=e.effectiveFilterDepth,l=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=u-1-e.padInfo.front,f=l-1-e.padInfo.top,y=h-1-e.padInfo.left,g=u*l*h-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${f}, ${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${h};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${g} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${h} +
                  wR * ${h} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3DGrad(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,a=i,{filterSize:c,strides:u,pad:l,dimRoundingMode:h}=s,d=[1,1,1],f=computePool3DInfo(a.shape,c,u,d,l,h),y=new Pool3DProgram(f,"max",!0),g=t.runWebGLProgram(y,[a],a.dtype),x=new MaxPool3DBackpropProgram(f),b=t.runWebGLProgram(x,[r,g],a.dtype);return t.disposeIntermediateTensorInfo(g),b}const maxPoolGrad3DConfig={kernelName:MaxPool3DGrad,backendName:"webgl",kernelFunc:maxPool3DGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolGrad(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i,output:a}=e,c=i;assertNotComplex([i,a],"maxPoolGrad");const{filterSize:u,strides:l,pad:h,dimRoundingMode:d}=s,f=computePool2DInfo(c.shape,u,l,1,h,d),y=!0,g=new Pool2DProgram(f,"max",y),x=t.runWebGLProgram(g,[c],c.dtype),b=new MaxPool2DBackpropProgram(f),v=t.runWebGLProgram(b,[r,x],c.dtype);return t.disposeIntermediateTensorInfo(x),v}const maxPoolGradConfig={kernelName:MaxPoolGrad,backendName:"webgl",kernelFunc:maxPoolGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolWithArgmaxImpl(n,e,t,s){let r=new Pool2DProgram(t,"max",!1);const i=s.runWebGLProgram(r,[n],"float32");r=new Pool2DProgram(t,"max",!0,!0,e);const a=s.runWebGLProgram(r,[n],"float32");return[i,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxPoolWithArgmaxConfig={kernelName:MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:i,pad:a,includeBatchInIndex:c}=e,u=t;assert$2(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const l=[1,1];assert$2(eitherStridesOrDilationsAreOne(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const h=computePool2DInfo(s.shape,r,i,l,a),[d,f]=maxPoolWithArgmaxImpl(s,c,h,u);return[d,f]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function meanImpl(n,e,t,s){const r=sizeFromShape(e),a=sizeFromShape(n.shape)/r,c=reshape({inputs:{x:n},attrs:{shape:[a,r]},backend:s}),u=reduce(c,"float32","mean",s),l=reshape({inputs:{x:u},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(c),s.disposeIntermediateTensorInfo(u),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const meanConfig={kernelName:Mean,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{keepDims:r,axis:i}=e,a=t,c=s.shape.length,u=parseAxisParam(i,s.shape);let l=u;const h=getAxesPermutation(l,c),d=h!=null,f=a.shouldExecuteOnCPU([s]),y=[];let g=s;if(d){if(f){const w=a.texData.get(g.dataId).values,C=new Array(c);for(let $=0;$<C.length;$++)C[$]=s.shape[h[$]];const N=transposeImplCPU(w,s.shape,s.dtype,h,C);g=a.makeTensorInfo(C,s.dtype);const _=a.texData.get(g.dataId);_.values=N}else g=transposeImpl(s,h,a);y.push(g),l=getInnerMostAxes(l.length,c)}assertAxesAreInnerMostDims("sum",l,c);const[x,b]=computeOutAndReduceShapes(g.shape,l);let v=x;r&&(v=expandShapeToKeepDim(x,u));const S=meanImpl(g,b,v,a);for(const T of y)a.disposeIntermediateTensorInfo(T);return S}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function min(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s,c=r.shape.length,u=parseAxisParam(i,r.shape);let l=u;const h=getAxesPermutation(l,c);let d=r;h!=null&&(d=transpose$1({inputs:{x:r},backend:t,attrs:{perm:h}}),l=getInnerMostAxes(l.length,r.shape.length)),assertAxesAreInnerMostDims("min",l,c);const[f,y]=computeOutAndReduceShapes(d.shape,l),g=sizeFromShape(y),x=reshape({inputs:{x:d},backend:t,attrs:{shape:[-1,g]}}),b=reduce(x,x.dtype,"min",t);let v;if(a){const S=expandShapeToKeepDim(f,u);v=reshape({inputs:{x:b},backend:t,attrs:{shape:S}})}else v=reshape({inputs:{x:b},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(b),h!=null&&t.disposeIntermediateTensorInfo(d),v}const minConfig={kernelName:Min,backendName:"webgl",kernelFunc:min};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MINIMUM=CHECK_NAN_SNIPPET$1+`
  return min(a, b);
`,MINIMUM_PACKED=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+CHECK_NAN_SNIPPET+`
  return result;
`,minimum=binaryKernelFunc({opSnippet:MINIMUM,packedOpSnippet:MINIMUM_PACKED,cpuKernelImpl:minimumImplCPU}),minimumConfig={kernelName:Minimum$1,backendName:"webgl",kernelFunc:minimum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MirrorPadProgram{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((h,d)=>h[0]+e[d]+h[1]);const r=e.length,i=getCoordsDataType(r),a=t.map(h=>h[0]).join(","),c=t.map((h,d)=>h[0]+e[d]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${a};
        int end = ${c};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${a});
      ${i} end = ${i}(${c});

      void main() {
        ${i} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${i} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MirrorPadPackedProgram{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((g,x)=>g[0]+e[x]+g[1]);const r=e.length,i=getCoordsDataType(r),a=t.map(g=>g[0]).join(","),c=t.map((g,x)=>g[0]+e[x]).join(","),u=getChannels("rc",r),l=getChannels("source",r),h=`${u[r-1]} < ${this.outputShape[r-1]}`,d=r===1?"source":`vec2(${l.slice(-2).join()})`,f=s==="reflect"?0:1;let y="";if(r===1){const g=`
        ${i} source = rc;
        if (source < start) {
          source = start * 2 - source - ${f};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${f};
        }
        source -= start;
      `;y=`
        ${i} rc = outputLoc;
        ${g}
        result[0] = getChannel(getX(${l.join()}), ${d});
        ${u[r-1]} += 1;
        if(${h}) {
          ${g}
          result[1] = getChannel(getX(${l.join()}), ${d});
        }
      `}else{const g=`
        ${i} source = rc;
        ${i} lt = ${i}(lessThan(source, start));
        ${i} gte = ${i}(greaterThanEqual(source, end));
        ${i} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${f}) +
                gte * ((end - 1) * 2 - source + ${f});
        source -= start;
      `;y=`
        ${i} rc = outputLoc;
        ${g}
        result[0] = getChannel(getX(${l.join()}), ${d});
        ${u[r-1]} += 1;
        if(${h}) {
          ${g}
          result[1] = getChannel(getX(${l.join()}), ${d});
        }
        rc = outputLoc;
        ${u[r-2]} += 1;
        if(${u[r-2]} < ${this.outputShape[r-2]}) {
          ${g}
          result[2] = getChannel(getX(${l.join()}), ${d});
          ${u[r-1]} += 1;
          if(${h}) {
            ${g}
            result[3] = getChannel(getX(${l.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${i} start = ${i}(${a});
      const ${i} end = ${i}(${c});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${y}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mirrorPadKernelFunc=({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{paddings:r,mode:i}=t,a=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new MirrorPadPackedProgram(s.shape,r,i):new MirrorPadProgram(s.shape,r,i);return e.runWebGLProgram(a,[s],s.dtype)},mirrorPadConfig={kernelName:MirrorPad,backendName:"webgl",kernelFunc:mirrorPadKernelFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MOD=`if (b == 0.0) return NAN;
  return mod(a, b);`,MOD_PACKED=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+CHECK_NAN_SNIPPET+`
  return result;
`,mod=binaryKernelFunc({opSnippet:MOD,packedOpSnippet:MOD_PACKED}),modConfig={kernelName:Mod,backendName:"webgl",kernelFunc:mod};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MultinomialProgram{constructor(e,t,s){this.variableNames=["probs"],this.outputShape=[e,s],this.userCode=`
      uniform float seed;

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}getCustomSetupFunc(e){return(t,s)=>{this.seedLoc==null&&(this.seedLoc=t.getUniformLocation(s,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DIV=`
if (a == b) {
  return 1.0;
};
return a / b;`,DIV_PACKED=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,realDiv=binaryKernelFunc({opSnippet:DIV,packedOpSnippet:DIV_PACKED,checkOutOfBounds:!0}),realDivConfig={kernelName:RealDiv,backendName:"webgl",kernelFunc:realDiv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SUB="return a - b;",sub=binaryKernelFunc({opSnippet:SUB,packedOpSnippet:SUB,supportsComplex:!0,cpuKernelImpl:subImplCPU}),subConfig={kernelName:Sub,backendName:"webgl",kernelFunc:sub};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function softmax(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:i}=s,a=parseAxisParam([i],r.shape),c=max({inputs:{x:r},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),u=expandShapeToKeepDim(c.shape,a),l=reshape({inputs:{x:c},backend:t,attrs:{shape:u}}),h=sub({inputs:{a:r,b:l},backend:t}),d=exp({inputs:{x:h},backend:t}),f=sum({inputs:{x:d},backend:t,attrs:{axis:a,keepDims:!1}}),y=reshape({inputs:{x:f},backend:t,attrs:{shape:u}}),g=realDiv({inputs:{a:d,b:y},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(y),g}const softmaxConfig={kernelName:Softmax$2,backendName:"webgl",kernelFunc:softmax};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function multinomial(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:i,seed:a,normalized:c}=s,u=c?r:softmax({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),l=u.shape[0],h=u.shape[1],d=new MultinomialProgram(l,h,i),f=d.getCustomSetupFunc(a),y=t.runWebGLProgram(d,[u],"int32",f);return c||t.disposeIntermediateTensorInfo(u),y}const multinomialConfig={kernelName:Multinomial,backendName:"webgl",kernelFunc:multinomial};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NEG="return -x;";function neg(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const i=t.texData.get(s.dataId),[a,c]=negImplCPU(i.values,s.shape,s.dtype);return t.makeTensorInfo(c,s.dtype,a)}let r;return env().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new UnaryOpPackedProgram(s.shape,NEG):r=new UnaryOpProgram(s.shape,NEG),t.runWebGLProgram(r,[s],s.dtype)}const negConfig={kernelName:Neg,backendName:"webgl",kernelFunc:neg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV3Impl=nonMaxSuppressionV3Impl$2;function nonMaxSuppressionV3(n){warn$1("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:c,scoreThreshold:u}=s,l=t.readSync(r.dataId),h=t.readSync(i.dataId),{selectedIndices:d}=nonMaxSuppressionV3Impl(l,h,a,c,u);return t.makeTensorInfo([d.length],"int32",new Int32Array(d))}const nonMaxSuppressionV3Config={kernelName:NonMaxSuppressionV3,backendName:"webgl",kernelFunc:nonMaxSuppressionV3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV4Impl=nonMaxSuppressionV4Impl$2;function nonMaxSuppressionV4(n){warn$1("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:c,scoreThreshold:u,padToMaxOutputSize:l}=s,h=t.readSync(r.dataId),d=t.readSync(i.dataId),{selectedIndices:f,validOutputs:y}=nonMaxSuppressionV4Impl(h,d,a,c,u,l);return[t.makeTensorInfo([f.length],"int32",new Int32Array(f)),t.makeTensorInfo([],"int32",new Int32Array([y]))]}const nonMaxSuppressionV4Config={kernelName:NonMaxSuppressionV4,backendName:"webgl",kernelFunc:nonMaxSuppressionV4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV5Impl=nonMaxSuppressionV5Impl$2;function nonMaxSuppressionV5(n){warn$1("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:c,scoreThreshold:u,softNmsSigma:l}=s,h=t.readSync(r.dataId),d=t.readSync(i.dataId),f=a,y=c,g=u,x=l,{selectedIndices:b,selectedScores:v}=nonMaxSuppressionV5Impl(h,d,f,y,g,x);return[t.makeTensorInfo([b.length],"int32",new Int32Array(b)),t.makeTensorInfo([v.length],"float32",new Float32Array(v))]}const nonMaxSuppressionV5Config={kernelName:NonMaxSuppressionV5,backendName:"webgl",kernelFunc:nonMaxSuppressionV5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OneHotProgram{constructor(e,t,s,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oneHot=n=>{const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{depth:i,onValue:a,offValue:c}=s,u=sizeFromShape(r.shape),l=new OneHotProgram(u,i,a,c),h=reshape({inputs:{x:r},backend:t,attrs:{shape:[u]}}),d=t.runWebGLProgram(l,[h],r.dtype);t.disposeIntermediateTensorInfo(h);const f=[...r.shape,i],y=reshape({inputs:{x:d},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(d),y},oneHotConfig={kernelName:OneHot,backendName:"webgl",kernelFunc:oneHot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zerosLike(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const r=real({inputs:{input:s},backend:t}),i=zerosLike({inputs:{x:r},backend:t}),a=imag({inputs:{input:s},backend:t}),c=zerosLike({inputs:{x:a},backend:t}),u=complex({inputs:{real:i,imag:c},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(c),u}else return fill({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const zerosLikeConfig={kernelName:ZerosLike,backendName:"webgl",kernelFunc:zerosLike};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function onesLike(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=real({inputs:{input:s},backend:t}),i=onesLike({inputs:{x:r},backend:t}),a=imag({inputs:{input:s},backend:t}),c=zerosLike({inputs:{x:a},backend:t}),u=complex({inputs:{real:i,imag:c},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(c),u}else return fill({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const onesLikeConfig={kernelName:OnesLike,backendName:"webgl",kernelFunc:onesLike};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pack(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return expandDims({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const i=e[0].shape,a=e[0].dtype;e.forEach(h=>{assertShapesMatch(i,h.shape,"All tensors passed to stack must have matching shapes"),assert$2(a===h.dtype,()=>"All tensors passed to stack must have matching dtypes")});const c=[],u=e.map(h=>{const d=expandDims({inputs:{input:h},backend:t,attrs:{dim:r}});return c.push(d),d}),l=concat({inputs:u,backend:t,attrs:{axis:r}});return c.forEach(h=>t.disposeIntermediateTensorInfo(h)),l}const packConfig={kernelName:Pack,backendName:"webgl",kernelFunc:pack};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PadProgram{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((l,h)=>l[0]+e[h]+l[1]);const r=e.length,i=getCoordsDataType(r),a=t.map(l=>l[0]).join(","),c=t.map((l,h)=>l[0]+e[h]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${a};
        int end = ${c};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(float(${s}));
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${a});
      ${i} end = ${i}(${c});

      void main() {
        ${i} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(float(${s}));
        } else {
          ${i} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PadPackedProgram{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((x,b)=>x[0]+e[b]+x[1]);const r=e.length,i=getCoordsDataType(r),a=t.map(x=>x[0]).join(","),c=t.map((x,b)=>x[0]+e[b]).join(","),u=getChannels("rc",r),l=getChannels("source",r),h=`${u[r-1]} < ${this.outputShape[r-1]}`,d=r===1?"source":`vec2(${l.slice(-2).join()})`,f=[`${i} rc = outputLoc;`,`${u[r-1]} += 1;
       if(${h}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${u[r-2]} += 1;
       if(${u[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${u[r-1]} += 1;
         if(${h}) {`],y=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let g="";for(let x=0,b=r===1?2:4;x<b;x++)g+=`
        ${f[x]}
        if (${y}) {
          result[${x}] = float(${s});
        } else {
          ${i} source = rc - start;
          result[${x}] = getChannel(getX(${l.join()}), ${d});
        }
      `;g+=r===1?"} ":"}}",this.userCode=`
      const ${i} start = ${i}(${a});
      const ${i} end = ${i}(${c});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${g}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const padV2=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:i,constantValue:a}=s,c=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new PadPackedProgram(r.shape,i,a):new PadProgram(r.shape,i,a);return t.runWebGLProgram(c,[r],r.dtype)},padV2Config={kernelName:PadV2,backendName:"webgl",kernelFunc:padV2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const POW=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,POW_PACKED=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+CHECK_NAN_SNIPPET+`
  return result;
`,pow=binaryKernelFunc({opSnippet:POW,packedOpSnippet:POW_PACKED}),powConfig={kernelName:Pow$1,backendName:"webgl",kernelFunc:pow};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function prod(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s,c=r.shape.length,u=[],l=parseAxisParam(i,r.shape);let h=l;const d=getAxesPermutation(h,c);let f=r;d!=null&&(f=transpose$1({inputs:{x:r},backend:t,attrs:{perm:d}}),h=getInnerMostAxes(h.length,c),u.push(f)),assertAxesAreInnerMostDims("prod",h,c);let y;if(t.shouldExecuteOnCPU([f])){const g=t.texData.get(f.dataId).values,{outVals:x,outShape:b,outDtype:v}=prodImplCPU(f.shape,f.dtype,g,h);y=t.makeTensorInfo(b,v,x)}else{const[g,x]=computeOutAndReduceShapes(f.shape,h),b=sizeFromShape(x),v=reshape({inputs:{x:f},backend:t,attrs:{shape:[-1,b]}}),S=sumOutType(r.dtype),T=reduce(v,S,"prod",t);y=reshape({inputs:{x:T},backend:t,attrs:{shape:g}}),u.push(v),u.push(T)}if(a){u.push(y);const g=expandShapeToKeepDim(y.shape,l);y=reshape({inputs:{x:y},backend:t,attrs:{shape:g}})}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),y}const prodConfig={kernelName:Prod,backendName:"webgl",kernelFunc:prod};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const range$1=n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:i,dtype:a}=t,c=rangeImplCPU(s,r,i,a);return e.makeTensorInfo([c.length],a,c)},rangeConfig={kernelName:Range,backendName:"webgl",kernelFunc:range$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RECIPROCAL="return 1.0 / x;",reciprocal=unaryKernelFunc({opSnippet:RECIPROCAL}),reciprocalConfig={kernelName:Reciprocal,backendName:"webgl",kernelFunc:reciprocal};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RELU=CHECK_NAN_SNIPPET$2+`
  return (x < 0.0) ? 0.0 : x;
`,RELU_PACKED=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,relu=unaryKernelFunc({opSnippet:RELU,packedOpSnippet:RELU_PACKED}),reluConfig={kernelName:Relu$1,backendName:"webgl",kernelFunc:relu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RELU6=CHECK_NAN_SNIPPET$2+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,RELU6_PACKED=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,relu6=unaryKernelFunc({opSnippet:RELU6,packedOpSnippet:RELU6_PACKED}),relu6Config={kernelName:Relu6$1,backendName:"webgl",kernelFunc:relu6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeBilinearProgram{constructor(e,t,s,r,i){this.variableNames=["A"],this.outputShape=[];const[a,c,u,l]=e;this.outputShape=[a,t,s,l];const h=[r&&t>1?c-1:c,r&&s>1?u-1:u],d=[r&&t>1?t-1:t,r&&s>1?s-1:s];let f;i?f="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${h[0]/d[0]},
          ${h[1]/d[1]});
      const vec2 inputShapeRC = vec2(${c}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeBilinearPackedProgram{constructor(e,t,s,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,c,u,l]=e;this.outputShape=[a,t,s,l];const h=[r&&t>1?c-1:c,r&&s>1?u-1:u],d=[r&&t>1?t-1:t,r&&s>1?s-1:s];let f;i?f="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${h[0]/d[0]},
          ${h[1]/d[1]},
          ${h[1]/d[1]});
      const vec3 inputShapeRC = vec3(${c}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinear(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:i,halfPixelCenters:a,size:c}=s,[u,l]=c,h=env().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ResizeBilinearPackedProgram(r.shape,u,l,i,a):new ResizeBilinearProgram(r.shape,u,l,i,a);return t.runWebGLProgram(h,[r],"float32")}const resizeBilinearConfig={kernelName:ResizeBilinear,backendName:"webgl",kernelFunc:resizeBilinear};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeBilinearBackpropProgram{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,i]=t,[,a,c]=e,u=[s&&a>1?r-1:r,s&&c>1?i-1:i],l=[s&&a>1?a-1:a,s&&c>1?c-1:c],h=u[0]/l[0],d=u[1]/l[1],f=1/h,y=1/d,g=Math.ceil(f)*2+2,x=Math.ceil(y)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${h});
        const float widthScale = float(${d});

        const float invHeightScale = float(${f});
        const float invWidthScale = float(${y});

        const int winHeight = int(${g});
        const int winWidth = int(${x});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${c}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${i-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinearGrad(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:i}=e,{alignCorners:a}=s,c=new ResizeBilinearBackpropProgram(i.shape,r.shape,a);return t.runWebGLProgram(c,[i],i.dtype)}const resizeBilinearGradConfig={kernelName:ResizeBilinearGrad,backendName:"webgl",kernelFunc:resizeBilinearGrad};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeNearestNeighborProgram{constructor(e,t,s,r,i){this.variableNames=["A"],this.outputShape=[];const[a,c,u,l]=e;this.outputShape=[a,t,s,l];const h=[r&&t>1?c-1:c,r&&s>1?u-1:u],d=[r&&t>1?t-1:t,r&&s>1?s-1:s],f=r?"0.5":"0.0";let y;i?y="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":y="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${h[0]/d[0]},
          ${h[1]/d[1]});
      const vec2 inputShapeRC = vec2(${c}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${y};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${f})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighbor(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:i,halfPixelCenters:a,size:c}=s,[u,l]=c,h=new ResizeNearestNeighborProgram(r.shape,u,l,i,a);return t.runWebGLProgram(h,[r],r.dtype)}const resizeNearestNeighborConfig={kernelName:ResizeNearestNeighbor,backendName:"webgl",kernelFunc:resizeNearestNeighbor};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeNearestNeigborBackpropProgram{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,i]=t,[,a,c]=e,u=[s&&a>1?r-1:r,s&&c>1?i-1:i],l=[s&&a>1?a-1:a,s&&c>1?c-1:c],h=u[0]/l[0],d=u[1]/l[1],f=1/h,y=1/d,g=Math.ceil(f)*2+2,x=Math.ceil(y)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${h});
        const float widthScale = float(${d});

        const float invHeightScale = float(${f});
        const float invWidthScale = float(${y});

        const int winHeight = int(${g});
        const int winWidth = int(${x});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${c}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${i}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighborGrad(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:i}=e,{alignCorners:a}=s,c=new ResizeNearestNeigborBackpropProgram(i.shape,r.shape,a);return t.runWebGLProgram(c,[i],i.dtype)}const resizeNearestNeighborGradConfig={kernelName:ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:resizeNearestNeighborGrad};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ReverseProgram{constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const r=c=>t.indexOf(c)!==-1&&e[c]!==1?`${e[c]} - coords[${c}] - 1`:`coords[${c}]`,i=e.map((c,u)=>r(u)).join(","),a=getCoordsDataType(s);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ReversePackedProgram{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const r=getChannels("rc",s),i=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,a=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,c=getCoordsDataType(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${i}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${c} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(r.slice())};
          if(${i}){
            result.g = ${l(r.slice())};
          }
          if(${a}) {
            result.b = ${h(r.slice())};
            if(${i}) {
              result.a = ${d(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(g){return f(g)}function l(g){return g[s-1]="("+g[s-1]+" + 1)",f(g)}function h(g){return g[s-2]="("+g[s-2]+" + 1)",f(g)}function d(g){return g[s-1]="("+g[s-1]+" + 1)",g[s-2]="("+g[s-2]+" + 1)",f(g)}function f(g){const x=e.map((S,T)=>y(T,g)),b=x.join(","),v=x.slice(-2).join(",");return`getChannel(getX(${b}), vec2(${v}))`}function y(g,x){return t.indexOf(g)!==-1&&e[g]!==1?`${e[g]} - ${x[g]} - 1`:`${x[g]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reverse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:i}=s,a=r.shape.length,c=parseAxisParam(i,r.shape);if(a===0)return identity({inputs:{x:r},backend:t});const u=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ReversePackedProgram(r.shape,c):new ReverseProgram(r.shape,c);return t.runWebGLProgram(u,[r],r.dtype)}const reverseConfig={kernelName:Reverse,backendName:"webgl",kernelFunc:reverse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RotateProgram{constructor(e,t,s,r){this.variableNames=["Image"],this.outputShape=[];const i=e[1],a=e[2],c=Math.sin(t).toFixed(3),u=Math.cos(t).toFixed(3);this.outputShape=e;const[l,h]=getImageCenter(r,i,a),d=l.toFixed(3),f=h.toFixed(3);let y="";typeof s=="number"?y=`float outputValue = ${s.toFixed(2)};`:y=`
        vec3 fill = vec3(${s.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - ${d}) * ${u} - (float(y) - ${f}) * ${c};
          float coordYFloat = (float(x) - ${d}) * ${c} + (float(y) - ${f}) * ${u};
          int coordX = int(round(coordXFloat + ${d}));
          int coordY = int(round(coordYFloat + ${f}));
          ${y}
          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${i}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rotateWithOffsetConfig={kernelName:RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:i,center:a}=e,c=t,u=new RotateProgram(s.shape,r,i,a);return c.runWebGLProgram(u,[s],s.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ROUND=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,round=unaryKernelFunc({opSnippet:ROUND}),roundConfig={kernelName:Round,backendName:"webgl",kernelFunc:round};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RSQRT="return inversesqrt(x);",rsqrt=unaryKernelFunc({opSnippet:RSQRT,cpuKernelImpl:rsqrtImplCPU}),rsqrtConfig={kernelName:Rsqrt,backendName:"webgl",kernelFunc:rsqrt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ScatterProgram{constructor(e,t,s,r,i,a,c=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const u=getCoordsDataType(i.length),l=getCoordsDataType(a.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let f="";r===1?f="i":r===2&&(f="i, coords[1]");const y=`getUpdates(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${i});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${g};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${y};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function scatterNd(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:i}=e,{shape:a}=s,{sliceRank:c,numUpdates:u,sliceSize:l,strides:h,outputSize:d}=calculateShapes(i,r,a),f=[d/l,l];if(d===0)return t.makeTensorInfo(a,r.dtype);const y=reshape({inputs:{x:r},backend:t,attrs:{shape:[u,c]}}),g=reshape({inputs:{x:i},backend:t,attrs:{shape:[u,l]}}),x=t.makeTensorInfo([],"float32",new Float32Array([0])),b=new ScatterProgram(u,c,y.shape.length,g.shape.length,h,f),v=t.runWebGLProgram(b,[g,y,x],g.dtype),S=reshape({inputs:{x:v},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(x),S}const scatterNdConfig={kernelName:ScatterNd,backendName:"webgl",kernelFunc:scatterNd};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SelectProgram{constructor(e,t,s){this.variableNames=["c","a","b"],this.outputShape=t;let r,i;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)i="resRC",r="resRC";else{const c=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],l=[];for(let h=0;h<t.length;h++)l.push(`${c[h]}`),h<e&&u.push(`${c[h]}`);r=u.join(),i=l.join()}const a=getCoordsDataType(s);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${i}));
        } else {
          setOutput(getB(${i}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function select(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:i}=e,a=new SelectProgram(s.shape.length,r.shape,r.shape.length);return t.runWebGLProgram(a,[s,r,i],upcastType(r.dtype,i.dtype))}const selectConfig={kernelName:Select,backendName:"webgl",kernelFunc:select};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SELU=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${SELU_SCALEALPHA};
  float scale = ${SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,selu=unaryKernelFunc({opSnippet:SELU}),seluConfig={kernelName:Selu$1,backendName:"webgl",kernelFunc:selu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SIGMOID="return 1.0 / (1.0 + exp(-1.0 * x));",sigmoid=unaryKernelFunc({opSnippet:SIGMOID}),sigmoidConfig={kernelName:Sigmoid$1,backendName:"webgl",kernelFunc:sigmoid};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SIGN=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,sign=unaryKernelFunc({opSnippet:SIGN}),signConfig={kernelName:Sign,backendName:"webgl",kernelFunc:sign};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SIN=CHECK_NAN_SNIPPET_UNARY+`
  return sin(x);
`,sin=unaryKernelFunc({opSnippet:SIN}),sinConfig={kernelName:Sin,backendName:"webgl",kernelFunc:sin};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SINH=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,sinh=unaryKernelFunc({opSnippet:SINH}),sinhConfig={kernelName:Sinh,backendName:"webgl",kernelFunc:sinh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SOFTPLUS=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,softplus=unaryKernelFunc({opSnippet:SOFTPLUS}),softplusConfig={kernelName:Softplus$1,backendName:"webgl",kernelFunc:softplus};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const spaceToBatchND=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:i,paddings:a}=s;assert$2(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const c=i.reduce((v,S)=>v*S),u=[[0,0]];u.push(...a);for(let v=1+i.length;v<r.shape.length;++v)u.push([0,0]);const l=[],h=padV2({inputs:{x:r},backend:t,attrs:{paddings:u,constantValue:0}}),d=getReshaped(h.shape,i,c,!1),f=getPermuted(d.length,i.length,!1),y=getReshapedPermuted(h.shape,i,c,!1),g=reshape({inputs:{x:h},backend:t,attrs:{shape:d}}),x=transpose$1({inputs:{x:g},backend:t,attrs:{perm:f}}),b=reshape({inputs:{x},backend:t,attrs:{shape:y}});return l.push(h),l.push(g),l.push(x),l.forEach(v=>t.disposeIntermediateTensorInfo(v)),b},spaceToBatchNDConfig={kernelName:SpaceToBatchND,backendName:"webgl",kernelFunc:spaceToBatchND};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseToDense(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:i,defaultValue:a}=e,{outputShape:c}=s,{sliceRank:u,numUpdates:l,strides:h,outputSize:d}=calculateShapes(i,r,c),f=!1,y=new ScatterProgram(l,u,r.shape.length,i.shape.length,h,[d,1],f),g=t.runWebGLProgram(y,[i,r,a],i.dtype),x=reshape({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(g),x}const sparseToDenseConfig={kernelName:SparseToDense,backendName:"webgl",kernelFunc:sparseToDense};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function splitV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:i,axis:a}=s,c=parseAxisParam(a,r.shape)[0],u=prepareSplitSize(r,i,c),l=r.shape.length,h=new Array(l).fill(0),d=r.shape.slice();return u.map(f=>{const y=[...d];y[c]=f;const g=slice({inputs:{x:r},backend:t,attrs:{begin:h,size:y}});return h[c]+=f,g})}const splitVConfig={kernelName:SplitV,backendName:"webgl",kernelFunc:splitV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SQRT="return sqrt(x);",sqrt=unaryKernelFunc({opSnippet:SQRT}),sqrtConfig={kernelName:Sqrt,backendName:"webgl",kernelFunc:sqrt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SQUARE="return x * x;",square=unaryKernelFunc({opSnippet:SQUARE}),squareConfig={kernelName:Square,backendName:"webgl",kernelFunc:square};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SQUARED_DIFFERENCE="return (a - b) * (a - b);",squaredDifference=binaryKernelFunc({opSnippet:SQUARED_DIFFERENCE,packedOpSnippet:SQUARED_DIFFERENCE}),squaredDifferenceConfig={kernelName:SquaredDifference,backendName:"webgl",kernelFunc:squaredDifference};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function step({inputs:n,attrs:e,backend:t}){const{x:s}=n,r=CHECK_NAN_SNIPPET$2+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,i=new UnaryOpProgram(s.shape,r);return t.runWebGLProgram(i,[s],s.dtype)}const stepConfig={kernelName:Step,backendName:"webgl",kernelFunc:step};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class StridedSliceProgram{constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,i=getCoordsDataType(s.length),a=getCoordsDataType(s.length);let c="";if(r===1)c="coords * strides + begin";else{let u=0;c=s.map((l,h)=>(u++,s.length===1?`coords * strides[${h}] + begin[${h}]`:`coords[${u-1}] * strides[${h}] + begin[${h}]`)).join(",")}this.userCode=`
      ${i} begin = ${i}(${e});
      ${i} strides = ${i}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${c}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stridedSlice(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:i,end:a,strides:c,beginMask:u,endMask:l,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:f}=s,{nonStrided:y,$begin:g,$strides:x,size:b,newShape:v,outShape:S}=sliceInfo(r.shape,i,a,c,u,l,h,d,f),T=reshape({inputs:{x:r},backend:t,attrs:{shape:v}});let w;if(y){const N=slice({inputs:{x:T},backend:t,attrs:{begin:g,size:b}});w=reshape({inputs:{x:N},backend:t,attrs:{shape:S}}),t.disposeIntermediateTensorInfo(N)}else if(S.some(N=>N===0))w=t.makeTensorInfo(S,r.dtype,[]);else if(t.shouldExecuteOnCPU([T])){const $=t.texData.get(T.dataId).values,E=buffer(T.shape,T.dtype,$),k=stridedSliceImplCPU(S,E,x,g);w=t.makeTensorInfo(S,T.dtype,k.values)}else{const _=new StridedSliceProgram(g,x,S);w=t.runWebGLProgram(_,[T],T.dtype)}const C=reshape({inputs:{x:w},backend:t,attrs:{shape:S}});return t.disposeIntermediateTensorInfo(T),t.disposeIntermediateTensorInfo(w),C}const stridedSliceConfig={kernelName:StridedSlice,backendName:"webgl",kernelFunc:stridedSlice};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TAN="return tan(x);",tan=unaryKernelFunc({opSnippet:TAN}),tanConfig={kernelName:Tan,backendName:"webgl",kernelFunc:tan};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TANH=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,tanh=unaryKernelFunc({opSnippet:TANH}),tanhConfig={kernelName:Tanh$1,backendName:"webgl",kernelFunc:tanh};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TileProgram{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[a]*t[a];this.outputShape=s,this.rank=s.length;const r=getCoordsDataType(this.rank),i=getSourceCoords(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${i}));
      }
    `}}function getSourceCoords(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${t[r]}, ${n[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tile(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:i}=s;if(r.dtype==="string"){const l=t.readSync(r.dataId).map(f=>decodeString(f)),h=buffer(r.shape,r.dtype,l),d=tileImplCPU(h,i);return t.makeTensorInfo(d.shape,d.dtype,d.values)}const a=new TileProgram(r.shape,i);return t.runWebGLProgram(a,[r],r.dtype)}const tileConfig={kernelName:Tile,backendName:"webgl",kernelFunc:tile};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function topK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:i,sorted:a}=s,c=t.readSync(r.dataId),[u,l]=topKImplCPU(c,r.shape,r.dtype,i,a);return[t.makeTensorInfo(u.shape,u.dtype,u.values),t.makeTensorInfo(l.shape,l.dtype,l.values)]}const topKConfig={kernelName:TopK,backendName:"webgl",kernelFunc:topK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unique$1(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:i}=e;assertNotComplex(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=s.readSync(i.dataId),{outputValues:c,outputShape:u,indices:l}=uniqueImplCPU(a,r,i.shape,i.dtype);return[s.makeTensorInfo(u,i.dtype,c),s.makeTensorInfo([l.length],"int32",l)]}const uniqueConfig={kernelName:Unique,backendName:"webgl",kernelFunc:unique$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unpack(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:i}=s;i<0&&(i+=r.shape.length);const a=r,c=a.shape.length,u=r.shape[i],l=new Array(c-1);let h=0;for(let x=0;x<c;x++)x!==i&&(l[h++]=a.shape[x]);const d=[],f=new Array(c).fill(0),y=a.shape.slice();y[i]=1;const g=new Array(u);for(let x=0;x<g.length;x++){f[i]=x;const b=slice({inputs:{x:a},backend:t,attrs:{begin:f,size:y}}),v=reshape({inputs:{x:b},backend:t,attrs:{shape:l}});g[x]=v,d.push(b)}return d.forEach(x=>t.disposeIntermediateTensorInfo(x)),g}const unpackConfig={kernelName:Unpack,backendName:"webgl",kernelFunc:unpack};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SegmentOpProgram{constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,r=e.batchSize,i=e.inSize,a=e.numSegments,c=a*Math.ceil(i/s);this.outputShape=[r,c];const u="0.0",l="sumValue",h=Math.floor(s/4)*4,d=s%4,f=`
        sumValue += dot(values, segFilter);
    `;let y="";i%s>0&&(y=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `);let g="";i%s>0&&(g=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${y}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${g}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${h}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${f}
        }

        int inIdx = inOffset + ${h};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${f}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${f}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${f}
        }
        setOutput(${l});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unsortedSegmentSum(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:i}=e,{numSegments:a}=s,c=r.shape.length,u=[];let l=0;const h=getAxesPermutation([l],c);let d=r;h!=null&&(d=transpose$1({inputs:{x:r},backend:t,attrs:{perm:h}}),u.push(d),l=getInnerMostAxes(1,c)[0]);const f=computeOutShape(d.shape,l,a),y=sizeFromShape([d.shape[l]]),g=reshape({inputs:{x:d},backend:t,attrs:{shape:[-1,y]}});u.push(g);const x=sumOutType(r.dtype),b=(w,C,N,_,$)=>{const E=w.shape[0],k=w.shape[1],F=segOpComputeOptimalWindowSize(k,$),P={windowSize:F,inSize:k,batchSize:E,numSegments:$},R=new SegmentOpProgram(P,C),O=t.compileAndRun(R,[w,N],_);if(u.push(O),O.shape[1]===$)return O;const B=range$1({backend:t,attrs:{start:0,stop:$,step:1,dtype:"float32"}}),L=tile({inputs:{x:B},backend:t,attrs:{reps:[k/F]}});return u.push(B),u.push(L),b(O,C,L,_,$)},v=b(g,"unsortedSegmentSum",i,x,a),S=reshape({inputs:{x:v},backend:t,attrs:{shape:f}});let T=S;if(h!=null){u.push(S);const w=getUndoAxesPermutation(h);T=transpose$1({inputs:{x:T},backend:t,attrs:{perm:w}})}return u.forEach(w=>t.disposeIntermediateTensorInfo(w)),T}const unsortedSegmentSumConfig={kernelName:UnsortedSegmentSum,backendName:"webgl",kernelFunc:unsortedSegmentSum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kernelConfigs=[LRNConfig,LRNGradConfig,_fusedMatMulConfig,absConfig,acosConfig,acoshConfig,addConfig,addNConfig,allConfig,anyConfig,argMaxConfig,argMinConfig,asinConfig,asinhConfig,atan2Config,atanConfig,atanhConfig,avgPool3DConfig,avgPoolConfig,avgPoolGrad3DConfig,avgPoolGradConfig,batchMatMulConfig,batchNormConfig,batchToSpaceNDConfig,bincountConfig,castConfig,ceilConfig,clipByValueConfig,complexAbsConfig,complexConfig,concatConfig,conv2DBackpropFilterConfig,conv2DBackpropInputConfig,conv2DConfig,conv3DBackpropFilterV2Config,conv3DBackpropInputConfig,conv3DConfig,cosConfig,coshConfig,cropAndResizeConfig,cumsumConfig,denseBincountConfig,depthToSpaceConfig,depthwiseConv2dNativeBackpropFilterConfig,depthwiseConv2dNativeBackpropInputConfig,depthwiseConv2dNativeConfig,diagConfig,dilation2DConfig,eluConfig,eluGradConfig,equalConfig,erfConfig,expConfig,expandDimsConfig,expm1Config,fftConfig,fillConfig,flipLeftRightConfig,floorConfig,floorDivConfig,fromPixelsConfig,fusedConv2DConfig,fusedDepthwiseConv2DConfig,gatherNdConfig,gatherV2Config,greaterConfig,greaterEqualConfig,identityConfig,ifftConfig,imagConfig,isFiniteConfig,isInfConfig,isNaNConfig,leakyReluConfig,lessConfig,lessEqualConfig,linSpaceConfig,log1pConfig,logConfig,logicalAndConfig,logicalNotConfig,logicalOrConfig,maxConfig,maxPool3DConfig,maxPoolConfig,maxPoolGrad3DConfig,maxPoolGradConfig,maxPoolWithArgmaxConfig,maximumConfig,meanConfig,minConfig,minimumConfig,mirrorPadConfig,modConfig,multinomialConfig,multiplyConfig,negConfig,nonMaxSuppressionV3Config,nonMaxSuppressionV4Config,nonMaxSuppressionV5Config,notEqualConfig,oneHotConfig,onesLikeConfig,packConfig,padV2Config,powConfig,preluConfig,prodConfig,rangeConfig,realConfig,realDivConfig,reciprocalConfig,relu6Config,reluConfig,reshapeConfig,resizeBilinearConfig,resizeBilinearGradConfig,resizeNearestNeighborConfig,resizeNearestNeighborGradConfig,reverseConfig,rotateWithOffsetConfig,roundConfig,rsqrtConfig,scatterNdConfig,selectConfig,seluConfig,sigmoidConfig,signConfig,sinConfig,sinhConfig,sliceConfig,softmaxConfig,softplusConfig,spaceToBatchNDConfig,sparseToDenseConfig,splitVConfig,sqrtConfig,squareConfig,squaredDifferenceConfig,stepConfig,stridedSliceConfig,subConfig,sumConfig,tanConfig,tanhConfig,tileConfig,topKConfig,transposeConfig,uniqueConfig,unpackConfig,unsortedSegmentSumConfig,zerosLikeConfig];for(const n of kernelConfigs)registerKernel(n);/** @license See the LICENSE file. */const version$1="2.8.6";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function auxiliaryInputFromSpec(n){switch(n.type){case"BinaryCounter":return new BinaryCounter(n.args);default:throw new Error(`Unknown auxiliary input: ${n}`)}}class AuxiliaryInput{constructor(e){this.depth=e}}class BinaryCounter extends AuxiliaryInput{constructor(e){super(e.numBits)}getTensors(e){const t=buffer([e,this.depth]);for(let s=0;s<e;++s)for(let r=0;r<this.depth;++r)t.set(Math.floor((s+1)/Math.pow(2,r))%2?1:-1,s,r);return t.toTensor().as2D(e,this.depth)}}var NAMES="C C# Db D D# Eb E F F# Gb G G# Ab A A# Bb B".split(" "),names=function(n){return typeof n!="string"?NAMES.slice():NAMES.filter(function(e){var t=e[1]||" ";return n.indexOf(t)!==-1})};names(" #");names(" b");var REGEX$2=/^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\d*)\s*(.*)$/;function tokenize$2(n){typeof n!="string"&&(n="");var e=REGEX$2.exec(n);return[e[1].toUpperCase(),e[2].replace(/x/g,"##"),e[3],e[4]]}var NO_NOTE=Object.freeze({pc:null,name:null,step:null,alt:null,oct:null,octStr:null,chroma:null,midi:null,freq:null}),SEMI=[0,2,4,5,7,9,11],properties$2=function(n){var e=tokenize$2(n);if(e[0]===""||e[3]!=="")return NO_NOTE;var t=e[0],s=e[1],r=e[2],i={letter:t,acc:s,octStr:r,pc:t+s,name:t+s+r,step:(t.charCodeAt(0)+3)%7,alt:s[0]==="b"?-s.length:s.length,oct:r.length?+r:null,chroma:0,midi:null,freq:null};return i.chroma=(SEMI[i.step]+i.alt+120)%12,i.midi=i.oct!==null?SEMI[i.step]+i.alt+12*(i.oct+1):null,i.freq=midiToFreq(i.midi),Object.freeze(i)},memo$2=function(n,e){return e===void 0&&(e={}),function(t){return e[t]||(e[t]=n(t))}},props$2=memo$2(properties$2),midiToFreq=function(n,e){return e===void 0&&(e=440),typeof n=="number"?Math.pow(2,(n-69)/12)*e:null},chroma$2=function(n){return props$2(n).chroma},LETTERS="CDEFGAB",stepToLetter=function(n){return LETTERS[n]},fillStr=function(n,e){return Array(e+1).join(n)},numToStr=function(n,e){return typeof n!="number"?"":e(n)},altToAcc=function(n){return numToStr(n,function(e){return e<0?fillStr("b",-e):fillStr("#",e)})},from=function(n,e){n===void 0&&(n={}),e===void 0&&(e=null);var t=e?Object.assign({},props$2(e),n):n,s=t.step,r=t.alt,i=t.oct;if(typeof s!="number")return null;var a=stepToLetter(s);if(!a)return null;var c=a+altToAcc(r);return i||i===0?c+i:c},build=from,IVL_TNL="([-+]?\\d+)(d{1,4}|m|M|P|A{1,4})",IVL_STR="(AA|A|P|M|m|d|dd)([-+]?\\d+)",REGEX$1=new RegExp("^"+IVL_TNL+"|"+IVL_STR+"$"),SIZES=[0,2,4,5,7,9,11],TYPES="PMMPPMM",tokenize$1=function(n){var e=REGEX$1.exec(""+n);return e===null?null:e[1]?[e[1],e[2]]:[e[4],e[3]]},NO_IVL=Object.freeze({name:null,num:null,q:null,step:null,alt:null,dir:null,type:null,simple:null,semitones:null,chroma:null,oct:null}),qToAlt=function(n,e){return e==="M"&&n==="M"||e==="P"&&n==="P"?0:e==="m"&&n==="M"?-1:/^A+$/.test(e)?e.length:/^d+$/.test(e)?n==="P"?-e.length:-e.length-1:null},numToStep=function(n){return(Math.abs(n)-1)%7},properties$1=function(n){var e=tokenize$1(n);if(e===null)return NO_IVL;var t={num:0,q:"d",name:"",type:"M",step:0,dir:-1,simple:1,alt:0,oct:0,semitones:0,chroma:0,ic:0};return t.num=+e[0],t.q=e[1],t.step=numToStep(t.num),t.type=TYPES[t.step],t.type==="M"&&t.q==="P"?NO_IVL:(t.name=""+t.num+t.q,t.dir=t.num<0?-1:1,t.simple=t.num===8||t.num===-8?t.num:t.dir*(t.step+1),t.alt=qToAlt(t.type,t.q),t.oct=Math.floor((Math.abs(t.num)-1)/7),t.semitones=t.dir*(SIZES[t.step]+t.alt+12*t.oct),t.chroma=(t.dir*(SIZES[t.step]+t.alt)%12+12)%12,Object.freeze(t))},cache={};function props$1(n){return typeof n!="string"?NO_IVL:cache[n]||(cache[n]=properties$1(n))}var chroma$1=function(n){return props$1(n).chroma},FIFTHS=[0,2,4,-1,1,3,5],fOcts=function(n){return Math.floor(n*7/12)},FIFTH_OCTS=FIFTHS.map(fOcts),encode$1=function(n){var e=n.step,t=n.alt,s=n.oct,r=n.dir;r===void 0&&(r=1);var i=FIFTHS[e]+7*t;if(s===null)return[r*i];var a=s-FIFTH_OCTS[e]-4*t;return[r*i,r*a]},STEPS=[3,0,4,1,5,2,6];function unaltered(n){var e=(n+1)%7;return e<0?7+e:e}var decode=function(n,e,t){var s=STEPS[unaltered(n)],r=Math.floor((n+1)/7);if(e===void 0)return{step:s,alt:r,dir:t};var i=e+4*r+FIFTH_OCTS[s];return{step:s,alt:r,oct:i,dir:t}},memo$1=function(n,e){return e===void 0&&(e={}),function(t){return e[t]||(e[t]=n(t))}},encoder=function(n){return memo$1(function(e){var t=n(e);return t.name===null?null:encode$1(t)})},encodeNote$1=encoder(props$2),encodeIvl=encoder(props$1);function transpose(n,e){if(arguments.length===1)return function(i){return transpose(n,i)};var t=encodeNote$1(n),s=encodeIvl(e);if(t===null||s===null)return null;var r=t.length===1?[t[0]+s[0]]:[t[0]+s[0],t[1]+s[1]];return build(decode(r[0],r[1]))}const chromatic=["1P 2m 2M 3m 3M 4P 4A 5P 6m 6M 7m 7M"],lydian=["1P 2M 3M 4A 5P 6M 7M"],major=["1P 2M 3M 4P 5P 6M 7M",["ionian"]],mixolydian=["1P 2M 3M 4P 5P 6M 7m",["dominant"]],dorian=["1P 2M 3m 4P 5P 6M 7m"],aeolian=["1P 2M 3m 4P 5P 6m 7m",["minor"]],phrygian=["1P 2m 3m 4P 5P 6m 7m"],locrian=["1P 2m 3m 4P 5d 6m 7m"],altered=["1P 2m 3m 3M 5d 6m 7m",["super locrian","diminished whole tone","pomeroy"]],diminished=["1P 2M 3m 4P 5d 6m 6M 7M",["whole-half diminished"]],iwato=["1P 2m 4P 5d 7m"],hirajoshi=["1P 2M 3m 5P 6m"],kumoijoshi=["1P 2m 4P 5P 6m"],pelog=["1P 2m 3m 5P 6m"],prometheus=["1P 2M 3M 4A 6M 7m"],ritusen=["1P 2M 4P 5P 6M"],scriabin=["1P 2m 3M 5P 6M"],piongio=["1P 2M 4P 5P 6M 7m"],augmented=["1P 2A 3M 5P 5A 7M"],neopolitan=["1P 2m 3m 4P 5P 6m 7M"],egyptian=["1P 2M 4P 5P 7m"],oriental=["1P 2m 3M 4P 5d 6M 7m"],flamenco=["1P 2m 3m 3M 4A 5P 7m"],balinese=["1P 2m 3m 4P 5P 6m 7M"],persian=["1P 2m 3M 4P 5d 6m 7M"],bebop=["1P 2M 3M 4P 5P 6M 7m 7M"],enigmatic=["1P 2m 3M 5d 6m 7m 7M"],ichikosucho=["1P 2M 3M 4P 5d 5P 6M 7M"];var sdata={chromatic,lydian,major,mixolydian,dorian,aeolian,phrygian,locrian,"melodic minor":["1P 2M 3m 4P 5P 6M 7M"],"melodic minor second mode":["1P 2m 3m 4P 5P 6M 7m"],"lydian augmented":["1P 2M 3M 4A 5A 6M 7M"],"lydian dominant":["1P 2M 3M 4A 5P 6M 7m",["lydian b7"]],"melodic minor fifth mode":["1P 2M 3M 4P 5P 6m 7m",["hindu","mixolydian b6M"]],"locrian #2":["1P 2M 3m 4P 5d 6m 7m",["half-diminished"]],altered,"harmonic minor":["1P 2M 3m 4P 5P 6m 7M"],"phrygian dominant":["1P 2m 3M 4P 5P 6m 7m",["spanish","phrygian major"]],"half-whole diminished":["1P 2m 3m 3M 4A 5P 6M 7m",["dominant diminished"]],diminished,"major pentatonic":["1P 2M 3M 5P 6M",["pentatonic"]],"lydian pentatonic":["1P 3M 4A 5P 7M",["chinese"]],"mixolydian pentatonic":["1P 3M 4P 5P 7m",["indian"]],"locrian pentatonic":["1P 3m 4P 5d 7m",["minor seven flat five pentatonic"]],"minor pentatonic":["1P 3m 4P 5P 7m"],"minor six pentatonic":["1P 3m 4P 5P 6M"],"minor hexatonic":["1P 2M 3m 4P 5P 7M"],"flat three pentatonic":["1P 2M 3m 5P 6M",["kumoi"]],"flat six pentatonic":["1P 2M 3M 5P 6m"],"major flat two pentatonic":["1P 2m 3M 5P 6M"],"whole tone pentatonic":["1P 3M 5d 6m 7m"],"ionian pentatonic":["1P 3M 4P 5P 7M"],"lydian #5P pentatonic":["1P 3M 4A 5A 7M"],"lydian dominant pentatonic":["1P 3M 4A 5P 7m"],"minor #7M pentatonic":["1P 3m 4P 5P 7M"],"super locrian pentatonic":["1P 3m 4d 5d 7m"],"in-sen":["1P 2m 4P 5P 7m"],iwato,hirajoshi,kumoijoshi,pelog,"vietnamese 1":["1P 3m 4P 5P 6m"],"vietnamese 2":["1P 3m 4P 5P 7m"],prometheus,"prometheus neopolitan":["1P 2m 3M 4A 6M 7m"],ritusen,scriabin,piongio,"major blues":["1P 2M 3m 3M 5P 6M"],"minor blues":["1P 3m 4P 5d 5P 7m",["blues"]],"composite blues":["1P 2M 3m 3M 4P 5d 5P 6M 7m"],augmented,"augmented heptatonic":["1P 2A 3M 4P 5P 5A 7M"],"dorian #4":["1P 2M 3m 4A 5P 6M 7m"],"lydian diminished":["1P 2M 3m 4A 5P 6M 7M"],"whole tone":["1P 2M 3M 4A 5A 7m"],"leading whole tone":["1P 2M 3M 4A 5A 7m 7M"],"lydian minor":["1P 2M 3M 4A 5P 6m 7m"],"locrian major":["1P 2M 3M 4P 5d 6m 7m",["arabian"]],neopolitan,"neopolitan minor":["1P 2m 3m 4P 5P 6m 7M"],"neopolitan major":["1P 2m 3m 4P 5P 6M 7M",["dorian b2"]],"neopolitan major pentatonic":["1P 3M 4P 5d 7m"],"romanian minor":["1P 2M 3m 5d 5P 6M 7m"],"double harmonic lydian":["1P 2m 3M 4A 5P 6m 7M"],"harmonic major":["1P 2M 3M 4P 5P 6m 7M"],"double harmonic major":["1P 2m 3M 4P 5P 6m 7M",["gypsy"]],egyptian,"hungarian minor":["1P 2M 3m 4A 5P 6m 7M"],"hungarian major":["1P 2A 3M 4A 5P 6M 7m"],oriental,"spanish heptatonic":["1P 2m 3m 3M 4P 5P 6m 7m"],flamenco,balinese,"todi raga":["1P 2m 3m 4A 5P 6m 7M"],"malkos raga":["1P 3m 4P 6m 7m"],"kafi raga":["1P 3m 3M 4P 5P 6M 7m 7M"],"purvi raga":["1P 2m 3M 4P 4A 5P 6m 7M"],persian,bebop,"bebop dominant":["1P 2M 3M 4P 5P 6M 7m 7M"],"bebop minor":["1P 2M 3m 3M 4P 5P 6M 7m"],"bebop major":["1P 2M 3M 4P 5P 5A 6M 7M"],"bebop locrian":["1P 2m 3m 4P 5d 5P 6m 7m"],"minor bebop":["1P 2M 3m 4P 5P 6m 7m 7M"],"mystery #1":["1P 2m 3M 5d 6m 7m"],enigmatic,"minor six diminished":["1P 2M 3m 4P 5P 6m 6M 7M"],"ionian augmented":["1P 2M 3M 4P 5A 6M 7M"],"lydian #9":["1P 2m 3M 4A 5P 6M 7M"],ichikosucho,"six tone symmetric":["1P 2m 3M 4P 5A 6M"]};const M=["1P 3M 5P",["Major",""]],M13=["1P 3M 5P 7M 9M 13M",["maj13","Maj13"]],M6=["1P 3M 5P 13M",["6"]],M69=["1P 3M 5P 6M 9M",["69"]],M7add13=["1P 3M 5P 6M 7M 9M"],M7b5=["1P 3M 5d 7M"],M7b6=["1P 3M 6m 7M"],M7b9=["1P 3M 5P 7M 9m"],M7sus4=["1P 4P 5P 7M"],M9=["1P 3M 5P 7M 9M",["maj9","Maj9"]],M9b5=["1P 3M 5d 7M 9M"],M9sus4=["1P 4P 5P 7M 9M"],Madd9=["1P 3M 5P 9M",["2","add9","add2"]],Maj7=["1P 3M 5P 7M",["maj7","M7"]],Mb5=["1P 3M 5d"],Mb6=["1P 3M 13m"],Msus2=["1P 2M 5P",["add9no3","sus2"]],Msus4=["1P 4P 5P",["sus","sus4"]],Maddb9=["1P 3M 5P 9m"],m=["1P 3m 5P"],m11=["1P 3m 5P 7m 9M 11P",["_11"]],m11b5=["1P 3m 7m 12d 2M 4P",["h11","_11b5"]],m13=["1P 3m 5P 7m 9M 11P 13M",["_13"]],m6=["1P 3m 4P 5P 13M",["_6"]],m69=["1P 3m 5P 6M 9M",["_69"]],m7=["1P 3m 5P 7m",["minor7","_","_7"]],m7add11=["1P 3m 5P 7m 11P",["m7add4"]],m7b5=["1P 3m 5d 7m",["half-diminished","h7","_7b5"]],m9=["1P 3m 5P 7m 9M",["_9"]],m9b5=["1P 3m 7m 12d 2M",["h9","-9b5"]],mMaj7=["1P 3m 5P 7M",["mM7","_M7"]],mMaj7b6=["1P 3m 5P 6m 7M",["mM7b6"]],mM9=["1P 3m 5P 7M 9M",["mMaj9","-M9"]],mM9b6=["1P 3m 5P 6m 7M 9M",["mMaj9b6"]],mb6M7=["1P 3m 6m 7M"],mb6b9=["1P 3m 6m 9m"],o=["1P 3m 5d",["mb5","dim"]],o7=["1P 3m 5d 13M",["diminished","m6b5","dim7"]],o7M7=["1P 3m 5d 6M 7M"],oM7=["1P 3m 5d 7M"],sus24=["1P 2M 4P 5P",["sus4add9"]],madd4=["1P 3m 4P 5P"],madd9=["1P 3m 5P 9M"];var cdata={"4":["1P 4P 7m 10m",["quartal"]],"5":["1P 5P"],"7":["1P 3M 5P 7m",["Dominant","Dom"]],"9":["1P 3M 5P 7m 9M",["79"]],"11":["1P 5P 7m 9M 11P"],"13":["1P 3M 5P 7m 9M 13M",["13_"]],"64":["5P 8P 10M"],M,"M#5":["1P 3M 5A",["augmented","maj#5","Maj#5","+","aug"]],"M#5add9":["1P 3M 5A 9M",["+add9"]],M13,"M13#11":["1P 3M 5P 7M 9M 11A 13M",["maj13#11","Maj13#11","M13+4","M13#4"]],M6,"M6#11":["1P 3M 5P 6M 11A",["M6b5","6#11","6b5"]],M69,"M69#11":["1P 3M 5P 6M 9M 11A"],"M7#11":["1P 3M 5P 7M 11A",["maj7#11","Maj7#11","M7+4","M7#4"]],"M7#5":["1P 3M 5A 7M",["maj7#5","Maj7#5","maj9#5","M7+"]],"M7#5sus4":["1P 4P 5A 7M"],"M7#9#11":["1P 3M 5P 7M 9A 11A"],M7add13,M7b5,M7b6,M7b9,M7sus4,M9,"M9#11":["1P 3M 5P 7M 9M 11A",["maj9#11","Maj9#11","M9+4","M9#4"]],"M9#5":["1P 3M 5A 7M 9M",["Maj9#5"]],"M9#5sus4":["1P 4P 5A 7M 9M"],M9b5,M9sus4,Madd9,Maj7,Mb5,Mb6,Msus2,Msus4,Maddb9,"11b9":["1P 5P 7m 9m 11P"],"13#11":["1P 3M 5P 7m 9M 11A 13M",["13+4","13#4"]],"13#9":["1P 3M 5P 7m 9A 13M",["13#9_"]],"13#9#11":["1P 3M 5P 7m 9A 11A 13M"],"13b5":["1P 3M 5d 6M 7m 9M"],"13b9":["1P 3M 5P 7m 9m 13M"],"13b9#11":["1P 3M 5P 7m 9m 11A 13M"],"13no5":["1P 3M 7m 9M 13M"],"13sus4":["1P 4P 5P 7m 9M 13M",["13sus"]],"69#11":["1P 3M 5P 6M 9M 11A"],"7#11":["1P 3M 5P 7m 11A",["7+4","7#4","7#11_","7#4_"]],"7#11b13":["1P 3M 5P 7m 11A 13m",["7b5b13"]],"7#5":["1P 3M 5A 7m",["+7","7aug","aug7"]],"7#5#9":["1P 3M 5A 7m 9A",["7alt","7#5#9_","7#9b13_"]],"7#5b9":["1P 3M 5A 7m 9m"],"7#5b9#11":["1P 3M 5A 7m 9m 11A"],"7#5sus4":["1P 4P 5A 7m"],"7#9":["1P 3M 5P 7m 9A",["7#9_"]],"7#9#11":["1P 3M 5P 7m 9A 11A",["7b5#9"]],"7#9#11b13":["1P 3M 5P 7m 9A 11A 13m"],"7#9b13":["1P 3M 5P 7m 9A 13m"],"7add6":["1P 3M 5P 7m 13M",["67","7add13"]],"7b13":["1P 3M 7m 13m"],"7b5":["1P 3M 5d 7m"],"7b6":["1P 3M 5P 6m 7m"],"7b9":["1P 3M 5P 7m 9m"],"7b9#11":["1P 3M 5P 7m 9m 11A",["7b5b9"]],"7b9#9":["1P 3M 5P 7m 9m 9A"],"7b9b13":["1P 3M 5P 7m 9m 13m"],"7b9b13#11":["1P 3M 5P 7m 9m 11A 13m",["7b9#11b13","7b5b9b13"]],"7no5":["1P 3M 7m"],"7sus4":["1P 4P 5P 7m",["7sus"]],"7sus4b9":["1P 4P 5P 7m 9m",["susb9","7susb9","7b9sus","7b9sus4","phryg"]],"7sus4b9b13":["1P 4P 5P 7m 9m 13m",["7b9b13sus4"]],"9#11":["1P 3M 5P 7m 9M 11A",["9+4","9#4","9#11_","9#4_"]],"9#11b13":["1P 3M 5P 7m 9M 11A 13m",["9b5b13"]],"9#5":["1P 3M 5A 7m 9M",["9+"]],"9#5#11":["1P 3M 5A 7m 9M 11A"],"9b13":["1P 3M 7m 9M 13m"],"9b5":["1P 3M 5d 7m 9M"],"9no5":["1P 3M 7m 9M"],"9sus4":["1P 4P 5P 7m 9M",["9sus"]],m,"m#5":["1P 3m 5A",["m+","mb6"]],m11,"m11A 5":["1P 3m 6m 7m 9M 11P"],m11b5,m13,m6,m69,m7,"m7#5":["1P 3m 6m 7m"],m7add11,m7b5,m9,"m9#5":["1P 3m 6m 7m 9M"],m9b5,mMaj7,mMaj7b6,mM9,mM9b6,mb6M7,mb6b9,o,o7,o7M7,oM7,sus24,"+add#9":["1P 3M 5A 9A"],madd4,madd9},chr=function(n){return chroma$2(n)||chroma$1(n)||0};function chroma(n){if(isChroma(n))return n;if(!Array.isArray(n))return"";var e=[0,0,0,0,0,0,0,0,0,0,0,0];return n.map(chr).forEach(function(t){e[t]=1}),e.join("")}var REGEX=/^[01]{12}$/;function isChroma(n){return REGEX.test(n)}var dictionary=function(n){var e=Object.keys(n).sort(),t=[],s=[],r=function(c,u,l){t[c]=u,s[l]=s[l]||[],s[l].push(c)};e.forEach(function(c){var u=n[c][0].split(" "),l=n[c][1],h=chroma(u);r(c,u,h),l&&l.forEach(function(d){return r(d,u,h)})});var i=Object.keys(t).sort(),a=function(c){return t[c]};return a.names=function(c){return typeof c=="string"?(s[c]||[]).slice():(c===!0?i:e).slice()},a},scale=dictionary(sdata),chord=dictionary(cdata);Object.freeze({name:null,intervals:[],names:[],chroma:null,setnum:null});scale.names;chord.names;var NO_CHORD$1=Object.freeze({name:null,names:[],intervals:[],chroma:null,setnum:null}),properties=function(n){var e=chord(n);if(!e)return NO_CHORD$1;var t={intervals:e,name:n};return t.chroma=chroma(e),t.setnum=parseInt(t.chroma,2),t.names=chord.names(t.chroma),t},memo=function(n,e){return e===void 0&&(e={}),function(t){return e[t]||(e[t]=n(t))}},props=memo(properties),intervals=function(n){return props(tokenize(n)[1]).intervals};function notes(n,e){if(e)return props(e).intervals.map(transpose(n));var t=tokenize(n),s=t[0],r=t[1];return props(r).intervals.map(transpose(s))}var exists=function(n){return chord(tokenize(n)[1])!==void 0},NUM_TYPES=/^(6|64|7|9|11|13)$/;function tokenize(n){var e=tokenize$2(n);return e[0]===""?["",n]:e[0]==="A"&&e[3]==="ug"?["","aug"]:NUM_TYPES.test(e[2])?[e[0]+e[1],e[2]+e[3]]:[e[0]+e[1]+e[2],e[3]]}const DEFAULT_QUARTERS_PER_MINUTE=120,DEFAULT_STEPS_PER_QUARTER=4,DEFAULT_DRUM_PITCH_CLASSES=[[36,35],[38,27,28,31,32,33,34,37,39,40,56,65,66,75,85],[42,44,54,68,69,70,71,73,78,80],[46,67,72,74,79,81],[45,29,41,61,64,84],[48,47,60,63,77,86,87],[50,30,43,62,76,83],[49,55,57,58],[51,52,53,59,82]],MIN_MIDI_VELOCITY=0,MAX_MIDI_VELOCITY=127,MIDI_VELOCITIES=MAX_MIDI_VELOCITY-MIN_MIDI_VELOCITY+1,NO_CHORD="N.C.",NUM_PITCH_CLASSES=12,MIN_MIDI_PITCH=0,MAX_MIDI_PITCH=127,MIN_MIDI_PROGRAM=0,MAX_MIDI_PROGRAM=127,LO_CLICK_PITCH=89,HI_CLICK_PITCH=90,LO_CLICK_CLASS=9,HI_CLICK_CLASS=10,CHORD_QUALITY_INTERVALS=[["1P","3M","5P"],["1P","3m","5P"],["1P","3M","5A"],["1P","3m","5d"]];var ChordQuality;(function(n){n[n.Major=0]="Major",n[n.Minor=1]="Minor",n[n.Augmented=2]="Augmented",n[n.Diminished=3]="Diminished",n[n.Other=4]="Other"})(ChordQuality||(ChordQuality={}));class ChordSymbolException extends Error{constructor(e){super(e);Object.setPrototypeOf(this,new.target.prototype)}}class ChordEncodingException extends Error{constructor(e){super(e);Object.setPrototypeOf(this,new.target.prototype)}}class ChordSymbols{static pitches(e){if(!tokenize(e)[0]||!exists(e))throw new ChordSymbolException(`Unrecognized chord symbol: ${e}`);return notes(e).map(chroma$2)}static root(e){const t=tokenize(e)[0];if(!t)throw new ChordSymbolException(`Chord symbol has unknown root: ${e}`);return chroma$2(t)}static quality(e){if(!exists(e))throw new ChordSymbolException(`Unrecognized chord symbol: ${e}`);const t=intervals(e),s=CHORD_QUALITY_INTERVALS.map(a=>a.every(c=>t.includes(c))),r=s.indexOf(!0),i=s.lastIndexOf(!0);return r>=0&&r===i?r:ChordQuality.Other}}class ChordEncoder{encodeProgression(e,t){const s=e.map(i=>this.encode(i)),r=Array.from(Array(t).keys()).map(i=>Math.floor(i*s.length/t));return stack(r.map(i=>s[i]))}}function chordEncoderFromType(n){switch(n){case"MajorMinorChordEncoder":return new MajorMinorChordEncoder;case"TriadChordEncoder":return new TriadChordEncoder;case"PitchChordEncoder":return new PitchChordEncoder;default:throw new Error(`Unknown chord encoder type: ${n}`)}}class MajorMinorChordEncoder extends ChordEncoder{constructor(){super(...arguments);this.depth=1+2*NUM_PITCH_CLASSES}index(e){if(e===NO_CHORD)return 0;const t=ChordSymbols.root(e),s=ChordSymbols.quality(e),r=1+s*NUM_PITCH_CLASSES+t;if(r>=this.depth)throw new ChordEncodingException(`Chord is neither major nor minor: ${e}`);return r}encode(e){return tidy(()=>oneHot$2(tensor1d([this.index(e)],"int32"),this.depth).as1D())}}class TriadChordEncoder extends ChordEncoder{constructor(){super(...arguments);this.depth=1+4*NUM_PITCH_CLASSES}index(e){if(e===NO_CHORD)return 0;const t=ChordSymbols.root(e),s=ChordSymbols.quality(e),r=1+s*NUM_PITCH_CLASSES+t;if(r>=this.depth)throw new ChordEncodingException(`Chord is not a standard triad: ${e}`);return r}encode(e){return tidy(()=>oneHot$2(tensor1d([this.index(e)],"int32"),this.depth).as1D())}}class PitchChordEncoder extends ChordEncoder{constructor(){super(...arguments);this.depth=1+3*NUM_PITCH_CLASSES}encode(e){return tidy(()=>{if(e===NO_CHORD)return oneHot$2(tensor1d([0],"int32"),this.depth).as1D();const t=ChordSymbols.root(e),s=oneHot$2(tensor1d([t],"int32"),NUM_PITCH_CLASSES).as1D(),r=buffer([NUM_PITCH_CLASSES]);ChordSymbols.pitches(e).forEach(c=>r.set(1,c));const i=r.toTensor().as1D(),a=s;return concat1d([tensor1d([0]),s,i,a])})}}var indexMinimal={},minimal$1={},aspromise=asPromise;function asPromise(n,e){for(var t=new Array(arguments.length-1),s=0,r=2,i=!0;r<arguments.length;)t[s++]=arguments[r++];return new Promise(function(c,u){t[s]=function(h){if(i)if(i=!1,h)u(h);else{for(var d=new Array(arguments.length-1),f=0;f<d.length;)d[f++]=arguments[f];c.apply(null,d)}};try{n.apply(e||null,t)}catch(l){i&&(i=!1,u(l))}})}var base64$1={};(function(n){var e=n;e.length=function(c){var u=c.length;if(!u)return 0;for(var l=0;--u%4>1&&c.charAt(u)==="=";)++l;return Math.ceil(c.length*3)/4-l};for(var t=new Array(64),s=new Array(123),r=0;r<64;)s[t[r]=r<26?r+65:r<52?r+71:r<62?r-4:r-59|43]=r++;e.encode=function(c,u,l){for(var h=null,d=[],f=0,y=0,g;u<l;){var x=c[u++];switch(y){case 0:d[f++]=t[x>>2],g=(x&3)<<4,y=1;break;case 1:d[f++]=t[g|x>>4],g=(x&15)<<2,y=2;break;case 2:d[f++]=t[g|x>>6],d[f++]=t[x&63],y=0;break}f>8191&&((h||(h=[])).push(String.fromCharCode.apply(String,d)),f=0)}return y&&(d[f++]=t[g],d[f++]=61,y===1&&(d[f++]=61)),h?(f&&h.push(String.fromCharCode.apply(String,d.slice(0,f))),h.join("")):String.fromCharCode.apply(String,d.slice(0,f))};var i="invalid encoding";e.decode=function(c,u,l){for(var h=l,d=0,f,y=0;y<c.length;){var g=c.charCodeAt(y++);if(g===61&&d>1)break;if((g=s[g])===void 0)throw Error(i);switch(d){case 0:f=g,d=1;break;case 1:u[l++]=f<<2|(g&48)>>4,f=g,d=2;break;case 2:u[l++]=(f&15)<<4|(g&60)>>2,f=g,d=3;break;case 3:u[l++]=(f&3)<<6|g,d=0;break}}if(d===1)throw Error(i);return l-h},e.test=function(c){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(c)}})(base64$1);var eventemitter=EventEmitter;function EventEmitter(){this._listeners={}}EventEmitter.prototype.on=function(e,t,s){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:t,ctx:s||this}),this};EventEmitter.prototype.off=function(e,t){if(e===void 0)this._listeners={};else if(t===void 0)this._listeners[e]=[];else for(var s=this._listeners[e],r=0;r<s.length;)s[r].fn===t?s.splice(r,1):++r;return this};EventEmitter.prototype.emit=function(e){var t=this._listeners[e];if(t){for(var s=[],r=1;r<arguments.length;)s.push(arguments[r++]);for(r=0;r<t.length;)t[r].fn.apply(t[r++].ctx,s)}return this};var float=factory(factory);function factory(n){return typeof Float32Array!="undefined"?function(){var e=new Float32Array([-0]),t=new Uint8Array(e.buffer),s=t[3]===128;function r(u,l,h){e[0]=u,l[h]=t[0],l[h+1]=t[1],l[h+2]=t[2],l[h+3]=t[3]}function i(u,l,h){e[0]=u,l[h]=t[3],l[h+1]=t[2],l[h+2]=t[1],l[h+3]=t[0]}n.writeFloatLE=s?r:i,n.writeFloatBE=s?i:r;function a(u,l){return t[0]=u[l],t[1]=u[l+1],t[2]=u[l+2],t[3]=u[l+3],e[0]}function c(u,l){return t[3]=u[l],t[2]=u[l+1],t[1]=u[l+2],t[0]=u[l+3],e[0]}n.readFloatLE=s?a:c,n.readFloatBE=s?c:a}():function(){function e(s,r,i,a){var c=r<0?1:0;if(c&&(r=-r),r===0)s(1/r>0?0:2147483648,i,a);else if(isNaN(r))s(2143289344,i,a);else if(r>34028234663852886e22)s((c<<31|2139095040)>>>0,i,a);else if(r<11754943508222875e-54)s((c<<31|Math.round(r/1401298464324817e-60))>>>0,i,a);else{var u=Math.floor(Math.log(r)/Math.LN2),l=Math.round(r*Math.pow(2,-u)*8388608)&8388607;s((c<<31|u+127<<23|l)>>>0,i,a)}}n.writeFloatLE=e.bind(null,writeUintLE),n.writeFloatBE=e.bind(null,writeUintBE);function t(s,r,i){var a=s(r,i),c=(a>>31)*2+1,u=a>>>23&255,l=a&8388607;return u===255?l?NaN:c*(1/0):u===0?c*1401298464324817e-60*l:c*Math.pow(2,u-150)*(l+8388608)}n.readFloatLE=t.bind(null,readUintLE),n.readFloatBE=t.bind(null,readUintBE)}(),typeof Float64Array!="undefined"?function(){var e=new Float64Array([-0]),t=new Uint8Array(e.buffer),s=t[7]===128;function r(u,l,h){e[0]=u,l[h]=t[0],l[h+1]=t[1],l[h+2]=t[2],l[h+3]=t[3],l[h+4]=t[4],l[h+5]=t[5],l[h+6]=t[6],l[h+7]=t[7]}function i(u,l,h){e[0]=u,l[h]=t[7],l[h+1]=t[6],l[h+2]=t[5],l[h+3]=t[4],l[h+4]=t[3],l[h+5]=t[2],l[h+6]=t[1],l[h+7]=t[0]}n.writeDoubleLE=s?r:i,n.writeDoubleBE=s?i:r;function a(u,l){return t[0]=u[l],t[1]=u[l+1],t[2]=u[l+2],t[3]=u[l+3],t[4]=u[l+4],t[5]=u[l+5],t[6]=u[l+6],t[7]=u[l+7],e[0]}function c(u,l){return t[7]=u[l],t[6]=u[l+1],t[5]=u[l+2],t[4]=u[l+3],t[3]=u[l+4],t[2]=u[l+5],t[1]=u[l+6],t[0]=u[l+7],e[0]}n.readDoubleLE=s?a:c,n.readDoubleBE=s?c:a}():function(){function e(s,r,i,a,c,u){var l=a<0?1:0;if(l&&(a=-a),a===0)s(0,c,u+r),s(1/a>0?0:2147483648,c,u+i);else if(isNaN(a))s(0,c,u+r),s(2146959360,c,u+i);else if(a>17976931348623157e292)s(0,c,u+r),s((l<<31|2146435072)>>>0,c,u+i);else{var h;if(a<22250738585072014e-324)h=a/5e-324,s(h>>>0,c,u+r),s((l<<31|h/4294967296)>>>0,c,u+i);else{var d=Math.floor(Math.log(a)/Math.LN2);d===1024&&(d=1023),h=a*Math.pow(2,-d),s(h*4503599627370496>>>0,c,u+r),s((l<<31|d+1023<<20|h*1048576&1048575)>>>0,c,u+i)}}}n.writeDoubleLE=e.bind(null,writeUintLE,0,4),n.writeDoubleBE=e.bind(null,writeUintBE,4,0);function t(s,r,i,a,c){var u=s(a,c+r),l=s(a,c+i),h=(l>>31)*2+1,d=l>>>20&2047,f=4294967296*(l&1048575)+u;return d===2047?f?NaN:h*(1/0):d===0?h*5e-324*f:h*Math.pow(2,d-1075)*(f+4503599627370496)}n.readDoubleLE=t.bind(null,readUintLE,0,4),n.readDoubleBE=t.bind(null,readUintBE,4,0)}(),n}function writeUintLE(n,e,t){e[t]=n&255,e[t+1]=n>>>8&255,e[t+2]=n>>>16&255,e[t+3]=n>>>24}function writeUintBE(n,e,t){e[t]=n>>>24,e[t+1]=n>>>16&255,e[t+2]=n>>>8&255,e[t+3]=n&255}function readUintLE(n,e){return(n[e]|n[e+1]<<8|n[e+2]<<16|n[e+3]<<24)>>>0}function readUintBE(n,e){return(n[e]<<24|n[e+1]<<16|n[e+2]<<8|n[e+3])>>>0}var inquire_1=inquire;function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(n){}return null}var utf8$2={};(function(n){var e=n;e.length=function(s){for(var r=0,i=0,a=0;a<s.length;++a)i=s.charCodeAt(a),i<128?r+=1:i<2048?r+=2:(i&64512)==55296&&(s.charCodeAt(a+1)&64512)==56320?(++a,r+=4):r+=3;return r},e.read=function(s,r,i){var a=i-r;if(a<1)return"";for(var c=null,u=[],l=0,h;r<i;)h=s[r++],h<128?u[l++]=h:h>191&&h<224?u[l++]=(h&31)<<6|s[r++]&63:h>239&&h<365?(h=((h&7)<<18|(s[r++]&63)<<12|(s[r++]&63)<<6|s[r++]&63)-65536,u[l++]=55296+(h>>10),u[l++]=56320+(h&1023)):u[l++]=(h&15)<<12|(s[r++]&63)<<6|s[r++]&63,l>8191&&((c||(c=[])).push(String.fromCharCode.apply(String,u)),l=0);return c?(l&&c.push(String.fromCharCode.apply(String,u.slice(0,l))),c.join("")):String.fromCharCode.apply(String,u.slice(0,l))},e.write=function(s,r,i){for(var a=i,c,u,l=0;l<s.length;++l)c=s.charCodeAt(l),c<128?r[i++]=c:c<2048?(r[i++]=c>>6|192,r[i++]=c&63|128):(c&64512)==55296&&((u=s.charCodeAt(l+1))&64512)==56320?(c=65536+((c&1023)<<10)+(u&1023),++l,r[i++]=c>>18|240,r[i++]=c>>12&63|128,r[i++]=c>>6&63|128,r[i++]=c&63|128):(r[i++]=c>>12|224,r[i++]=c>>6&63|128,r[i++]=c&63|128);return i-a}})(utf8$2);var pool_1=pool;function pool(n,e,t){var s=t||8192,r=s>>>1,i=null,a=s;return function(u){if(u<1||u>r)return n(u);a+u>s&&(i=n(s),a=0);var l=e.call(i,a,a+=u);return a&7&&(a=(a|7)+1),l}}var longbits=LongBits$2,util$5=minimal$1;function LongBits$2(n,e){this.lo=n>>>0,this.hi=e>>>0}var zero=LongBits$2.zero=new LongBits$2(0,0);zero.toNumber=function(){return 0};zero.zzEncode=zero.zzDecode=function(){return this};zero.length=function(){return 1};var zeroHash=LongBits$2.zeroHash="\0\0\0\0\0\0\0\0";LongBits$2.fromNumber=function n(e){if(e===0)return zero;var t=e<0;t&&(e=-e);var s=e>>>0,r=(e-s)/4294967296>>>0;return t&&(r=~r>>>0,s=~s>>>0,++s>4294967295&&(s=0,++r>4294967295&&(r=0))),new LongBits$2(s,r)};LongBits$2.from=function n(e){if(typeof e=="number")return LongBits$2.fromNumber(e);if(util$5.isString(e))if(util$5.Long)e=util$5.Long.fromString(e);else return LongBits$2.fromNumber(parseInt(e,10));return e.low||e.high?new LongBits$2(e.low>>>0,e.high>>>0):zero};LongBits$2.prototype.toNumber=function n(e){if(!e&&this.hi>>>31){var t=~this.lo+1>>>0,s=~this.hi>>>0;return t||(s=s+1>>>0),-(t+s*4294967296)}return this.lo+this.hi*4294967296};LongBits$2.prototype.toLong=function n(e){return util$5.Long?new util$5.Long(this.lo|0,this.hi|0,Boolean(e)):{low:this.lo|0,high:this.hi|0,unsigned:Boolean(e)}};var charCodeAt=String.prototype.charCodeAt;LongBits$2.fromHash=function n(e){return e===zeroHash?zero:new LongBits$2((charCodeAt.call(e,0)|charCodeAt.call(e,1)<<8|charCodeAt.call(e,2)<<16|charCodeAt.call(e,3)<<24)>>>0,(charCodeAt.call(e,4)|charCodeAt.call(e,5)<<8|charCodeAt.call(e,6)<<16|charCodeAt.call(e,7)<<24)>>>0)};LongBits$2.prototype.toHash=function n(){return String.fromCharCode(this.lo&255,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,this.hi&255,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)};LongBits$2.prototype.zzEncode=function n(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this};LongBits$2.prototype.zzDecode=function n(){var e=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this};LongBits$2.prototype.length=function n(){var e=this.lo,t=(this.lo>>>28|this.hi<<4)>>>0,s=this.hi>>>24;return s===0?t===0?e<16384?e<128?1:2:e<2097152?3:4:t<16384?t<128?5:6:t<2097152?7:8:s<128?9:10};(function(n){var e=n;e.asPromise=aspromise,e.base64=base64$1,e.EventEmitter=eventemitter,e.float=float,e.inquire=inquire_1,e.utf8=utf8$2,e.pool=pool_1,e.LongBits=longbits,e.isNode=Boolean(typeof commonjsGlobal!="undefined"&&commonjsGlobal&&commonjsGlobal.process&&commonjsGlobal.process.versions&&commonjsGlobal.process.versions.node),e.global=e.isNode&&commonjsGlobal||typeof window!="undefined"&&window||typeof self!="undefined"&&self||commonjsGlobal,e.emptyArray=Object.freeze?Object.freeze([]):[],e.emptyObject=Object.freeze?Object.freeze({}):{},e.isInteger=Number.isInteger||function(i){return typeof i=="number"&&isFinite(i)&&Math.floor(i)===i},e.isString=function(i){return typeof i=="string"||i instanceof String},e.isObject=function(i){return i&&typeof i=="object"},e.isset=e.isSet=function(i,a){var c=i[a];return c!=null&&i.hasOwnProperty(a)?typeof c!="object"||(Array.isArray(c)?c.length:Object.keys(c).length)>0:!1},e.Buffer=function(){try{var r=e.inquire("buffer").Buffer;return r.prototype.utf8Write?r:null}catch{return null}}(),e._Buffer_from=null,e._Buffer_allocUnsafe=null,e.newBuffer=function(i){return typeof i=="number"?e.Buffer?e._Buffer_allocUnsafe(i):new e.Array(i):e.Buffer?e._Buffer_from(i):typeof Uint8Array=="undefined"?i:new Uint8Array(i)},e.Array=typeof Uint8Array!="undefined"?Uint8Array:Array,e.Long=e.global.dcodeIO&&e.global.dcodeIO.Long||e.global.Long||e.inquire("long"),e.key2Re=/^true|false|0|1$/,e.key32Re=/^-?(?:0|[1-9][0-9]*)$/,e.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/,e.longToHash=function(i){return i?e.LongBits.from(i).toHash():e.LongBits.zeroHash},e.longFromHash=function(i,a){var c=e.LongBits.fromHash(i);return e.Long?e.Long.fromBits(c.lo,c.hi,a):c.toNumber(Boolean(a))};function t(r,i,a){for(var c=Object.keys(i),u=0;u<c.length;++u)(r[c[u]]===void 0||!a)&&(r[c[u]]=i[c[u]]);return r}e.merge=t,e.lcFirst=function(i){return i.charAt(0).toLowerCase()+i.substring(1)};function s(r){function i(a,c){if(!(this instanceof i))return new i(a,c);Object.defineProperty(this,"message",{get:function(){return a}}),Error.captureStackTrace?Error.captureStackTrace(this,i):Object.defineProperty(this,"stack",{value:new Error().stack||""}),c&&t(this,c)}return(i.prototype=Object.create(Error.prototype)).constructor=i,Object.defineProperty(i.prototype,"name",{get:function(){return r}}),i.prototype.toString=function(){return this.name+": "+this.message},i}e.newError=s,e.ProtocolError=s("ProtocolError"),e.oneOfGetter=function(i){for(var a={},c=0;c<i.length;++c)a[i[c]]=1;return function(){for(var u=Object.keys(this),l=u.length-1;l>-1;--l)if(a[u[l]]===1&&this[u[l]]!==void 0&&this[u[l]]!==null)return u[l]}},e.oneOfSetter=function(i){return function(a){for(var c=0;c<i.length;++c)i[c]!==a&&delete this[i[c]]}},e.toJSONOptions={longs:String,enums:String,bytes:String,json:!0},e._configure=function(){var r=e.Buffer;if(!r){e._Buffer_from=e._Buffer_allocUnsafe=null;return}e._Buffer_from=r.from!==Uint8Array.from&&r.from||function(a,c){return new r(a,c)},e._Buffer_allocUnsafe=r.allocUnsafe||function(a){return new r(a)}}})(minimal$1);var writer=Writer$2,util$4=minimal$1,BufferWriter$1,LongBits$1=util$4.LongBits,base64=util$4.base64,utf8$1=util$4.utf8;function Op(n,e,t){this.fn=n,this.len=e,this.next=void 0,this.val=t}function noop(){}function State(n){this.head=n.head,this.tail=n.tail,this.len=n.len,this.next=n.states}function Writer$2(){this.len=0,this.head=new Op(noop,0,0),this.tail=this.head,this.states=null}var create$1=function n(){return util$4.Buffer?function(){return(Writer$2.create=function(){return new BufferWriter$1})()}:function(){return new Writer$2}};Writer$2.create=create$1();Writer$2.alloc=function n(e){return new util$4.Array(e)};util$4.Array!==Array&&(Writer$2.alloc=util$4.pool(Writer$2.alloc,util$4.Array.prototype.subarray));Writer$2.prototype._push=function n(e,t,s){return this.tail=this.tail.next=new Op(e,t,s),this.len+=t,this};function writeByte(n,e,t){e[t]=n&255}function writeVarint32(n,e,t){for(;n>127;)e[t++]=n&127|128,n>>>=7;e[t]=n}function VarintOp(n,e){this.len=n,this.next=void 0,this.val=e}VarintOp.prototype=Object.create(Op.prototype);VarintOp.prototype.fn=writeVarint32;Writer$2.prototype.uint32=function n(e){return this.len+=(this.tail=this.tail.next=new VarintOp((e=e>>>0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this};Writer$2.prototype.int32=function n(e){return e<0?this._push(writeVarint64,10,LongBits$1.fromNumber(e)):this.uint32(e)};Writer$2.prototype.sint32=function n(e){return this.uint32((e<<1^e>>31)>>>0)};function writeVarint64(n,e,t){for(;n.hi;)e[t++]=n.lo&127|128,n.lo=(n.lo>>>7|n.hi<<25)>>>0,n.hi>>>=7;for(;n.lo>127;)e[t++]=n.lo&127|128,n.lo=n.lo>>>7;e[t++]=n.lo}Writer$2.prototype.uint64=function n(e){var t=LongBits$1.from(e);return this._push(writeVarint64,t.length(),t)};Writer$2.prototype.int64=Writer$2.prototype.uint64;Writer$2.prototype.sint64=function n(e){var t=LongBits$1.from(e).zzEncode();return this._push(writeVarint64,t.length(),t)};Writer$2.prototype.bool=function n(e){return this._push(writeByte,1,e?1:0)};function writeFixed32(n,e,t){e[t]=n&255,e[t+1]=n>>>8&255,e[t+2]=n>>>16&255,e[t+3]=n>>>24}Writer$2.prototype.fixed32=function n(e){return this._push(writeFixed32,4,e>>>0)};Writer$2.prototype.sfixed32=Writer$2.prototype.fixed32;Writer$2.prototype.fixed64=function n(e){var t=LongBits$1.from(e);return this._push(writeFixed32,4,t.lo)._push(writeFixed32,4,t.hi)};Writer$2.prototype.sfixed64=Writer$2.prototype.fixed64;Writer$2.prototype.float=function n(e){return this._push(util$4.float.writeFloatLE,4,e)};Writer$2.prototype.double=function n(e){return this._push(util$4.float.writeDoubleLE,8,e)};var writeBytes=util$4.Array.prototype.set?function n(e,t,s){t.set(e,s)}:function n(e,t,s){for(var r=0;r<e.length;++r)t[s+r]=e[r]};Writer$2.prototype.bytes=function n(e){var t=e.length>>>0;if(!t)return this._push(writeByte,1,0);if(util$4.isString(e)){var s=Writer$2.alloc(t=base64.length(e));base64.decode(e,s,0),e=s}return this.uint32(t)._push(writeBytes,t,e)};Writer$2.prototype.string=function n(e){var t=utf8$1.length(e);return t?this.uint32(t)._push(utf8$1.write,t,e):this._push(writeByte,1,0)};Writer$2.prototype.fork=function n(){return this.states=new State(this),this.head=this.tail=new Op(noop,0,0),this.len=0,this};Writer$2.prototype.reset=function n(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new Op(noop,0,0),this.len=0),this};Writer$2.prototype.ldelim=function n(){var e=this.head,t=this.tail,s=this.len;return this.reset().uint32(s),s&&(this.tail.next=e.next,this.tail=t,this.len+=s),this};Writer$2.prototype.finish=function n(){for(var e=this.head.next,t=this.constructor.alloc(this.len),s=0;e;)e.fn(e.val,t,s),s+=e.len,e=e.next;return t};Writer$2._configure=function(n){BufferWriter$1=n,Writer$2.create=create$1(),BufferWriter$1._configure()};var writer_buffer=BufferWriter,Writer$1=writer;(BufferWriter.prototype=Object.create(Writer$1.prototype)).constructor=BufferWriter;var util$3=minimal$1;function BufferWriter(){Writer$1.call(this)}BufferWriter._configure=function(){BufferWriter.alloc=util$3._Buffer_allocUnsafe,BufferWriter.writeBytesBuffer=util$3.Buffer&&util$3.Buffer.prototype instanceof Uint8Array&&util$3.Buffer.prototype.set.name==="set"?function(e,t,s){t.set(e,s)}:function(e,t,s){if(e.copy)e.copy(t,s,0,e.length);else for(var r=0;r<e.length;)t[s++]=e[r++]}};BufferWriter.prototype.bytes=function n(e){util$3.isString(e)&&(e=util$3._Buffer_from(e,"base64"));var t=e.length>>>0;return this.uint32(t),t&&this._push(BufferWriter.writeBytesBuffer,t,e),this};function writeStringBuffer(n,e,t){n.length<40?util$3.utf8.write(n,e,t):e.utf8Write?e.utf8Write(n,t):e.write(n,t)}BufferWriter.prototype.string=function n(e){var t=util$3.Buffer.byteLength(e);return this.uint32(t),t&&this._push(writeStringBuffer,t,e),this};BufferWriter._configure();var reader=Reader$1,util$2=minimal$1,BufferReader$1,LongBits=util$2.LongBits,utf8=util$2.utf8;function indexOutOfRange(n,e){return RangeError("index out of range: "+n.pos+" + "+(e||1)+" > "+n.len)}function Reader$1(n){this.buf=n,this.pos=0,this.len=n.length}var create_array=typeof Uint8Array!="undefined"?function n(e){if(e instanceof Uint8Array||Array.isArray(e))return new Reader$1(e);throw Error("illegal buffer")}:function n(e){if(Array.isArray(e))return new Reader$1(e);throw Error("illegal buffer")},create=function n(){return util$2.Buffer?function(t){return(Reader$1.create=function(r){return util$2.Buffer.isBuffer(r)?new BufferReader$1(r):create_array(r)})(t)}:create_array};Reader$1.create=create();Reader$1.prototype._slice=util$2.Array.prototype.subarray||util$2.Array.prototype.slice;Reader$1.prototype.uint32=function n(){var e=4294967295;return function(){if(e=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(e=(e|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return e;if((this.pos+=5)>this.len)throw this.pos=this.len,indexOutOfRange(this,10);return e}}();Reader$1.prototype.int32=function n(){return this.uint32()|0};Reader$1.prototype.sint32=function n(){var e=this.uint32();return e>>>1^-(e&1)|0};function readLongVarint(){var n=new LongBits(0,0),e=0;if(this.len-this.pos>4){for(;e<4;++e)if(n.lo=(n.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return n;if(n.lo=(n.lo|(this.buf[this.pos]&127)<<28)>>>0,n.hi=(n.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return n;e=0}else{for(;e<3;++e){if(this.pos>=this.len)throw indexOutOfRange(this);if(n.lo=(n.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return n}return n.lo=(n.lo|(this.buf[this.pos++]&127)<<e*7)>>>0,n}if(this.len-this.pos>4){for(;e<5;++e)if(n.hi=(n.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return n}else for(;e<5;++e){if(this.pos>=this.len)throw indexOutOfRange(this);if(n.hi=(n.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return n}throw Error("invalid varint encoding")}Reader$1.prototype.bool=function n(){return this.uint32()!==0};function readFixed32_end(n,e){return(n[e-4]|n[e-3]<<8|n[e-2]<<16|n[e-1]<<24)>>>0}Reader$1.prototype.fixed32=function n(){if(this.pos+4>this.len)throw indexOutOfRange(this,4);return readFixed32_end(this.buf,this.pos+=4)};Reader$1.prototype.sfixed32=function n(){if(this.pos+4>this.len)throw indexOutOfRange(this,4);return readFixed32_end(this.buf,this.pos+=4)|0};function readFixed64(){if(this.pos+8>this.len)throw indexOutOfRange(this,8);return new LongBits(readFixed32_end(this.buf,this.pos+=4),readFixed32_end(this.buf,this.pos+=4))}Reader$1.prototype.float=function n(){if(this.pos+4>this.len)throw indexOutOfRange(this,4);var e=util$2.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e};Reader$1.prototype.double=function n(){if(this.pos+8>this.len)throw indexOutOfRange(this,4);var e=util$2.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e};Reader$1.prototype.bytes=function n(){var e=this.uint32(),t=this.pos,s=this.pos+e;if(s>this.len)throw indexOutOfRange(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(t,s):t===s?new this.buf.constructor(0):this._slice.call(this.buf,t,s)};Reader$1.prototype.string=function n(){var e=this.bytes();return utf8.read(e,0,e.length)};Reader$1.prototype.skip=function n(e){if(typeof e=="number"){if(this.pos+e>this.len)throw indexOutOfRange(this,e);this.pos+=e}else do if(this.pos>=this.len)throw indexOutOfRange(this);while(this.buf[this.pos++]&128);return this};Reader$1.prototype.skipType=function(n){switch(n){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(n=this.uint32()&7)!=4;)this.skipType(n);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+n+" at offset "+this.pos)}return this};Reader$1._configure=function(n){BufferReader$1=n,Reader$1.create=create(),BufferReader$1._configure();var e=util$2.Long?"toLong":"toNumber";util$2.merge(Reader$1.prototype,{int64:function(){return readLongVarint.call(this)[e](!1)},uint64:function(){return readLongVarint.call(this)[e](!0)},sint64:function(){return readLongVarint.call(this).zzDecode()[e](!1)},fixed64:function(){return readFixed64.call(this)[e](!0)},sfixed64:function(){return readFixed64.call(this)[e](!1)}})};var reader_buffer=BufferReader,Reader=reader;(BufferReader.prototype=Object.create(Reader.prototype)).constructor=BufferReader;var util$1=minimal$1;function BufferReader(n){Reader.call(this,n)}BufferReader._configure=function(){util$1.Buffer&&(BufferReader.prototype._slice=util$1.Buffer.prototype.slice)};BufferReader.prototype.string=function n(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))};BufferReader._configure();var rpc={},service=Service,util=minimal$1;(Service.prototype=Object.create(util.EventEmitter.prototype)).constructor=Service;function Service(n,e,t){if(typeof n!="function")throw TypeError("rpcImpl must be a function");util.EventEmitter.call(this),this.rpcImpl=n,this.requestDelimited=Boolean(e),this.responseDelimited=Boolean(t)}Service.prototype.rpcCall=function n(e,t,s,r,i){if(!r)throw TypeError("request must be specified");var a=this;if(!i)return util.asPromise(n,a,e,t,s,r);if(!a.rpcImpl){setTimeout(function(){i(Error("already ended"))},0);return}try{return a.rpcImpl(e,t[a.requestDelimited?"encodeDelimited":"encode"](r).finish(),function(u,l){if(u)return a.emit("error",u,e),i(u);if(l===null){a.end(!0);return}if(!(l instanceof s))try{l=s[a.responseDelimited?"decodeDelimited":"decode"](l)}catch(h){return a.emit("error",h,e),i(h)}return a.emit("data",l,e),i(null,l)})}catch(c){a.emit("error",c,e),setTimeout(function(){i(c)},0);return}};Service.prototype.end=function n(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this};(function(n){var e=n;e.Service=service})(rpc);var roots={};(function(n){var e=n;e.build="minimal",e.Writer=writer,e.BufferWriter=writer_buffer,e.Reader=reader,e.BufferReader=reader_buffer,e.util=minimal$1,e.rpc=rpc,e.roots=roots,e.configure=t;function t(){e.util._configure(),e.Writer._configure(e.BufferWriter),e.Reader._configure(e.BufferReader)}t()})(indexMinimal);var minimal=indexMinimal,$protobuf=minimal,$Reader=$protobuf.Reader,$Writer=$protobuf.Writer,$util=$protobuf.util,$root=$protobuf.roots.default||($protobuf.roots.default={});$root.tensorflow=function(){var n={};return n.magenta=function(){var e={};return e.NoteSequence=function(){function t(s){if(this.timeSignatures=[],this.keySignatures=[],this.tempos=[],this.notes=[],this.pitchBends=[],this.controlChanges=[],this.partInfos=[],this.textAnnotations=[],this.sectionAnnotations=[],this.sectionGroups=[],s)for(var r=Object.keys(s),i=0;i<r.length;++i)s[r[i]]!=null&&(this[r[i]]=s[r[i]])}return t.prototype.id="",t.prototype.filename="",t.prototype.referenceNumber=$util.Long?$util.Long.fromBits(0,0,!1):0,t.prototype.collectionName="",t.prototype.ticksPerQuarter=0,t.prototype.timeSignatures=$util.emptyArray,t.prototype.keySignatures=$util.emptyArray,t.prototype.tempos=$util.emptyArray,t.prototype.notes=$util.emptyArray,t.prototype.totalTime=0,t.prototype.totalQuantizedSteps=$util.Long?$util.Long.fromBits(0,0,!1):0,t.prototype.pitchBends=$util.emptyArray,t.prototype.controlChanges=$util.emptyArray,t.prototype.partInfos=$util.emptyArray,t.prototype.sourceInfo=null,t.prototype.textAnnotations=$util.emptyArray,t.prototype.sectionAnnotations=$util.emptyArray,t.prototype.sectionGroups=$util.emptyArray,t.prototype.quantizationInfo=null,t.prototype.subsequenceInfo=null,t.prototype.sequenceMetadata=null,t.create=function(r){return new t(r)},t.encode=function(r,i){if(i||(i=$Writer.create()),r.id!=null&&r.hasOwnProperty("id")&&i.uint32(10).string(r.id),r.filename!=null&&r.hasOwnProperty("filename")&&i.uint32(18).string(r.filename),r.collectionName!=null&&r.hasOwnProperty("collectionName")&&i.uint32(26).string(r.collectionName),r.ticksPerQuarter!=null&&r.hasOwnProperty("ticksPerQuarter")&&i.uint32(32).int32(r.ticksPerQuarter),r.timeSignatures!=null&&r.timeSignatures.length)for(var a=0;a<r.timeSignatures.length;++a)$root.tensorflow.magenta.NoteSequence.TimeSignature.encode(r.timeSignatures[a],i.uint32(42).fork()).ldelim();if(r.keySignatures!=null&&r.keySignatures.length)for(var a=0;a<r.keySignatures.length;++a)$root.tensorflow.magenta.NoteSequence.KeySignature.encode(r.keySignatures[a],i.uint32(50).fork()).ldelim();if(r.tempos!=null&&r.tempos.length)for(var a=0;a<r.tempos.length;++a)$root.tensorflow.magenta.NoteSequence.Tempo.encode(r.tempos[a],i.uint32(58).fork()).ldelim();if(r.notes!=null&&r.notes.length)for(var a=0;a<r.notes.length;++a)$root.tensorflow.magenta.NoteSequence.Note.encode(r.notes[a],i.uint32(66).fork()).ldelim();if(r.totalTime!=null&&r.hasOwnProperty("totalTime")&&i.uint32(73).double(r.totalTime),r.pitchBends!=null&&r.pitchBends.length)for(var a=0;a<r.pitchBends.length;++a)$root.tensorflow.magenta.NoteSequence.PitchBend.encode(r.pitchBends[a],i.uint32(82).fork()).ldelim();if(r.controlChanges!=null&&r.controlChanges.length)for(var a=0;a<r.controlChanges.length;++a)$root.tensorflow.magenta.NoteSequence.ControlChange.encode(r.controlChanges[a],i.uint32(90).fork()).ldelim();if(r.partInfos!=null&&r.partInfos.length)for(var a=0;a<r.partInfos.length;++a)$root.tensorflow.magenta.NoteSequence.PartInfo.encode(r.partInfos[a],i.uint32(98).fork()).ldelim();if(r.sourceInfo!=null&&r.hasOwnProperty("sourceInfo")&&$root.tensorflow.magenta.NoteSequence.SourceInfo.encode(r.sourceInfo,i.uint32(106).fork()).ldelim(),r.textAnnotations!=null&&r.textAnnotations.length)for(var a=0;a<r.textAnnotations.length;++a)$root.tensorflow.magenta.NoteSequence.TextAnnotation.encode(r.textAnnotations[a],i.uint32(114).fork()).ldelim();if(r.quantizationInfo!=null&&r.hasOwnProperty("quantizationInfo")&&$root.tensorflow.magenta.NoteSequence.QuantizationInfo.encode(r.quantizationInfo,i.uint32(122).fork()).ldelim(),r.totalQuantizedSteps!=null&&r.hasOwnProperty("totalQuantizedSteps")&&i.uint32(128).int64(r.totalQuantizedSteps),r.subsequenceInfo!=null&&r.hasOwnProperty("subsequenceInfo")&&$root.tensorflow.magenta.NoteSequence.SubsequenceInfo.encode(r.subsequenceInfo,i.uint32(138).fork()).ldelim(),r.referenceNumber!=null&&r.hasOwnProperty("referenceNumber")&&i.uint32(144).int64(r.referenceNumber),r.sequenceMetadata!=null&&r.hasOwnProperty("sequenceMetadata")&&$root.tensorflow.magenta.SequenceMetadata.encode(r.sequenceMetadata,i.uint32(154).fork()).ldelim(),r.sectionAnnotations!=null&&r.sectionAnnotations.length)for(var a=0;a<r.sectionAnnotations.length;++a)$root.tensorflow.magenta.NoteSequence.SectionAnnotation.encode(r.sectionAnnotations[a],i.uint32(162).fork()).ldelim();if(r.sectionGroups!=null&&r.sectionGroups.length)for(var a=0;a<r.sectionGroups.length;++a)$root.tensorflow.magenta.NoteSequence.SectionGroup.encode(r.sectionGroups[a],i.uint32(170).fork()).ldelim();return i},t.encodeDelimited=function(r,i){return this.encode(r,i).ldelim()},t.decode=function(r,i){r instanceof $Reader||(r=$Reader.create(r));for(var a=i===void 0?r.len:r.pos+i,c=new $root.tensorflow.magenta.NoteSequence;r.pos<a;){var u=r.uint32();switch(u>>>3){case 1:c.id=r.string();break;case 2:c.filename=r.string();break;case 18:c.referenceNumber=$util.Long?r.int64().toNumber():r.int64();break;case 3:c.collectionName=r.string();break;case 4:c.ticksPerQuarter=r.int32();break;case 5:c.timeSignatures&&c.timeSignatures.length||(c.timeSignatures=[]),c.timeSignatures.push($root.tensorflow.magenta.NoteSequence.TimeSignature.decode(r,r.uint32()));break;case 6:c.keySignatures&&c.keySignatures.length||(c.keySignatures=[]),c.keySignatures.push($root.tensorflow.magenta.NoteSequence.KeySignature.decode(r,r.uint32()));break;case 7:c.tempos&&c.tempos.length||(c.tempos=[]),c.tempos.push($root.tensorflow.magenta.NoteSequence.Tempo.decode(r,r.uint32()));break;case 8:c.notes&&c.notes.length||(c.notes=[]),c.notes.push($root.tensorflow.magenta.NoteSequence.Note.decode(r,r.uint32()));break;case 9:c.totalTime=r.double();break;case 16:c.totalQuantizedSteps=$util.Long?r.int64().toNumber():r.int64();break;case 10:c.pitchBends&&c.pitchBends.length||(c.pitchBends=[]),c.pitchBends.push($root.tensorflow.magenta.NoteSequence.PitchBend.decode(r,r.uint32()));break;case 11:c.controlChanges&&c.controlChanges.length||(c.controlChanges=[]),c.controlChanges.push($root.tensorflow.magenta.NoteSequence.ControlChange.decode(r,r.uint32()));break;case 12:c.partInfos&&c.partInfos.length||(c.partInfos=[]),c.partInfos.push($root.tensorflow.magenta.NoteSequence.PartInfo.decode(r,r.uint32()));break;case 13:c.sourceInfo=$root.tensorflow.magenta.NoteSequence.SourceInfo.decode(r,r.uint32());break;case 14:c.textAnnotations&&c.textAnnotations.length||(c.textAnnotations=[]),c.textAnnotations.push($root.tensorflow.magenta.NoteSequence.TextAnnotation.decode(r,r.uint32()));break;case 20:c.sectionAnnotations&&c.sectionAnnotations.length||(c.sectionAnnotations=[]),c.sectionAnnotations.push($root.tensorflow.magenta.NoteSequence.SectionAnnotation.decode(r,r.uint32()));break;case 21:c.sectionGroups&&c.sectionGroups.length||(c.sectionGroups=[]),c.sectionGroups.push($root.tensorflow.magenta.NoteSequence.SectionGroup.decode(r,r.uint32()));break;case 15:c.quantizationInfo=$root.tensorflow.magenta.NoteSequence.QuantizationInfo.decode(r,r.uint32());break;case 17:c.subsequenceInfo=$root.tensorflow.magenta.NoteSequence.SubsequenceInfo.decode(r,r.uint32());break;case 19:c.sequenceMetadata=$root.tensorflow.magenta.SequenceMetadata.decode(r,r.uint32());break;default:r.skipType(u&7);break}}return c},t.decodeDelimited=function(r){return r instanceof $Reader||(r=new $Reader(r)),this.decode(r,r.uint32())},t.verify=function(r){if(typeof r!="object"||r===null)return"object expected";if(r.id!=null&&r.hasOwnProperty("id")&&!$util.isString(r.id))return"id: string expected";if(r.filename!=null&&r.hasOwnProperty("filename")&&!$util.isString(r.filename))return"filename: string expected";if(r.referenceNumber!=null&&r.hasOwnProperty("referenceNumber")&&!$util.isInteger(r.referenceNumber)&&!(r.referenceNumber&&$util.isInteger(r.referenceNumber.low)&&$util.isInteger(r.referenceNumber.high)))return"referenceNumber: integer|Long expected";if(r.collectionName!=null&&r.hasOwnProperty("collectionName")&&!$util.isString(r.collectionName))return"collectionName: string expected";if(r.ticksPerQuarter!=null&&r.hasOwnProperty("ticksPerQuarter")&&!$util.isInteger(r.ticksPerQuarter))return"ticksPerQuarter: integer expected";if(r.timeSignatures!=null&&r.hasOwnProperty("timeSignatures")){if(!Array.isArray(r.timeSignatures))return"timeSignatures: array expected";for(var i=0;i<r.timeSignatures.length;++i){var a=$root.tensorflow.magenta.NoteSequence.TimeSignature.verify(r.timeSignatures[i]);if(a)return"timeSignatures."+a}}if(r.keySignatures!=null&&r.hasOwnProperty("keySignatures")){if(!Array.isArray(r.keySignatures))return"keySignatures: array expected";for(var i=0;i<r.keySignatures.length;++i){var a=$root.tensorflow.magenta.NoteSequence.KeySignature.verify(r.keySignatures[i]);if(a)return"keySignatures."+a}}if(r.tempos!=null&&r.hasOwnProperty("tempos")){if(!Array.isArray(r.tempos))return"tempos: array expected";for(var i=0;i<r.tempos.length;++i){var a=$root.tensorflow.magenta.NoteSequence.Tempo.verify(r.tempos[i]);if(a)return"tempos."+a}}if(r.notes!=null&&r.hasOwnProperty("notes")){if(!Array.isArray(r.notes))return"notes: array expected";for(var i=0;i<r.notes.length;++i){var a=$root.tensorflow.magenta.NoteSequence.Note.verify(r.notes[i]);if(a)return"notes."+a}}if(r.totalTime!=null&&r.hasOwnProperty("totalTime")&&typeof r.totalTime!="number")return"totalTime: number expected";if(r.totalQuantizedSteps!=null&&r.hasOwnProperty("totalQuantizedSteps")&&!$util.isInteger(r.totalQuantizedSteps)&&!(r.totalQuantizedSteps&&$util.isInteger(r.totalQuantizedSteps.low)&&$util.isInteger(r.totalQuantizedSteps.high)))return"totalQuantizedSteps: integer|Long expected";if(r.pitchBends!=null&&r.hasOwnProperty("pitchBends")){if(!Array.isArray(r.pitchBends))return"pitchBends: array expected";for(var i=0;i<r.pitchBends.length;++i){var a=$root.tensorflow.magenta.NoteSequence.PitchBend.verify(r.pitchBends[i]);if(a)return"pitchBends."+a}}if(r.controlChanges!=null&&r.hasOwnProperty("controlChanges")){if(!Array.isArray(r.controlChanges))return"controlChanges: array expected";for(var i=0;i<r.controlChanges.length;++i){var a=$root.tensorflow.magenta.NoteSequence.ControlChange.verify(r.controlChanges[i]);if(a)return"controlChanges."+a}}if(r.partInfos!=null&&r.hasOwnProperty("partInfos")){if(!Array.isArray(r.partInfos))return"partInfos: array expected";for(var i=0;i<r.partInfos.length;++i){var a=$root.tensorflow.magenta.NoteSequence.PartInfo.verify(r.partInfos[i]);if(a)return"partInfos."+a}}if(r.sourceInfo!=null&&r.hasOwnProperty("sourceInfo")){var a=$root.tensorflow.magenta.NoteSequence.SourceInfo.verify(r.sourceInfo);if(a)return"sourceInfo."+a}if(r.textAnnotations!=null&&r.hasOwnProperty("textAnnotations")){if(!Array.isArray(r.textAnnotations))return"textAnnotations: array expected";for(var i=0;i<r.textAnnotations.length;++i){var a=$root.tensorflow.magenta.NoteSequence.TextAnnotation.verify(r.textAnnotations[i]);if(a)return"textAnnotations."+a}}if(r.sectionAnnotations!=null&&r.hasOwnProperty("sectionAnnotations")){if(!Array.isArray(r.sectionAnnotations))return"sectionAnnotations: array expected";for(var i=0;i<r.sectionAnnotations.length;++i){var a=$root.tensorflow.magenta.NoteSequence.SectionAnnotation.verify(r.sectionAnnotations[i]);if(a)return"sectionAnnotations."+a}}if(r.sectionGroups!=null&&r.hasOwnProperty("sectionGroups")){if(!Array.isArray(r.sectionGroups))return"sectionGroups: array expected";for(var i=0;i<r.sectionGroups.length;++i){var a=$root.tensorflow.magenta.NoteSequence.SectionGroup.verify(r.sectionGroups[i]);if(a)return"sectionGroups."+a}}if(r.quantizationInfo!=null&&r.hasOwnProperty("quantizationInfo")){var a=$root.tensorflow.magenta.NoteSequence.QuantizationInfo.verify(r.quantizationInfo);if(a)return"quantizationInfo."+a}if(r.subsequenceInfo!=null&&r.hasOwnProperty("subsequenceInfo")){var a=$root.tensorflow.magenta.NoteSequence.SubsequenceInfo.verify(r.subsequenceInfo);if(a)return"subsequenceInfo."+a}if(r.sequenceMetadata!=null&&r.hasOwnProperty("sequenceMetadata")){var a=$root.tensorflow.magenta.SequenceMetadata.verify(r.sequenceMetadata);if(a)return"sequenceMetadata."+a}return null},t.fromObject=function(r){if(r instanceof $root.tensorflow.magenta.NoteSequence)return r;var i=new $root.tensorflow.magenta.NoteSequence;if(r.id!=null&&(i.id=String(r.id)),r.filename!=null&&(i.filename=String(r.filename)),r.referenceNumber!=null&&($util.Long?(i.referenceNumber=$util.Long.fromValue(r.referenceNumber)).unsigned=!1:typeof r.referenceNumber=="string"?i.referenceNumber=parseInt(r.referenceNumber,10):typeof r.referenceNumber=="number"?i.referenceNumber=r.referenceNumber:typeof r.referenceNumber=="object"&&(i.referenceNumber=new $util.LongBits(r.referenceNumber.low>>>0,r.referenceNumber.high>>>0).toNumber())),r.collectionName!=null&&(i.collectionName=String(r.collectionName)),r.ticksPerQuarter!=null&&(i.ticksPerQuarter=r.ticksPerQuarter|0),r.timeSignatures){if(!Array.isArray(r.timeSignatures))throw TypeError(".tensorflow.magenta.NoteSequence.timeSignatures: array expected");i.timeSignatures=[];for(var a=0;a<r.timeSignatures.length;++a){if(typeof r.timeSignatures[a]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.timeSignatures: object expected");i.timeSignatures[a]=$root.tensorflow.magenta.NoteSequence.TimeSignature.fromObject(r.timeSignatures[a])}}if(r.keySignatures){if(!Array.isArray(r.keySignatures))throw TypeError(".tensorflow.magenta.NoteSequence.keySignatures: array expected");i.keySignatures=[];for(var a=0;a<r.keySignatures.length;++a){if(typeof r.keySignatures[a]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.keySignatures: object expected");i.keySignatures[a]=$root.tensorflow.magenta.NoteSequence.KeySignature.fromObject(r.keySignatures[a])}}if(r.tempos){if(!Array.isArray(r.tempos))throw TypeError(".tensorflow.magenta.NoteSequence.tempos: array expected");i.tempos=[];for(var a=0;a<r.tempos.length;++a){if(typeof r.tempos[a]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.tempos: object expected");i.tempos[a]=$root.tensorflow.magenta.NoteSequence.Tempo.fromObject(r.tempos[a])}}if(r.notes){if(!Array.isArray(r.notes))throw TypeError(".tensorflow.magenta.NoteSequence.notes: array expected");i.notes=[];for(var a=0;a<r.notes.length;++a){if(typeof r.notes[a]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.notes: object expected");i.notes[a]=$root.tensorflow.magenta.NoteSequence.Note.fromObject(r.notes[a])}}if(r.totalTime!=null&&(i.totalTime=Number(r.totalTime)),r.totalQuantizedSteps!=null&&($util.Long?(i.totalQuantizedSteps=$util.Long.fromValue(r.totalQuantizedSteps)).unsigned=!1:typeof r.totalQuantizedSteps=="string"?i.totalQuantizedSteps=parseInt(r.totalQuantizedSteps,10):typeof r.totalQuantizedSteps=="number"?i.totalQuantizedSteps=r.totalQuantizedSteps:typeof r.totalQuantizedSteps=="object"&&(i.totalQuantizedSteps=new $util.LongBits(r.totalQuantizedSteps.low>>>0,r.totalQuantizedSteps.high>>>0).toNumber())),r.pitchBends){if(!Array.isArray(r.pitchBends))throw TypeError(".tensorflow.magenta.NoteSequence.pitchBends: array expected");i.pitchBends=[];for(var a=0;a<r.pitchBends.length;++a){if(typeof r.pitchBends[a]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.pitchBends: object expected");i.pitchBends[a]=$root.tensorflow.magenta.NoteSequence.PitchBend.fromObject(r.pitchBends[a])}}if(r.controlChanges){if(!Array.isArray(r.controlChanges))throw TypeError(".tensorflow.magenta.NoteSequence.controlChanges: array expected");i.controlChanges=[];for(var a=0;a<r.controlChanges.length;++a){if(typeof r.controlChanges[a]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.controlChanges: object expected");i.controlChanges[a]=$root.tensorflow.magenta.NoteSequence.ControlChange.fromObject(r.controlChanges[a])}}if(r.partInfos){if(!Array.isArray(r.partInfos))throw TypeError(".tensorflow.magenta.NoteSequence.partInfos: array expected");i.partInfos=[];for(var a=0;a<r.partInfos.length;++a){if(typeof r.partInfos[a]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.partInfos: object expected");i.partInfos[a]=$root.tensorflow.magenta.NoteSequence.PartInfo.fromObject(r.partInfos[a])}}if(r.sourceInfo!=null){if(typeof r.sourceInfo!="object")throw TypeError(".tensorflow.magenta.NoteSequence.sourceInfo: object expected");i.sourceInfo=$root.tensorflow.magenta.NoteSequence.SourceInfo.fromObject(r.sourceInfo)}if(r.textAnnotations){if(!Array.isArray(r.textAnnotations))throw TypeError(".tensorflow.magenta.NoteSequence.textAnnotations: array expected");i.textAnnotations=[];for(var a=0;a<r.textAnnotations.length;++a){if(typeof r.textAnnotations[a]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.textAnnotations: object expected");i.textAnnotations[a]=$root.tensorflow.magenta.NoteSequence.TextAnnotation.fromObject(r.textAnnotations[a])}}if(r.sectionAnnotations){if(!Array.isArray(r.sectionAnnotations))throw TypeError(".tensorflow.magenta.NoteSequence.sectionAnnotations: array expected");i.sectionAnnotations=[];for(var a=0;a<r.sectionAnnotations.length;++a){if(typeof r.sectionAnnotations[a]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.sectionAnnotations: object expected");i.sectionAnnotations[a]=$root.tensorflow.magenta.NoteSequence.SectionAnnotation.fromObject(r.sectionAnnotations[a])}}if(r.sectionGroups){if(!Array.isArray(r.sectionGroups))throw TypeError(".tensorflow.magenta.NoteSequence.sectionGroups: array expected");i.sectionGroups=[];for(var a=0;a<r.sectionGroups.length;++a){if(typeof r.sectionGroups[a]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.sectionGroups: object expected");i.sectionGroups[a]=$root.tensorflow.magenta.NoteSequence.SectionGroup.fromObject(r.sectionGroups[a])}}if(r.quantizationInfo!=null){if(typeof r.quantizationInfo!="object")throw TypeError(".tensorflow.magenta.NoteSequence.quantizationInfo: object expected");i.quantizationInfo=$root.tensorflow.magenta.NoteSequence.QuantizationInfo.fromObject(r.quantizationInfo)}if(r.subsequenceInfo!=null){if(typeof r.subsequenceInfo!="object")throw TypeError(".tensorflow.magenta.NoteSequence.subsequenceInfo: object expected");i.subsequenceInfo=$root.tensorflow.magenta.NoteSequence.SubsequenceInfo.fromObject(r.subsequenceInfo)}if(r.sequenceMetadata!=null){if(typeof r.sequenceMetadata!="object")throw TypeError(".tensorflow.magenta.NoteSequence.sequenceMetadata: object expected");i.sequenceMetadata=$root.tensorflow.magenta.SequenceMetadata.fromObject(r.sequenceMetadata)}return i},t.toObject=function(r,i){i||(i={});var a={};if((i.arrays||i.defaults)&&(a.timeSignatures=[],a.keySignatures=[],a.tempos=[],a.notes=[],a.pitchBends=[],a.controlChanges=[],a.partInfos=[],a.textAnnotations=[],a.sectionAnnotations=[],a.sectionGroups=[]),i.defaults){if(a.id="",a.filename="",a.collectionName="",a.ticksPerQuarter=0,a.totalTime=0,a.sourceInfo=null,a.quantizationInfo=null,$util.Long){var c=new $util.Long(0,0,!1);a.totalQuantizedSteps=i.longs===String?c.toString():i.longs===Number?c.toNumber():c}else a.totalQuantizedSteps=i.longs===String?"0":0;if(a.subsequenceInfo=null,$util.Long){var c=new $util.Long(0,0,!1);a.referenceNumber=i.longs===String?c.toString():i.longs===Number?c.toNumber():c}else a.referenceNumber=i.longs===String?"0":0;a.sequenceMetadata=null}if(r.id!=null&&r.hasOwnProperty("id")&&(a.id=r.id),r.filename!=null&&r.hasOwnProperty("filename")&&(a.filename=r.filename),r.collectionName!=null&&r.hasOwnProperty("collectionName")&&(a.collectionName=r.collectionName),r.ticksPerQuarter!=null&&r.hasOwnProperty("ticksPerQuarter")&&(a.ticksPerQuarter=r.ticksPerQuarter),r.timeSignatures&&r.timeSignatures.length){a.timeSignatures=[];for(var u=0;u<r.timeSignatures.length;++u)a.timeSignatures[u]=$root.tensorflow.magenta.NoteSequence.TimeSignature.toObject(r.timeSignatures[u],i)}if(r.keySignatures&&r.keySignatures.length){a.keySignatures=[];for(var u=0;u<r.keySignatures.length;++u)a.keySignatures[u]=$root.tensorflow.magenta.NoteSequence.KeySignature.toObject(r.keySignatures[u],i)}if(r.tempos&&r.tempos.length){a.tempos=[];for(var u=0;u<r.tempos.length;++u)a.tempos[u]=$root.tensorflow.magenta.NoteSequence.Tempo.toObject(r.tempos[u],i)}if(r.notes&&r.notes.length){a.notes=[];for(var u=0;u<r.notes.length;++u)a.notes[u]=$root.tensorflow.magenta.NoteSequence.Note.toObject(r.notes[u],i)}if(r.totalTime!=null&&r.hasOwnProperty("totalTime")&&(a.totalTime=i.json&&!isFinite(r.totalTime)?String(r.totalTime):r.totalTime),r.pitchBends&&r.pitchBends.length){a.pitchBends=[];for(var u=0;u<r.pitchBends.length;++u)a.pitchBends[u]=$root.tensorflow.magenta.NoteSequence.PitchBend.toObject(r.pitchBends[u],i)}if(r.controlChanges&&r.controlChanges.length){a.controlChanges=[];for(var u=0;u<r.controlChanges.length;++u)a.controlChanges[u]=$root.tensorflow.magenta.NoteSequence.ControlChange.toObject(r.controlChanges[u],i)}if(r.partInfos&&r.partInfos.length){a.partInfos=[];for(var u=0;u<r.partInfos.length;++u)a.partInfos[u]=$root.tensorflow.magenta.NoteSequence.PartInfo.toObject(r.partInfos[u],i)}if(r.sourceInfo!=null&&r.hasOwnProperty("sourceInfo")&&(a.sourceInfo=$root.tensorflow.magenta.NoteSequence.SourceInfo.toObject(r.sourceInfo,i)),r.textAnnotations&&r.textAnnotations.length){a.textAnnotations=[];for(var u=0;u<r.textAnnotations.length;++u)a.textAnnotations[u]=$root.tensorflow.magenta.NoteSequence.TextAnnotation.toObject(r.textAnnotations[u],i)}if(r.quantizationInfo!=null&&r.hasOwnProperty("quantizationInfo")&&(a.quantizationInfo=$root.tensorflow.magenta.NoteSequence.QuantizationInfo.toObject(r.quantizationInfo,i)),r.totalQuantizedSteps!=null&&r.hasOwnProperty("totalQuantizedSteps")&&(typeof r.totalQuantizedSteps=="number"?a.totalQuantizedSteps=i.longs===String?String(r.totalQuantizedSteps):r.totalQuantizedSteps:a.totalQuantizedSteps=i.longs===String?$util.Long.prototype.toString.call(r.totalQuantizedSteps):i.longs===Number?new $util.LongBits(r.totalQuantizedSteps.low>>>0,r.totalQuantizedSteps.high>>>0).toNumber():r.totalQuantizedSteps),r.subsequenceInfo!=null&&r.hasOwnProperty("subsequenceInfo")&&(a.subsequenceInfo=$root.tensorflow.magenta.NoteSequence.SubsequenceInfo.toObject(r.subsequenceInfo,i)),r.referenceNumber!=null&&r.hasOwnProperty("referenceNumber")&&(typeof r.referenceNumber=="number"?a.referenceNumber=i.longs===String?String(r.referenceNumber):r.referenceNumber:a.referenceNumber=i.longs===String?$util.Long.prototype.toString.call(r.referenceNumber):i.longs===Number?new $util.LongBits(r.referenceNumber.low>>>0,r.referenceNumber.high>>>0).toNumber():r.referenceNumber),r.sequenceMetadata!=null&&r.hasOwnProperty("sequenceMetadata")&&(a.sequenceMetadata=$root.tensorflow.magenta.SequenceMetadata.toObject(r.sequenceMetadata,i)),r.sectionAnnotations&&r.sectionAnnotations.length){a.sectionAnnotations=[];for(var u=0;u<r.sectionAnnotations.length;++u)a.sectionAnnotations[u]=$root.tensorflow.magenta.NoteSequence.SectionAnnotation.toObject(r.sectionAnnotations[u],i)}if(r.sectionGroups&&r.sectionGroups.length){a.sectionGroups=[];for(var u=0;u<r.sectionGroups.length;++u)a.sectionGroups[u]=$root.tensorflow.magenta.NoteSequence.SectionGroup.toObject(r.sectionGroups[u],i)}return a},t.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},t.Note=function(){function s(r){if(r)for(var i=Object.keys(r),a=0;a<i.length;++a)r[i[a]]!=null&&(this[i[a]]=r[i[a]])}return s.prototype.pitch=0,s.prototype.pitchName=0,s.prototype.velocity=0,s.prototype.startTime=0,s.prototype.quantizedStartStep=$util.Long?$util.Long.fromBits(0,0,!1):0,s.prototype.endTime=0,s.prototype.quantizedEndStep=$util.Long?$util.Long.fromBits(0,0,!1):0,s.prototype.numerator=0,s.prototype.denominator=0,s.prototype.instrument=0,s.prototype.program=0,s.prototype.isDrum=!1,s.prototype.part=0,s.prototype.voice=0,s.create=function(i){return new s(i)},s.encode=function(i,a){return a||(a=$Writer.create()),i.pitch!=null&&i.hasOwnProperty("pitch")&&a.uint32(8).int32(i.pitch),i.velocity!=null&&i.hasOwnProperty("velocity")&&a.uint32(16).int32(i.velocity),i.startTime!=null&&i.hasOwnProperty("startTime")&&a.uint32(25).double(i.startTime),i.endTime!=null&&i.hasOwnProperty("endTime")&&a.uint32(33).double(i.endTime),i.numerator!=null&&i.hasOwnProperty("numerator")&&a.uint32(40).int32(i.numerator),i.denominator!=null&&i.hasOwnProperty("denominator")&&a.uint32(48).int32(i.denominator),i.instrument!=null&&i.hasOwnProperty("instrument")&&a.uint32(56).int32(i.instrument),i.program!=null&&i.hasOwnProperty("program")&&a.uint32(64).int32(i.program),i.isDrum!=null&&i.hasOwnProperty("isDrum")&&a.uint32(72).bool(i.isDrum),i.part!=null&&i.hasOwnProperty("part")&&a.uint32(80).int32(i.part),i.pitchName!=null&&i.hasOwnProperty("pitchName")&&a.uint32(88).int32(i.pitchName),i.voice!=null&&i.hasOwnProperty("voice")&&a.uint32(96).int32(i.voice),i.quantizedStartStep!=null&&i.hasOwnProperty("quantizedStartStep")&&a.uint32(104).int64(i.quantizedStartStep),i.quantizedEndStep!=null&&i.hasOwnProperty("quantizedEndStep")&&a.uint32(112).int64(i.quantizedEndStep),a},s.encodeDelimited=function(i,a){return this.encode(i,a).ldelim()},s.decode=function(i,a){i instanceof $Reader||(i=$Reader.create(i));for(var c=a===void 0?i.len:i.pos+a,u=new $root.tensorflow.magenta.NoteSequence.Note;i.pos<c;){var l=i.uint32();switch(l>>>3){case 1:u.pitch=i.int32();break;case 11:u.pitchName=i.int32();break;case 2:u.velocity=i.int32();break;case 3:u.startTime=i.double();break;case 13:u.quantizedStartStep=$util.Long?i.int64().toNumber():i.int64();break;case 4:u.endTime=i.double();break;case 14:u.quantizedEndStep=$util.Long?i.int64().toNumber():i.int64();break;case 5:u.numerator=i.int32();break;case 6:u.denominator=i.int32();break;case 7:u.instrument=i.int32();break;case 8:u.program=i.int32();break;case 9:u.isDrum=i.bool();break;case 10:u.part=i.int32();break;case 12:u.voice=i.int32();break;default:i.skipType(l&7);break}}return u},s.decodeDelimited=function(i){return i instanceof $Reader||(i=new $Reader(i)),this.decode(i,i.uint32())},s.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.pitch!=null&&i.hasOwnProperty("pitch")&&!$util.isInteger(i.pitch))return"pitch: integer expected";if(i.pitchName!=null&&i.hasOwnProperty("pitchName"))switch(i.pitchName){default:return"pitchName: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 31:case 32:case 33:case 34:case 35:break}return i.velocity!=null&&i.hasOwnProperty("velocity")&&!$util.isInteger(i.velocity)?"velocity: integer expected":i.startTime!=null&&i.hasOwnProperty("startTime")&&typeof i.startTime!="number"?"startTime: number expected":i.quantizedStartStep!=null&&i.hasOwnProperty("quantizedStartStep")&&!$util.isInteger(i.quantizedStartStep)&&!(i.quantizedStartStep&&$util.isInteger(i.quantizedStartStep.low)&&$util.isInteger(i.quantizedStartStep.high))?"quantizedStartStep: integer|Long expected":i.endTime!=null&&i.hasOwnProperty("endTime")&&typeof i.endTime!="number"?"endTime: number expected":i.quantizedEndStep!=null&&i.hasOwnProperty("quantizedEndStep")&&!$util.isInteger(i.quantizedEndStep)&&!(i.quantizedEndStep&&$util.isInteger(i.quantizedEndStep.low)&&$util.isInteger(i.quantizedEndStep.high))?"quantizedEndStep: integer|Long expected":i.numerator!=null&&i.hasOwnProperty("numerator")&&!$util.isInteger(i.numerator)?"numerator: integer expected":i.denominator!=null&&i.hasOwnProperty("denominator")&&!$util.isInteger(i.denominator)?"denominator: integer expected":i.instrument!=null&&i.hasOwnProperty("instrument")&&!$util.isInteger(i.instrument)?"instrument: integer expected":i.program!=null&&i.hasOwnProperty("program")&&!$util.isInteger(i.program)?"program: integer expected":i.isDrum!=null&&i.hasOwnProperty("isDrum")&&typeof i.isDrum!="boolean"?"isDrum: boolean expected":i.part!=null&&i.hasOwnProperty("part")&&!$util.isInteger(i.part)?"part: integer expected":i.voice!=null&&i.hasOwnProperty("voice")&&!$util.isInteger(i.voice)?"voice: integer expected":null},s.fromObject=function(i){if(i instanceof $root.tensorflow.magenta.NoteSequence.Note)return i;var a=new $root.tensorflow.magenta.NoteSequence.Note;switch(i.pitch!=null&&(a.pitch=i.pitch|0),i.pitchName){case"UNKNOWN_PITCH_NAME":case 0:a.pitchName=0;break;case"F_FLAT_FLAT":case 1:a.pitchName=1;break;case"C_FLAT_FLAT":case 2:a.pitchName=2;break;case"G_FLAT_FLAT":case 3:a.pitchName=3;break;case"D_FLAT_FLAT":case 4:a.pitchName=4;break;case"A_FLAT_FLAT":case 5:a.pitchName=5;break;case"E_FLAT_FLAT":case 6:a.pitchName=6;break;case"B_FLAT_FLAT":case 7:a.pitchName=7;break;case"F_FLAT":case 8:a.pitchName=8;break;case"C_FLAT":case 9:a.pitchName=9;break;case"G_FLAT":case 10:a.pitchName=10;break;case"D_FLAT":case 11:a.pitchName=11;break;case"A_FLAT":case 12:a.pitchName=12;break;case"E_FLAT":case 13:a.pitchName=13;break;case"B_FLAT":case 14:a.pitchName=14;break;case"F":case 15:a.pitchName=15;break;case"C":case 16:a.pitchName=16;break;case"G":case 17:a.pitchName=17;break;case"D":case 18:a.pitchName=18;break;case"A":case 19:a.pitchName=19;break;case"E":case 20:a.pitchName=20;break;case"B":case 21:a.pitchName=21;break;case"F_SHARP":case 22:a.pitchName=22;break;case"C_SHARP":case 23:a.pitchName=23;break;case"G_SHARP":case 24:a.pitchName=24;break;case"D_SHARP":case 25:a.pitchName=25;break;case"A_SHARP":case 26:a.pitchName=26;break;case"E_SHARP":case 27:a.pitchName=27;break;case"B_SHARP":case 28:a.pitchName=28;break;case"F_SHARP_SHARP":case 29:a.pitchName=29;break;case"C_SHARP_SHARP":case 30:a.pitchName=30;break;case"G_SHARP_SHARP":case 31:a.pitchName=31;break;case"D_SHARP_SHARP":case 32:a.pitchName=32;break;case"A_SHARP_SHARP":case 33:a.pitchName=33;break;case"E_SHARP_SHARP":case 34:a.pitchName=34;break;case"B_SHARP_SHARP":case 35:a.pitchName=35;break}return i.velocity!=null&&(a.velocity=i.velocity|0),i.startTime!=null&&(a.startTime=Number(i.startTime)),i.quantizedStartStep!=null&&($util.Long?(a.quantizedStartStep=$util.Long.fromValue(i.quantizedStartStep)).unsigned=!1:typeof i.quantizedStartStep=="string"?a.quantizedStartStep=parseInt(i.quantizedStartStep,10):typeof i.quantizedStartStep=="number"?a.quantizedStartStep=i.quantizedStartStep:typeof i.quantizedStartStep=="object"&&(a.quantizedStartStep=new $util.LongBits(i.quantizedStartStep.low>>>0,i.quantizedStartStep.high>>>0).toNumber())),i.endTime!=null&&(a.endTime=Number(i.endTime)),i.quantizedEndStep!=null&&($util.Long?(a.quantizedEndStep=$util.Long.fromValue(i.quantizedEndStep)).unsigned=!1:typeof i.quantizedEndStep=="string"?a.quantizedEndStep=parseInt(i.quantizedEndStep,10):typeof i.quantizedEndStep=="number"?a.quantizedEndStep=i.quantizedEndStep:typeof i.quantizedEndStep=="object"&&(a.quantizedEndStep=new $util.LongBits(i.quantizedEndStep.low>>>0,i.quantizedEndStep.high>>>0).toNumber())),i.numerator!=null&&(a.numerator=i.numerator|0),i.denominator!=null&&(a.denominator=i.denominator|0),i.instrument!=null&&(a.instrument=i.instrument|0),i.program!=null&&(a.program=i.program|0),i.isDrum!=null&&(a.isDrum=Boolean(i.isDrum)),i.part!=null&&(a.part=i.part|0),i.voice!=null&&(a.voice=i.voice|0),a},s.toObject=function(i,a){a||(a={});var c={};if(a.defaults){if(c.pitch=0,c.velocity=0,c.startTime=0,c.endTime=0,c.numerator=0,c.denominator=0,c.instrument=0,c.program=0,c.isDrum=!1,c.part=0,c.pitchName=a.enums===String?"UNKNOWN_PITCH_NAME":0,c.voice=0,$util.Long){var u=new $util.Long(0,0,!1);c.quantizedStartStep=a.longs===String?u.toString():a.longs===Number?u.toNumber():u}else c.quantizedStartStep=a.longs===String?"0":0;if($util.Long){var u=new $util.Long(0,0,!1);c.quantizedEndStep=a.longs===String?u.toString():a.longs===Number?u.toNumber():u}else c.quantizedEndStep=a.longs===String?"0":0}return i.pitch!=null&&i.hasOwnProperty("pitch")&&(c.pitch=i.pitch),i.velocity!=null&&i.hasOwnProperty("velocity")&&(c.velocity=i.velocity),i.startTime!=null&&i.hasOwnProperty("startTime")&&(c.startTime=a.json&&!isFinite(i.startTime)?String(i.startTime):i.startTime),i.endTime!=null&&i.hasOwnProperty("endTime")&&(c.endTime=a.json&&!isFinite(i.endTime)?String(i.endTime):i.endTime),i.numerator!=null&&i.hasOwnProperty("numerator")&&(c.numerator=i.numerator),i.denominator!=null&&i.hasOwnProperty("denominator")&&(c.denominator=i.denominator),i.instrument!=null&&i.hasOwnProperty("instrument")&&(c.instrument=i.instrument),i.program!=null&&i.hasOwnProperty("program")&&(c.program=i.program),i.isDrum!=null&&i.hasOwnProperty("isDrum")&&(c.isDrum=i.isDrum),i.part!=null&&i.hasOwnProperty("part")&&(c.part=i.part),i.pitchName!=null&&i.hasOwnProperty("pitchName")&&(c.pitchName=a.enums===String?$root.tensorflow.magenta.NoteSequence.PitchName[i.pitchName]:i.pitchName),i.voice!=null&&i.hasOwnProperty("voice")&&(c.voice=i.voice),i.quantizedStartStep!=null&&i.hasOwnProperty("quantizedStartStep")&&(typeof i.quantizedStartStep=="number"?c.quantizedStartStep=a.longs===String?String(i.quantizedStartStep):i.quantizedStartStep:c.quantizedStartStep=a.longs===String?$util.Long.prototype.toString.call(i.quantizedStartStep):a.longs===Number?new $util.LongBits(i.quantizedStartStep.low>>>0,i.quantizedStartStep.high>>>0).toNumber():i.quantizedStartStep),i.quantizedEndStep!=null&&i.hasOwnProperty("quantizedEndStep")&&(typeof i.quantizedEndStep=="number"?c.quantizedEndStep=a.longs===String?String(i.quantizedEndStep):i.quantizedEndStep:c.quantizedEndStep=a.longs===String?$util.Long.prototype.toString.call(i.quantizedEndStep):a.longs===Number?new $util.LongBits(i.quantizedEndStep.low>>>0,i.quantizedEndStep.high>>>0).toNumber():i.quantizedEndStep),c},s.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},s}(),t.PitchName=function(){var s={},r=Object.create(s);return r[s[0]="UNKNOWN_PITCH_NAME"]=0,r[s[1]="F_FLAT_FLAT"]=1,r[s[2]="C_FLAT_FLAT"]=2,r[s[3]="G_FLAT_FLAT"]=3,r[s[4]="D_FLAT_FLAT"]=4,r[s[5]="A_FLAT_FLAT"]=5,r[s[6]="E_FLAT_FLAT"]=6,r[s[7]="B_FLAT_FLAT"]=7,r[s[8]="F_FLAT"]=8,r[s[9]="C_FLAT"]=9,r[s[10]="G_FLAT"]=10,r[s[11]="D_FLAT"]=11,r[s[12]="A_FLAT"]=12,r[s[13]="E_FLAT"]=13,r[s[14]="B_FLAT"]=14,r[s[15]="F"]=15,r[s[16]="C"]=16,r[s[17]="G"]=17,r[s[18]="D"]=18,r[s[19]="A"]=19,r[s[20]="E"]=20,r[s[21]="B"]=21,r[s[22]="F_SHARP"]=22,r[s[23]="C_SHARP"]=23,r[s[24]="G_SHARP"]=24,r[s[25]="D_SHARP"]=25,r[s[26]="A_SHARP"]=26,r[s[27]="E_SHARP"]=27,r[s[28]="B_SHARP"]=28,r[s[29]="F_SHARP_SHARP"]=29,r[s[30]="C_SHARP_SHARP"]=30,r[s[31]="G_SHARP_SHARP"]=31,r[s[32]="D_SHARP_SHARP"]=32,r[s[33]="A_SHARP_SHARP"]=33,r[s[34]="E_SHARP_SHARP"]=34,r[s[35]="B_SHARP_SHARP"]=35,r}(),t.TimeSignature=function(){function s(r){if(r)for(var i=Object.keys(r),a=0;a<i.length;++a)r[i[a]]!=null&&(this[i[a]]=r[i[a]])}return s.prototype.time=0,s.prototype.numerator=0,s.prototype.denominator=0,s.create=function(i){return new s(i)},s.encode=function(i,a){return a||(a=$Writer.create()),i.time!=null&&i.hasOwnProperty("time")&&a.uint32(9).double(i.time),i.numerator!=null&&i.hasOwnProperty("numerator")&&a.uint32(16).int32(i.numerator),i.denominator!=null&&i.hasOwnProperty("denominator")&&a.uint32(24).int32(i.denominator),a},s.encodeDelimited=function(i,a){return this.encode(i,a).ldelim()},s.decode=function(i,a){i instanceof $Reader||(i=$Reader.create(i));for(var c=a===void 0?i.len:i.pos+a,u=new $root.tensorflow.magenta.NoteSequence.TimeSignature;i.pos<c;){var l=i.uint32();switch(l>>>3){case 1:u.time=i.double();break;case 2:u.numerator=i.int32();break;case 3:u.denominator=i.int32();break;default:i.skipType(l&7);break}}return u},s.decodeDelimited=function(i){return i instanceof $Reader||(i=new $Reader(i)),this.decode(i,i.uint32())},s.verify=function(i){return typeof i!="object"||i===null?"object expected":i.time!=null&&i.hasOwnProperty("time")&&typeof i.time!="number"?"time: number expected":i.numerator!=null&&i.hasOwnProperty("numerator")&&!$util.isInteger(i.numerator)?"numerator: integer expected":i.denominator!=null&&i.hasOwnProperty("denominator")&&!$util.isInteger(i.denominator)?"denominator: integer expected":null},s.fromObject=function(i){if(i instanceof $root.tensorflow.magenta.NoteSequence.TimeSignature)return i;var a=new $root.tensorflow.magenta.NoteSequence.TimeSignature;return i.time!=null&&(a.time=Number(i.time)),i.numerator!=null&&(a.numerator=i.numerator|0),i.denominator!=null&&(a.denominator=i.denominator|0),a},s.toObject=function(i,a){a||(a={});var c={};return a.defaults&&(c.time=0,c.numerator=0,c.denominator=0),i.time!=null&&i.hasOwnProperty("time")&&(c.time=a.json&&!isFinite(i.time)?String(i.time):i.time),i.numerator!=null&&i.hasOwnProperty("numerator")&&(c.numerator=i.numerator),i.denominator!=null&&i.hasOwnProperty("denominator")&&(c.denominator=i.denominator),c},s.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},s}(),t.KeySignature=function(){function s(r){if(r)for(var i=Object.keys(r),a=0;a<i.length;++a)r[i[a]]!=null&&(this[i[a]]=r[i[a]])}return s.prototype.time=0,s.prototype.key=0,s.prototype.mode=0,s.create=function(i){return new s(i)},s.encode=function(i,a){return a||(a=$Writer.create()),i.time!=null&&i.hasOwnProperty("time")&&a.uint32(9).double(i.time),i.key!=null&&i.hasOwnProperty("key")&&a.uint32(16).int32(i.key),i.mode!=null&&i.hasOwnProperty("mode")&&a.uint32(24).int32(i.mode),a},s.encodeDelimited=function(i,a){return this.encode(i,a).ldelim()},s.decode=function(i,a){i instanceof $Reader||(i=$Reader.create(i));for(var c=a===void 0?i.len:i.pos+a,u=new $root.tensorflow.magenta.NoteSequence.KeySignature;i.pos<c;){var l=i.uint32();switch(l>>>3){case 1:u.time=i.double();break;case 2:u.key=i.int32();break;case 3:u.mode=i.int32();break;default:i.skipType(l&7);break}}return u},s.decodeDelimited=function(i){return i instanceof $Reader||(i=new $Reader(i)),this.decode(i,i.uint32())},s.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.time!=null&&i.hasOwnProperty("time")&&typeof i.time!="number")return"time: number expected";if(i.key!=null&&i.hasOwnProperty("key"))switch(i.key){default:return"key: enum value expected";case 0:case 1:case 1:case 2:case 3:case 3:case 4:case 5:case 6:case 6:case 7:case 8:case 8:case 9:case 10:case 10:case 11:break}if(i.mode!=null&&i.hasOwnProperty("mode"))switch(i.mode){default:return"mode: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:break}return null},s.fromObject=function(i){if(i instanceof $root.tensorflow.magenta.NoteSequence.KeySignature)return i;var a=new $root.tensorflow.magenta.NoteSequence.KeySignature;switch(i.time!=null&&(a.time=Number(i.time)),i.key){case"C":case 0:a.key=0;break;case"C_SHARP":case 1:a.key=1;break;case"D_FLAT":case 1:a.key=1;break;case"D":case 2:a.key=2;break;case"D_SHARP":case 3:a.key=3;break;case"E_FLAT":case 3:a.key=3;break;case"E":case 4:a.key=4;break;case"F":case 5:a.key=5;break;case"F_SHARP":case 6:a.key=6;break;case"G_FLAT":case 6:a.key=6;break;case"G":case 7:a.key=7;break;case"G_SHARP":case 8:a.key=8;break;case"A_FLAT":case 8:a.key=8;break;case"A":case 9:a.key=9;break;case"A_SHARP":case 10:a.key=10;break;case"B_FLAT":case 10:a.key=10;break;case"B":case 11:a.key=11;break}switch(i.mode){case"MAJOR":case 0:a.mode=0;break;case"MINOR":case 1:a.mode=1;break;case"NOT_SPECIFIED":case 2:a.mode=2;break;case"MIXOLYDIAN":case 3:a.mode=3;break;case"DORIAN":case 4:a.mode=4;break;case"PHRYGIAN":case 5:a.mode=5;break;case"LYDIAN":case 6:a.mode=6;break;case"LOCRIAN":case 7:a.mode=7;break}return a},s.toObject=function(i,a){a||(a={});var c={};return a.defaults&&(c.time=0,c.key=a.enums===String?"C":0,c.mode=a.enums===String?"MAJOR":0),i.time!=null&&i.hasOwnProperty("time")&&(c.time=a.json&&!isFinite(i.time)?String(i.time):i.time),i.key!=null&&i.hasOwnProperty("key")&&(c.key=a.enums===String?$root.tensorflow.magenta.NoteSequence.KeySignature.Key[i.key]:i.key),i.mode!=null&&i.hasOwnProperty("mode")&&(c.mode=a.enums===String?$root.tensorflow.magenta.NoteSequence.KeySignature.Mode[i.mode]:i.mode),c},s.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},s.Key=function(){var r={},i=Object.create(r);return i[r[0]="C"]=0,i[r[1]="C_SHARP"]=1,i.D_FLAT=1,i[r[2]="D"]=2,i[r[3]="D_SHARP"]=3,i.E_FLAT=3,i[r[4]="E"]=4,i[r[5]="F"]=5,i[r[6]="F_SHARP"]=6,i.G_FLAT=6,i[r[7]="G"]=7,i[r[8]="G_SHARP"]=8,i.A_FLAT=8,i[r[9]="A"]=9,i[r[10]="A_SHARP"]=10,i.B_FLAT=10,i[r[11]="B"]=11,i}(),s.Mode=function(){var r={},i=Object.create(r);return i[r[0]="MAJOR"]=0,i[r[1]="MINOR"]=1,i[r[2]="NOT_SPECIFIED"]=2,i[r[3]="MIXOLYDIAN"]=3,i[r[4]="DORIAN"]=4,i[r[5]="PHRYGIAN"]=5,i[r[6]="LYDIAN"]=6,i[r[7]="LOCRIAN"]=7,i}(),s}(),t.Tempo=function(){function s(r){if(r)for(var i=Object.keys(r),a=0;a<i.length;++a)r[i[a]]!=null&&(this[i[a]]=r[i[a]])}return s.prototype.time=0,s.prototype.qpm=0,s.create=function(i){return new s(i)},s.encode=function(i,a){return a||(a=$Writer.create()),i.time!=null&&i.hasOwnProperty("time")&&a.uint32(9).double(i.time),i.qpm!=null&&i.hasOwnProperty("qpm")&&a.uint32(17).double(i.qpm),a},s.encodeDelimited=function(i,a){return this.encode(i,a).ldelim()},s.decode=function(i,a){i instanceof $Reader||(i=$Reader.create(i));for(var c=a===void 0?i.len:i.pos+a,u=new $root.tensorflow.magenta.NoteSequence.Tempo;i.pos<c;){var l=i.uint32();switch(l>>>3){case 1:u.time=i.double();break;case 2:u.qpm=i.double();break;default:i.skipType(l&7);break}}return u},s.decodeDelimited=function(i){return i instanceof $Reader||(i=new $Reader(i)),this.decode(i,i.uint32())},s.verify=function(i){return typeof i!="object"||i===null?"object expected":i.time!=null&&i.hasOwnProperty("time")&&typeof i.time!="number"?"time: number expected":i.qpm!=null&&i.hasOwnProperty("qpm")&&typeof i.qpm!="number"?"qpm: number expected":null},s.fromObject=function(i){if(i instanceof $root.tensorflow.magenta.NoteSequence.Tempo)return i;var a=new $root.tensorflow.magenta.NoteSequence.Tempo;return i.time!=null&&(a.time=Number(i.time)),i.qpm!=null&&(a.qpm=Number(i.qpm)),a},s.toObject=function(i,a){a||(a={});var c={};return a.defaults&&(c.time=0,c.qpm=0),i.time!=null&&i.hasOwnProperty("time")&&(c.time=a.json&&!isFinite(i.time)?String(i.time):i.time),i.qpm!=null&&i.hasOwnProperty("qpm")&&(c.qpm=a.json&&!isFinite(i.qpm)?String(i.qpm):i.qpm),c},s.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},s}(),t.PitchBend=function(){function s(r){if(r)for(var i=Object.keys(r),a=0;a<i.length;++a)r[i[a]]!=null&&(this[i[a]]=r[i[a]])}return s.prototype.time=0,s.prototype.bend=0,s.prototype.instrument=0,s.prototype.program=0,s.prototype.isDrum=!1,s.create=function(i){return new s(i)},s.encode=function(i,a){return a||(a=$Writer.create()),i.time!=null&&i.hasOwnProperty("time")&&a.uint32(9).double(i.time),i.bend!=null&&i.hasOwnProperty("bend")&&a.uint32(16).int32(i.bend),i.instrument!=null&&i.hasOwnProperty("instrument")&&a.uint32(24).int32(i.instrument),i.program!=null&&i.hasOwnProperty("program")&&a.uint32(32).int32(i.program),i.isDrum!=null&&i.hasOwnProperty("isDrum")&&a.uint32(40).bool(i.isDrum),a},s.encodeDelimited=function(i,a){return this.encode(i,a).ldelim()},s.decode=function(i,a){i instanceof $Reader||(i=$Reader.create(i));for(var c=a===void 0?i.len:i.pos+a,u=new $root.tensorflow.magenta.NoteSequence.PitchBend;i.pos<c;){var l=i.uint32();switch(l>>>3){case 1:u.time=i.double();break;case 2:u.bend=i.int32();break;case 3:u.instrument=i.int32();break;case 4:u.program=i.int32();break;case 5:u.isDrum=i.bool();break;default:i.skipType(l&7);break}}return u},s.decodeDelimited=function(i){return i instanceof $Reader||(i=new $Reader(i)),this.decode(i,i.uint32())},s.verify=function(i){return typeof i!="object"||i===null?"object expected":i.time!=null&&i.hasOwnProperty("time")&&typeof i.time!="number"?"time: number expected":i.bend!=null&&i.hasOwnProperty("bend")&&!$util.isInteger(i.bend)?"bend: integer expected":i.instrument!=null&&i.hasOwnProperty("instrument")&&!$util.isInteger(i.instrument)?"instrument: integer expected":i.program!=null&&i.hasOwnProperty("program")&&!$util.isInteger(i.program)?"program: integer expected":i.isDrum!=null&&i.hasOwnProperty("isDrum")&&typeof i.isDrum!="boolean"?"isDrum: boolean expected":null},s.fromObject=function(i){if(i instanceof $root.tensorflow.magenta.NoteSequence.PitchBend)return i;var a=new $root.tensorflow.magenta.NoteSequence.PitchBend;return i.time!=null&&(a.time=Number(i.time)),i.bend!=null&&(a.bend=i.bend|0),i.instrument!=null&&(a.instrument=i.instrument|0),i.program!=null&&(a.program=i.program|0),i.isDrum!=null&&(a.isDrum=Boolean(i.isDrum)),a},s.toObject=function(i,a){a||(a={});var c={};return a.defaults&&(c.time=0,c.bend=0,c.instrument=0,c.program=0,c.isDrum=!1),i.time!=null&&i.hasOwnProperty("time")&&(c.time=a.json&&!isFinite(i.time)?String(i.time):i.time),i.bend!=null&&i.hasOwnProperty("bend")&&(c.bend=i.bend),i.instrument!=null&&i.hasOwnProperty("instrument")&&(c.instrument=i.instrument),i.program!=null&&i.hasOwnProperty("program")&&(c.program=i.program),i.isDrum!=null&&i.hasOwnProperty("isDrum")&&(c.isDrum=i.isDrum),c},s.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},s}(),t.ControlChange=function(){function s(r){if(r)for(var i=Object.keys(r),a=0;a<i.length;++a)r[i[a]]!=null&&(this[i[a]]=r[i[a]])}return s.prototype.time=0,s.prototype.quantizedStep=$util.Long?$util.Long.fromBits(0,0,!1):0,s.prototype.controlNumber=0,s.prototype.controlValue=0,s.prototype.instrument=0,s.prototype.program=0,s.prototype.isDrum=!1,s.create=function(i){return new s(i)},s.encode=function(i,a){return a||(a=$Writer.create()),i.time!=null&&i.hasOwnProperty("time")&&a.uint32(9).double(i.time),i.controlNumber!=null&&i.hasOwnProperty("controlNumber")&&a.uint32(16).int32(i.controlNumber),i.controlValue!=null&&i.hasOwnProperty("controlValue")&&a.uint32(24).int32(i.controlValue),i.instrument!=null&&i.hasOwnProperty("instrument")&&a.uint32(32).int32(i.instrument),i.program!=null&&i.hasOwnProperty("program")&&a.uint32(40).int32(i.program),i.isDrum!=null&&i.hasOwnProperty("isDrum")&&a.uint32(48).bool(i.isDrum),i.quantizedStep!=null&&i.hasOwnProperty("quantizedStep")&&a.uint32(56).int64(i.quantizedStep),a},s.encodeDelimited=function(i,a){return this.encode(i,a).ldelim()},s.decode=function(i,a){i instanceof $Reader||(i=$Reader.create(i));for(var c=a===void 0?i.len:i.pos+a,u=new $root.tensorflow.magenta.NoteSequence.ControlChange;i.pos<c;){var l=i.uint32();switch(l>>>3){case 1:u.time=i.double();break;case 7:u.quantizedStep=$util.Long?i.int64().toNumber():i.int64();break;case 2:u.controlNumber=i.int32();break;case 3:u.controlValue=i.int32();break;case 4:u.instrument=i.int32();break;case 5:u.program=i.int32();break;case 6:u.isDrum=i.bool();break;default:i.skipType(l&7);break}}return u},s.decodeDelimited=function(i){return i instanceof $Reader||(i=new $Reader(i)),this.decode(i,i.uint32())},s.verify=function(i){return typeof i!="object"||i===null?"object expected":i.time!=null&&i.hasOwnProperty("time")&&typeof i.time!="number"?"time: number expected":i.quantizedStep!=null&&i.hasOwnProperty("quantizedStep")&&!$util.isInteger(i.quantizedStep)&&!(i.quantizedStep&&$util.isInteger(i.quantizedStep.low)&&$util.isInteger(i.quantizedStep.high))?"quantizedStep: integer|Long expected":i.controlNumber!=null&&i.hasOwnProperty("controlNumber")&&!$util.isInteger(i.controlNumber)?"controlNumber: integer expected":i.controlValue!=null&&i.hasOwnProperty("controlValue")&&!$util.isInteger(i.controlValue)?"controlValue: integer expected":i.instrument!=null&&i.hasOwnProperty("instrument")&&!$util.isInteger(i.instrument)?"instrument: integer expected":i.program!=null&&i.hasOwnProperty("program")&&!$util.isInteger(i.program)?"program: integer expected":i.isDrum!=null&&i.hasOwnProperty("isDrum")&&typeof i.isDrum!="boolean"?"isDrum: boolean expected":null},s.fromObject=function(i){if(i instanceof $root.tensorflow.magenta.NoteSequence.ControlChange)return i;var a=new $root.tensorflow.magenta.NoteSequence.ControlChange;return i.time!=null&&(a.time=Number(i.time)),i.quantizedStep!=null&&($util.Long?(a.quantizedStep=$util.Long.fromValue(i.quantizedStep)).unsigned=!1:typeof i.quantizedStep=="string"?a.quantizedStep=parseInt(i.quantizedStep,10):typeof i.quantizedStep=="number"?a.quantizedStep=i.quantizedStep:typeof i.quantizedStep=="object"&&(a.quantizedStep=new $util.LongBits(i.quantizedStep.low>>>0,i.quantizedStep.high>>>0).toNumber())),i.controlNumber!=null&&(a.controlNumber=i.controlNumber|0),i.controlValue!=null&&(a.controlValue=i.controlValue|0),i.instrument!=null&&(a.instrument=i.instrument|0),i.program!=null&&(a.program=i.program|0),i.isDrum!=null&&(a.isDrum=Boolean(i.isDrum)),a},s.toObject=function(i,a){a||(a={});var c={};if(a.defaults)if(c.time=0,c.controlNumber=0,c.controlValue=0,c.instrument=0,c.program=0,c.isDrum=!1,$util.Long){var u=new $util.Long(0,0,!1);c.quantizedStep=a.longs===String?u.toString():a.longs===Number?u.toNumber():u}else c.quantizedStep=a.longs===String?"0":0;return i.time!=null&&i.hasOwnProperty("time")&&(c.time=a.json&&!isFinite(i.time)?String(i.time):i.time),i.controlNumber!=null&&i.hasOwnProperty("controlNumber")&&(c.controlNumber=i.controlNumber),i.controlValue!=null&&i.hasOwnProperty("controlValue")&&(c.controlValue=i.controlValue),i.instrument!=null&&i.hasOwnProperty("instrument")&&(c.instrument=i.instrument),i.program!=null&&i.hasOwnProperty("program")&&(c.program=i.program),i.isDrum!=null&&i.hasOwnProperty("isDrum")&&(c.isDrum=i.isDrum),i.quantizedStep!=null&&i.hasOwnProperty("quantizedStep")&&(typeof i.quantizedStep=="number"?c.quantizedStep=a.longs===String?String(i.quantizedStep):i.quantizedStep:c.quantizedStep=a.longs===String?$util.Long.prototype.toString.call(i.quantizedStep):a.longs===Number?new $util.LongBits(i.quantizedStep.low>>>0,i.quantizedStep.high>>>0).toNumber():i.quantizedStep),c},s.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},s}(),t.PartInfo=function(){function s(r){if(r)for(var i=Object.keys(r),a=0;a<i.length;++a)r[i[a]]!=null&&(this[i[a]]=r[i[a]])}return s.prototype.part=0,s.prototype.name="",s.create=function(i){return new s(i)},s.encode=function(i,a){return a||(a=$Writer.create()),i.part!=null&&i.hasOwnProperty("part")&&a.uint32(8).int32(i.part),i.name!=null&&i.hasOwnProperty("name")&&a.uint32(18).string(i.name),a},s.encodeDelimited=function(i,a){return this.encode(i,a).ldelim()},s.decode=function(i,a){i instanceof $Reader||(i=$Reader.create(i));for(var c=a===void 0?i.len:i.pos+a,u=new $root.tensorflow.magenta.NoteSequence.PartInfo;i.pos<c;){var l=i.uint32();switch(l>>>3){case 1:u.part=i.int32();break;case 2:u.name=i.string();break;default:i.skipType(l&7);break}}return u},s.decodeDelimited=function(i){return i instanceof $Reader||(i=new $Reader(i)),this.decode(i,i.uint32())},s.verify=function(i){return typeof i!="object"||i===null?"object expected":i.part!=null&&i.hasOwnProperty("part")&&!$util.isInteger(i.part)?"part: integer expected":i.name!=null&&i.hasOwnProperty("name")&&!$util.isString(i.name)?"name: string expected":null},s.fromObject=function(i){if(i instanceof $root.tensorflow.magenta.NoteSequence.PartInfo)return i;var a=new $root.tensorflow.magenta.NoteSequence.PartInfo;return i.part!=null&&(a.part=i.part|0),i.name!=null&&(a.name=String(i.name)),a},s.toObject=function(i,a){a||(a={});var c={};return a.defaults&&(c.part=0,c.name=""),i.part!=null&&i.hasOwnProperty("part")&&(c.part=i.part),i.name!=null&&i.hasOwnProperty("name")&&(c.name=i.name),c},s.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},s}(),t.SourceInfo=function(){function s(r){if(r)for(var i=Object.keys(r),a=0;a<i.length;++a)r[i[a]]!=null&&(this[i[a]]=r[i[a]])}return s.prototype.sourceType=0,s.prototype.encodingType=0,s.prototype.parser=0,s.create=function(i){return new s(i)},s.encode=function(i,a){return a||(a=$Writer.create()),i.sourceType!=null&&i.hasOwnProperty("sourceType")&&a.uint32(8).int32(i.sourceType),i.encodingType!=null&&i.hasOwnProperty("encodingType")&&a.uint32(16).int32(i.encodingType),i.parser!=null&&i.hasOwnProperty("parser")&&a.uint32(24).int32(i.parser),a},s.encodeDelimited=function(i,a){return this.encode(i,a).ldelim()},s.decode=function(i,a){i instanceof $Reader||(i=$Reader.create(i));for(var c=a===void 0?i.len:i.pos+a,u=new $root.tensorflow.magenta.NoteSequence.SourceInfo;i.pos<c;){var l=i.uint32();switch(l>>>3){case 1:u.sourceType=i.int32();break;case 2:u.encodingType=i.int32();break;case 3:u.parser=i.int32();break;default:i.skipType(l&7);break}}return u},s.decodeDelimited=function(i){return i instanceof $Reader||(i=new $Reader(i)),this.decode(i,i.uint32())},s.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.sourceType!=null&&i.hasOwnProperty("sourceType"))switch(i.sourceType){default:return"sourceType: enum value expected";case 0:case 1:case 2:break}if(i.encodingType!=null&&i.hasOwnProperty("encodingType"))switch(i.encodingType){default:return"encodingType: enum value expected";case 0:case 1:case 2:case 3:case 4:break}if(i.parser!=null&&i.hasOwnProperty("parser"))switch(i.parser){default:return"parser: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 6:break}return null},s.fromObject=function(i){if(i instanceof $root.tensorflow.magenta.NoteSequence.SourceInfo)return i;var a=new $root.tensorflow.magenta.NoteSequence.SourceInfo;switch(i.sourceType){case"UNKNOWN_SOURCE_TYPE":case 0:a.sourceType=0;break;case"SCORE_BASED":case 1:a.sourceType=1;break;case"PERFORMANCE_BASED":case 2:a.sourceType=2;break}switch(i.encodingType){case"UNKNOWN_ENCODING_TYPE":case 0:a.encodingType=0;break;case"MUSIC_XML":case 1:a.encodingType=1;break;case"ABC":case 2:a.encodingType=2;break;case"MIDI":case 3:a.encodingType=3;break;case"MUSICNET":case 4:a.encodingType=4;break}switch(i.parser){case"UNKNOWN_PARSER":case 0:a.parser=0;break;case"MUSIC21":case 1:a.parser=1;break;case"PRETTY_MIDI":case 2:a.parser=2;break;case"MAGENTA_MUSIC_XML":case 3:a.parser=3;break;case"MAGENTA_MUSICNET":case 4:a.parser=4;break;case"MAGENTA_ABC":case 5:a.parser=5;break;case"TONEJS_MIDI_CONVERT":case 6:a.parser=6;break}return a},s.toObject=function(i,a){a||(a={});var c={};return a.defaults&&(c.sourceType=a.enums===String?"UNKNOWN_SOURCE_TYPE":0,c.encodingType=a.enums===String?"UNKNOWN_ENCODING_TYPE":0,c.parser=a.enums===String?"UNKNOWN_PARSER":0),i.sourceType!=null&&i.hasOwnProperty("sourceType")&&(c.sourceType=a.enums===String?$root.tensorflow.magenta.NoteSequence.SourceInfo.SourceType[i.sourceType]:i.sourceType),i.encodingType!=null&&i.hasOwnProperty("encodingType")&&(c.encodingType=a.enums===String?$root.tensorflow.magenta.NoteSequence.SourceInfo.EncodingType[i.encodingType]:i.encodingType),i.parser!=null&&i.hasOwnProperty("parser")&&(c.parser=a.enums===String?$root.tensorflow.magenta.NoteSequence.SourceInfo.Parser[i.parser]:i.parser),c},s.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},s.SourceType=function(){var r={},i=Object.create(r);return i[r[0]="UNKNOWN_SOURCE_TYPE"]=0,i[r[1]="SCORE_BASED"]=1,i[r[2]="PERFORMANCE_BASED"]=2,i}(),s.EncodingType=function(){var r={},i=Object.create(r);return i[r[0]="UNKNOWN_ENCODING_TYPE"]=0,i[r[1]="MUSIC_XML"]=1,i[r[2]="ABC"]=2,i[r[3]="MIDI"]=3,i[r[4]="MUSICNET"]=4,i}(),s.Parser=function(){var r={},i=Object.create(r);return i[r[0]="UNKNOWN_PARSER"]=0,i[r[1]="MUSIC21"]=1,i[r[2]="PRETTY_MIDI"]=2,i[r[3]="MAGENTA_MUSIC_XML"]=3,i[r[4]="MAGENTA_MUSICNET"]=4,i[r[5]="MAGENTA_ABC"]=5,i[r[6]="TONEJS_MIDI_CONVERT"]=6,i}(),s}(),t.TextAnnotation=function(){function s(r){if(r)for(var i=Object.keys(r),a=0;a<i.length;++a)r[i[a]]!=null&&(this[i[a]]=r[i[a]])}return s.prototype.time=0,s.prototype.quantizedStep=$util.Long?$util.Long.fromBits(0,0,!1):0,s.prototype.text="",s.prototype.annotationType=0,s.create=function(i){return new s(i)},s.encode=function(i,a){return a||(a=$Writer.create()),i.time!=null&&i.hasOwnProperty("time")&&a.uint32(9).double(i.time),i.text!=null&&i.hasOwnProperty("text")&&a.uint32(18).string(i.text),i.annotationType!=null&&i.hasOwnProperty("annotationType")&&a.uint32(24).int32(i.annotationType),i.quantizedStep!=null&&i.hasOwnProperty("quantizedStep")&&a.uint32(32).int64(i.quantizedStep),a},s.encodeDelimited=function(i,a){return this.encode(i,a).ldelim()},s.decode=function(i,a){i instanceof $Reader||(i=$Reader.create(i));for(var c=a===void 0?i.len:i.pos+a,u=new $root.tensorflow.magenta.NoteSequence.TextAnnotation;i.pos<c;){var l=i.uint32();switch(l>>>3){case 1:u.time=i.double();break;case 4:u.quantizedStep=$util.Long?i.int64().toNumber():i.int64();break;case 2:u.text=i.string();break;case 3:u.annotationType=i.int32();break;default:i.skipType(l&7);break}}return u},s.decodeDelimited=function(i){return i instanceof $Reader||(i=new $Reader(i)),this.decode(i,i.uint32())},s.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.time!=null&&i.hasOwnProperty("time")&&typeof i.time!="number")return"time: number expected";if(i.quantizedStep!=null&&i.hasOwnProperty("quantizedStep")&&!$util.isInteger(i.quantizedStep)&&!(i.quantizedStep&&$util.isInteger(i.quantizedStep.low)&&$util.isInteger(i.quantizedStep.high)))return"quantizedStep: integer|Long expected";if(i.text!=null&&i.hasOwnProperty("text")&&!$util.isString(i.text))return"text: string expected";if(i.annotationType!=null&&i.hasOwnProperty("annotationType"))switch(i.annotationType){default:return"annotationType: enum value expected";case 0:case 1:case 2:break}return null},s.fromObject=function(i){if(i instanceof $root.tensorflow.magenta.NoteSequence.TextAnnotation)return i;var a=new $root.tensorflow.magenta.NoteSequence.TextAnnotation;switch(i.time!=null&&(a.time=Number(i.time)),i.quantizedStep!=null&&($util.Long?(a.quantizedStep=$util.Long.fromValue(i.quantizedStep)).unsigned=!1:typeof i.quantizedStep=="string"?a.quantizedStep=parseInt(i.quantizedStep,10):typeof i.quantizedStep=="number"?a.quantizedStep=i.quantizedStep:typeof i.quantizedStep=="object"&&(a.quantizedStep=new $util.LongBits(i.quantizedStep.low>>>0,i.quantizedStep.high>>>0).toNumber())),i.text!=null&&(a.text=String(i.text)),i.annotationType){case"UNKNOWN":case 0:a.annotationType=0;break;case"CHORD_SYMBOL":case 1:a.annotationType=1;break;case"BEAT":case 2:a.annotationType=2;break}return a},s.toObject=function(i,a){a||(a={});var c={};if(a.defaults)if(c.time=0,c.text="",c.annotationType=a.enums===String?"UNKNOWN":0,$util.Long){var u=new $util.Long(0,0,!1);c.quantizedStep=a.longs===String?u.toString():a.longs===Number?u.toNumber():u}else c.quantizedStep=a.longs===String?"0":0;return i.time!=null&&i.hasOwnProperty("time")&&(c.time=a.json&&!isFinite(i.time)?String(i.time):i.time),i.text!=null&&i.hasOwnProperty("text")&&(c.text=i.text),i.annotationType!=null&&i.hasOwnProperty("annotationType")&&(c.annotationType=a.enums===String?$root.tensorflow.magenta.NoteSequence.TextAnnotation.TextAnnotationType[i.annotationType]:i.annotationType),i.quantizedStep!=null&&i.hasOwnProperty("quantizedStep")&&(typeof i.quantizedStep=="number"?c.quantizedStep=a.longs===String?String(i.quantizedStep):i.quantizedStep:c.quantizedStep=a.longs===String?$util.Long.prototype.toString.call(i.quantizedStep):a.longs===Number?new $util.LongBits(i.quantizedStep.low>>>0,i.quantizedStep.high>>>0).toNumber():i.quantizedStep),c},s.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},s.TextAnnotationType=function(){var r={},i=Object.create(r);return i[r[0]="UNKNOWN"]=0,i[r[1]="CHORD_SYMBOL"]=1,i[r[2]="BEAT"]=2,i}(),s}(),t.QuantizationInfo=function(){function s(i){if(i)for(var a=Object.keys(i),c=0;c<a.length;++c)i[a[c]]!=null&&(this[a[c]]=i[a[c]])}s.prototype.stepsPerQuarter=0,s.prototype.stepsPerSecond=0;var r;return Object.defineProperty(s.prototype,"resolution",{get:$util.oneOfGetter(r=["stepsPerQuarter","stepsPerSecond"]),set:$util.oneOfSetter(r)}),s.create=function(a){return new s(a)},s.encode=function(a,c){return c||(c=$Writer.create()),a.stepsPerQuarter!=null&&a.hasOwnProperty("stepsPerQuarter")&&c.uint32(8).int32(a.stepsPerQuarter),a.stepsPerSecond!=null&&a.hasOwnProperty("stepsPerSecond")&&c.uint32(16).int32(a.stepsPerSecond),c},s.encodeDelimited=function(a,c){return this.encode(a,c).ldelim()},s.decode=function(a,c){a instanceof $Reader||(a=$Reader.create(a));for(var u=c===void 0?a.len:a.pos+c,l=new $root.tensorflow.magenta.NoteSequence.QuantizationInfo;a.pos<u;){var h=a.uint32();switch(h>>>3){case 1:l.stepsPerQuarter=a.int32();break;case 2:l.stepsPerSecond=a.int32();break;default:a.skipType(h&7);break}}return l},s.decodeDelimited=function(a){return a instanceof $Reader||(a=new $Reader(a)),this.decode(a,a.uint32())},s.verify=function(a){if(typeof a!="object"||a===null)return"object expected";var c={};if(a.stepsPerQuarter!=null&&a.hasOwnProperty("stepsPerQuarter")&&(c.resolution=1,!$util.isInteger(a.stepsPerQuarter)))return"stepsPerQuarter: integer expected";if(a.stepsPerSecond!=null&&a.hasOwnProperty("stepsPerSecond")){if(c.resolution===1)return"resolution: multiple values";if(c.resolution=1,!$util.isInteger(a.stepsPerSecond))return"stepsPerSecond: integer expected"}return null},s.fromObject=function(a){if(a instanceof $root.tensorflow.magenta.NoteSequence.QuantizationInfo)return a;var c=new $root.tensorflow.magenta.NoteSequence.QuantizationInfo;return a.stepsPerQuarter!=null&&(c.stepsPerQuarter=a.stepsPerQuarter|0),a.stepsPerSecond!=null&&(c.stepsPerSecond=a.stepsPerSecond|0),c},s.toObject=function(a,c){c||(c={});var u={};return a.stepsPerQuarter!=null&&a.hasOwnProperty("stepsPerQuarter")&&(u.stepsPerQuarter=a.stepsPerQuarter,c.oneofs&&(u.resolution="stepsPerQuarter")),a.stepsPerSecond!=null&&a.hasOwnProperty("stepsPerSecond")&&(u.stepsPerSecond=a.stepsPerSecond,c.oneofs&&(u.resolution="stepsPerSecond")),u},s.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},s}(),t.SubsequenceInfo=function(){function s(r){if(r)for(var i=Object.keys(r),a=0;a<i.length;++a)r[i[a]]!=null&&(this[i[a]]=r[i[a]])}return s.prototype.startTimeOffset=0,s.prototype.endTimeOffset=0,s.create=function(i){return new s(i)},s.encode=function(i,a){return a||(a=$Writer.create()),i.startTimeOffset!=null&&i.hasOwnProperty("startTimeOffset")&&a.uint32(9).double(i.startTimeOffset),i.endTimeOffset!=null&&i.hasOwnProperty("endTimeOffset")&&a.uint32(17).double(i.endTimeOffset),a},s.encodeDelimited=function(i,a){return this.encode(i,a).ldelim()},s.decode=function(i,a){i instanceof $Reader||(i=$Reader.create(i));for(var c=a===void 0?i.len:i.pos+a,u=new $root.tensorflow.magenta.NoteSequence.SubsequenceInfo;i.pos<c;){var l=i.uint32();switch(l>>>3){case 1:u.startTimeOffset=i.double();break;case 2:u.endTimeOffset=i.double();break;default:i.skipType(l&7);break}}return u},s.decodeDelimited=function(i){return i instanceof $Reader||(i=new $Reader(i)),this.decode(i,i.uint32())},s.verify=function(i){return typeof i!="object"||i===null?"object expected":i.startTimeOffset!=null&&i.hasOwnProperty("startTimeOffset")&&typeof i.startTimeOffset!="number"?"startTimeOffset: number expected":i.endTimeOffset!=null&&i.hasOwnProperty("endTimeOffset")&&typeof i.endTimeOffset!="number"?"endTimeOffset: number expected":null},s.fromObject=function(i){if(i instanceof $root.tensorflow.magenta.NoteSequence.SubsequenceInfo)return i;var a=new $root.tensorflow.magenta.NoteSequence.SubsequenceInfo;return i.startTimeOffset!=null&&(a.startTimeOffset=Number(i.startTimeOffset)),i.endTimeOffset!=null&&(a.endTimeOffset=Number(i.endTimeOffset)),a},s.toObject=function(i,a){a||(a={});var c={};return a.defaults&&(c.startTimeOffset=0,c.endTimeOffset=0),i.startTimeOffset!=null&&i.hasOwnProperty("startTimeOffset")&&(c.startTimeOffset=a.json&&!isFinite(i.startTimeOffset)?String(i.startTimeOffset):i.startTimeOffset),i.endTimeOffset!=null&&i.hasOwnProperty("endTimeOffset")&&(c.endTimeOffset=a.json&&!isFinite(i.endTimeOffset)?String(i.endTimeOffset):i.endTimeOffset),c},s.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},s}(),t.SectionAnnotation=function(){function s(r){if(r)for(var i=Object.keys(r),a=0;a<i.length;++a)r[i[a]]!=null&&(this[i[a]]=r[i[a]])}return s.prototype.time=0,s.prototype.sectionId=$util.Long?$util.Long.fromBits(0,0,!1):0,s.create=function(i){return new s(i)},s.encode=function(i,a){return a||(a=$Writer.create()),i.time!=null&&i.hasOwnProperty("time")&&a.uint32(9).double(i.time),i.sectionId!=null&&i.hasOwnProperty("sectionId")&&a.uint32(32).int64(i.sectionId),a},s.encodeDelimited=function(i,a){return this.encode(i,a).ldelim()},s.decode=function(i,a){i instanceof $Reader||(i=$Reader.create(i));for(var c=a===void 0?i.len:i.pos+a,u=new $root.tensorflow.magenta.NoteSequence.SectionAnnotation;i.pos<c;){var l=i.uint32();switch(l>>>3){case 1:u.time=i.double();break;case 4:u.sectionId=$util.Long?i.int64().toNumber():i.int64();break;default:i.skipType(l&7);break}}return u},s.decodeDelimited=function(i){return i instanceof $Reader||(i=new $Reader(i)),this.decode(i,i.uint32())},s.verify=function(i){return typeof i!="object"||i===null?"object expected":i.time!=null&&i.hasOwnProperty("time")&&typeof i.time!="number"?"time: number expected":i.sectionId!=null&&i.hasOwnProperty("sectionId")&&!$util.isInteger(i.sectionId)&&!(i.sectionId&&$util.isInteger(i.sectionId.low)&&$util.isInteger(i.sectionId.high))?"sectionId: integer|Long expected":null},s.fromObject=function(i){if(i instanceof $root.tensorflow.magenta.NoteSequence.SectionAnnotation)return i;var a=new $root.tensorflow.magenta.NoteSequence.SectionAnnotation;return i.time!=null&&(a.time=Number(i.time)),i.sectionId!=null&&($util.Long?(a.sectionId=$util.Long.fromValue(i.sectionId)).unsigned=!1:typeof i.sectionId=="string"?a.sectionId=parseInt(i.sectionId,10):typeof i.sectionId=="number"?a.sectionId=i.sectionId:typeof i.sectionId=="object"&&(a.sectionId=new $util.LongBits(i.sectionId.low>>>0,i.sectionId.high>>>0).toNumber())),a},s.toObject=function(i,a){a||(a={});var c={};if(a.defaults)if(c.time=0,$util.Long){var u=new $util.Long(0,0,!1);c.sectionId=a.longs===String?u.toString():a.longs===Number?u.toNumber():u}else c.sectionId=a.longs===String?"0":0;return i.time!=null&&i.hasOwnProperty("time")&&(c.time=a.json&&!isFinite(i.time)?String(i.time):i.time),i.sectionId!=null&&i.hasOwnProperty("sectionId")&&(typeof i.sectionId=="number"?c.sectionId=a.longs===String?String(i.sectionId):i.sectionId:c.sectionId=a.longs===String?$util.Long.prototype.toString.call(i.sectionId):a.longs===Number?new $util.LongBits(i.sectionId.low>>>0,i.sectionId.high>>>0).toNumber():i.sectionId),c},s.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},s}(),t.Section=function(){function s(i){if(i)for(var a=Object.keys(i),c=0;c<a.length;++c)i[a[c]]!=null&&(this[a[c]]=i[a[c]])}s.prototype.sectionId=$util.Long?$util.Long.fromBits(0,0,!1):0,s.prototype.sectionGroup=null;var r;return Object.defineProperty(s.prototype,"sectionType",{get:$util.oneOfGetter(r=["sectionId","sectionGroup"]),set:$util.oneOfSetter(r)}),s.create=function(a){return new s(a)},s.encode=function(a,c){return c||(c=$Writer.create()),a.sectionId!=null&&a.hasOwnProperty("sectionId")&&c.uint32(8).int64(a.sectionId),a.sectionGroup!=null&&a.hasOwnProperty("sectionGroup")&&$root.tensorflow.magenta.NoteSequence.SectionGroup.encode(a.sectionGroup,c.uint32(18).fork()).ldelim(),c},s.encodeDelimited=function(a,c){return this.encode(a,c).ldelim()},s.decode=function(a,c){a instanceof $Reader||(a=$Reader.create(a));for(var u=c===void 0?a.len:a.pos+c,l=new $root.tensorflow.magenta.NoteSequence.Section;a.pos<u;){var h=a.uint32();switch(h>>>3){case 1:l.sectionId=$util.Long?a.int64().toNumber():a.int64();break;case 2:l.sectionGroup=$root.tensorflow.magenta.NoteSequence.SectionGroup.decode(a,a.uint32());break;default:a.skipType(h&7);break}}return l},s.decodeDelimited=function(a){return a instanceof $Reader||(a=new $Reader(a)),this.decode(a,a.uint32())},s.verify=function(a){if(typeof a!="object"||a===null)return"object expected";var c={};if(a.sectionId!=null&&a.hasOwnProperty("sectionId")&&(c.sectionType=1,!$util.isInteger(a.sectionId)&&!(a.sectionId&&$util.isInteger(a.sectionId.low)&&$util.isInteger(a.sectionId.high))))return"sectionId: integer|Long expected";if(a.sectionGroup!=null&&a.hasOwnProperty("sectionGroup")){if(c.sectionType===1)return"sectionType: multiple values";c.sectionType=1;{var u=$root.tensorflow.magenta.NoteSequence.SectionGroup.verify(a.sectionGroup);if(u)return"sectionGroup."+u}}return null},s.fromObject=function(a){if(a instanceof $root.tensorflow.magenta.NoteSequence.Section)return a;var c=new $root.tensorflow.magenta.NoteSequence.Section;if(a.sectionId!=null&&($util.Long?(c.sectionId=$util.Long.fromValue(a.sectionId)).unsigned=!1:typeof a.sectionId=="string"?c.sectionId=parseInt(a.sectionId,10):typeof a.sectionId=="number"?c.sectionId=a.sectionId:typeof a.sectionId=="object"&&(c.sectionId=new $util.LongBits(a.sectionId.low>>>0,a.sectionId.high>>>0).toNumber())),a.sectionGroup!=null){if(typeof a.sectionGroup!="object")throw TypeError(".tensorflow.magenta.NoteSequence.Section.sectionGroup: object expected");c.sectionGroup=$root.tensorflow.magenta.NoteSequence.SectionGroup.fromObject(a.sectionGroup)}return c},s.toObject=function(a,c){c||(c={});var u={};return a.sectionId!=null&&a.hasOwnProperty("sectionId")&&(typeof a.sectionId=="number"?u.sectionId=c.longs===String?String(a.sectionId):a.sectionId:u.sectionId=c.longs===String?$util.Long.prototype.toString.call(a.sectionId):c.longs===Number?new $util.LongBits(a.sectionId.low>>>0,a.sectionId.high>>>0).toNumber():a.sectionId,c.oneofs&&(u.sectionType="sectionId")),a.sectionGroup!=null&&a.hasOwnProperty("sectionGroup")&&(u.sectionGroup=$root.tensorflow.magenta.NoteSequence.SectionGroup.toObject(a.sectionGroup,c),c.oneofs&&(u.sectionType="sectionGroup")),u},s.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},s}(),t.SectionGroup=function(){function s(r){if(this.sections=[],r)for(var i=Object.keys(r),a=0;a<i.length;++a)r[i[a]]!=null&&(this[i[a]]=r[i[a]])}return s.prototype.sections=$util.emptyArray,s.prototype.numTimes=0,s.create=function(i){return new s(i)},s.encode=function(i,a){if(a||(a=$Writer.create()),i.sections!=null&&i.sections.length)for(var c=0;c<i.sections.length;++c)$root.tensorflow.magenta.NoteSequence.Section.encode(i.sections[c],a.uint32(10).fork()).ldelim();return i.numTimes!=null&&i.hasOwnProperty("numTimes")&&a.uint32(16).int32(i.numTimes),a},s.encodeDelimited=function(i,a){return this.encode(i,a).ldelim()},s.decode=function(i,a){i instanceof $Reader||(i=$Reader.create(i));for(var c=a===void 0?i.len:i.pos+a,u=new $root.tensorflow.magenta.NoteSequence.SectionGroup;i.pos<c;){var l=i.uint32();switch(l>>>3){case 1:u.sections&&u.sections.length||(u.sections=[]),u.sections.push($root.tensorflow.magenta.NoteSequence.Section.decode(i,i.uint32()));break;case 2:u.numTimes=i.int32();break;default:i.skipType(l&7);break}}return u},s.decodeDelimited=function(i){return i instanceof $Reader||(i=new $Reader(i)),this.decode(i,i.uint32())},s.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.sections!=null&&i.hasOwnProperty("sections")){if(!Array.isArray(i.sections))return"sections: array expected";for(var a=0;a<i.sections.length;++a){var c=$root.tensorflow.magenta.NoteSequence.Section.verify(i.sections[a]);if(c)return"sections."+c}}return i.numTimes!=null&&i.hasOwnProperty("numTimes")&&!$util.isInteger(i.numTimes)?"numTimes: integer expected":null},s.fromObject=function(i){if(i instanceof $root.tensorflow.magenta.NoteSequence.SectionGroup)return i;var a=new $root.tensorflow.magenta.NoteSequence.SectionGroup;if(i.sections){if(!Array.isArray(i.sections))throw TypeError(".tensorflow.magenta.NoteSequence.SectionGroup.sections: array expected");a.sections=[];for(var c=0;c<i.sections.length;++c){if(typeof i.sections[c]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.SectionGroup.sections: object expected");a.sections[c]=$root.tensorflow.magenta.NoteSequence.Section.fromObject(i.sections[c])}}return i.numTimes!=null&&(a.numTimes=i.numTimes|0),a},s.toObject=function(i,a){a||(a={});var c={};if((a.arrays||a.defaults)&&(c.sections=[]),a.defaults&&(c.numTimes=0),i.sections&&i.sections.length){c.sections=[];for(var u=0;u<i.sections.length;++u)c.sections[u]=$root.tensorflow.magenta.NoteSequence.Section.toObject(i.sections[u],a)}return i.numTimes!=null&&i.hasOwnProperty("numTimes")&&(c.numTimes=i.numTimes),c},s.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},s}(),t}(),e.SequenceMetadata=function(){function t(s){if(this.genre=[],this.composers=[],s)for(var r=Object.keys(s),i=0;i<r.length;++i)s[r[i]]!=null&&(this[r[i]]=s[r[i]])}return t.prototype.title="",t.prototype.artist="",t.prototype.genre=$util.emptyArray,t.prototype.composers=$util.emptyArray,t.create=function(r){return new t(r)},t.encode=function(r,i){if(i||(i=$Writer.create()),r.title!=null&&r.hasOwnProperty("title")&&i.uint32(10).string(r.title),r.artist!=null&&r.hasOwnProperty("artist")&&i.uint32(18).string(r.artist),r.genre!=null&&r.genre.length)for(var a=0;a<r.genre.length;++a)i.uint32(26).string(r.genre[a]);if(r.composers!=null&&r.composers.length)for(var a=0;a<r.composers.length;++a)i.uint32(34).string(r.composers[a]);return i},t.encodeDelimited=function(r,i){return this.encode(r,i).ldelim()},t.decode=function(r,i){r instanceof $Reader||(r=$Reader.create(r));for(var a=i===void 0?r.len:r.pos+i,c=new $root.tensorflow.magenta.SequenceMetadata;r.pos<a;){var u=r.uint32();switch(u>>>3){case 1:c.title=r.string();break;case 2:c.artist=r.string();break;case 3:c.genre&&c.genre.length||(c.genre=[]),c.genre.push(r.string());break;case 4:c.composers&&c.composers.length||(c.composers=[]),c.composers.push(r.string());break;default:r.skipType(u&7);break}}return c},t.decodeDelimited=function(r){return r instanceof $Reader||(r=new $Reader(r)),this.decode(r,r.uint32())},t.verify=function(r){if(typeof r!="object"||r===null)return"object expected";if(r.title!=null&&r.hasOwnProperty("title")&&!$util.isString(r.title))return"title: string expected";if(r.artist!=null&&r.hasOwnProperty("artist")&&!$util.isString(r.artist))return"artist: string expected";if(r.genre!=null&&r.hasOwnProperty("genre")){if(!Array.isArray(r.genre))return"genre: array expected";for(var i=0;i<r.genre.length;++i)if(!$util.isString(r.genre[i]))return"genre: string[] expected"}if(r.composers!=null&&r.hasOwnProperty("composers")){if(!Array.isArray(r.composers))return"composers: array expected";for(var i=0;i<r.composers.length;++i)if(!$util.isString(r.composers[i]))return"composers: string[] expected"}return null},t.fromObject=function(r){if(r instanceof $root.tensorflow.magenta.SequenceMetadata)return r;var i=new $root.tensorflow.magenta.SequenceMetadata;if(r.title!=null&&(i.title=String(r.title)),r.artist!=null&&(i.artist=String(r.artist)),r.genre){if(!Array.isArray(r.genre))throw TypeError(".tensorflow.magenta.SequenceMetadata.genre: array expected");i.genre=[];for(var a=0;a<r.genre.length;++a)i.genre[a]=String(r.genre[a])}if(r.composers){if(!Array.isArray(r.composers))throw TypeError(".tensorflow.magenta.SequenceMetadata.composers: array expected");i.composers=[];for(var a=0;a<r.composers.length;++a)i.composers[a]=String(r.composers[a])}return i},t.toObject=function(r,i){i||(i={});var a={};if((i.arrays||i.defaults)&&(a.genre=[],a.composers=[]),i.defaults&&(a.title="",a.artist=""),r.title!=null&&r.hasOwnProperty("title")&&(a.title=r.title),r.artist!=null&&r.hasOwnProperty("artist")&&(a.artist=r.artist),r.genre&&r.genre.length){a.genre=[];for(var c=0;c<r.genre.length;++c)a.genre[c]=r.genre[c]}if(r.composers&&r.composers.length){a.composers=[];for(var c=0;c<r.composers.length;++c)a.composers[c]=r.composers[c]}return a},t.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},t}(),e.VelocityRange=function(){function t(s){if(s)for(var r=Object.keys(s),i=0;i<r.length;++i)s[r[i]]!=null&&(this[r[i]]=s[r[i]])}return t.prototype.min=0,t.prototype.max=0,t.create=function(r){return new t(r)},t.encode=function(r,i){return i||(i=$Writer.create()),r.min!=null&&r.hasOwnProperty("min")&&i.uint32(8).int32(r.min),r.max!=null&&r.hasOwnProperty("max")&&i.uint32(16).int32(r.max),i},t.encodeDelimited=function(r,i){return this.encode(r,i).ldelim()},t.decode=function(r,i){r instanceof $Reader||(r=$Reader.create(r));for(var a=i===void 0?r.len:r.pos+i,c=new $root.tensorflow.magenta.VelocityRange;r.pos<a;){var u=r.uint32();switch(u>>>3){case 1:c.min=r.int32();break;case 2:c.max=r.int32();break;default:r.skipType(u&7);break}}return c},t.decodeDelimited=function(r){return r instanceof $Reader||(r=new $Reader(r)),this.decode(r,r.uint32())},t.verify=function(r){return typeof r!="object"||r===null?"object expected":r.min!=null&&r.hasOwnProperty("min")&&!$util.isInteger(r.min)?"min: integer expected":r.max!=null&&r.hasOwnProperty("max")&&!$util.isInteger(r.max)?"max: integer expected":null},t.fromObject=function(r){if(r instanceof $root.tensorflow.magenta.VelocityRange)return r;var i=new $root.tensorflow.magenta.VelocityRange;return r.min!=null&&(i.min=r.min|0),r.max!=null&&(i.max=r.max|0),i},t.toObject=function(r,i){i||(i={});var a={};return i.defaults&&(a.min=0,a.max=0),r.min!=null&&r.hasOwnProperty("min")&&(a.min=r.min),r.max!=null&&r.hasOwnProperty("max")&&(a.max=r.max),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},t}(),e}(),n}();var proto=$root,NoteSequence=proto.tensorflow.magenta.NoteSequence;function getGlobalObject(){if(typeof globalThis!="undefined")return globalThis;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw new Error("cannot find the global object")}const globalObject=getGlobalObject();globalObject.fetch.bind(globalObject);globalObject.performance;globalObject.navigator;const isSafari=!!globalObject.webkitOfflineAudioContext,isWorker=typeof globalObject.WorkerGlobalScope!="undefined";function getOfflineAudioContext(n){if(n=isSafari?44100:n,isWorker)throw new Error("Cannot use offline audio context in a web worker.");const t=globalObject.webkitOfflineAudioContext;return isSafari?new t(1,n,n):new globalObject.OfflineAudioContext(1,n,n)}const isNode=typeof global!="undefined"&&typeof global.process!="undefined",fetch$1=isNode?require("node-fetch"):window.fetch.bind(window),performance$1=isNode?require("./performance_node"):window.performance;isNode?require("./navigator_node"):window.navigator;var Level;(function(n){n[n.NONE=0]="NONE",n[n.WARN=5]="WARN",n[n.INFO=10]="INFO",n[n.DEBUG=20]="DEBUG"})(Level||(Level={}));let verbosity=10;function log$1(n,e="Magenta.js",t=10){if(t===0)throw Error("Logging level cannot be NONE.");verbosity>=t&&(t===5?console.warn:console.log)(`%c ${e} `,"background:magenta; color:white",n)}function logWithDuration(n,e,t="Magenta.js",s=10){const r=(performance$1.now()-e)/1e3;log$1(`${n} in ${r.toPrecision(3)}s`,t,s)}const QUANTIZE_CUTOFF=.5;class MultipleTimeSignatureException extends Error{constructor(e){super(e);Object.setPrototypeOf(this,new.target.prototype)}}class BadTimeSignatureException extends Error{constructor(e){super(e);Object.setPrototypeOf(this,new.target.prototype)}}class NegativeTimeException extends Error{constructor(e){super(e);Object.setPrototypeOf(this,new.target.prototype)}}class MultipleTempoException extends Error{constructor(e){super(e);Object.setPrototypeOf(this,new.target.prototype)}}class QuantizationStatusException extends Error{constructor(e){super(e);Object.setPrototypeOf(this,new.target.prototype)}}function isPowerOf2(n){return n&&(n&n-1)==0}function clone(n){return NoteSequence.decode(NoteSequence.encode(n).finish())}function stepsPerQuarterToStepsPerSecond(n,e){return n*e/60}function quantizeToStep(n,e,t=QUANTIZE_CUTOFF){const s=n*e;return Math.floor(s+(1-t))}function getQuantizedTimeEvents(n){return n.controlChanges.concat(n.textAnnotations)}function quantizeNotesAndEvents(n,e){for(const t of n.notes){if(t.quantizedStartStep=quantizeToStep(t.startTime,e),t.quantizedEndStep=quantizeToStep(t.endTime,e),t.quantizedEndStep===t.quantizedStartStep&&(t.quantizedEndStep+=1),t.quantizedStartStep<0||t.quantizedEndStep<0)throw new NegativeTimeException(`Got negative note time: start_step = ${t.quantizedStartStep}, end_step = ${t.quantizedEndStep}`);t.quantizedEndStep>n.totalQuantizedSteps&&(n.totalQuantizedSteps=t.quantizedEndStep)}getQuantizedTimeEvents(n).forEach(t=>{if(t.quantizedStep=quantizeToStep(t.time,e),t.quantizedStep<0)throw new NegativeTimeException(`Got negative event time: step = ${t.quantizedStep}`)})}function assertSingleTempo(n){if(!(!n.tempos||n.tempos.length===0)){if(n.tempos.sort((e,t)=>e.time-t.time),n.tempos[0].time!==0&&n.tempos[0].qpm!==DEFAULT_QUARTERS_PER_MINUTE)throw new MultipleTempoException(`NoteSequence has an implicit tempo change from initial ${DEFAULT_QUARTERS_PER_MINUTE} qpm to ${n.tempos[0].qpm} qpm at ${n.tempos[0].time} seconds.`);for(let e=1;e<n.tempos.length;e++)if(n.tempos[e].qpm!==n.tempos[0].qpm)throw new MultipleTempoException(`NoteSequence has at least one tempo change from ${n.tempos[0].qpm} qpm to ${n.tempos[e].qpm}qpm at ${n.tempos[e].time} seconds.`)}}function quantizeNoteSequence(n,e){const t=clone(n);if(t.quantizationInfo=NoteSequence.QuantizationInfo.create({stepsPerQuarter:e}),t.timeSignatures.length>0){if(t.timeSignatures.sort((i,a)=>i.time-a.time),t.timeSignatures[0].time!==0&&!(t.timeSignatures[0].numerator===4&&t.timeSignatures[0].denominator===4))throw new MultipleTimeSignatureException(`NoteSequence has an implicit change from initial 4/4 time signature to ${t.timeSignatures[0].numerator}/${t.timeSignatures[0].denominator} at ${t.timeSignatures[0].time} seconds.`);for(let i=1;i<t.timeSignatures.length;i++){const a=t.timeSignatures[i];if(a.numerator!==t.timeSignatures[0].numerator||a.denominator!==t.timeSignatures[0].denominator)throw new MultipleTimeSignatureException(`NoteSequence has at least one time signature change from ${t.timeSignatures[0].numerator}/${t.timeSignatures[0].denominator} to ${a.numerator}/${a.denominator} at ${a.time} seconds`)}t.timeSignatures[0].time=0,t.timeSignatures=[t.timeSignatures[0]]}else{const i=NoteSequence.TimeSignature.create({numerator:4,denominator:4,time:0});t.timeSignatures.push(i)}const s=t.timeSignatures[0];if(!isPowerOf2(s.denominator))throw new BadTimeSignatureException(`Denominator is not a power of 2. Time signature: ${s.numerator}/${s.denominator}`);if(s.numerator===0)throw new BadTimeSignatureException(`Numerator is 0. Time signature: ${s.numerator}/${s.denominator}`);if(t.tempos.length>0)assertSingleTempo(t),t.tempos[0].time=0,t.tempos=[t.tempos[0]];else{const i=NoteSequence.Tempo.create({qpm:DEFAULT_QUARTERS_PER_MINUTE,time:0});t.tempos.push(i)}const r=stepsPerQuarterToStepsPerSecond(e,t.tempos[0].qpm);return t.totalQuantizedSteps=quantizeToStep(n.totalTime,r),quantizeNotesAndEvents(t,r),t}function isQuantizedSequence(n){return n.quantizationInfo&&(n.quantizationInfo.stepsPerQuarter>0||n.quantizationInfo.stepsPerSecond>0)}function assertIsQuantizedSequence(n){if(!isQuantizedSequence(n))throw new QuantizationStatusException(`NoteSequence ${n.id} is not quantized (missing quantizationInfo)`)}function isRelativeQuantizedSequence(n){return n.quantizationInfo&&n.quantizationInfo.stepsPerQuarter>0}function assertIsRelativeQuantizedSequence(n){if(!isRelativeQuantizedSequence(n))throw new QuantizationStatusException(`NoteSequence ${n.id} is not quantized or is quantized based on absolute timing`)}function unquantizeSequence(n,e){assertIsRelativeQuantizedSequence(n),assertSingleTempo(n);const t=clone(n);e?t.tempos&&t.tempos.length>0?t.tempos[0].qpm=e:t.tempos.push(NoteSequence.Tempo.create({time:0,qpm:e})):e=n.tempos&&n.tempos.length>0?t.tempos[0].qpm:DEFAULT_QUARTERS_PER_MINUTE;const s=r=>r/t.quantizationInfo.stepsPerQuarter*(60/e);return t.totalTime=s(t.totalQuantizedSteps),t.notes.forEach(r=>{r.startTime=s(r.quantizedStartStep),r.endTime=s(r.quantizedEndStep),t.totalTime=Math.max(t.totalTime,r.endTime),delete r.quantizedStartStep,delete r.quantizedEndStep}),getQuantizedTimeEvents(t).forEach(r=>{r.time=s(r.time)}),delete t.totalQuantizedSteps,delete t.quantizationInfo,t}function createQuantizedNoteSequence(n=DEFAULT_STEPS_PER_QUARTER,e=DEFAULT_QUARTERS_PER_MINUTE){return NoteSequence.create({quantizationInfo:{stepsPerQuarter:n},tempos:[{qpm:e}]})}const NO_EVENT=0,NOTE_OFF=1,FIRST_PITCH=2;class Melody{constructor(e,t,s){this.events=e,this.minPitch=t,this.maxPitch=s}static fromNoteSequence(e,t,s,r=!0,i){assertIsQuantizedSequence(e);const a=e.notes.sort((l,h)=>l.quantizedStartStep===h.quantizedStartStep?h.pitch-l.pitch:l.quantizedStartStep-h.quantizedStartStep),c=new Int32Array(i||e.totalQuantizedSteps);let u=-1;return a.forEach(l=>{if(l.quantizedStartStep===u){if(r)return;throw new Error("`NoteSequence` is not monophonic.")}if(l.pitch<t||l.pitch>s)throw Error(`\`NoteSequence\` has a pitch outside of the valid range: ${l.pitch}`);c[l.quantizedStartStep]=l.pitch-t+FIRST_PITCH,c[l.quantizedEndStep]=NOTE_OFF,u=l.quantizedStartStep}),new Melody(c,t,s)}toNoteSequence(e,t){const s=createQuantizedNoteSequence(e,t);let r=null;for(let i=0;i<this.events.length;++i){const a=this.events[i];switch(a){case NO_EVENT:break;case NOTE_OFF:r&&(r.quantizedEndStep=i,s.notes.push(r),r=null);break;default:r&&(r.quantizedEndStep=i,s.notes.push(r)),r=NoteSequence.Note.create({pitch:a-FIRST_PITCH+this.minPitch,quantizedStartStep:i})}}return r&&(r.quantizedEndStep=this.events.length,s.notes.push(r)),s.totalQuantizedSteps=this.events.length,s}}class MelodyRhythm{constructor(){this.depth=1}extract(e){const t=e.events.length,s=buffer([t,1]);for(let r=0;r<t;++r)s.set(e.events[r]>=FIRST_PITCH?1:0,r,0);return s.toTensor().as2D(t,1)}}class MelodyShape{constructor(){this.depth=3}extract(e){const t=e.events.length,s=buffer([t,3]);let r=null,i=null;for(let a=0;a<t;++a)if(e.events[a]>=FIRST_PITCH){if(r!==null){s.get(r,0)===0&&s.get(r,1)===0&&s.get(r,2)===0&&(r=-1);let c;e.events[a]<i?c=0:e.events[a]>i?c=2:c=1;for(let u=a;u>r;--u)s.set(1,u,c)}r=a,i=e.events[a]}if(r!==t-1)if(r===null||s.get(r,0)===0&&s.get(r,1)===0&&s.get(r,2)===0)for(let a=0;a<t;++a)s.set(1,a,1);else for(let a=t-1;a>r;--a)for(let c=0;c<3;c++)s.set(s.get(r,c),a,c);return s.toTensor().as2D(t,3)}}class Performance{constructor(e,t,s,r,i){this.events=e,this.maxShiftSteps=t,this.numVelocityBins=s,this.program=r,this.isDrum=i}static fromNoteSequence(e,t,s,r){assertIsQuantizedSequence(e);const i=e.notes.filter((S,T)=>r!==void 0?S.instrument===r:!0),a=i.sort((S,T)=>S.startTime===T.startTime?S.pitch-T.pitch:S.startTime-T.startTime),c=a.map((S,T)=>({step:S.quantizedStartStep,index:T,isOffset:0})),u=a.map((S,T)=>({step:S.quantizedEndStep,index:T,isOffset:1})),l=c.concat(u).sort((S,T)=>S.step===T.step?S.index===T.index?S.isOffset-T.isOffset:S.index-T.index:S.step-T.step),h=s?Math.ceil((MIDI_VELOCITIES-1)/s):void 0,d=[];let f=0,y=s;for(const S of l){if(S.step>f){for(;S.step>f+t;)d.push({type:"time-shift",steps:t}),f+=t;d.push({type:"time-shift",steps:S.step-f}),f=S.step}if(S.isOffset)d.push({type:"note-off",pitch:a[S.index].pitch});else{if(h){const T=Math.floor((a[S.index].velocity-MIN_MIDI_VELOCITY-1)/h)+1;T!==y&&(d.push({type:"velocity-change",velocityBin:T}),y=T)}d.push({type:"note-on",pitch:a[S.index].pitch})}}const g=i.some(S=>S.isDrum)?i.some(S=>!S.isDrum)?void 0:!0:!1,x=Array.from(new Set(i.map(S=>S.program))),b=!g&&x.length===1?x[0]:void 0,v=new Performance(d,t,s,b,g);return v.setNumSteps(e.totalQuantizedSteps),v}getNumSteps(){return this.events.filter(e=>e.type==="time-shift").map(e=>e.steps).reduce((e,t)=>e+t,0)}setNumSteps(e){let t=this.getNumSteps();if(t<e){if(this.events.length){const s=this.events[this.events.length-1];if(s.type==="time-shift"){const r=Math.min(e-t,this.maxShiftSteps-s.steps);s.steps+=r,t+=r}}for(;t<e;)t+this.maxShiftSteps>e?(this.events.push({type:"time-shift",steps:e-t}),t=e):(this.events.push({type:"time-shift",steps:this.maxShiftSteps}),t+=this.maxShiftSteps)}else if(t>e)for(;this.events.length&&t>e;){const s=this.events[this.events.length-1];s.type==="time-shift"?t-s.steps<e?(s.steps-=t-e,t=e):(this.events.pop(),t-=s.steps):this.events.pop()}}toNoteSequence(e){const t=this.numVelocityBins?Math.ceil((MIDI_VELOCITIES-1)/this.numVelocityBins):void 0,s=NoteSequence.create();let r=0,i;const a=new Map;for(let c=MIN_MIDI_PITCH;c<=MAX_MIDI_PITCH;++c)a.set(c,[]);for(const c of this.events)switch(c.type){case"note-on":a.get(c.pitch).push([r,i]);break;case"note-off":const u=a.get(c.pitch);if(u.length){const[l,h]=u.shift();r>l?s.notes.push(NoteSequence.Note.create({pitch:c.pitch,velocity:h,instrument:e,quantizedStartStep:l,quantizedEndStep:r,program:this.program,isDrum:this.isDrum})):log$1(`Ignoring zero-length note: (pitch = ${c.pitch}, step = ${r})`,"Performance")}else log$1(`Ignoring note-off with no previous note-on:(pitch = ${c.pitch}, step = ${r})`,"Performance");break;case"time-shift":r+=c.steps;break;case"velocity-change":if(t)i=MIN_MIDI_VELOCITY+(c.velocityBin-1)*t+1;else throw new Error(`Unexpected velocity change event: ${c}`);break;default:throw new Error(`Unrecognized performance event: ${c}`)}return a.forEach((c,u)=>{for(const[l,h]of c)r>l?s.notes.push(NoteSequence.Note.create({pitch:u,velocity:h,instrument:e,quantizedStartStep:l,quantizedEndStep:r,program:this.program,isDrum:this.isDrum})):log$1(`Ignoring zero-length note: (pitch = ${u}, step = ${r})`,"Performance")}),s.totalQuantizedSteps=r,s}}function converterFromSpec(n){switch(n.type){case"MelodyConverter":return new MelodyConverter(n.args);case"MelodyRhythmConverter":return new MelodyRhythmConverter(n.args);case"MelodyShapeConverter":return new MelodyShapeConverter(n.args);case"DrumsConverter":return new DrumsConverter(n.args);case"DrumRollConverter":return new DrumRollConverter(n.args);case"TrioConverter":return new TrioConverter(n.args);case"TrioRhythmConverter":return new TrioRhythmConverter(n.args);case"DrumsOneHotConverter":return new DrumsOneHotConverter(n.args);case"MultitrackConverter":return new MultitrackConverter(n.args);case"GrooveConverter":return new GrooveConverter(n.args);default:throw new Error(`Unknown DataConverter type: ${n}`)}}class DataConverter{constructor(e){this.NUM_SPLITS=0,this.SEGMENTED_BY_TRACK=!1,this.numSteps=e.numSteps,this.numSegments=e.numSegments}tensorSteps(e){return scalar(e.shape[0],"int32")}}class DrumsConverter extends DataConverter{constructor(e){super(e);this.pitchClasses=e.pitchClasses||DEFAULT_DRUM_PITCH_CLASSES,this.pitchToClass=new Map;for(let t=0;t<this.pitchClasses.length;++t)this.pitchClasses[t].forEach(s=>{this.pitchToClass.set(s,t)});this.depth=this.pitchClasses.length+1}toTensor(e){assertIsQuantizedSequence(e);const t=this.numSteps||e.totalQuantizedSteps,s=buffer([t,this.pitchClasses.length+1],"int32");for(let r=0;r<t;++r)s.set(1,r,-1);return e.notes.forEach(r=>{s.set(1,r.quantizedStartStep,this.pitchToClass.get(r.pitch)),s.set(0,r.quantizedStartStep,-1)}),s.toTensor()}async toNoteSequence(e,t,s){const r=createQuantizedNoteSequence(t,s),i=e.argMax(1),a=await i.data();i.dispose();for(let c=0;c<a.length;++c)for(let u=0;u<this.pitchClasses.length;u++)a[c]>>u&1&&r.notes.push(NoteSequence.Note.create({pitch:this.pitchClasses[u][0],quantizedStartStep:c,quantizedEndStep:c+1,isDrum:!0}));return r.totalQuantizedSteps=a.length,r}}class DrumRollConverter extends DrumsConverter{async toNoteSequence(e,t,s){const r=createQuantizedNoteSequence(t,s),i=await e.data();for(let a=0;a<e.shape[0];++a){const c=i.slice(a*this.pitchClasses.length,(a+1)*this.pitchClasses.length);for(let u=0;u<c.length;++u)c[u]&&r.notes.push(NoteSequence.Note.create({pitch:this.pitchClasses[u][0],quantizedStartStep:a,quantizedEndStep:a+1,isDrum:!0}))}return r.totalQuantizedSteps=e.shape[0],r}}class DrumsOneHotConverter extends DrumsConverter{constructor(e){super(e);this.depth=Math.pow(2,this.pitchClasses.length)}toTensor(e){assertIsRelativeQuantizedSequence(e);const t=this.numSteps||e.totalQuantizedSteps,s=Array(t).fill(0);for(const{pitch:r,quantizedStartStep:i}of e.notes)s[i]+=Math.pow(2,this.pitchToClass.get(r));return tidy(()=>oneHot$2(tensor1d(s,"int32"),this.depth))}}class MelodyConverter extends DataConverter{constructor(e){super(e);this.NOTE_OFF=1,this.FIRST_PITCH=2,this.minPitch=e.minPitch,this.maxPitch=e.maxPitch,this.ignorePolyphony=e.ignorePolyphony,this.depth=e.maxPitch-e.minPitch+1+this.FIRST_PITCH}toTensor(e){const t=Melody.fromNoteSequence(e,this.minPitch,this.maxPitch,this.ignorePolyphony,this.numSteps);return tidy(()=>oneHot$2(tensor(t.events,[t.events.length],"int32"),this.depth))}async toNoteSequence(e,t,s){const r=e.argMax(1),i=await r.data();return r.dispose(),new Melody(i,this.minPitch,this.maxPitch).toNoteSequence(t,s)}}class MelodyControlConverter extends DataConverter{constructor(e,t){super(e);this.minPitch=e.minPitch,this.maxPitch=e.maxPitch,this.ignorePolyphony=e.ignorePolyphony,this.melodyControl=t,this.depth=t.depth}toTensor(e){const t=Melody.fromNoteSequence(e,this.minPitch,this.maxPitch,this.ignorePolyphony,this.numSteps);return this.melodyControl.extract(t)}}class MelodyRhythmConverter extends MelodyControlConverter{constructor(e){super(e,new MelodyRhythm)}async toNoteSequence(e,t,s){const r=createQuantizedNoteSequence(t,s),i=await e.data();for(let a=0;a<i.length;++a)i[a]&&r.notes.push(NoteSequence.Note.create({pitch:DEFAULT_DRUM_PITCH_CLASSES[1][0],quantizedStartStep:a,quantizedEndStep:a+1,isDrum:!0}));return r.totalQuantizedSteps=i.length,r}}class MelodyShapeConverter extends MelodyControlConverter{constructor(e){super(e,new MelodyShape)}async toNoteSequence(e,t,s){const r=createQuantizedNoteSequence(t,s),i=e.argMax(1),a=await i.data();i.dispose();let c=Math.round((this.maxPitch+this.minPitch)/2);for(let u=0;u<a.length;++u){switch(a[u]){case 0:c-=1,c<this.minPitch&&(c=this.minPitch,log$1("Pitch range exceeded when creating NoteSequence from shape.","MelodyShapeConverter"));break;case 2:c+=1,c>this.maxPitch&&(c=this.maxPitch,log$1("Pitch range exceeded when creating NoteSequence from shape.","MelodyShapeConverter"));break}r.notes.push(NoteSequence.Note.create({pitch:c,quantizedStartStep:u,quantizedEndStep:u+1}))}return r.totalQuantizedSteps=a.length,r}}class TrioConverter extends DataConverter{constructor(e){super(e);this.NUM_SPLITS=3,this.MEL_PROG_RANGE=[0,31],this.BASS_PROG_RANGE=[32,39],e.melArgs.numSteps=e.numSteps,e.bassArgs.numSteps=e.numSteps,e.drumsArgs.numSteps=e.numSteps,this.melConverter=new MelodyConverter(e.melArgs),this.bassConverter=new MelodyConverter(e.bassArgs),this.drumsConverter=new DrumsOneHotConverter(e.drumsArgs),this.depth=this.melConverter.depth+this.bassConverter.depth+this.drumsConverter.depth}toTensor(e){assertIsQuantizedSequence(e);const t=clone(e),s=clone(e),r=clone(e);return t.notes=e.notes.filter(i=>!i.isDrum&&i.program>=this.MEL_PROG_RANGE[0]&&i.program<=this.MEL_PROG_RANGE[1]),s.notes=e.notes.filter(i=>!i.isDrum&&i.program>=this.BASS_PROG_RANGE[0]&&i.program<=this.BASS_PROG_RANGE[1]),r.notes=e.notes.filter(i=>i.isDrum),tidy(()=>concat$2([this.melConverter.toTensor(t),this.bassConverter.toTensor(s),this.drumsConverter.toTensor(r)],-1))}async toNoteSequence(e,t,s){const r=split(e,[this.melConverter.depth,this.bassConverter.depth,this.drumsConverter.depth],-1),i=await this.melConverter.toNoteSequence(r[0],t,s);i.notes.forEach(u=>{u.instrument=0,u.program=0});const a=await this.bassConverter.toNoteSequence(r[1],t,s);i.notes.push(...a.notes.map(u=>(u.instrument=1,u.program=this.BASS_PROG_RANGE[0],u)));const c=await this.drumsConverter.toNoteSequence(r[2],t,s);return i.notes.push(...c.notes.map(u=>(u.instrument=2,u))),r.forEach(u=>u.dispose()),i}}class TrioRhythmConverter extends DataConverter{constructor(e){super(e);this.NUM_SPLITS=3,this.trioConverter=new TrioConverter(e),this.depth=3}toTensor(e){return tidy(()=>{const t=this.trioConverter.toTensor(e),s=split(t,[this.trioConverter.melConverter.depth,this.trioConverter.bassConverter.depth,this.trioConverter.drumsConverter.depth],1),r=argMax$2(s[0],1),i=argMax$2(s[1],1),a=argMax$2(s[2],1),c=greater$2(r,1),u=greater$2(i,1),l=greater$2(a,0);return stack([c,u,l],1)})}async toNoteSequence(e,t,s){const r=split(e,3,1),i=await Promise.all(r.map(c=>c.data())),a=createQuantizedNoteSequence(t,s);for(let c=0;c<this.numSteps;++c)i[0][c]&&a.notes.push(NoteSequence.Note.create({pitch:72,quantizedStartStep:c,quantizedEndStep:c+1,instrument:0,program:0})),i[1][c]&&a.notes.push(NoteSequence.Note.create({pitch:36,quantizedStartStep:c,quantizedEndStep:c+1,instrument:1,program:32})),i[2][c]&&a.notes.push(NoteSequence.Note.create({pitch:DEFAULT_DRUM_PITCH_CLASSES[1][0],quantizedStartStep:c,quantizedEndStep:c+1,instrument:2,isDrum:!0}));return a.totalQuantizedSteps=this.numSteps,a}}class MultitrackConverter extends DataConverter{constructor(e){super(e);this.SEGMENTED_BY_TRACK=!0,this.stepsPerQuarter=e.stepsPerQuarter,this.totalSteps=e.totalSteps,this.numVelocityBins=e.numVelocityBins,this.minPitch=e.minPitch?e.minPitch:MIN_MIDI_PITCH,this.maxPitch=e.maxPitch?e.maxPitch:MAX_MIDI_PITCH,this.numPitches=this.maxPitch-this.minPitch+1,this.performanceEventDepth=2*this.numPitches+this.totalSteps+this.numVelocityBins,this.numPrograms=MAX_MIDI_PROGRAM-MIN_MIDI_PROGRAM+2,this.endToken=this.performanceEventDepth+this.numPrograms,this.depth=this.endToken+1,this.endTensor=tidy(()=>oneHot$2(tensor1d([this.endToken],"int32"),this.depth).as1D())}trackToTensor(e){const t=this.numSteps/this.numSegments;let s;if(e){for(;e.events.length>t-2;)e.events.pop();s=buffer([e.events.length+2],"int32"),s.set(this.performanceEventDepth+(e.isDrum?this.numPrograms-1:e.program),0),e.events.forEach((r,i)=>{switch(r.type){case"note-on":s.set(r.pitch-this.minPitch,i+1);break;case"note-off":s.set(this.numPitches+r.pitch-this.minPitch,i+1);break;case"time-shift":s.set(2*this.numPitches+r.steps-1,i+1);break;case"velocity-change":s.set(2*this.numPitches+this.totalSteps+r.velocityBin-1,i+1);break;default:throw new Error(`Unrecognized performance event: ${r}`)}}),s.set(this.endToken,e.events.length+1)}else s=buffer([1],"int32",new Int32Array([this.endToken]));return tidy(()=>{const r=oneHot$2(s.toTensor(),this.depth);return r.pad([[0,t-r.shape[0]],[0,0]])})}toTensor(e){if(assertIsRelativeQuantizedSequence(e),e.quantizationInfo.stepsPerQuarter!==this.stepsPerQuarter)throw new Error(`Steps per quarter note mismatch: ${e.quantizationInfo.stepsPerQuarter} != ${this.stepsPerQuarter}`);const t=clone(e);t.notes=e.notes.filter(a=>a.pitch>=this.minPitch&&a.pitch<=this.maxPitch);const s=new Set(t.notes.map(a=>a.instrument)),i=Array.from(s).map(a=>Performance.fromNoteSequence(t,this.totalSteps,this.numVelocityBins,a)).sort((a,c)=>c.isDrum?-1:a.isDrum?1:a.program-c.program);for(;i.length>this.numSegments;)i.pop();for(i.forEach(a=>a.setNumSteps(this.totalSteps));i.length<this.numSegments;)i.push(void 0);return tidy(()=>concat$2(i.map(a=>this.trackToTensor(a)),0))}tokensToTrack(e){const t=e.indexOf(this.endToken),s=t>=0?t:e.length,r=e.slice(0,s),i=r.filter(h=>h<this.performanceEventDepth),a=r.filter(h=>h>=this.performanceEventDepth),[c,u]=a.length?a[0]-this.performanceEventDepth<this.numPrograms-1?[a[0]-this.performanceEventDepth,!1]:[0,!0]:[0,!1],l=Array.from(i).map(h=>{if(h<this.numPitches)return{type:"note-on",pitch:this.minPitch+h};if(h<2*this.numPitches)return{type:"note-off",pitch:this.minPitch+h-this.numPitches};if(h<2*this.numPitches+this.totalSteps)return{type:"time-shift",steps:h-2*this.numPitches+1};if(h<2*this.numPitches+this.totalSteps+this.numVelocityBins)return{type:"velocity-change",velocityBin:h-2*this.numPitches-this.totalSteps+1};throw new Error(`Invalid performance event token: ${h}`)});return new Performance(l,this.totalSteps,this.numVelocityBins,c,u)}async toNoteSequence(e,t=this.stepsPerQuarter,s){const r=createQuantizedNoteSequence(t,s);r.totalQuantizedSteps=this.totalSteps;const i=tidy(()=>split(e.argMax(1),this.numSegments));return(await Promise.all(i.map(async c=>{const u=await c.data(),l=this.tokensToTrack(u);return c.dispose(),l}))).forEach((c,u)=>{c.setNumSteps(this.totalSteps),r.notes.push(...c.toNoteSequence(u).notes)}),r}}class GrooveConverter extends DataConverter{constructor(e){super(e);this.TAPIFY_CHANNEL=3,this.stepsPerQuarter=e.stepsPerQuarter||DEFAULT_STEPS_PER_QUARTER,this.pitchClasses=e.pitchClasses||DEFAULT_DRUM_PITCH_CLASSES,this.pitchToClass=new Map;for(let t=0;t<this.pitchClasses.length;++t)this.pitchClasses[t].forEach(s=>{this.pitchToClass.set(s,t)});this.humanize=e.humanize||!1,this.tapify=e.tapify||!1,this.splitInstruments=e.splitInstruments||!1,this.depth=3}toTensor(e){const t=isRelativeQuantizedSequence(e)?e:quantizeNoteSequence(e,this.stepsPerQuarter),s=this.numSteps,r=t.tempos&&t.tempos.length?t.tempos[0].qpm:DEFAULT_QUARTERS_PER_MINUTE,i=60/r/this.stepsPerQuarter,a=[];for(let f=0;f<s;++f)a.push(new Map);t.notes.forEach(f=>{if(!(this.tapify||this.pitchToClass.has(f.pitch)))return;const y=f.quantizedStartStep;if(y>=a.length)throw Error(`Model does not support sequences with more than ${s} steps (${s*i} seconds at qpm ${r}).`);const g=this.tapify?this.TAPIFY_CHANNEL:this.pitchToClass.get(f.pitch);(!a[y].has(g)||a[y].get(g).velocity<f.velocity)&&a[y].set(g,f)});const c=this.pitchClasses.length,u=buffer([s,c]),l=buffer([s,c]),h=buffer([s,c]);function d(f){if(f.startTime===void 0)return 0;const y=f.startTime,g=f.quantizedStartStep*i;return 2*(g-y)/i}for(let f=0;f<s;++f)for(let y=0;y<c;++y){const g=a[f].get(y);u.set(g?1:0,f,y),!this.humanize&&!this.tapify&&l.set(g?g.velocity/MAX_MIDI_VELOCITY:0,f,y),this.humanize||h.set(g?d(g):0,f,y)}return tidy(()=>{const f=u.toTensor(),y=l.toTensor(),g=h.toTensor(),x=this.splitInstruments?s*c:s;return concat$2([f.as2D(x,-1),y.as2D(x,-1),g.as2D(x,-1)],1)})}async toNoteSequence(e,t,s=DEFAULT_QUARTERS_PER_MINUTE){if(t&&t!==this.stepsPerQuarter)throw Error("`stepsPerQuarter` is set by the model.");t=this.stepsPerQuarter;const r=this.splitInstruments?e.shape[0]/this.pitchClasses.length:e.shape[0],i=60/s/this.stepsPerQuarter,a=NoteSequence.create({totalTime:r*i,tempos:[{qpm:s}]}),c=await e.data();function u(h,d,f){return Math.min(Math.max(h,d),f)}const l=this.pitchClasses.length;for(let h=0;h<r;++h){const d=c.slice(h*l*this.depth,(h+1)*l*this.depth);for(let f=0;f<l;++f){const y=d[this.splitInstruments?f*this.depth:f],g=this.splitInstruments?f*this.depth+1:l+f,x=d[g],b=this.splitInstruments?f*this.depth+2:2*l+f,v=d[b];if(y>.5){const S=u(Math.round(x*MAX_MIDI_VELOCITY),MIN_MIDI_VELOCITY,MAX_MIDI_VELOCITY),T=u(v/2,-.5,.5);a.notes.push(NoteSequence.Note.create({pitch:this.pitchClasses[f][0],startTime:(h-T)*i,endTime:(h-T+1)*i,velocity:S,isDrum:!0}))}}}return a}}const version="14.7.77",createExtendedExponentialRampToValueAutomationEvent=(n,e,t)=>({endTime:e,insertTime:t,type:"exponentialRampToValue",value:n}),createExtendedLinearRampToValueAutomationEvent=(n,e,t)=>({endTime:e,insertTime:t,type:"linearRampToValue",value:n}),createSetValueAutomationEvent=(n,e)=>({startTime:e,type:"setValue",value:n}),createSetValueCurveAutomationEvent=(n,e,t)=>({duration:t,startTime:e,type:"setValueCurve",values:n}),getTargetValueAtTime=(n,e,{startTime:t,target:s,timeConstant:r})=>s+(e-s)*Math.exp((t-n)/r),isExponentialRampToValueAutomationEvent=n=>n.type==="exponentialRampToValue",isLinearRampToValueAutomationEvent=n=>n.type==="linearRampToValue",isAnyRampToValueAutomationEvent=n=>isExponentialRampToValueAutomationEvent(n)||isLinearRampToValueAutomationEvent(n),isSetValueAutomationEvent=n=>n.type==="setValue",isSetValueCurveAutomationEvent=n=>n.type==="setValueCurve",getValueOfAutomationEventAtIndexAtTime=(n,e,t,s)=>{const r=n[e];return r===void 0?s:isAnyRampToValueAutomationEvent(r)||isSetValueAutomationEvent(r)?r.value:isSetValueCurveAutomationEvent(r)?r.values[r.values.length-1]:getTargetValueAtTime(t,getValueOfAutomationEventAtIndexAtTime(n,e-1,r.startTime,s),r)},getEndTimeAndValueOfPreviousAutomationEvent=(n,e,t,s,r)=>t===void 0?[s.insertTime,r]:isAnyRampToValueAutomationEvent(t)?[t.endTime,t.value]:isSetValueAutomationEvent(t)?[t.startTime,t.value]:isSetValueCurveAutomationEvent(t)?[t.startTime+t.duration,t.values[t.values.length-1]]:[t.startTime,getValueOfAutomationEventAtIndexAtTime(n,e-1,t.startTime,r)],isCancelAndHoldAutomationEvent=n=>n.type==="cancelAndHold",isCancelScheduledValuesAutomationEvent=n=>n.type==="cancelScheduledValues",getEventTime=n=>isCancelAndHoldAutomationEvent(n)||isCancelScheduledValuesAutomationEvent(n)?n.cancelTime:isExponentialRampToValueAutomationEvent(n)||isLinearRampToValueAutomationEvent(n)?n.endTime:n.startTime,getExponentialRampValueAtTime=(n,e,t,{endTime:s,value:r})=>t===r?r:0<t&&0<r||t<0&&r<0?t*(r/t)**((n-e)/(s-e)):0,getLinearRampValueAtTime=(n,e,t,{endTime:s,value:r})=>t+(n-e)/(s-e)*(r-t),interpolateValue=(n,e)=>{const t=Math.floor(e),s=Math.ceil(e);return t===s?n[t]:(1-(e-t))*n[t]+(1-(s-e))*n[s]},getValueCurveValueAtTime=(n,{duration:e,startTime:t,values:s})=>{const r=(n-t)/e*(s.length-1);return interpolateValue(s,r)},isSetTargetAutomationEvent=n=>n.type==="setTarget";class AutomationEventList{constructor(e){this._automationEvents=[],this._currenTime=0,this._defaultValue=e}[Symbol.iterator](){return this._automationEvents[Symbol.iterator]()}add(e){const t=getEventTime(e);if(isCancelAndHoldAutomationEvent(e)||isCancelScheduledValuesAutomationEvent(e)){const s=this._automationEvents.findIndex(i=>isCancelScheduledValuesAutomationEvent(e)&&isSetValueCurveAutomationEvent(i)?i.startTime+i.duration>=t:getEventTime(i)>=t),r=this._automationEvents[s];if(s!==-1&&(this._automationEvents=this._automationEvents.slice(0,s)),isCancelAndHoldAutomationEvent(e)){const i=this._automationEvents[this._automationEvents.length-1];if(r!==void 0&&isAnyRampToValueAutomationEvent(r)){if(isSetTargetAutomationEvent(i))throw new Error("The internal list is malformed.");const a=isSetValueCurveAutomationEvent(i)?i.startTime+i.duration:getEventTime(i),c=isSetValueCurveAutomationEvent(i)?i.values[i.values.length-1]:i.value,u=isExponentialRampToValueAutomationEvent(r)?getExponentialRampValueAtTime(t,a,c,r):getLinearRampValueAtTime(t,a,c,r),l=isExponentialRampToValueAutomationEvent(r)?createExtendedExponentialRampToValueAutomationEvent(u,t,this._currenTime):createExtendedLinearRampToValueAutomationEvent(u,t,this._currenTime);this._automationEvents.push(l)}i!==void 0&&isSetTargetAutomationEvent(i)&&this._automationEvents.push(createSetValueAutomationEvent(this.getValue(t),t)),i!==void 0&&isSetValueCurveAutomationEvent(i)&&i.startTime+i.duration>t&&(this._automationEvents[this._automationEvents.length-1]=createSetValueCurveAutomationEvent(new Float32Array([6,7]),i.startTime,t-i.startTime))}}else{const s=this._automationEvents.findIndex(a=>getEventTime(a)>t),r=s===-1?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[s-1];if(r!==void 0&&isSetValueCurveAutomationEvent(r)&&getEventTime(r)+r.duration>t)return!1;const i=isExponentialRampToValueAutomationEvent(e)?createExtendedExponentialRampToValueAutomationEvent(e.value,e.endTime,this._currenTime):isLinearRampToValueAutomationEvent(e)?createExtendedLinearRampToValueAutomationEvent(e.value,t,this._currenTime):e;if(s===-1)this._automationEvents.push(i);else{if(isSetValueCurveAutomationEvent(e)&&t+e.duration>getEventTime(this._automationEvents[s]))return!1;this._automationEvents.splice(s,0,i)}}return!0}flush(e){const t=this._automationEvents.findIndex(s=>getEventTime(s)>e);if(t>1){const s=this._automationEvents.slice(t-1),r=s[0];isSetTargetAutomationEvent(r)&&s.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents,t-2,r.startTime,this._defaultValue),r.startTime)),this._automationEvents=s}}getValue(e){if(this._automationEvents.length===0)return this._defaultValue;const t=this._automationEvents.findIndex(a=>getEventTime(a)>e),s=this._automationEvents[t],r=(t===-1?this._automationEvents.length:t)-1,i=this._automationEvents[r];if(i!==void 0&&isSetTargetAutomationEvent(i)&&(s===void 0||!isAnyRampToValueAutomationEvent(s)||s.insertTime>e))return getTargetValueAtTime(e,getValueOfAutomationEventAtIndexAtTime(this._automationEvents,r-1,i.startTime,this._defaultValue),i);if(i!==void 0&&isSetValueAutomationEvent(i)&&(s===void 0||!isAnyRampToValueAutomationEvent(s)))return i.value;if(i!==void 0&&isSetValueCurveAutomationEvent(i)&&(s===void 0||!isAnyRampToValueAutomationEvent(s)||i.startTime+i.duration>e))return e<i.startTime+i.duration?getValueCurveValueAtTime(e,i):i.values[i.values.length-1];if(i!==void 0&&isAnyRampToValueAutomationEvent(i)&&(s===void 0||!isAnyRampToValueAutomationEvent(s)))return i.value;if(s!==void 0&&isExponentialRampToValueAutomationEvent(s)){const[a,c]=getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents,r,i,s,this._defaultValue);return getExponentialRampValueAtTime(e,a,c,s)}if(s!==void 0&&isLinearRampToValueAutomationEvent(s)){const[a,c]=getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents,r,i,s,this._defaultValue);return getLinearRampValueAtTime(e,a,c,s)}return this._defaultValue}}const createCancelAndHoldAutomationEvent=n=>({cancelTime:n,type:"cancelAndHold"}),createCancelScheduledValuesAutomationEvent=n=>({cancelTime:n,type:"cancelScheduledValues"}),createExponentialRampToValueAutomationEvent=(n,e)=>({endTime:e,type:"exponentialRampToValue",value:n}),createLinearRampToValueAutomationEvent=(n,e)=>({endTime:e,type:"linearRampToValue",value:n}),createSetTargetAutomationEvent=(n,e,t)=>({startTime:e,target:n,timeConstant:t,type:"setTarget"}),createAbortError=()=>new DOMException("","AbortError"),createAddActiveInputConnectionToAudioNode=n=>(e,t,[s,r,i],a)=>{n(e[r],[t,s,i],c=>c[0]===t&&c[1]===s,a)},createAddAudioNodeConnections=n=>(e,t,s)=>{const r=[];for(let i=0;i<s.numberOfInputs;i+=1)r.push(new Set);n.set(e,{activeInputs:r,outputs:new Set,passiveInputs:new WeakMap,renderer:t})},createAddAudioParamConnections=n=>(e,t)=>{n.set(e,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:t})},ACTIVE_AUDIO_NODE_STORE=new WeakSet,AUDIO_NODE_CONNECTIONS_STORE=new WeakMap,AUDIO_NODE_STORE=new WeakMap,AUDIO_PARAM_CONNECTIONS_STORE=new WeakMap,AUDIO_PARAM_STORE=new WeakMap,CONTEXT_STORE=new WeakMap,EVENT_LISTENERS=new WeakMap,CYCLE_COUNTERS=new WeakMap,NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS=new WeakMap,NODE_TO_PROCESSOR_MAPS=new WeakMap,handler={construct(){return handler}},isConstructible=n=>{try{const e=new Proxy(n,handler);new e}catch{return!1}return!0},IMPORT_STATEMENT_REGEX=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,splitImportStatements=(n,e)=>{const t=[];let s=n.replace(/^[\s]+/,""),r=s.match(IMPORT_STATEMENT_REGEX);for(;r!==null;){const i=r[1].slice(1,-1),a=r[0].replace(/([\s]+)?;?$/,"").replace(i,new URL(i,e).toString());t.push(a),s=s.slice(r[0].length).replace(/^[\s]+/,""),r=s.match(IMPORT_STATEMENT_REGEX)}return[t.join(";"),s]},verifyParameterDescriptors=n=>{if(n!==void 0&&!Array.isArray(n))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},verifyProcessorCtor=n=>{if(!isConstructible(n))throw new TypeError("The given value for processorCtor should be a constructor.");if(n.prototype===null||typeof n.prototype!="object")throw new TypeError("The given value for processorCtor should have a prototype.")},createAddAudioWorkletModule=(n,e,t,s,r,i,a,c,u,l,h,d,f)=>{let y=0;return(g,x,b={credentials:"omit"})=>{const v=h.get(g);if(v!==void 0&&v.has(x))return Promise.resolve();const S=l.get(g);if(S!==void 0){const C=S.get(x);if(C!==void 0)return C}const T=i(g),w=T.audioWorklet===void 0?r(x).then(([C,N])=>{const[_,$]=splitImportStatements(C,N),E=`${_};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${$}
})})(window,'_AWGS')`;return t(E)}).then(()=>{const C=f._AWGS.pop();if(C===void 0)throw new SyntaxError;s(T.currentTime,T.sampleRate,()=>C(class{},void 0,(N,_)=>{if(N.trim()==="")throw e();const $=NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(T);if($!==void 0){if($.has(N))throw e();verifyProcessorCtor(_),verifyParameterDescriptors(_.parameterDescriptors),$.set(N,_)}else verifyProcessorCtor(_),verifyParameterDescriptors(_.parameterDescriptors),NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(T,new Map([[N,_]]))},T.sampleRate,void 0,void 0))}):Promise.all([r(x),Promise.resolve(n(d,d))]).then(([[C,N],_])=>{const $=y+1;y=$;const[E,k]=splitImportStatements(C,N),O=`${E};((AudioWorkletProcessor,registerProcessor)=>{${k}
})(${_?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${_?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${_?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${$}',class extends AudioWorkletProcessor{process(){return !1}})`,B=new Blob([O],{type:"application/javascript; charset=utf-8"}),L=URL.createObjectURL(B);return T.audioWorklet.addModule(L,b).then(()=>{if(c(T))return T;const V=a(T);return V.audioWorklet.addModule(L,b).then(()=>V)}).then(V=>{if(u===null)throw new SyntaxError;try{new u(V,`__sac${$}`)}catch{throw new SyntaxError}}).finally(()=>URL.revokeObjectURL(L))});return S===void 0?l.set(g,new Map([[x,w]])):S.set(x,w),w.then(()=>{const C=h.get(g);C===void 0?h.set(g,new Set([x])):C.add(x)}).finally(()=>{const C=l.get(g);C!==void 0&&C.delete(x)}),w}},getValueForKey=(n,e)=>{const t=n.get(e);if(t===void 0)throw new Error("A value with the given key could not be found.");return t},pickElementFromSet=(n,e)=>{const t=Array.from(n).filter(e);if(t.length>1)throw Error("More than one element was found.");if(t.length===0)throw Error("No element was found.");const[s]=t;return n.delete(s),s},deletePassiveInputConnectionToAudioNode=(n,e,t,s)=>{const r=getValueForKey(n,e),i=pickElementFromSet(r,a=>a[0]===t&&a[1]===s);return r.size===0&&n.delete(e),i},getEventListenersOfAudioNode=n=>getValueForKey(EVENT_LISTENERS,n),setInternalStateToActive=n=>{if(ACTIVE_AUDIO_NODE_STORE.has(n))throw new Error("The AudioNode is already stored.");ACTIVE_AUDIO_NODE_STORE.add(n),getEventListenersOfAudioNode(n).forEach(e=>e(!0))},isAudioWorkletNode=n=>"port"in n,setInternalStateToPassive=n=>{if(!ACTIVE_AUDIO_NODE_STORE.has(n))throw new Error("The AudioNode is not stored.");ACTIVE_AUDIO_NODE_STORE.delete(n),getEventListenersOfAudioNode(n).forEach(e=>e(!1))},setInternalStateToPassiveWhenNecessary=(n,e)=>{!isAudioWorkletNode(n)&&e.every(t=>t.size===0)&&setInternalStateToPassive(n)},createAddConnectionToAudioNode=(n,e,t,s,r,i,a,c,u,l,h,d,f)=>{const y=new WeakMap;return(g,x,b,v,S)=>{const{activeInputs:T,passiveInputs:w}=i(x),{outputs:C}=i(g),N=c(g),_=$=>{const E=u(x),k=u(g);if($){const F=deletePassiveInputConnectionToAudioNode(w,g,b,v);n(T,g,F,!1),!S&&!d(g)&&t(k,E,b,v),f(x)&&setInternalStateToActive(x)}else{const F=s(T,g,b,v);e(w,v,F,!1),!S&&!d(g)&&r(k,E,b,v);const P=a(x);if(P===0)h(x)&&setInternalStateToPassiveWhenNecessary(x,T);else{const R=y.get(x);R!==void 0&&clearTimeout(R),y.set(x,setTimeout(()=>{h(x)&&setInternalStateToPassiveWhenNecessary(x,T)},P*1e3))}}};return l(C,[x,b,v],$=>$[0]===x&&$[1]===b&&$[2]===v,!0)?(N.add(_),h(g)?n(T,g,[b,v,_],!0):e(w,v,[g,b,_],!0),!0):!1}},createAddPassiveInputConnectionToAudioNode=n=>(e,t,[s,r,i],a)=>{const c=e.get(s);c===void 0?e.set(s,new Set([[r,t,i]])):n(c,[r,t,i],u=>u[0]===r&&u[1]===t,a)},createAddSilentConnection=n=>(e,t)=>{const s=n(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});t.connect(s).connect(e.destination);const r=()=>{t.removeEventListener("ended",r),t.disconnect(s),s.disconnect()};t.addEventListener("ended",r)},createAddUnrenderedAudioWorkletNode=n=>(e,t)=>{n(e).add(t)},DEFAULT_OPTIONS$j={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},createAnalyserNodeConstructor=(n,e,t,s,r,i)=>class extends n{constructor(c,u){const l=r(c),h=te(te({},DEFAULT_OPTIONS$j),u),d=s(l,h),f=i(l)?e():null;super(c,!1,d,f);this._nativeAnalyserNode=d}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(c){this._nativeAnalyserNode.fftSize=c}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(c){const u=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=c,!(c>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=u,t()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(c){const u=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=c,!(this._nativeAnalyserNode.maxDecibels>c))throw this._nativeAnalyserNode.minDecibels=u,t()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(c){this._nativeAnalyserNode.smoothingTimeConstant=c}getByteFrequencyData(c){this._nativeAnalyserNode.getByteFrequencyData(c)}getByteTimeDomainData(c){this._nativeAnalyserNode.getByteTimeDomainData(c)}getFloatFrequencyData(c){this._nativeAnalyserNode.getFloatFrequencyData(c)}getFloatTimeDomainData(c){this._nativeAnalyserNode.getFloatTimeDomainData(c)}},isOwnedByContext=(n,e)=>n.context===e,createAnalyserNodeRendererFactory=(n,e,t)=>()=>{const s=new WeakMap,r=async(i,a)=>{let c=e(i);if(!isOwnedByContext(c,a)){const l={channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,fftSize:c.fftSize,maxDecibels:c.maxDecibels,minDecibels:c.minDecibels,smoothingTimeConstant:c.smoothingTimeConstant};c=n(a,l)}return s.set(a,c),await t(i,a,c),c};return{render(i,a){const c=s.get(a);return c!==void 0?Promise.resolve(c):r(i,a)}}},testAudioBufferCopyChannelMethodsOutOfBoundsSupport=n=>{try{n.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},createIndexSizeError=()=>new DOMException("","IndexSizeError"),wrapAudioBufferGetChannelDataMethod=n=>{n.getChannelData=(e=>t=>{try{return e.call(n,t)}catch(s){throw s.code===12?createIndexSizeError():s}})(n.getChannelData)},DEFAULT_OPTIONS$i={numberOfChannels:1},createAudioBufferConstructor=(n,e,t,s,r,i,a,c)=>{let u=null;return class ot{constructor(h){if(r===null)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:d,numberOfChannels:f,sampleRate:y}=te(te({},DEFAULT_OPTIONS$i),h);u===null&&(u=new r(1,1,44100));const g=s!==null&&e(i,i)?new s({length:d,numberOfChannels:f,sampleRate:y}):u.createBuffer(f,d,y);if(g.numberOfChannels===0)throw t();return typeof g.copyFromChannel!="function"?(a(g),wrapAudioBufferGetChannelDataMethod(g)):e(testAudioBufferCopyChannelMethodsOutOfBoundsSupport,()=>testAudioBufferCopyChannelMethodsOutOfBoundsSupport(g))||c(g),n.add(g),g}static[Symbol.hasInstance](h){return h!==null&&typeof h=="object"&&Object.getPrototypeOf(h)===ot.prototype||n.has(h)}}},MOST_NEGATIVE_SINGLE_FLOAT=-34028234663852886e22,MOST_POSITIVE_SINGLE_FLOAT=-MOST_NEGATIVE_SINGLE_FLOAT,isActiveAudioNode=n=>ACTIVE_AUDIO_NODE_STORE.has(n),DEFAULT_OPTIONS$h={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},createAudioBufferSourceNodeConstructor=(n,e,t,s,r,i,a,c)=>class extends n{constructor(l,h){const d=i(l),f=te(te({},DEFAULT_OPTIONS$h),h),y=r(d,f),g=a(d),x=g?e():null;super(l,!1,y,x);this._audioBufferSourceNodeRenderer=x,this._isBufferNullified=!1,this._isBufferSet=f.buffer!==null,this._nativeAudioBufferSourceNode=y,this._onended=null,this._playbackRate=t(this,g,y.playbackRate,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(l){if(this._nativeAudioBufferSourceNode.buffer=l,l!==null){if(this._isBufferSet)throw s();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(l){this._nativeAudioBufferSourceNode.loop=l}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(l){this._nativeAudioBufferSourceNode.loopEnd=l}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(l){this._nativeAudioBufferSourceNode.loopStart=l}get onended(){return this._onended}set onended(l){const h=typeof l=="function"?c(this,l):null;this._nativeAudioBufferSourceNode.onended=h;const d=this._nativeAudioBufferSourceNode.onended;this._onended=d!==null&&d===h?l:d}get playbackRate(){return this._playbackRate}start(l=0,h=0,d){if(this._nativeAudioBufferSourceNode.start(l,h,d),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.start=d===void 0?[l,h]:[l,h,d]),this.context.state!=="closed"){setInternalStateToActive(this);const f=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",f),isActiveAudioNode(this)&&setInternalStateToPassive(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",f)}}stop(l=0){this._nativeAudioBufferSourceNode.stop(l),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.stop=l)}},createAudioBufferSourceNodeRendererFactory=(n,e,t,s,r)=>()=>{const i=new WeakMap;let a=null,c=null;const u=async(l,h)=>{let d=t(l);const f=isOwnedByContext(d,h);if(!f){const y={buffer:d.buffer,channelCount:d.channelCount,channelCountMode:d.channelCountMode,channelInterpretation:d.channelInterpretation,loop:d.loop,loopEnd:d.loopEnd,loopStart:d.loopStart,playbackRate:d.playbackRate.value};d=e(h,y),a!==null&&d.start(...a),c!==null&&d.stop(c)}return i.set(h,d),f?await n(h,l.playbackRate,d.playbackRate):await s(h,l.playbackRate,d.playbackRate),await r(l,h,d),d};return{set start(l){a=l},set stop(l){c=l},render(l,h){const d=i.get(h);return d!==void 0?Promise.resolve(d):u(l,h)}}},isAudioBufferSourceNode=n=>"playbackRate"in n,isBiquadFilterNode=n=>"frequency"in n&&"gain"in n,isConstantSourceNode=n=>"offset"in n,isGainNode=n=>!("frequency"in n)&&"gain"in n,isOscillatorNode=n=>"detune"in n&&"frequency"in n,isStereoPannerNode=n=>"pan"in n,getAudioNodeConnections=n=>getValueForKey(AUDIO_NODE_CONNECTIONS_STORE,n),getAudioParamConnections=n=>getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE,n),deactivateActiveAudioNodeInputConnections=(n,e)=>{const{activeInputs:t}=getAudioNodeConnections(n);t.forEach(r=>r.forEach(([i])=>{e.includes(n)||deactivateActiveAudioNodeInputConnections(i,[...e,n])}));const s=isAudioBufferSourceNode(n)?[n.playbackRate]:isAudioWorkletNode(n)?Array.from(n.parameters.values()):isBiquadFilterNode(n)?[n.Q,n.detune,n.frequency,n.gain]:isConstantSourceNode(n)?[n.offset]:isGainNode(n)?[n.gain]:isOscillatorNode(n)?[n.detune,n.frequency]:isStereoPannerNode(n)?[n.pan]:[];for(const r of s){const i=getAudioParamConnections(r);i!==void 0&&i.activeInputs.forEach(([a])=>deactivateActiveAudioNodeInputConnections(a,e))}isActiveAudioNode(n)&&setInternalStateToPassive(n)},deactivateAudioGraph=n=>{deactivateActiveAudioNodeInputConnections(n.destination,[])},isValidLatencyHint=n=>n===void 0||typeof n=="number"||typeof n=="string"&&(n==="balanced"||n==="interactive"||n==="playback"),createAudioContextConstructor=(n,e,t,s,r,i,a,c,u)=>class extends n{constructor(h={}){if(u===null)throw new Error("Missing the native AudioContext constructor.");let d;try{d=new u(h)}catch(g){throw g.code===12&&g.message==="sampleRate is not in range"?t():g}if(d===null)throw s();if(!isValidLatencyHint(h.latencyHint))throw new TypeError(`The provided value '${h.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(h.sampleRate!==void 0&&d.sampleRate!==h.sampleRate)throw t();super(d,2);const{latencyHint:f}=h,{sampleRate:y}=d;if(this._baseLatency=typeof d.baseLatency=="number"?d.baseLatency:f==="balanced"?512/y:f==="interactive"||f===void 0?256/y:f==="playback"?1024/y:Math.max(2,Math.min(128,Math.round(f*y/128)))*128/y,this._nativeAudioContext=d,u.name==="webkitAudioContext"?(this._nativeGainNode=d.createGain(),this._nativeOscillatorNode=d.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(d.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,d.state==="running"){this._state="suspended";const g=()=>{this._state==="suspended"&&(this._state=null),d.removeEventListener("statechange",g)};d.addEventListener("statechange",g)}}get baseLatency(){return this._baseLatency}get state(){return this._state!==null?this._state:this._nativeAudioContext.state}close(){return this.state==="closed"?this._nativeAudioContext.close().then(()=>{throw e()}):(this._state==="suspended"&&(this._state=null),this._nativeAudioContext.close().then(()=>{this._nativeGainNode!==null&&this._nativeOscillatorNode!==null&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),deactivateAudioGraph(this)}))}createMediaElementSource(h){return new r(this,{mediaElement:h})}createMediaStreamDestination(){return new i(this)}createMediaStreamSource(h){return new a(this,{mediaStream:h})}createMediaStreamTrackSource(h){return new c(this,{mediaStreamTrack:h})}resume(){return this._state==="suspended"?new Promise((h,d)=>{const f=()=>{this._nativeAudioContext.removeEventListener("statechange",f),this._nativeAudioContext.state==="running"?h():this.resume().then(h,d)};this._nativeAudioContext.addEventListener("statechange",f)}):this._nativeAudioContext.resume().catch(h=>{throw h===void 0||h.code===15?e():h})}suspend(){return this._nativeAudioContext.suspend().catch(h=>{throw h===void 0?e():h})}},createAudioDestinationNodeConstructor=(n,e,t,s,r,i,a,c)=>class extends n{constructor(l,h){const d=i(l),f=a(d),y=r(d,h,f),g=f?e(c):null;super(l,!1,y,g);this._isNodeOfNativeOfflineAudioContext=f,this._nativeAudioDestinationNode=y}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(l){if(this._isNodeOfNativeOfflineAudioContext)throw s();if(l>this._nativeAudioDestinationNode.maxChannelCount)throw t();this._nativeAudioDestinationNode.channelCount=l}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(l){if(this._isNodeOfNativeOfflineAudioContext)throw s();this._nativeAudioDestinationNode.channelCountMode=l}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}},createAudioDestinationNodeRenderer=n=>{const e=new WeakMap,t=async(s,r)=>{const i=r.destination;return e.set(r,i),await n(s,r,i),i};return{render(s,r){const i=e.get(r);return i!==void 0?Promise.resolve(i):t(s,r)}}},createAudioListenerFactory=(n,e,t,s,r,i,a,c)=>(u,l)=>{const h=l.listener,d=()=>{const C=new Float32Array(1),N=e(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),_=a(l);let $=!1,E=[0,0,-1,0,1,0],k=[0,0,0];const F=()=>{if($)return;$=!0;const B=s(l,256,9,0);B.onaudioprocess=({inputBuffer:L})=>{const V=[i(L,C,0),i(L,C,1),i(L,C,2),i(L,C,3),i(L,C,4),i(L,C,5)];V.some((G,W)=>G!==E[W])&&(h.setOrientation(...V),E=V);const q=[i(L,C,6),i(L,C,7),i(L,C,8)];q.some((G,W)=>G!==k[W])&&(h.setPosition(...q),k=q)},N.connect(B)},P=B=>L=>{L!==E[B]&&(E[B]=L,h.setOrientation(...E))},R=B=>L=>{L!==k[B]&&(k[B]=L,h.setPosition(...k))},O=(B,L,V)=>{const q=t(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:L});q.connect(N,0,B),q.start(),Object.defineProperty(q.offset,"defaultValue",{get(){return L}});const G=n({context:u},_,q.offset,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT);return c(G,"value",W=>()=>W.call(G),W=>U=>{try{W.call(G,U)}catch(j){if(j.code!==9)throw j}F(),_&&V(U)}),G.cancelAndHoldAtTime=(W=>_?()=>{throw r()}:(...U)=>{const j=W.apply(G,U);return F(),j})(G.cancelAndHoldAtTime),G.cancelScheduledValues=(W=>_?()=>{throw r()}:(...U)=>{const j=W.apply(G,U);return F(),j})(G.cancelScheduledValues),G.exponentialRampToValueAtTime=(W=>_?()=>{throw r()}:(...U)=>{const j=W.apply(G,U);return F(),j})(G.exponentialRampToValueAtTime),G.linearRampToValueAtTime=(W=>_?()=>{throw r()}:(...U)=>{const j=W.apply(G,U);return F(),j})(G.linearRampToValueAtTime),G.setTargetAtTime=(W=>_?()=>{throw r()}:(...U)=>{const j=W.apply(G,U);return F(),j})(G.setTargetAtTime),G.setValueAtTime=(W=>_?()=>{throw r()}:(...U)=>{const j=W.apply(G,U);return F(),j})(G.setValueAtTime),G.setValueCurveAtTime=(W=>_?()=>{throw r()}:(...U)=>{const j=W.apply(G,U);return F(),j})(G.setValueCurveAtTime),G};return{forwardX:O(0,0,P(0)),forwardY:O(1,0,P(1)),forwardZ:O(2,-1,P(2)),positionX:O(6,0,R(0)),positionY:O(7,0,R(1)),positionZ:O(8,0,R(2)),upX:O(3,0,P(3)),upY:O(4,1,P(4)),upZ:O(5,0,P(5))}},{forwardX:f,forwardY:y,forwardZ:g,positionX:x,positionY:b,positionZ:v,upX:S,upY:T,upZ:w}=h.forwardX===void 0?d():h;return{get forwardX(){return f},get forwardY(){return y},get forwardZ(){return g},get positionX(){return x},get positionY(){return b},get positionZ(){return v},get upX(){return S},get upY(){return T},get upZ(){return w}}},isAudioNode$1=n=>"context"in n,isAudioNodeOutputConnection=n=>isAudioNode$1(n[0]),insertElementInSet=(n,e,t,s)=>{for(const r of n)if(t(r)){if(s)return!1;throw Error("The set contains at least one similar element.")}return n.add(e),!0},addActiveInputConnectionToAudioParam=(n,e,[t,s],r)=>{insertElementInSet(n,[e,t,s],i=>i[0]===e&&i[1]===t,r)},addPassiveInputConnectionToAudioParam=(n,[e,t,s],r)=>{const i=n.get(e);i===void 0?n.set(e,new Set([[t,s]])):insertElementInSet(i,[t,s],a=>a[0]===t,r)},isNativeAudioNodeFaker=n=>"inputs"in n,connectNativeAudioNodeToNativeAudioNode=(n,e,t,s)=>{if(isNativeAudioNodeFaker(e)){const r=e.inputs[s];return n.connect(r,t,0),[r,t,0]}return n.connect(e,t,s),[e,t,s]},deleteActiveInputConnection=(n,e,t)=>{for(const s of n)if(s[0]===e&&s[1]===t)return n.delete(s),s;return null},deleteActiveInputConnectionToAudioParam=(n,e,t)=>pickElementFromSet(n,s=>s[0]===e&&s[1]===t),deleteEventListenerOfAudioNode=(n,e)=>{if(!getEventListenersOfAudioNode(n).delete(e))throw new Error("Missing the expected event listener.")},deletePassiveInputConnectionToAudioParam=(n,e,t)=>{const s=getValueForKey(n,e),r=pickElementFromSet(s,i=>i[0]===t);return s.size===0&&n.delete(e),r},disconnectNativeAudioNodeFromNativeAudioNode=(n,e,t,s)=>{isNativeAudioNodeFaker(e)?n.disconnect(e.inputs[s],t,0):n.disconnect(e,t,s)},getNativeAudioNode=n=>getValueForKey(AUDIO_NODE_STORE,n),getNativeAudioParam=n=>getValueForKey(AUDIO_PARAM_STORE,n),isPartOfACycle=n=>CYCLE_COUNTERS.has(n),isPassiveAudioNode=n=>!ACTIVE_AUDIO_NODE_STORE.has(n),testAudioNodeDisconnectMethodSupport=(n,e)=>new Promise(t=>{if(e!==null)t(!0);else{const s=n.createScriptProcessor(256,1,1),r=n.createGain(),i=n.createBuffer(1,2,44100),a=i.getChannelData(0);a[0]=1,a[1]=1;const c=n.createBufferSource();c.buffer=i,c.loop=!0,c.connect(s).connect(n.destination),c.connect(r),c.disconnect(r),s.onaudioprocess=u=>{const l=u.inputBuffer.getChannelData(0);Array.prototype.some.call(l,h=>h===1)?t(!0):t(!1),c.stop(),s.onaudioprocess=null,c.disconnect(s),s.disconnect(n.destination)},c.start()}}),visitEachAudioNodeOnce=(n,e)=>{const t=new Map;for(const s of n)for(const r of s){const i=t.get(r);t.set(r,i===void 0?1:i+1)}t.forEach((s,r)=>e(r,s))},isNativeAudioNode$1=n=>"context"in n,wrapAudioNodeDisconnectMethod=n=>{const e=new Map;n.connect=(t=>(s,r=0,i=0)=>{const a=isNativeAudioNode$1(s)?t(s,r,i):t(s,r),c=e.get(s);return c===void 0?e.set(s,[{input:i,output:r}]):c.every(u=>u.input!==i||u.output!==r)&&c.push({input:i,output:r}),a})(n.connect.bind(n)),n.disconnect=(t=>(s,r,i)=>{if(t.apply(n),s===void 0)e.clear();else if(typeof s=="number")for(const[a,c]of e){const u=c.filter(l=>l.output!==s);u.length===0?e.delete(a):e.set(a,u)}else if(e.has(s))if(r===void 0)e.delete(s);else{const a=e.get(s);if(a!==void 0){const c=a.filter(u=>u.output!==r&&(u.input!==i||i===void 0));c.length===0?e.delete(s):e.set(s,c)}}for(const[a,c]of e)c.forEach(u=>{isNativeAudioNode$1(a)?n.connect(a,u.output,u.input):n.connect(a,u.output)})})(n.disconnect)},addConnectionToAudioParamOfAudioContext=(n,e,t,s)=>{const{activeInputs:r,passiveInputs:i}=getAudioParamConnections(e),{outputs:a}=getAudioNodeConnections(n),c=getEventListenersOfAudioNode(n),u=l=>{const h=getNativeAudioNode(n),d=getNativeAudioParam(e);if(l){const f=deletePassiveInputConnectionToAudioParam(i,n,t);addActiveInputConnectionToAudioParam(r,n,f,!1),!s&&!isPartOfACycle(n)&&h.connect(d,t)}else{const f=deleteActiveInputConnectionToAudioParam(r,n,t);addPassiveInputConnectionToAudioParam(i,f,!1),!s&&!isPartOfACycle(n)&&h.disconnect(d,t)}};return insertElementInSet(a,[e,t],l=>l[0]===e&&l[1]===t,!0)?(c.add(u),isActiveAudioNode(n)?addActiveInputConnectionToAudioParam(r,n,[t,u],!0):addPassiveInputConnectionToAudioParam(i,[n,t,u],!0),!0):!1},deleteInputConnectionOfAudioNode=(n,e,t,s)=>{const{activeInputs:r,passiveInputs:i}=getAudioNodeConnections(e),a=deleteActiveInputConnection(r[s],n,t);return a===null?[deletePassiveInputConnectionToAudioNode(i,n,t,s)[2],!1]:[a[2],!0]},deleteInputConnectionOfAudioParam=(n,e,t)=>{const{activeInputs:s,passiveInputs:r}=getAudioParamConnections(e),i=deleteActiveInputConnection(s,n,t);return i===null?[deletePassiveInputConnectionToAudioParam(r,n,t)[1],!1]:[i[2],!0]},deleteInputsOfAudioNode=(n,e,t,s,r)=>{const[i,a]=deleteInputConnectionOfAudioNode(n,t,s,r);if(i!==null&&(deleteEventListenerOfAudioNode(n,i),a&&!e&&!isPartOfACycle(n)&&disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(n),getNativeAudioNode(t),s,r)),isActiveAudioNode(t)){const{activeInputs:c}=getAudioNodeConnections(t);setInternalStateToPassiveWhenNecessary(t,c)}},deleteInputsOfAudioParam=(n,e,t,s)=>{const[r,i]=deleteInputConnectionOfAudioParam(n,t,s);r!==null&&(deleteEventListenerOfAudioNode(n,r),i&&!e&&!isPartOfACycle(n)&&getNativeAudioNode(n).disconnect(getNativeAudioParam(t),s))},deleteAnyConnection=(n,e)=>{const t=getAudioNodeConnections(n),s=[];for(const r of t.outputs)isAudioNodeOutputConnection(r)?deleteInputsOfAudioNode(n,e,...r):deleteInputsOfAudioParam(n,e,...r),s.push(r[0]);return t.outputs.clear(),s},deleteConnectionAtOutput=(n,e,t)=>{const s=getAudioNodeConnections(n),r=[];for(const i of s.outputs)i[1]===t&&(isAudioNodeOutputConnection(i)?deleteInputsOfAudioNode(n,e,...i):deleteInputsOfAudioParam(n,e,...i),r.push(i[0]),s.outputs.delete(i));return r},deleteConnectionToDestination=(n,e,t,s,r)=>{const i=getAudioNodeConnections(n);return Array.from(i.outputs).filter(a=>a[0]===t&&(s===void 0||a[1]===s)&&(r===void 0||a[2]===r)).map(a=>(isAudioNodeOutputConnection(a)?deleteInputsOfAudioNode(n,e,...a):deleteInputsOfAudioParam(n,e,...a),i.outputs.delete(a),a[0]))},createAudioNodeConstructor=(n,e,t,s,r,i,a,c,u,l,h,d,f,y,g,x)=>class extends l{constructor(v,S,T,w){super(T);this._context=v,this._nativeAudioNode=T;const C=h(v);d(C)&&t(testAudioNodeDisconnectMethodSupport,()=>testAudioNodeDisconnectMethodSupport(C,x))!==!0&&wrapAudioNodeDisconnectMethod(T),AUDIO_NODE_STORE.set(this,T),EVENT_LISTENERS.set(this,new Set),v.state!=="closed"&&S&&setInternalStateToActive(this),n(this,w,T)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(v){this._nativeAudioNode.channelCount=v}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(v){this._nativeAudioNode.channelCountMode=v}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(v){this._nativeAudioNode.channelInterpretation=v}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(v,S=0,T=0){if(S<0||S>=this._nativeAudioNode.numberOfOutputs)throw r();const w=h(this._context),C=g(w);if(f(v)||y(v))throw i();if(isAudioNode$1(v)){const $=getNativeAudioNode(v);try{const k=connectNativeAudioNodeToNativeAudioNode(this._nativeAudioNode,$,S,T),F=isPassiveAudioNode(this);(C||F)&&this._nativeAudioNode.disconnect(...k),this.context.state!=="closed"&&!F&&isPassiveAudioNode(v)&&setInternalStateToActive(v)}catch(k){throw k.code===12?i():k}if(e(this,v,S,T,C)){const k=u([this],v);visitEachAudioNodeOnce(k,s(C))}return v}const N=getNativeAudioParam(v);if(N.name==="playbackRate"&&N.maxValue===1024)throw a();try{this._nativeAudioNode.connect(N,S),(C||isPassiveAudioNode(this))&&this._nativeAudioNode.disconnect(N,S)}catch($){throw $.code===12?i():$}if(addConnectionToAudioParamOfAudioContext(this,v,S,C)){const $=u([this],v);visitEachAudioNodeOnce($,s(C))}}disconnect(v,S,T){let w;const C=h(this._context),N=g(C);if(v===void 0)w=deleteAnyConnection(this,N);else if(typeof v=="number"){if(v<0||v>=this.numberOfOutputs)throw r();w=deleteConnectionAtOutput(this,N,v)}else{if(S!==void 0&&(S<0||S>=this.numberOfOutputs)||isAudioNode$1(v)&&T!==void 0&&(T<0||T>=v.numberOfInputs))throw r();if(w=deleteConnectionToDestination(this,N,v,S,T),w.length===0)throw i()}for(const _ of w){const $=u([this],_);visitEachAudioNodeOnce($,c)}}},createAudioParamFactory=(n,e,t,s,r,i,a,c,u,l,h,d,f)=>(y,g,x,b=null,v=null)=>{const S=new AutomationEventList(x.defaultValue),T=g?s(S):null,w={get defaultValue(){return x.defaultValue},get maxValue(){return b===null?x.maxValue:b},get minValue(){return v===null?x.minValue:v},get value(){return x.value},set value(C){x.value=C,w.setValueAtTime(C,y.context.currentTime)},cancelAndHoldAtTime(C){if(typeof x.cancelAndHoldAtTime=="function")T===null&&S.flush(y.context.currentTime),S.add(r(C)),x.cancelAndHoldAtTime(C);else{const N=Array.from(S).pop();T===null&&S.flush(y.context.currentTime),S.add(r(C));const _=Array.from(S).pop();x.cancelScheduledValues(C),N!==_&&_!==void 0&&(_.type==="exponentialRampToValue"?x.exponentialRampToValueAtTime(_.value,_.endTime):_.type==="linearRampToValue"?x.linearRampToValueAtTime(_.value,_.endTime):_.type==="setValue"?x.setValueAtTime(_.value,_.startTime):_.type==="setValueCurve"&&x.setValueCurveAtTime(_.values,_.startTime,_.duration))}return w},cancelScheduledValues(C){return T===null&&S.flush(y.context.currentTime),S.add(i(C)),x.cancelScheduledValues(C),w},exponentialRampToValueAtTime(C,N){if(C===0)throw new RangeError;if(!Number.isFinite(N)||N<0)throw new RangeError;return T===null&&S.flush(y.context.currentTime),S.add(a(C,N)),x.exponentialRampToValueAtTime(C,N),w},linearRampToValueAtTime(C,N){return T===null&&S.flush(y.context.currentTime),S.add(c(C,N)),x.linearRampToValueAtTime(C,N),w},setTargetAtTime(C,N,_){return T===null&&S.flush(y.context.currentTime),S.add(u(C,N,_)),x.setTargetAtTime(C,N,_),w},setValueAtTime(C,N){return T===null&&S.flush(y.context.currentTime),S.add(l(C,N)),x.setValueAtTime(C,N),w},setValueCurveAtTime(C,N,_){const $=C instanceof Float32Array?C:new Float32Array(C);if(d!==null&&d.name==="webkitAudioContext"){const E=N+_,k=y.context.sampleRate,F=Math.ceil(N*k),P=Math.floor(E*k),R=P-F,O=new Float32Array(R);for(let L=0;L<R;L+=1){const V=($.length-1)/_*((F+L)/k-N),q=Math.floor(V),G=Math.ceil(V);O[L]=q===G?$[q]:(1-(V-q))*$[q]+(1-(G-V))*$[G]}T===null&&S.flush(y.context.currentTime),S.add(h(O,N,_)),x.setValueCurveAtTime(O,N,_);const B=P/k;B<E&&f(w,O[O.length-1],B),f(w,$[$.length-1],E)}else T===null&&S.flush(y.context.currentTime),S.add(h($,N,_)),x.setValueCurveAtTime($,N,_);return w}};return t.set(w,x),e.set(w,y),n(w,T),w},createAudioParamRenderer=n=>({replay(e){for(const t of n)if(t.type==="exponentialRampToValue"){const{endTime:s,value:r}=t;e.exponentialRampToValueAtTime(r,s)}else if(t.type==="linearRampToValue"){const{endTime:s,value:r}=t;e.linearRampToValueAtTime(r,s)}else if(t.type==="setTarget"){const{startTime:s,target:r,timeConstant:i}=t;e.setTargetAtTime(r,s,i)}else if(t.type==="setValue"){const{startTime:s,value:r}=t;e.setValueAtTime(r,s)}else if(t.type==="setValueCurve"){const{duration:s,startTime:r,values:i}=t;e.setValueCurveAtTime(i,r,s)}else throw new Error("Can't apply an unknown automation.")}});class ReadOnlyMap{constructor(e){this._map=new Map(e)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(e,t=null){return this._map.forEach((s,r)=>e.call(t,s,r,this))}get(e){return this._map.get(e)}has(e){return this._map.has(e)}keys(){return this._map.keys()}values(){return this._map.values()}}const DEFAULT_OPTIONS$g={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}},createAudioWorkletNodeConstructor=(n,e,t,s,r,i,a,c,u,l,h,d,f,y)=>class extends e{constructor(x,b,v){var S;const T=c(x),w=u(T),C=h(te(te({},DEFAULT_OPTIONS$g),v));f(C);const N=NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(T),_=N==null?void 0:N.get(b),$=w||T.state!=="closed"?T:(S=a(T))!==null&&S!==void 0?S:T,E=r($,w?null:x.baseLatency,l,b,_,C),k=w?s(b,C,_):null;super(x,!0,E,k);const F=[];E.parameters.forEach((R,O)=>{const B=t(this,w,R);F.push([O,B])}),this._nativeAudioWorkletNode=E,this._onprocessorerror=null,this._parameters=new ReadOnlyMap(F),w&&n(T,this);const{activeInputs:P}=i(this);d(E,P)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(x){const b=typeof x=="function"?y(this,x):null;this._nativeAudioWorkletNode.onprocessorerror=b;const v=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=v!==null&&v===b?x:v}get parameters(){return this._parameters===null?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}};function copyFromChannel(n,e,t,s,r){if(typeof n.copyFromChannel=="function")e[t].byteLength===0&&(e[t]=new Float32Array(128)),n.copyFromChannel(e[t],s,r);else{const i=n.getChannelData(s);if(e[t].byteLength===0)e[t]=i.slice(r,r+128);else{const a=new Float32Array(i.buffer,r*Float32Array.BYTES_PER_ELEMENT,128);e[t].set(a)}}}const copyToChannel=(n,e,t,s,r)=>{typeof n.copyToChannel=="function"?e[t].byteLength!==0&&n.copyToChannel(e[t],s,r):e[t].byteLength!==0&&n.getChannelData(s).set(e[t],r)},createNestedArrays=(n,e)=>{const t=[];for(let s=0;s<n;s+=1){const r=[],i=typeof e=="number"?e:e[s];for(let a=0;a<i;a+=1)r.push(new Float32Array(128));t.push(r)}return t},getAudioWorkletProcessor=(n,e)=>{const t=getValueForKey(NODE_TO_PROCESSOR_MAPS,n),s=getNativeAudioNode(e);return getValueForKey(t,s)},processBuffer=async(n,e,t,s,r,i,a)=>{const c=e===null?Math.ceil(n.context.length/128)*128:e.length,u=s.channelCount*s.numberOfInputs,l=r.reduce((b,v)=>b+v,0),h=l===0?null:t.createBuffer(l,c,t.sampleRate);if(i===void 0)throw new Error("Missing the processor constructor.");const d=getAudioNodeConnections(n),f=await getAudioWorkletProcessor(t,n),y=createNestedArrays(s.numberOfInputs,s.channelCount),g=createNestedArrays(s.numberOfOutputs,r),x=Array.from(n.parameters.keys()).reduce((b,v)=>de(te({},b),{[v]:new Float32Array(128)}),{});for(let b=0;b<c;b+=128){if(s.numberOfInputs>0&&e!==null)for(let v=0;v<s.numberOfInputs;v+=1)for(let S=0;S<s.channelCount;S+=1)copyFromChannel(e,y[v],S,S,b);i.parameterDescriptors!==void 0&&e!==null&&i.parameterDescriptors.forEach(({name:v},S)=>{copyFromChannel(e,x,v,u+S,b)});for(let v=0;v<s.numberOfInputs;v+=1)for(let S=0;S<r[v];S+=1)g[v][S].byteLength===0&&(g[v][S]=new Float32Array(128));try{const v=y.map((T,w)=>d.activeInputs[w].size===0?[]:T),S=a(b/t.sampleRate,t.sampleRate,()=>f.process(v,g,x));if(h!==null)for(let T=0,w=0;T<s.numberOfOutputs;T+=1){for(let C=0;C<r[T];C+=1)copyToChannel(h,g[T],C,w+C,b);w+=r[T]}if(!S)break}catch(v){n.dispatchEvent(new ErrorEvent("processorerror",{colno:v.colno,filename:v.filename,lineno:v.lineno,message:v.message}));break}}return h},createAudioWorkletNodeRendererFactory=(n,e,t,s,r,i,a,c,u,l,h,d,f,y,g,x)=>(b,v,S)=>{const T=new WeakMap;let w=null;const C=async(N,_)=>{let $=h(N),E=null;const k=isOwnedByContext($,_),F=Array.isArray(v.outputChannelCount)?v.outputChannelCount:Array.from(v.outputChannelCount);if(d===null){const P=F.reduce((L,V)=>L+V,0),R=r(_,{channelCount:Math.max(1,P),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,P)}),O=[];for(let L=0;L<N.numberOfOutputs;L+=1)O.push(s(_,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:F[L]}));const B=a(_,{channelCount:v.channelCount,channelCountMode:v.channelCountMode,channelInterpretation:v.channelInterpretation,gain:1});B.connect=e.bind(null,O),B.disconnect=u.bind(null,O),E=[R,O,B]}else k||($=new d(_,b));if(T.set(_,E===null?$:E[2]),E!==null){if(w===null){if(S===void 0)throw new Error("Missing the processor constructor.");if(f===null)throw new Error("Missing the native OfflineAudioContext constructor.");const V=N.channelCount*N.numberOfInputs,q=S.parameterDescriptors===void 0?0:S.parameterDescriptors.length,G=V+q;w=processBuffer(N,G===0?null:await(async()=>{const U=new f(G,Math.ceil(N.context.length/128)*128,_.sampleRate),j=[],Y=[];for(let K=0;K<v.numberOfInputs;K+=1)j.push(a(U,{channelCount:v.channelCount,channelCountMode:v.channelCountMode,channelInterpretation:v.channelInterpretation,gain:1})),Y.push(r(U,{channelCount:v.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:v.channelCount}));const Q=await Promise.all(Array.from(N.parameters.values()).map(async K=>{const X=i(U,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:K.value});return await y(U,K,X.offset),X})),ee=s(U,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,V+q)});for(let K=0;K<v.numberOfInputs;K+=1){j[K].connect(Y[K]);for(let X=0;X<v.channelCount;X+=1)Y[K].connect(ee,X,K*v.channelCount+X)}for(const[K,X]of Q.entries())X.connect(ee,0,V+K),X.start(0);return ee.connect(U.destination),await Promise.all(j.map(K=>g(N,U,K))),x(U)})(),_,v,F,S,l)}const P=await w,R=t(_,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[O,B,L]=E;P!==null&&(R.buffer=P,R.start(0)),R.connect(O);for(let V=0,q=0;V<N.numberOfOutputs;V+=1){const G=B[V];for(let W=0;W<F[V];W+=1)O.connect(G,q+W,W);q+=F[V]}return L}if(k)for(const[P,R]of N.parameters.entries())await n(_,R,$.parameters.get(P));else for(const[P,R]of N.parameters.entries())await y(_,R,$.parameters.get(P));return await g(N,_,$),$};return{render(N,_){c(_,N);const $=T.get(_);return $!==void 0?Promise.resolve($):C(N,_)}}},createBaseAudioContextConstructor=(n,e,t,s,r,i,a,c,u,l,h,d,f,y,g,x,b,v,S,T)=>class extends g{constructor(C,N){super(C,N);this._nativeContext=C,this._audioWorklet=n===void 0?void 0:{addModule:(_,$)=>n(this,_,$)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new e(this)}createBiquadFilter(){return new r(this)}createBuffer(C,N,_){return new t({length:N,numberOfChannels:C,sampleRate:_})}createBufferSource(){return new s(this)}createChannelMerger(C=6){return new i(this,{numberOfInputs:C})}createChannelSplitter(C=6){return new a(this,{numberOfOutputs:C})}createConstantSource(){return new c(this)}createConvolver(){return new u(this)}createDelay(C=1){return new h(this,{maxDelayTime:C})}createDynamicsCompressor(){return new d(this)}createGain(){return new f(this)}createIIRFilter(C,N){return new y(this,{feedback:N,feedforward:C})}createOscillator(){return new x(this)}createPanner(){return new b(this)}createPeriodicWave(C,N,_={disableNormalization:!1}){return new v(this,de(te({},_),{imag:N,real:C}))}createStereoPanner(){return new S(this)}createWaveShaper(){return new T(this)}decodeAudioData(C,N,_){return l(this._nativeContext,C).then($=>(typeof N=="function"&&N($),$),$=>{throw typeof _=="function"&&_($),$})}},DEFAULT_OPTIONS$f={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},createBiquadFilterNodeConstructor=(n,e,t,s,r,i,a,c)=>class extends n{constructor(l,h){const d=i(l),f=te(te({},DEFAULT_OPTIONS$f),h),y=r(d,f),g=a(d),x=g?t():null;super(l,!1,y,x);this._Q=e(this,g,y.Q,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._detune=e(this,g,y.detune,1200*Math.log2(MOST_POSITIVE_SINGLE_FLOAT),-1200*Math.log2(MOST_POSITIVE_SINGLE_FLOAT)),this._frequency=e(this,g,y.frequency,l.sampleRate/2,0),this._gain=e(this,g,y.gain,40*Math.log10(MOST_POSITIVE_SINGLE_FLOAT),MOST_NEGATIVE_SINGLE_FLOAT),this._nativeBiquadFilterNode=y,c(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(l){this._nativeBiquadFilterNode.type=l}getFrequencyResponse(l,h,d){try{this._nativeBiquadFilterNode.getFrequencyResponse(l,h,d)}catch(f){throw f.code===11?s():f}if(l.length!==h.length||h.length!==d.length)throw s()}},createBiquadFilterNodeRendererFactory=(n,e,t,s,r)=>()=>{const i=new WeakMap,a=async(c,u)=>{let l=t(c);const h=isOwnedByContext(l,u);if(!h){const d={Q:l.Q.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,detune:l.detune.value,frequency:l.frequency.value,gain:l.gain.value,type:l.type};l=e(u,d)}return i.set(u,l),h?(await n(u,c.Q,l.Q),await n(u,c.detune,l.detune),await n(u,c.frequency,l.frequency),await n(u,c.gain,l.gain)):(await s(u,c.Q,l.Q),await s(u,c.detune,l.detune),await s(u,c.frequency,l.frequency),await s(u,c.gain,l.gain)),await r(c,u,l),l};return{render(c,u){const l=i.get(u);return l!==void 0?Promise.resolve(l):a(c,u)}}},createCacheTestResult=(n,e)=>(t,s)=>{const r=e.get(t);if(r!==void 0)return r;const i=n.get(t);if(i!==void 0)return i;try{const a=s();return a instanceof Promise?(n.set(t,a),a.catch(()=>!1).then(c=>(n.delete(t),e.set(t,c),c))):(e.set(t,a),a)}catch{return e.set(t,!1),!1}},DEFAULT_OPTIONS$e={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},createChannelMergerNodeConstructor=(n,e,t,s,r)=>class extends n{constructor(a,c){const u=s(a),l=te(te({},DEFAULT_OPTIONS$e),c),h=t(u,l),d=r(u)?e():null;super(a,!1,h,d)}},createChannelMergerNodeRendererFactory=(n,e,t)=>()=>{const s=new WeakMap,r=async(i,a)=>{let c=e(i);if(!isOwnedByContext(c,a)){const l={channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,numberOfInputs:c.numberOfInputs};c=n(a,l)}return s.set(a,c),await t(i,a,c),c};return{render(i,a){const c=s.get(a);return c!==void 0?Promise.resolve(c):r(i,a)}}},DEFAULT_OPTIONS$d={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},createChannelSplitterNodeConstructor=(n,e,t,s,r,i)=>class extends n{constructor(c,u){const l=s(c),h=i(te(te({},DEFAULT_OPTIONS$d),u)),d=t(l,h),f=r(l)?e():null;super(c,!1,d,f)}},createChannelSplitterNodeRendererFactory=(n,e,t)=>()=>{const s=new WeakMap,r=async(i,a)=>{let c=e(i);if(!isOwnedByContext(c,a)){const l={channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,numberOfOutputs:c.numberOfOutputs};c=n(a,l)}return s.set(a,c),await t(i,a,c),c};return{render(i,a){const c=s.get(a);return c!==void 0?Promise.resolve(c):r(i,a)}}},createConnectAudioParam=n=>(e,t,s)=>n(t,e,s),createConnectMultipleOutputs=n=>(e,t,s=0,r=0)=>{const i=e[s];if(i===void 0)throw n();return isNativeAudioNode$1(t)?i.connect(t,0,r):i.connect(t,0)},createConnectedNativeAudioBufferSourceNodeFactory=n=>(e,t)=>{const s=n(e,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),r=e.createBuffer(1,2,44100);return s.buffer=r,s.loop=!0,s.connect(t),s.start(),()=>{s.stop(),s.disconnect(t)}},DEFAULT_OPTIONS$c={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},createConstantSourceNodeConstructor=(n,e,t,s,r,i,a)=>class extends n{constructor(u,l){const h=r(u),d=te(te({},DEFAULT_OPTIONS$c),l),f=s(h,d),y=i(h),g=y?t():null;super(u,!1,f,g);this._constantSourceNodeRenderer=g,this._nativeConstantSourceNode=f,this._offset=e(this,y,f.offset,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(u){const l=typeof u=="function"?a(this,u):null;this._nativeConstantSourceNode.onended=l;const h=this._nativeConstantSourceNode.onended;this._onended=h!==null&&h===l?u:h}start(u=0){if(this._nativeConstantSourceNode.start(u),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.start=u),this.context.state!=="closed"){setInternalStateToActive(this);const l=()=>{this._nativeConstantSourceNode.removeEventListener("ended",l),isActiveAudioNode(this)&&setInternalStateToPassive(this)};this._nativeConstantSourceNode.addEventListener("ended",l)}}stop(u=0){this._nativeConstantSourceNode.stop(u),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.stop=u)}},createConstantSourceNodeRendererFactory=(n,e,t,s,r)=>()=>{const i=new WeakMap;let a=null,c=null;const u=async(l,h)=>{let d=t(l);const f=isOwnedByContext(d,h);if(!f){const y={channelCount:d.channelCount,channelCountMode:d.channelCountMode,channelInterpretation:d.channelInterpretation,offset:d.offset.value};d=e(h,y),a!==null&&d.start(a),c!==null&&d.stop(c)}return i.set(h,d),f?await n(h,l.offset,d.offset):await s(h,l.offset,d.offset),await r(l,h,d),d};return{set start(l){a=l},set stop(l){c=l},render(l,h){const d=i.get(h);return d!==void 0?Promise.resolve(d):u(l,h)}}},createConvertNumberToUnsignedLong=n=>e=>(n[0]=e,n[0]),DEFAULT_OPTIONS$b={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},createConvolverNodeConstructor=(n,e,t,s,r,i)=>class extends n{constructor(c,u){const l=s(c),h=te(te({},DEFAULT_OPTIONS$b),u),d=t(l,h),y=r(l)?e():null;super(c,!1,d,y);this._isBufferNullified=!1,this._nativeConvolverNode=d,h.buffer!==null&&i(this,h.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(c){if(this._nativeConvolverNode.buffer=c,c===null&&this._nativeConvolverNode.buffer!==null){const u=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=u.createBuffer(1,1,44100),this._isBufferNullified=!0,i(this,0)}else this._isBufferNullified=!1,i(this,this._nativeConvolverNode.buffer===null?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(c){this._nativeConvolverNode.normalize=c}},createConvolverNodeRendererFactory=(n,e,t)=>()=>{const s=new WeakMap,r=async(i,a)=>{let c=e(i);if(!isOwnedByContext(c,a)){const l={buffer:c.buffer,channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,disableNormalization:!c.normalize};c=n(a,l)}return s.set(a,c),isNativeAudioNodeFaker(c)?await t(i,a,c.inputs[0]):await t(i,a,c),c};return{render(i,a){const c=s.get(a);return c!==void 0?Promise.resolve(c):r(i,a)}}},createCreateNativeOfflineAudioContext=(n,e)=>(t,s,r)=>{if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new e(t,s,r)}catch(i){throw i.name==="SyntaxError"?n():i}},createDataCloneError=()=>new DOMException("","DataCloneError"),detachArrayBuffer=n=>{const{port1:e,port2:t}=new MessageChannel;return new Promise(s=>{const r=()=>{t.onmessage=null,e.close(),t.close(),s()};t.onmessage=()=>r();try{e.postMessage(n,[n])}finally{r()}})},createDecodeAudioData=(n,e,t,s,r,i,a,c,u,l,h)=>(d,f)=>{const y=a(d)?d:i(d);if(r.has(f)){const g=t();return Promise.reject(g)}try{r.add(f)}catch{}return e(u,()=>u(y))?y.decodeAudioData(f).then(g=>(detachArrayBuffer(f).catch(()=>{}),e(c,()=>c(g))||h(g),n.add(g),g)):new Promise((g,x)=>{const b=async()=>{try{await detachArrayBuffer(f)}catch{}},v=S=>{x(S),b()};try{y.decodeAudioData(f,S=>{typeof S.copyFromChannel!="function"&&(l(S),wrapAudioBufferGetChannelDataMethod(S)),n.add(S),b().then(()=>g(S))},S=>{v(S===null?s():S)})}catch(S){v(S)}})},createDecrementCycleCounter=(n,e,t,s,r,i,a,c)=>(u,l)=>{const h=e.get(u);if(h===void 0)throw new Error("Missing the expected cycle count.");const d=i(u.context),f=c(d);if(h===l){if(e.delete(u),!f&&a(u)){const y=s(u),{outputs:g}=t(u);for(const x of g)if(isAudioNodeOutputConnection(x)){const b=s(x[0]);n(y,b,x[1],x[2])}else{const b=r(x[0]);y.connect(b,x[1])}}}else e.set(u,h-l)},DEFAULT_OPTIONS$a={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},createDelayNodeConstructor=(n,e,t,s,r,i,a)=>class extends n{constructor(u,l){const h=r(u),d=te(te({},DEFAULT_OPTIONS$a),l),f=s(h,d),y=i(h),g=y?t(d.maxDelayTime):null;super(u,!1,f,g);this._delayTime=e(this,y,f.delayTime),a(this,d.maxDelayTime)}get delayTime(){return this._delayTime}},createDelayNodeRendererFactory=(n,e,t,s,r)=>i=>{const a=new WeakMap,c=async(u,l)=>{let h=t(u);const d=isOwnedByContext(h,l);if(!d){const f={channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,delayTime:h.delayTime.value,maxDelayTime:i};h=e(l,f)}return a.set(l,h),d?await n(l,u.delayTime,h.delayTime):await s(l,u.delayTime,h.delayTime),await r(u,l,h),h};return{render(u,l){const h=a.get(l);return h!==void 0?Promise.resolve(h):c(u,l)}}},createDeleteActiveInputConnectionToAudioNode=n=>(e,t,s,r)=>n(e[r],i=>i[0]===t&&i[1]===s),createDeleteUnrenderedAudioWorkletNode=n=>(e,t)=>{n(e).delete(t)},isDelayNode=n=>"delayTime"in n,createDetectCycles=(n,e,t)=>function s(r,i){const a=isAudioNode$1(i)?i:t(n,i);if(isDelayNode(a))return[];if(r[0]===a)return[r];if(r.includes(a))return[];const{outputs:c}=e(a);return Array.from(c).map(u=>s([...r,a],u[0])).reduce((u,l)=>u.concat(l),[])},getOutputAudioNodeAtIndex=(n,e,t)=>{const s=e[t];if(s===void 0)throw n();return s},createDisconnectMultipleOutputs=n=>(e,t=void 0,s=void 0,r=0)=>t===void 0?e.forEach(i=>i.disconnect()):typeof t=="number"?getOutputAudioNodeAtIndex(n,e,t).disconnect():isNativeAudioNode$1(t)?s===void 0?e.forEach(i=>i.disconnect(t)):r===void 0?getOutputAudioNodeAtIndex(n,e,s).disconnect(t,0):getOutputAudioNodeAtIndex(n,e,s).disconnect(t,0,r):s===void 0?e.forEach(i=>i.disconnect(t)):getOutputAudioNodeAtIndex(n,e,s).disconnect(t,0),DEFAULT_OPTIONS$9={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},createDynamicsCompressorNodeConstructor=(n,e,t,s,r,i,a,c)=>class extends n{constructor(l,h){const d=i(l),f=te(te({},DEFAULT_OPTIONS$9),h),y=s(d,f),g=a(d),x=g?t():null;super(l,!1,y,x);this._attack=e(this,g,y.attack),this._knee=e(this,g,y.knee),this._nativeDynamicsCompressorNode=y,this._ratio=e(this,g,y.ratio),this._release=e(this,g,y.release),this._threshold=e(this,g,y.threshold),c(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(l){const h=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=l,l>2)throw this._nativeDynamicsCompressorNode.channelCount=h,r()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(l){const h=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=l,l==="max")throw this._nativeDynamicsCompressorNode.channelCountMode=h,r()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return typeof this._nativeDynamicsCompressorNode.reduction.value=="number"?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}},createDynamicsCompressorNodeRendererFactory=(n,e,t,s,r)=>()=>{const i=new WeakMap,a=async(c,u)=>{let l=t(c);const h=isOwnedByContext(l,u);if(!h){const d={attack:l.attack.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,knee:l.knee.value,ratio:l.ratio.value,release:l.release.value,threshold:l.threshold.value};l=e(u,d)}return i.set(u,l),h?(await n(u,c.attack,l.attack),await n(u,c.knee,l.knee),await n(u,c.ratio,l.ratio),await n(u,c.release,l.release),await n(u,c.threshold,l.threshold)):(await s(u,c.attack,l.attack),await s(u,c.knee,l.knee),await s(u,c.ratio,l.ratio),await s(u,c.release,l.release),await s(u,c.threshold,l.threshold)),await r(c,u,l),l};return{render(c,u){const l=i.get(u);return l!==void 0?Promise.resolve(l):a(c,u)}}},createEncodingError=()=>new DOMException("","EncodingError"),createEvaluateSource=n=>e=>new Promise((t,s)=>{if(n===null){s(new SyntaxError);return}const r=n.document.head;if(r===null)s(new SyntaxError);else{const i=n.document.createElement("script"),a=new Blob([e],{type:"application/javascript"}),c=URL.createObjectURL(a),u=n.onerror,l=()=>{n.onerror=u,URL.revokeObjectURL(c)};n.onerror=(h,d,f,y,g)=>{if(d===c||d===n.location.href&&f===1&&y===1)return l(),s(g),!1;if(u!==null)return u(h,d,f,y,g)},i.onerror=()=>{l(),s(new SyntaxError)},i.onload=()=>{l(),t()},i.src=c,i.type="module",r.appendChild(i)}}),createEventTargetConstructor=n=>class{constructor(t){this._nativeEventTarget=t,this._listeners=new WeakMap}addEventListener(t,s,r){if(s!==null){let i=this._listeners.get(s);i===void 0&&(i=n(this,s),typeof s=="function"&&this._listeners.set(s,i)),this._nativeEventTarget.addEventListener(t,i,r)}}dispatchEvent(t){return this._nativeEventTarget.dispatchEvent(t)}removeEventListener(t,s,r){const i=s===null?void 0:this._listeners.get(s);this._nativeEventTarget.removeEventListener(t,i===void 0?null:i,r)}},createExposeCurrentFrameAndCurrentTime=n=>(e,t,s)=>{Object.defineProperties(n,{currentFrame:{configurable:!0,get(){return Math.round(e*t)}},currentTime:{configurable:!0,get(){return e}}});try{return s()}finally{n!==null&&(delete n.currentFrame,delete n.currentTime)}},createFetchSource=n=>async e=>{try{const t=await fetch(e);if(t.ok)return[await t.text(),t.url]}catch{}throw n()},DEFAULT_OPTIONS$8={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},createGainNodeConstructor=(n,e,t,s,r,i)=>class extends n{constructor(c,u){const l=r(c),h=te(te({},DEFAULT_OPTIONS$8),u),d=s(l,h),f=i(l),y=f?t():null;super(c,!1,d,y);this._gain=e(this,f,d.gain,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT)}get gain(){return this._gain}},createGainNodeRendererFactory=(n,e,t,s,r)=>()=>{const i=new WeakMap,a=async(c,u)=>{let l=t(c);const h=isOwnedByContext(l,u);if(!h){const d={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,gain:l.gain.value};l=e(u,d)}return i.set(u,l),h?await n(u,c.gain,l.gain):await s(u,c.gain,l.gain),await r(c,u,l),l};return{render(c,u){const l=i.get(u);return l!==void 0?Promise.resolve(l):a(c,u)}}},createGetActiveAudioWorkletNodeInputs=(n,e)=>t=>e(n,t),createGetAudioNodeRenderer=n=>e=>{const t=n(e);if(t.renderer===null)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return t.renderer},createGetAudioNodeTailTime=n=>e=>{var t;return(t=n.get(e))!==null&&t!==void 0?t:0},createGetAudioParamRenderer=n=>e=>{const t=n(e);if(t.renderer===null)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return t.renderer},createGetBackupOfflineAudioContext=n=>e=>n.get(e),createInvalidStateError=()=>new DOMException("","InvalidStateError"),createGetNativeContext=n=>e=>{const t=n.get(e);if(t===void 0)throw createInvalidStateError();return t},createGetOrCreateBackupOfflineAudioContext=(n,e)=>t=>{let s=n.get(t);if(s!==void 0)return s;if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");return s=new e(1,1,44100),n.set(t,s),s},createGetUnrenderedAudioWorkletNodes=n=>e=>{const t=n.get(e);if(t===void 0)throw new Error("The context has no set of AudioWorkletNodes.");return t},createInvalidAccessError=()=>new DOMException("","InvalidAccessError"),wrapIIRFilterNodeGetFrequencyResponseMethod=n=>{n.getFrequencyResponse=(e=>(t,s,r)=>{if(t.length!==s.length||s.length!==r.length)throw createInvalidAccessError();return e.call(n,t,s,r)})(n.getFrequencyResponse)},DEFAULT_OPTIONS$7={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},createIIRFilterNodeConstructor=(n,e,t,s,r,i)=>class extends n{constructor(c,u){const l=s(c),h=r(l),d=te(te({},DEFAULT_OPTIONS$7),u),f=e(l,h?null:c.baseLatency,d),y=h?t(d.feedback,d.feedforward):null;super(c,!1,f,y);wrapIIRFilterNodeGetFrequencyResponseMethod(f),this._nativeIIRFilterNode=f,i(this,1)}getFrequencyResponse(c,u,l){return this._nativeIIRFilterNode.getFrequencyResponse(c,u,l)}},filterBuffer=(n,e,t,s,r,i,a,c,u,l,h)=>{const d=l.length;let f=c;for(let y=0;y<d;y+=1){let g=t[0]*l[y];for(let x=1;x<r;x+=1){const b=f-x&u-1;g+=t[x]*i[b],g-=n[x]*a[b]}for(let x=r;x<s;x+=1)g+=t[x]*i[f-x&u-1];for(let x=r;x<e;x+=1)g-=n[x]*a[f-x&u-1];i[f]=l[y],a[f]=g,f=f+1&u-1,h[y]=g}return f},filterFullBuffer=(n,e,t,s)=>{const r=t instanceof Float64Array?t:new Float64Array(t),i=s instanceof Float64Array?s:new Float64Array(s),a=r.length,c=i.length,u=Math.min(a,c);if(r[0]!==1){for(let g=0;g<a;g+=1)i[g]/=r[0];for(let g=1;g<c;g+=1)r[g]/=r[0]}const l=32,h=new Float32Array(l),d=new Float32Array(l),f=e.createBuffer(n.numberOfChannels,n.length,n.sampleRate),y=n.numberOfChannels;for(let g=0;g<y;g+=1){const x=n.getChannelData(g),b=f.getChannelData(g);h.fill(0),d.fill(0),filterBuffer(r,a,i,c,u,h,d,0,l,x,b)}return f},createIIRFilterNodeRendererFactory=(n,e,t,s,r)=>(i,a)=>{const c=new WeakMap;let u=null;const l=async(h,d)=>{let f=null,y=e(h);const g=isOwnedByContext(y,d);if(d.createIIRFilter===void 0?f=n(d,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):g||(y=d.createIIRFilter(a,i)),c.set(d,f===null?y:f),f!==null){if(u===null){if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");const b=new t(h.context.destination.channelCount,h.context.length,d.sampleRate);u=(async()=>{await s(h,b,b.destination);const v=await r(b);return filterFullBuffer(v,d,i,a)})()}const x=await u;return f.buffer=x,f.start(0),f}return await s(h,d,y),y};return{render(h,d){const f=c.get(d);return f!==void 0?Promise.resolve(f):l(h,d)}}},createIncrementCycleCounterFactory=(n,e,t,s,r,i)=>a=>(c,u)=>{const l=n.get(c);if(l===void 0){if(!a&&i(c)){const h=s(c),{outputs:d}=t(c);for(const f of d)if(isAudioNodeOutputConnection(f)){const y=s(f[0]);e(h,y,f[1],f[2])}else{const y=r(f[0]);h.disconnect(y,f[1])}}n.set(c,u)}else n.set(c,l+u)},createIsAnyAudioContext=(n,e)=>t=>{const s=n.get(t);return e(s)||e(t)},createIsAnyAudioNode=(n,e)=>t=>n.has(t)||e(t),createIsAnyAudioParam=(n,e)=>t=>n.has(t)||e(t),createIsAnyOfflineAudioContext=(n,e)=>t=>{const s=n.get(t);return e(s)||e(t)},createIsNativeAudioContext=n=>e=>n!==null&&e instanceof n,createIsNativeAudioNode=n=>e=>n!==null&&typeof n.AudioNode=="function"&&e instanceof n.AudioNode,createIsNativeAudioParam=n=>e=>n!==null&&typeof n.AudioParam=="function"&&e instanceof n.AudioParam,createIsNativeContext=(n,e)=>t=>n(t)||e(t),createIsNativeOfflineAudioContext=n=>e=>n!==null&&e instanceof n,createIsSecureContext=n=>n!==null&&n.isSecureContext,createIsSupportedPromise=async(n,e,t,s,r,i,a,c,u,l,h,d,f,y,g,x)=>n(e,e)&&n(t,t)&&n(r,r)&&n(i,i)&&n(c,c)&&n(u,u)&&n(l,l)&&n(h,h)&&n(d,d)&&n(f,f)&&n(y,y)?(await Promise.all([n(s,s),n(a,a),n(g,g),n(x,x)])).every(v=>v):!1,createMediaElementAudioSourceNodeConstructor=(n,e,t,s)=>class extends n{constructor(i,a){const c=t(i),u=e(c,a);if(s(c))throw TypeError();super(i,!0,u,null);this._nativeMediaElementAudioSourceNode=u}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}},DEFAULT_OPTIONS$6={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},createMediaStreamAudioDestinationNodeConstructor=(n,e,t,s)=>class extends n{constructor(i,a){const c=t(i);if(s(c))throw new TypeError;const u=te(te({},DEFAULT_OPTIONS$6),a),l=e(c,u);super(i,!1,l,null);this._nativeMediaStreamAudioDestinationNode=l}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}},createMediaStreamAudioSourceNodeConstructor=(n,e,t,s)=>class extends n{constructor(i,a){const c=t(i),u=e(c,a);if(s(c))throw new TypeError;super(i,!0,u,null);this._nativeMediaStreamAudioSourceNode=u}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}},createMediaStreamTrackAudioSourceNodeConstructor=(n,e,t)=>class extends n{constructor(r,i){const a=t(r),c=e(a,i);super(r,!0,c,null)}},createMinimalBaseAudioContextConstructor=(n,e,t,s,r,i)=>class extends t{constructor(c,u){super(c);this._nativeContext=c,CONTEXT_STORE.set(this,c),s(c)&&r.set(c,new Set),this._destination=new n(this,u),this._listener=e(this,c),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(c){const u=typeof c=="function"?i(this,c):null;this._nativeContext.onstatechange=u;const l=this._nativeContext.onstatechange;this._onstatechange=l!==null&&l===u?c:l}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}},testPromiseSupport=n=>{const e=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const t=n.decodeAudioData(e.buffer,()=>{});return t===void 0?!1:(t.catch(()=>{}),!0)}catch{}return!1},createMonitorConnections=(n,e)=>(t,s,r)=>{const i=new Set;return t.connect=(a=>(c,u=0,l=0)=>{const h=i.size===0;if(e(c))return a.call(t,c,u,l),n(i,[c,u,l],d=>d[0]===c&&d[1]===u&&d[2]===l,!0),h&&s(),c;a.call(t,c,u),n(i,[c,u],d=>d[0]===c&&d[1]===u,!0),h&&s()})(t.connect),t.disconnect=(a=>(c,u,l)=>{const h=i.size>0;if(c===void 0)a.apply(t),i.clear();else if(typeof c=="number"){a.call(t,c);for(const f of i)f[1]===c&&i.delete(f)}else{e(c)?a.call(t,c,u,l):a.call(t,c,u);for(const f of i)f[0]===c&&(u===void 0||f[1]===u)&&(l===void 0||f[2]===l)&&i.delete(f)}const d=i.size===0;h&&d&&r()})(t.disconnect),t},assignNativeAudioNodeOption=(n,e,t)=>{const s=e[t];s!==void 0&&s!==n[t]&&(n[t]=s)},assignNativeAudioNodeOptions=(n,e)=>{assignNativeAudioNodeOption(n,e,"channelCount"),assignNativeAudioNodeOption(n,e,"channelCountMode"),assignNativeAudioNodeOption(n,e,"channelInterpretation")},testAnalyserNodeGetFloatTimeDomainDataMethodSupport=n=>typeof n.getFloatTimeDomainData=="function",wrapAnalyserNodeGetFloatTimeDomainDataMethod=n=>{n.getFloatTimeDomainData=e=>{const t=new Uint8Array(e.length);n.getByteTimeDomainData(t);const s=Math.max(t.length,n.fftSize);for(let r=0;r<s;r+=1)e[r]=(t[r]-128)*.0078125;return e}},createNativeAnalyserNodeFactory=(n,e)=>(t,s)=>{const r=t.createAnalyser();if(assignNativeAudioNodeOptions(r,s),!(s.maxDecibels>s.minDecibels))throw e();return assignNativeAudioNodeOption(r,s,"fftSize"),assignNativeAudioNodeOption(r,s,"maxDecibels"),assignNativeAudioNodeOption(r,s,"minDecibels"),assignNativeAudioNodeOption(r,s,"smoothingTimeConstant"),n(testAnalyserNodeGetFloatTimeDomainDataMethodSupport,()=>testAnalyserNodeGetFloatTimeDomainDataMethodSupport(r))||wrapAnalyserNodeGetFloatTimeDomainDataMethod(r),r},createNativeAudioBufferConstructor=n=>n===null?null:n.hasOwnProperty("AudioBuffer")?n.AudioBuffer:null,assignNativeAudioNodeAudioParamValue=(n,e,t)=>{const s=e[t];s!==void 0&&s!==n[t].value&&(n[t].value=s)},wrapAudioBufferSourceNodeStartMethodConsecutiveCalls=n=>{n.start=(e=>{let t=!1;return(s=0,r=0,i)=>{if(t)throw createInvalidStateError();e.call(n,s,r,i),t=!0}})(n.start)},wrapAudioScheduledSourceNodeStartMethodNegativeParameters=n=>{n.start=(e=>(t=0,s=0,r)=>{if(typeof r=="number"&&r<0||s<0||t<0)throw new RangeError("The parameters can't be negative.");e.call(n,t,s,r)})(n.start)},wrapAudioScheduledSourceNodeStopMethodNegativeParameters=n=>{n.stop=(e=>(t=0)=>{if(t<0)throw new RangeError("The parameter can't be negative.");e.call(n,t)})(n.stop)},createNativeAudioBufferSourceNodeFactory=(n,e,t,s,r,i,a,c,u,l,h)=>(d,f)=>{const y=d.createBufferSource();return assignNativeAudioNodeOptions(y,f),assignNativeAudioNodeAudioParamValue(y,f,"playbackRate"),assignNativeAudioNodeOption(y,f,"buffer"),assignNativeAudioNodeOption(y,f,"loop"),assignNativeAudioNodeOption(y,f,"loopEnd"),assignNativeAudioNodeOption(y,f,"loopStart"),e(t,()=>t(d))||wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(y),e(s,()=>s(d))||u(y),e(r,()=>r(d))||l(y,d),e(i,()=>i(d))||wrapAudioScheduledSourceNodeStartMethodNegativeParameters(y),e(a,()=>a(d))||h(y,d),e(c,()=>c(d))||wrapAudioScheduledSourceNodeStopMethodNegativeParameters(y),n(d,y),y},createNativeAudioContextConstructor=n=>n===null?null:n.hasOwnProperty("AudioContext")?n.AudioContext:n.hasOwnProperty("webkitAudioContext")?n.webkitAudioContext:null,createNativeAudioDestinationNodeFactory=(n,e)=>(t,s,r)=>{const i=t.destination;if(i.channelCount!==s)try{i.channelCount=s}catch{}r&&i.channelCountMode!=="explicit"&&(i.channelCountMode="explicit"),i.maxChannelCount===0&&Object.defineProperty(i,"maxChannelCount",{value:s});const a=n(t,{channelCount:s,channelCountMode:i.channelCountMode,channelInterpretation:i.channelInterpretation,gain:1});return e(a,"channelCount",c=>()=>c.call(a),c=>u=>{c.call(a,u);try{i.channelCount=u}catch(l){if(u>i.maxChannelCount)throw l}}),e(a,"channelCountMode",c=>()=>c.call(a),c=>u=>{c.call(a,u),i.channelCountMode=u}),e(a,"channelInterpretation",c=>()=>c.call(a),c=>u=>{c.call(a,u),i.channelInterpretation=u}),Object.defineProperty(a,"maxChannelCount",{get:()=>i.maxChannelCount}),a.connect(i),a},createNativeAudioWorkletNodeConstructor=n=>n===null?null:n.hasOwnProperty("AudioWorkletNode")?n.AudioWorkletNode:null,testClonabilityOfAudioWorkletNodeOptions=n=>{const{port1:e}=new MessageChannel;try{e.postMessage(n)}finally{e.close()}},createNativeAudioWorkletNodeFactory=(n,e,t,s,r)=>(i,a,c,u,l,h)=>{if(c!==null)try{const d=new c(i,u,h),f=new Map;let y=null;if(Object.defineProperties(d,{channelCount:{get:()=>h.channelCount,set:()=>{throw n()}},channelCountMode:{get:()=>"explicit",set:()=>{throw n()}},onprocessorerror:{get:()=>y,set:g=>{typeof y=="function"&&d.removeEventListener("processorerror",y),y=typeof g=="function"?g:null,typeof y=="function"&&d.addEventListener("processorerror",y)}}}),d.addEventListener=(g=>(...x)=>{if(x[0]==="processorerror"){const b=typeof x[1]=="function"?x[1]:typeof x[1]=="object"&&x[1]!==null&&typeof x[1].handleEvent=="function"?x[1].handleEvent:null;if(b!==null){const v=f.get(x[1]);v!==void 0?x[1]=v:(x[1]=S=>{S.type==="error"?(Object.defineProperties(S,{type:{value:"processorerror"}}),b(S)):b(new ErrorEvent(x[0],te({},S)))},f.set(b,x[1]))}}return g.call(d,"error",x[1],x[2]),g.call(d,...x)})(d.addEventListener),d.removeEventListener=(g=>(...x)=>{if(x[0]==="processorerror"){const b=f.get(x[1]);b!==void 0&&(f.delete(x[1]),x[1]=b)}return g.call(d,"error",x[1],x[2]),g.call(d,x[0],x[1],x[2])})(d.removeEventListener),h.numberOfOutputs!==0){const g=t(i,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return d.connect(g).connect(i.destination),r(d,()=>g.disconnect(),()=>g.connect(i.destination))}return d}catch(d){throw d.code===11?s():d}if(l===void 0)throw s();return testClonabilityOfAudioWorkletNodeOptions(h),e(i,a,l,h)},computeBufferSize=(n,e)=>n===null?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(n*e))))),cloneAudioWorkletNodeOptions=n=>new Promise((e,t)=>{const{port1:s,port2:r}=new MessageChannel;s.onmessage=({data:i})=>{s.close(),r.close(),e(i)},s.onmessageerror=({data:i})=>{s.close(),r.close(),t(i)},r.postMessage(n)}),createAudioWorkletProcessorPromise=async(n,e)=>{const t=await cloneAudioWorkletNodeOptions(e);return new n(t)},createAudioWorkletProcessor=(n,e,t,s)=>{let r=NODE_TO_PROCESSOR_MAPS.get(n);r===void 0&&(r=new WeakMap,NODE_TO_PROCESSOR_MAPS.set(n,r));const i=createAudioWorkletProcessorPromise(t,s);return r.set(e,i),i},createNativeAudioWorkletNodeFakerFactory=(n,e,t,s,r,i,a,c,u,l,h,d,f)=>(y,g,x,b)=>{if(b.numberOfInputs===0&&b.numberOfOutputs===0)throw u();const v=Array.isArray(b.outputChannelCount)?b.outputChannelCount:Array.from(b.outputChannelCount);if(v.some(J=>J<1))throw u();if(v.length!==b.numberOfOutputs)throw e();if(b.channelCountMode!=="explicit")throw u();const S=b.channelCount*b.numberOfInputs,T=v.reduce((J,se)=>J+se,0),w=x.parameterDescriptors===void 0?0:x.parameterDescriptors.length;if(S+w>6||T>6)throw u();const C=new MessageChannel,N=[],_=[];for(let J=0;J<b.numberOfInputs;J+=1)N.push(a(y,{channelCount:b.channelCount,channelCountMode:b.channelCountMode,channelInterpretation:b.channelInterpretation,gain:1})),_.push(r(y,{channelCount:b.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:b.channelCount}));const $=[];if(x.parameterDescriptors!==void 0)for(const{defaultValue:J,maxValue:se,minValue:le,name:he}of x.parameterDescriptors){const ne=i(y,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:b.parameterData[he]!==void 0?b.parameterData[he]:J===void 0?0:J});Object.defineProperties(ne.offset,{defaultValue:{get:()=>J===void 0?0:J},maxValue:{get:()=>se===void 0?MOST_POSITIVE_SINGLE_FLOAT:se},minValue:{get:()=>le===void 0?MOST_NEGATIVE_SINGLE_FLOAT:le}}),$.push(ne)}const E=s(y,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,S+w)}),k=computeBufferSize(g,y.sampleRate),F=c(y,k,S+w,Math.max(1,T)),P=r(y,{channelCount:Math.max(1,T),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,T)}),R=[];for(let J=0;J<b.numberOfOutputs;J+=1)R.push(s(y,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:v[J]}));for(let J=0;J<b.numberOfInputs;J+=1){N[J].connect(_[J]);for(let se=0;se<b.channelCount;se+=1)_[J].connect(E,se,J*b.channelCount+se)}const O=new ReadOnlyMap(x.parameterDescriptors===void 0?[]:x.parameterDescriptors.map(({name:J},se)=>{const le=$[se];return le.connect(E,0,S+se),le.start(0),[J,le.offset]}));E.connect(F);let B=b.channelInterpretation,L=null;const V=b.numberOfOutputs===0?[F]:R,q={get bufferSize(){return k},get channelCount(){return b.channelCount},set channelCount(J){throw t()},get channelCountMode(){return b.channelCountMode},set channelCountMode(J){throw t()},get channelInterpretation(){return B},set channelInterpretation(J){for(const se of N)se.channelInterpretation=J;B=J},get context(){return F.context},get inputs(){return N},get numberOfInputs(){return b.numberOfInputs},get numberOfOutputs(){return b.numberOfOutputs},get onprocessorerror(){return L},set onprocessorerror(J){typeof L=="function"&&q.removeEventListener("processorerror",L),L=typeof J=="function"?J:null,typeof L=="function"&&q.addEventListener("processorerror",L)},get parameters(){return O},get port(){return C.port2},addEventListener(...J){return F.addEventListener(J[0],J[1],J[2])},connect:n.bind(null,V),disconnect:l.bind(null,V),dispatchEvent(...J){return F.dispatchEvent(J[0])},removeEventListener(...J){return F.removeEventListener(J[0],J[1],J[2])}},G=new Map;C.port1.addEventListener=(J=>(...se)=>{if(se[0]==="message"){const le=typeof se[1]=="function"?se[1]:typeof se[1]=="object"&&se[1]!==null&&typeof se[1].handleEvent=="function"?se[1].handleEvent:null;if(le!==null){const he=G.get(se[1]);he!==void 0?se[1]=he:(se[1]=ne=>{h(y.currentTime,y.sampleRate,()=>le(ne))},G.set(le,se[1]))}}return J.call(C.port1,se[0],se[1],se[2])})(C.port1.addEventListener),C.port1.removeEventListener=(J=>(...se)=>{if(se[0]==="message"){const le=G.get(se[1]);le!==void 0&&(G.delete(se[1]),se[1]=le)}return J.call(C.port1,se[0],se[1],se[2])})(C.port1.removeEventListener);let W=null;Object.defineProperty(C.port1,"onmessage",{get:()=>W,set:J=>{typeof W=="function"&&C.port1.removeEventListener("message",W),W=typeof J=="function"?J:null,typeof W=="function"&&(C.port1.addEventListener("message",W),C.port1.start())}}),x.prototype.port=C.port1;let U=null;createAudioWorkletProcessor(y,q,x,b).then(J=>U=J);const Y=createNestedArrays(b.numberOfInputs,b.channelCount),Q=createNestedArrays(b.numberOfOutputs,v),ee=x.parameterDescriptors===void 0?[]:x.parameterDescriptors.reduce((J,{name:se})=>de(te({},J),{[se]:new Float32Array(128)}),{});let K=!0;const X=()=>{b.numberOfOutputs>0&&F.disconnect(P);for(let J=0,se=0;J<b.numberOfOutputs;J+=1){const le=R[J];for(let he=0;he<v[J];he+=1)P.disconnect(le,se+he,he);se+=v[J]}},oe=new Map;F.onaudioprocess=({inputBuffer:J,outputBuffer:se})=>{if(U!==null){const le=d(q);for(let he=0;he<k;he+=128){for(let ne=0;ne<b.numberOfInputs;ne+=1)for(let fe=0;fe<b.channelCount;fe+=1)copyFromChannel(J,Y[ne],fe,fe,he);x.parameterDescriptors!==void 0&&x.parameterDescriptors.forEach(({name:ne},fe)=>{copyFromChannel(J,ee,ne,S+fe,he)});for(let ne=0;ne<b.numberOfInputs;ne+=1)for(let fe=0;fe<v[ne];fe+=1)Q[ne][fe].byteLength===0&&(Q[ne][fe]=new Float32Array(128));try{const ne=Y.map((Ce,Te)=>{if(le[Te].size>0)return oe.set(Te,k/128),Ce;const ue=oe.get(Te);return ue===void 0?[]:(Ce.every(me=>me.every(Ae=>Ae===0))&&(ue===1?oe.delete(Te):oe.set(Te,ue-1)),Ce)});K=h(y.currentTime+he/y.sampleRate,y.sampleRate,()=>U.process(ne,Q,ee));for(let Ce=0,Te=0;Ce<b.numberOfOutputs;Ce+=1){for(let _e=0;_e<v[Ce];_e+=1)copyToChannel(se,Q[Ce],_e,Te+_e,he);Te+=v[Ce]}}catch(ne){K=!1,q.dispatchEvent(new ErrorEvent("processorerror",{colno:ne.colno,filename:ne.filename,lineno:ne.lineno,message:ne.message}))}if(!K){for(let ne=0;ne<b.numberOfInputs;ne+=1){N[ne].disconnect(_[ne]);for(let fe=0;fe<b.channelCount;fe+=1)_[he].disconnect(E,fe,ne*b.channelCount+fe)}if(x.parameterDescriptors!==void 0){const ne=x.parameterDescriptors.length;for(let fe=0;fe<ne;fe+=1){const Ce=$[fe];Ce.disconnect(E,0,S+fe),Ce.stop()}}E.disconnect(F),F.onaudioprocess=null,ie?X():ye();break}}}};let ie=!1;const Z=a(y,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),pe=()=>F.connect(Z).connect(y.destination),ye=()=>{F.disconnect(Z),Z.disconnect()},be=()=>{if(K){ye(),b.numberOfOutputs>0&&F.connect(P);for(let J=0,se=0;J<b.numberOfOutputs;J+=1){const le=R[J];for(let he=0;he<v[J];he+=1)P.connect(le,se+he,he);se+=v[J]}}ie=!0},ge=()=>{K&&(pe(),X()),ie=!1};return pe(),f(q,be,ge)},createNativeBiquadFilterNode=(n,e)=>{const t=n.createBiquadFilter();return assignNativeAudioNodeOptions(t,e),assignNativeAudioNodeAudioParamValue(t,e,"Q"),assignNativeAudioNodeAudioParamValue(t,e,"detune"),assignNativeAudioNodeAudioParamValue(t,e,"frequency"),assignNativeAudioNodeAudioParamValue(t,e,"gain"),assignNativeAudioNodeOption(t,e,"type"),t},createNativeChannelMergerNodeFactory=(n,e)=>(t,s)=>{const r=t.createChannelMerger(s.numberOfInputs);return n!==null&&n.name==="webkitAudioContext"&&e(t,r),assignNativeAudioNodeOptions(r,s),r},wrapChannelSplitterNode=n=>{const e=n.numberOfOutputs;Object.defineProperty(n,"channelCount",{get:()=>e,set:t=>{if(t!==e)throw createInvalidStateError()}}),Object.defineProperty(n,"channelCountMode",{get:()=>"explicit",set:t=>{if(t!=="explicit")throw createInvalidStateError()}}),Object.defineProperty(n,"channelInterpretation",{get:()=>"discrete",set:t=>{if(t!=="discrete")throw createInvalidStateError()}})},createNativeChannelSplitterNode=(n,e)=>{const t=n.createChannelSplitter(e.numberOfOutputs);return assignNativeAudioNodeOptions(t,e),wrapChannelSplitterNode(t),t},createNativeConstantSourceNodeFactory=(n,e,t,s,r)=>(i,a)=>{if(i.createConstantSource===void 0)return t(i,a);const c=i.createConstantSource();return assignNativeAudioNodeOptions(c,a),assignNativeAudioNodeAudioParamValue(c,a,"offset"),e(s,()=>s(i))||wrapAudioScheduledSourceNodeStartMethodNegativeParameters(c),e(r,()=>r(i))||wrapAudioScheduledSourceNodeStopMethodNegativeParameters(c),n(i,c),c},interceptConnections=(n,e)=>(n.connect=e.connect.bind(e),n.disconnect=e.disconnect.bind(e),n),createNativeConstantSourceNodeFakerFactory=(n,e,t,s)=>(r,c)=>{var u=c,{offset:i}=u,a=Be(u,["offset"]);const l=r.createBuffer(1,2,44100),h=e(r,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),d=t(r,de(te({},a),{gain:i})),f=l.getChannelData(0);f[0]=1,f[1]=1,h.buffer=l,h.loop=!0;const y={get bufferSize(){},get channelCount(){return d.channelCount},set channelCount(b){d.channelCount=b},get channelCountMode(){return d.channelCountMode},set channelCountMode(b){d.channelCountMode=b},get channelInterpretation(){return d.channelInterpretation},set channelInterpretation(b){d.channelInterpretation=b},get context(){return d.context},get inputs(){return[]},get numberOfInputs(){return h.numberOfInputs},get numberOfOutputs(){return d.numberOfOutputs},get offset(){return d.gain},get onended(){return h.onended},set onended(b){h.onended=b},addEventListener(...b){return h.addEventListener(b[0],b[1],b[2])},dispatchEvent(...b){return h.dispatchEvent(b[0])},removeEventListener(...b){return h.removeEventListener(b[0],b[1],b[2])},start(b=0){h.start.call(h,b)},stop(b=0){h.stop.call(h,b)}},g=()=>h.connect(d),x=()=>h.disconnect(d);return n(r,h),s(interceptConnections(y,d),g,x)},createNativeConvolverNodeFactory=(n,e)=>(t,s)=>{const r=t.createConvolver();if(assignNativeAudioNodeOptions(r,s),s.disableNormalization===r.normalize&&(r.normalize=!s.disableNormalization),assignNativeAudioNodeOption(r,s,"buffer"),s.channelCount>2||(e(r,"channelCount",i=>()=>i.call(r),i=>a=>{if(a>2)throw n();return i.call(r,a)}),s.channelCountMode==="max"))throw n();return e(r,"channelCountMode",i=>()=>i.call(r),i=>a=>{if(a==="max")throw n();return i.call(r,a)}),r},createNativeDelayNode=(n,e)=>{const t=n.createDelay(e.maxDelayTime);return assignNativeAudioNodeOptions(t,e),assignNativeAudioNodeAudioParamValue(t,e,"delayTime"),t},createNativeDynamicsCompressorNodeFactory=n=>(e,t)=>{const s=e.createDynamicsCompressor();if(assignNativeAudioNodeOptions(s,t),t.channelCount>2||t.channelCountMode==="max")throw n();return assignNativeAudioNodeAudioParamValue(s,t,"attack"),assignNativeAudioNodeAudioParamValue(s,t,"knee"),assignNativeAudioNodeAudioParamValue(s,t,"ratio"),assignNativeAudioNodeAudioParamValue(s,t,"release"),assignNativeAudioNodeAudioParamValue(s,t,"threshold"),s},createNativeGainNode=(n,e)=>{const t=n.createGain();return assignNativeAudioNodeOptions(t,e),assignNativeAudioNodeAudioParamValue(t,e,"gain"),t},createNativeIIRFilterNodeFactory=n=>(e,t,s)=>{if(e.createIIRFilter===void 0)return n(e,t,s);const r=e.createIIRFilter(s.feedforward,s.feedback);return assignNativeAudioNodeOptions(r,s),r};function divide(n,e){const t=e[0]*e[0]+e[1]*e[1];return[(n[0]*e[0]+n[1]*e[1])/t,(n[1]*e[0]-n[0]*e[1])/t]}function multiply(n,e){return[n[0]*e[0]-n[1]*e[1],n[0]*e[1]+n[1]*e[0]]}function evaluatePolynomial(n,e){let t=[0,0];for(let s=n.length-1;s>=0;s-=1)t=multiply(t,e),t[0]+=n[s];return t}const createNativeIIRFilterNodeFakerFactory=(n,e,t,s)=>(r,i,{channelCount:a,channelCountMode:c,channelInterpretation:u,feedback:l,feedforward:h})=>{const d=computeBufferSize(i,r.sampleRate),f=l instanceof Float64Array?l:new Float64Array(l),y=h instanceof Float64Array?h:new Float64Array(h),g=f.length,x=y.length,b=Math.min(g,x);if(g===0||g>20)throw s();if(f[0]===0)throw e();if(x===0||x>20)throw s();if(y[0]===0)throw e();if(f[0]!==1){for(let $=0;$<x;$+=1)y[$]/=f[0];for(let $=1;$<g;$+=1)f[$]/=f[0]}const v=t(r,d,a,a);v.channelCount=a,v.channelCountMode=c,v.channelInterpretation=u;const S=32,T=[],w=[],C=[];for(let $=0;$<a;$+=1){T.push(0);const E=new Float32Array(S),k=new Float32Array(S);E.fill(0),k.fill(0),w.push(E),C.push(k)}v.onaudioprocess=$=>{const E=$.inputBuffer,k=$.outputBuffer,F=E.numberOfChannels;for(let P=0;P<F;P+=1){const R=E.getChannelData(P),O=k.getChannelData(P);T[P]=filterBuffer(f,g,y,x,b,w[P],C[P],T[P],S,R,O)}};const N=r.sampleRate/2;return interceptConnections({get bufferSize(){return d},get channelCount(){return v.channelCount},set channelCount($){v.channelCount=$},get channelCountMode(){return v.channelCountMode},set channelCountMode($){v.channelCountMode=$},get channelInterpretation(){return v.channelInterpretation},set channelInterpretation($){v.channelInterpretation=$},get context(){return v.context},get inputs(){return[v]},get numberOfInputs(){return v.numberOfInputs},get numberOfOutputs(){return v.numberOfOutputs},addEventListener(...$){return v.addEventListener($[0],$[1],$[2])},dispatchEvent(...$){return v.dispatchEvent($[0])},getFrequencyResponse($,E,k){if($.length!==E.length||E.length!==k.length)throw n();const F=$.length;for(let P=0;P<F;P+=1){const R=-Math.PI*($[P]/N),O=[Math.cos(R),Math.sin(R)],B=evaluatePolynomial(y,O),L=evaluatePolynomial(f,O),V=divide(B,L);E[P]=Math.sqrt(V[0]*V[0]+V[1]*V[1]),k[P]=Math.atan2(V[1],V[0])}},removeEventListener(...$){return v.removeEventListener($[0],$[1],$[2])}},v)},createNativeMediaElementAudioSourceNode=(n,e)=>n.createMediaElementSource(e.mediaElement),createNativeMediaStreamAudioDestinationNode=(n,e)=>{const t=n.createMediaStreamDestination();return assignNativeAudioNodeOptions(t,e),t.numberOfOutputs===1&&Object.defineProperty(t,"numberOfOutputs",{get:()=>0}),t},createNativeMediaStreamAudioSourceNode=(n,{mediaStream:e})=>{const t=e.getAudioTracks();t.sort((i,a)=>i.id<a.id?-1:i.id>a.id?1:0);const s=t.slice(0,1),r=n.createMediaStreamSource(new MediaStream(s));return Object.defineProperty(r,"mediaStream",{value:e}),r},createNativeMediaStreamTrackAudioSourceNodeFactory=(n,e)=>(t,{mediaStreamTrack:s})=>{if(typeof t.createMediaStreamTrackSource=="function")return t.createMediaStreamTrackSource(s);const r=new MediaStream([s]),i=t.createMediaStreamSource(r);if(s.kind!=="audio")throw n();if(e(t))throw new TypeError;return i},createNativeOfflineAudioContextConstructor=n=>n===null?null:n.hasOwnProperty("OfflineAudioContext")?n.OfflineAudioContext:n.hasOwnProperty("webkitOfflineAudioContext")?n.webkitOfflineAudioContext:null,createNativeOscillatorNodeFactory=(n,e,t,s,r,i)=>(a,c)=>{const u=a.createOscillator();return assignNativeAudioNodeOptions(u,c),assignNativeAudioNodeAudioParamValue(u,c,"detune"),assignNativeAudioNodeAudioParamValue(u,c,"frequency"),c.periodicWave!==void 0?u.setPeriodicWave(c.periodicWave):assignNativeAudioNodeOption(u,c,"type"),e(t,()=>t(a))||wrapAudioScheduledSourceNodeStartMethodNegativeParameters(u),e(s,()=>s(a))||i(u,a),e(r,()=>r(a))||wrapAudioScheduledSourceNodeStopMethodNegativeParameters(u),n(a,u),u},createNativePannerNodeFactory=n=>(e,t)=>{const s=e.createPanner();return s.orientationX===void 0?n(e,t):(assignNativeAudioNodeOptions(s,t),assignNativeAudioNodeAudioParamValue(s,t,"orientationX"),assignNativeAudioNodeAudioParamValue(s,t,"orientationY"),assignNativeAudioNodeAudioParamValue(s,t,"orientationZ"),assignNativeAudioNodeAudioParamValue(s,t,"positionX"),assignNativeAudioNodeAudioParamValue(s,t,"positionY"),assignNativeAudioNodeAudioParamValue(s,t,"positionZ"),assignNativeAudioNodeOption(s,t,"coneInnerAngle"),assignNativeAudioNodeOption(s,t,"coneOuterAngle"),assignNativeAudioNodeOption(s,t,"coneOuterGain"),assignNativeAudioNodeOption(s,t,"distanceModel"),assignNativeAudioNodeOption(s,t,"maxDistance"),assignNativeAudioNodeOption(s,t,"panningModel"),assignNativeAudioNodeOption(s,t,"refDistance"),assignNativeAudioNodeOption(s,t,"rolloffFactor"),s)},createNativePannerNodeFakerFactory=(n,e,t,s,r,i,a,c,u,l)=>(h,k)=>{var F=k,{coneInnerAngle:d,coneOuterAngle:f,coneOuterGain:y,distanceModel:g,maxDistance:x,orientationX:b,orientationY:v,orientationZ:S,panningModel:T,positionX:w,positionY:C,positionZ:N,refDistance:_,rolloffFactor:$}=F,E=Be(F,["coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","orientationX","orientationY","orientationZ","panningModel","positionX","positionY","positionZ","refDistance","rolloffFactor"]);const P=h.createPanner();if(E.channelCount>2||E.channelCountMode==="max")throw a();assignNativeAudioNodeOptions(P,E);const R={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},O=t(h,de(te({},R),{channelInterpretation:"speakers",numberOfInputs:6})),B=s(h,de(te({},E),{gain:1})),L=s(h,de(te({},R),{gain:1})),V=s(h,de(te({},R),{gain:0})),q=s(h,de(te({},R),{gain:0})),G=s(h,de(te({},R),{gain:0})),W=s(h,de(te({},R),{gain:0})),U=s(h,de(te({},R),{gain:0})),j=r(h,256,6,1),Y=i(h,de(te({},R),{curve:new Float32Array([1,1]),oversample:"none"}));let Q=[b,v,S],ee=[w,C,N];const K=new Float32Array(1);j.onaudioprocess=({inputBuffer:Z})=>{const pe=[u(Z,K,0),u(Z,K,1),u(Z,K,2)];pe.some((be,ge)=>be!==Q[ge])&&(P.setOrientation(...pe),Q=pe);const ye=[u(Z,K,3),u(Z,K,4),u(Z,K,5)];ye.some((be,ge)=>be!==ee[ge])&&(P.setPosition(...ye),ee=ye)},Object.defineProperty(V.gain,"defaultValue",{get:()=>0}),Object.defineProperty(q.gain,"defaultValue",{get:()=>0}),Object.defineProperty(G.gain,"defaultValue",{get:()=>0}),Object.defineProperty(W.gain,"defaultValue",{get:()=>0}),Object.defineProperty(U.gain,"defaultValue",{get:()=>0});const X={get bufferSize(){},get channelCount(){return P.channelCount},set channelCount(Z){if(Z>2)throw a();B.channelCount=Z,P.channelCount=Z},get channelCountMode(){return P.channelCountMode},set channelCountMode(Z){if(Z==="max")throw a();B.channelCountMode=Z,P.channelCountMode=Z},get channelInterpretation(){return P.channelInterpretation},set channelInterpretation(Z){B.channelInterpretation=Z,P.channelInterpretation=Z},get coneInnerAngle(){return P.coneInnerAngle},set coneInnerAngle(Z){P.coneInnerAngle=Z},get coneOuterAngle(){return P.coneOuterAngle},set coneOuterAngle(Z){P.coneOuterAngle=Z},get coneOuterGain(){return P.coneOuterGain},set coneOuterGain(Z){if(Z<0||Z>1)throw e();P.coneOuterGain=Z},get context(){return P.context},get distanceModel(){return P.distanceModel},set distanceModel(Z){P.distanceModel=Z},get inputs(){return[B]},get maxDistance(){return P.maxDistance},set maxDistance(Z){if(Z<0)throw new RangeError;P.maxDistance=Z},get numberOfInputs(){return P.numberOfInputs},get numberOfOutputs(){return P.numberOfOutputs},get orientationX(){return L.gain},get orientationY(){return V.gain},get orientationZ(){return q.gain},get panningModel(){return P.panningModel},set panningModel(Z){P.panningModel=Z},get positionX(){return G.gain},get positionY(){return W.gain},get positionZ(){return U.gain},get refDistance(){return P.refDistance},set refDistance(Z){if(Z<0)throw new RangeError;P.refDistance=Z},get rolloffFactor(){return P.rolloffFactor},set rolloffFactor(Z){if(Z<0)throw new RangeError;P.rolloffFactor=Z},addEventListener(...Z){return B.addEventListener(Z[0],Z[1],Z[2])},dispatchEvent(...Z){return B.dispatchEvent(Z[0])},removeEventListener(...Z){return B.removeEventListener(Z[0],Z[1],Z[2])}};d!==X.coneInnerAngle&&(X.coneInnerAngle=d),f!==X.coneOuterAngle&&(X.coneOuterAngle=f),y!==X.coneOuterGain&&(X.coneOuterGain=y),g!==X.distanceModel&&(X.distanceModel=g),x!==X.maxDistance&&(X.maxDistance=x),b!==X.orientationX.value&&(X.orientationX.value=b),v!==X.orientationY.value&&(X.orientationY.value=v),S!==X.orientationZ.value&&(X.orientationZ.value=S),T!==X.panningModel&&(X.panningModel=T),w!==X.positionX.value&&(X.positionX.value=w),C!==X.positionY.value&&(X.positionY.value=C),N!==X.positionZ.value&&(X.positionZ.value=N),_!==X.refDistance&&(X.refDistance=_),$!==X.rolloffFactor&&(X.rolloffFactor=$),(Q[0]!==1||Q[1]!==0||Q[2]!==0)&&P.setOrientation(...Q),(ee[0]!==0||ee[1]!==0||ee[2]!==0)&&P.setPosition(...ee);const oe=()=>{B.connect(P),n(B,Y,0,0),Y.connect(L).connect(O,0,0),Y.connect(V).connect(O,0,1),Y.connect(q).connect(O,0,2),Y.connect(G).connect(O,0,3),Y.connect(W).connect(O,0,4),Y.connect(U).connect(O,0,5),O.connect(j).connect(h.destination)},ie=()=>{B.disconnect(P),c(B,Y,0,0),Y.disconnect(L),L.disconnect(O),Y.disconnect(V),V.disconnect(O),Y.disconnect(q),q.disconnect(O),Y.disconnect(G),G.disconnect(O),Y.disconnect(W),W.disconnect(O),Y.disconnect(U),U.disconnect(O),O.disconnect(j),j.disconnect(h.destination)};return l(interceptConnections(X,P),oe,ie)},createNativePeriodicWaveFactory=n=>(e,{disableNormalization:t,imag:s,real:r})=>{const i=s instanceof Float32Array?s:new Float32Array(s),a=r instanceof Float32Array?r:new Float32Array(r),c=e.createPeriodicWave(a,i,{disableNormalization:t});if(Array.from(s).length<2)throw n();return c},createNativeScriptProcessorNode=(n,e,t,s)=>n.createScriptProcessor(e,t,s),createNativeStereoPannerNodeFactory=(n,e)=>(t,s)=>{const r=s.channelCountMode;if(r==="clamped-max")throw e();if(t.createStereoPanner===void 0)return n(t,s);const i=t.createStereoPanner();return assignNativeAudioNodeOptions(i,s),assignNativeAudioNodeAudioParamValue(i,s,"pan"),Object.defineProperty(i,"channelCountMode",{get:()=>r,set:a=>{if(a!==r)throw e()}}),i},createNativeStereoPannerNodeFakerFactory=(n,e,t,s,r,i)=>{const a=16385,c=new Float32Array([1,1]),u=Math.PI/2,l={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},h=de(te({},l),{oversample:"none"}),d=(g,x,b,v)=>{const S=new Float32Array(a),T=new Float32Array(a);for(let E=0;E<a;E+=1){const k=E/(a-1)*u;S[E]=Math.cos(k),T[E]=Math.sin(k)}const w=t(g,de(te({},l),{gain:0})),C=s(g,de(te({},h),{curve:S})),N=s(g,de(te({},h),{curve:c})),_=t(g,de(te({},l),{gain:0})),$=s(g,de(te({},h),{curve:T}));return{connectGraph(){x.connect(w),x.connect(N.inputs===void 0?N:N.inputs[0]),x.connect(_),N.connect(b),b.connect(C.inputs===void 0?C:C.inputs[0]),b.connect($.inputs===void 0?$:$.inputs[0]),C.connect(w.gain),$.connect(_.gain),w.connect(v,0,0),_.connect(v,0,1)},disconnectGraph(){x.disconnect(w),x.disconnect(N.inputs===void 0?N:N.inputs[0]),x.disconnect(_),N.disconnect(b),b.disconnect(C.inputs===void 0?C:C.inputs[0]),b.disconnect($.inputs===void 0?$:$.inputs[0]),C.disconnect(w.gain),$.disconnect(_.gain),w.disconnect(v,0,0),_.disconnect(v,0,1)}}},f=(g,x,b,v)=>{const S=new Float32Array(a),T=new Float32Array(a),w=new Float32Array(a),C=new Float32Array(a),N=Math.floor(a/2);for(let V=0;V<a;V+=1)if(V>N){const q=(V-N)/(a-1-N)*u;S[V]=Math.cos(q),T[V]=Math.sin(q),w[V]=0,C[V]=1}else{const q=V/(a-1-N)*u;S[V]=1,T[V]=0,w[V]=Math.cos(q),C[V]=Math.sin(q)}const _=e(g,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),$=t(g,de(te({},l),{gain:0})),E=s(g,de(te({},h),{curve:S})),k=t(g,de(te({},l),{gain:0})),F=s(g,de(te({},h),{curve:T})),P=s(g,de(te({},h),{curve:c})),R=t(g,de(te({},l),{gain:0})),O=s(g,de(te({},h),{curve:w})),B=t(g,de(te({},l),{gain:0})),L=s(g,de(te({},h),{curve:C}));return{connectGraph(){x.connect(_),x.connect(P.inputs===void 0?P:P.inputs[0]),_.connect($,0),_.connect(k,0),_.connect(R,1),_.connect(B,1),P.connect(b),b.connect(E.inputs===void 0?E:E.inputs[0]),b.connect(F.inputs===void 0?F:F.inputs[0]),b.connect(O.inputs===void 0?O:O.inputs[0]),b.connect(L.inputs===void 0?L:L.inputs[0]),E.connect($.gain),F.connect(k.gain),O.connect(R.gain),L.connect(B.gain),$.connect(v,0,0),R.connect(v,0,0),k.connect(v,0,1),B.connect(v,0,1)},disconnectGraph(){x.disconnect(_),x.disconnect(P.inputs===void 0?P:P.inputs[0]),_.disconnect($,0),_.disconnect(k,0),_.disconnect(R,1),_.disconnect(B,1),P.disconnect(b),b.disconnect(E.inputs===void 0?E:E.inputs[0]),b.disconnect(F.inputs===void 0?F:F.inputs[0]),b.disconnect(O.inputs===void 0?O:O.inputs[0]),b.disconnect(L.inputs===void 0?L:L.inputs[0]),E.disconnect($.gain),F.disconnect(k.gain),O.disconnect(R.gain),L.disconnect(B.gain),$.disconnect(v,0,0),R.disconnect(v,0,0),k.disconnect(v,0,1),B.disconnect(v,0,1)}}},y=(g,x,b,v,S)=>{if(x===1)return d(g,b,v,S);if(x===2)return f(g,b,v,S);throw r()};return(g,T)=>{var w=T,{channelCount:x,channelCountMode:b,pan:v}=w,S=Be(w,["channelCount","channelCountMode","pan"]);if(b==="max")throw r();const C=n(g,de(te({},S),{channelCount:1,channelCountMode:b,numberOfInputs:2})),N=t(g,de(te({},S),{channelCount:x,channelCountMode:b,gain:1})),_=t(g,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:v});let{connectGraph:$,disconnectGraph:E}=y(g,x,N,_,C);Object.defineProperty(_.gain,"defaultValue",{get:()=>0}),Object.defineProperty(_.gain,"maxValue",{get:()=>1}),Object.defineProperty(_.gain,"minValue",{get:()=>-1});const k={get bufferSize(){},get channelCount(){return N.channelCount},set channelCount(O){N.channelCount!==O&&(F&&E(),{connectGraph:$,disconnectGraph:E}=y(g,O,N,_,C),F&&$()),N.channelCount=O},get channelCountMode(){return N.channelCountMode},set channelCountMode(O){if(O==="clamped-max"||O==="max")throw r();N.channelCountMode=O},get channelInterpretation(){return N.channelInterpretation},set channelInterpretation(O){N.channelInterpretation=O},get context(){return N.context},get inputs(){return[N]},get numberOfInputs(){return N.numberOfInputs},get numberOfOutputs(){return N.numberOfOutputs},get pan(){return _.gain},addEventListener(...O){return N.addEventListener(O[0],O[1],O[2])},dispatchEvent(...O){return N.dispatchEvent(O[0])},removeEventListener(...O){return N.removeEventListener(O[0],O[1],O[2])}};let F=!1;const P=()=>{$(),F=!0},R=()=>{E(),F=!1};return i(interceptConnections(k,C),P,R)}},createNativeWaveShaperNodeFactory=(n,e,t,s,r,i,a)=>(c,u)=>{const l=c.createWaveShaper();if(i!==null&&i.name==="webkitAudioContext"&&c.createGain().gain.automationRate===void 0)return t(c,u);assignNativeAudioNodeOptions(l,u);const h=u.curve===null||u.curve instanceof Float32Array?u.curve:new Float32Array(u.curve);if(h!==null&&h.length<2)throw e();assignNativeAudioNodeOption(l,{curve:h},"curve"),assignNativeAudioNodeOption(l,u,"oversample");let d=null,f=!1;return a(l,"curve",x=>()=>x.call(l),x=>b=>(x.call(l,b),f&&(s(b)&&d===null?d=n(c,l):!s(b)&&d!==null&&(d(),d=null)),b)),r(l,()=>{f=!0,s(l.curve)&&(d=n(c,l))},()=>{f=!1,d!==null&&(d(),d=null)})},createNativeWaveShaperNodeFakerFactory=(n,e,t,s,r)=>(i,l)=>{var h=l,{curve:a,oversample:c}=h,u=Be(h,["curve","oversample"]);const d=i.createWaveShaper(),f=i.createWaveShaper();assignNativeAudioNodeOptions(d,u),assignNativeAudioNodeOptions(f,u);const y=t(i,de(te({},u),{gain:1})),g=t(i,de(te({},u),{gain:-1})),x=t(i,de(te({},u),{gain:1})),b=t(i,de(te({},u),{gain:-1}));let v=null,S=!1,T=null;const w={get bufferSize(){},get channelCount(){return d.channelCount},set channelCount(_){y.channelCount=_,g.channelCount=_,d.channelCount=_,x.channelCount=_,f.channelCount=_,b.channelCount=_},get channelCountMode(){return d.channelCountMode},set channelCountMode(_){y.channelCountMode=_,g.channelCountMode=_,d.channelCountMode=_,x.channelCountMode=_,f.channelCountMode=_,b.channelCountMode=_},get channelInterpretation(){return d.channelInterpretation},set channelInterpretation(_){y.channelInterpretation=_,g.channelInterpretation=_,d.channelInterpretation=_,x.channelInterpretation=_,f.channelInterpretation=_,b.channelInterpretation=_},get context(){return d.context},get curve(){return T},set curve(_){if(_!==null&&_.length<2)throw e();if(_===null)d.curve=_,f.curve=_;else{const $=_.length,E=new Float32Array($+2-$%2),k=new Float32Array($+2-$%2);E[0]=_[0],k[0]=-_[$-1];const F=Math.ceil(($+1)/2),P=($+1)/2-1;for(let R=1;R<F;R+=1){const O=R/F*P,B=Math.floor(O),L=Math.ceil(O);E[R]=B===L?_[B]:(1-(O-B))*_[B]+(1-(L-O))*_[L],k[R]=B===L?-_[$-1-B]:-((1-(O-B))*_[$-1-B])-(1-(L-O))*_[$-1-L]}E[F]=$%2==1?_[F-1]:(_[F-2]+_[F-1])/2,d.curve=E,f.curve=k}T=_,S&&(s(T)&&v===null?v=n(i,y):v!==null&&(v(),v=null))},get inputs(){return[y]},get numberOfInputs(){return d.numberOfInputs},get numberOfOutputs(){return d.numberOfOutputs},get oversample(){return d.oversample},set oversample(_){d.oversample=_,f.oversample=_},addEventListener(..._){return y.addEventListener(_[0],_[1],_[2])},dispatchEvent(..._){return y.dispatchEvent(_[0])},removeEventListener(..._){return y.removeEventListener(_[0],_[1],_[2])}};a!==null&&(w.curve=a instanceof Float32Array?a:new Float32Array(a)),c!==w.oversample&&(w.oversample=c);const C=()=>{y.connect(d).connect(x),y.connect(g).connect(f).connect(b).connect(x),S=!0,s(T)&&(v=n(i,y))},N=()=>{y.disconnect(d),d.disconnect(x),y.disconnect(g),g.disconnect(f),f.disconnect(b),b.disconnect(x),S=!1,v!==null&&(v(),v=null)};return r(interceptConnections(w,x),C,N)},createNotSupportedError=()=>new DOMException("","NotSupportedError"),DEFAULT_OPTIONS$5={numberOfChannels:1},createOfflineAudioContextConstructor=(n,e,t,s,r)=>class extends n{constructor(a,c,u){let l;if(typeof a=="number"&&c!==void 0&&u!==void 0)l={length:c,numberOfChannels:a,sampleRate:u};else if(typeof a=="object")l=a;else throw new Error("The given parameters are not valid.");const{length:h,numberOfChannels:d,sampleRate:f}=te(te({},DEFAULT_OPTIONS$5),l),y=s(d,h,f);e(testPromiseSupport,()=>testPromiseSupport(y))||y.addEventListener("statechange",(()=>{let g=0;const x=b=>{this._state==="running"&&(g>0?(y.removeEventListener("statechange",x),b.stopImmediatePropagation(),this._waitForThePromiseToSettle(b)):g+=1)};return x})());super(y,d);this._length=h,this._nativeOfflineAudioContext=y,this._state=null}get length(){return this._nativeOfflineAudioContext.length===void 0?this._length:this._nativeOfflineAudioContext.length}get state(){return this._state===null?this._nativeOfflineAudioContext.state:this._state}startRendering(){return this._state==="running"?Promise.reject(t()):(this._state="running",r(this.destination,this._nativeOfflineAudioContext).finally(()=>{this._state=null,deactivateAudioGraph(this)}))}_waitForThePromiseToSettle(a){this._state===null?this._nativeOfflineAudioContext.dispatchEvent(a):setTimeout(()=>this._waitForThePromiseToSettle(a))}},DEFAULT_OPTIONS$4={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},createOscillatorNodeConstructor=(n,e,t,s,r,i,a)=>class extends n{constructor(u,l){const h=r(u),d=te(te({},DEFAULT_OPTIONS$4),l),f=t(h,d),y=i(h),g=y?s():null,x=u.sampleRate/2;super(u,!1,f,g);this._detune=e(this,y,f.detune,153600,-153600),this._frequency=e(this,y,f.frequency,x,-x),this._nativeOscillatorNode=f,this._onended=null,this._oscillatorNodeRenderer=g,this._oscillatorNodeRenderer!==null&&d.periodicWave!==void 0&&(this._oscillatorNodeRenderer.periodicWave=d.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(u){const l=typeof u=="function"?a(this,u):null;this._nativeOscillatorNode.onended=l;const h=this._nativeOscillatorNode.onended;this._onended=h!==null&&h===l?u:h}get type(){return this._nativeOscillatorNode.type}set type(u){this._nativeOscillatorNode.type=u,this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(u){this._nativeOscillatorNode.setPeriodicWave(u),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=u)}start(u=0){if(this._nativeOscillatorNode.start(u),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.start=u),this.context.state!=="closed"){setInternalStateToActive(this);const l=()=>{this._nativeOscillatorNode.removeEventListener("ended",l),isActiveAudioNode(this)&&setInternalStateToPassive(this)};this._nativeOscillatorNode.addEventListener("ended",l)}}stop(u=0){this._nativeOscillatorNode.stop(u),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.stop=u)}},createOscillatorNodeRendererFactory=(n,e,t,s,r)=>()=>{const i=new WeakMap;let a=null,c=null,u=null;const l=async(h,d)=>{let f=t(h);const y=isOwnedByContext(f,d);if(!y){const g={channelCount:f.channelCount,channelCountMode:f.channelCountMode,channelInterpretation:f.channelInterpretation,detune:f.detune.value,frequency:f.frequency.value,periodicWave:a===null?void 0:a,type:f.type};f=e(d,g),c!==null&&f.start(c),u!==null&&f.stop(u)}return i.set(d,f),y?(await n(d,h.detune,f.detune),await n(d,h.frequency,f.frequency)):(await s(d,h.detune,f.detune),await s(d,h.frequency,f.frequency)),await r(h,d,f),f};return{set periodicWave(h){a=h},set start(h){c=h},set stop(h){u=h},render(h,d){const f=i.get(d);return f!==void 0?Promise.resolve(f):l(h,d)}}},DEFAULT_OPTIONS$3={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},createPannerNodeConstructor=(n,e,t,s,r,i,a)=>class extends n{constructor(u,l){const h=r(u),d=te(te({},DEFAULT_OPTIONS$3),l),f=t(h,d),y=i(h),g=y?s():null;super(u,!1,f,g);this._nativePannerNode=f,this._orientationX=e(this,y,f.orientationX,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._orientationY=e(this,y,f.orientationY,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._orientationZ=e(this,y,f.orientationZ,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._positionX=e(this,y,f.positionX,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._positionY=e(this,y,f.positionY,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._positionZ=e(this,y,f.positionZ,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),a(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(u){this._nativePannerNode.coneInnerAngle=u}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(u){this._nativePannerNode.coneOuterAngle=u}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(u){this._nativePannerNode.coneOuterGain=u}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(u){this._nativePannerNode.distanceModel=u}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(u){this._nativePannerNode.maxDistance=u}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(u){this._nativePannerNode.panningModel=u}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(u){this._nativePannerNode.refDistance=u}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(u){this._nativePannerNode.rolloffFactor=u}},createPannerNodeRendererFactory=(n,e,t,s,r,i,a,c,u,l)=>()=>{const h=new WeakMap;let d=null;const f=async(y,g)=>{let x=null,b=i(y);const v={channelCount:b.channelCount,channelCountMode:b.channelCountMode,channelInterpretation:b.channelInterpretation},S=de(te({},v),{coneInnerAngle:b.coneInnerAngle,coneOuterAngle:b.coneOuterAngle,coneOuterGain:b.coneOuterGain,distanceModel:b.distanceModel,maxDistance:b.maxDistance,panningModel:b.panningModel,refDistance:b.refDistance,rolloffFactor:b.rolloffFactor}),T=isOwnedByContext(b,g);if("bufferSize"in b)x=s(g,de(te({},v),{gain:1}));else if(!T){const w=de(te({},S),{orientationX:b.orientationX.value,orientationY:b.orientationY.value,orientationZ:b.orientationZ.value,positionX:b.positionX.value,positionY:b.positionY.value,positionZ:b.positionZ.value});b=r(g,w)}if(h.set(g,x===null?b:x),x!==null){if(d===null){if(a===null)throw new Error("Missing the native OfflineAudioContext constructor.");const F=new a(6,y.context.length,g.sampleRate),P=e(F,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});P.connect(F.destination),d=(async()=>{const R=await Promise.all([y.orientationX,y.orientationY,y.orientationZ,y.positionX,y.positionY,y.positionZ].map(async(O,B)=>{const L=t(F,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:B===0?1:0});return await c(F,O,L.offset),L}));for(let O=0;O<6;O+=1)R[O].connect(P,0,O),R[O].start(0);return l(F)})()}const w=await d,C=s(g,de(te({},v),{gain:1}));await u(y,g,C);const N=[];for(let F=0;F<w.numberOfChannels;F+=1)N.push(w.getChannelData(F));let _=[N[0][0],N[1][0],N[2][0]],$=[N[3][0],N[4][0],N[5][0]],E=s(g,de(te({},v),{gain:1})),k=r(g,de(te({},S),{orientationX:_[0],orientationY:_[1],orientationZ:_[2],positionX:$[0],positionY:$[1],positionZ:$[2]}));C.connect(E).connect(k.inputs[0]),k.connect(x);for(let F=128;F<w.length;F+=128){const P=[N[0][F],N[1][F],N[2][F]],R=[N[3][F],N[4][F],N[5][F]];if(P.some((O,B)=>O!==_[B])||R.some((O,B)=>O!==$[B])){_=P,$=R;const O=F/g.sampleRate;E.gain.setValueAtTime(0,O),E=s(g,de(te({},v),{gain:0})),k=r(g,de(te({},S),{orientationX:_[0],orientationY:_[1],orientationZ:_[2],positionX:$[0],positionY:$[1],positionZ:$[2]})),E.gain.setValueAtTime(1,O),C.connect(E).connect(k.inputs[0]),k.connect(x)}}return x}return T?(await n(g,y.orientationX,b.orientationX),await n(g,y.orientationY,b.orientationY),await n(g,y.orientationZ,b.orientationZ),await n(g,y.positionX,b.positionX),await n(g,y.positionY,b.positionY),await n(g,y.positionZ,b.positionZ)):(await c(g,y.orientationX,b.orientationX),await c(g,y.orientationY,b.orientationY),await c(g,y.orientationZ,b.orientationZ),await c(g,y.positionX,b.positionX),await c(g,y.positionY,b.positionY),await c(g,y.positionZ,b.positionZ)),isNativeAudioNodeFaker(b)?await u(y,g,b.inputs[0]):await u(y,g,b),b};return{render(y,g){const x=h.get(g);return x!==void 0?Promise.resolve(x):f(y,g)}}},DEFAULT_OPTIONS$2={disableNormalization:!1},createPeriodicWaveConstructor=(n,e,t,s)=>class it{constructor(i,a){const c=e(i),u=s(te(te({},DEFAULT_OPTIONS$2),a)),l=n(c,u);return t.add(l),l}static[Symbol.hasInstance](i){return i!==null&&typeof i=="object"&&Object.getPrototypeOf(i)===it.prototype||t.has(i)}},createRenderAutomation=(n,e)=>(t,s,r)=>(n(s).replay(r),e(s,t,r)),createRenderInputsOfAudioNode=(n,e,t)=>async(s,r,i)=>{const a=n(s);await Promise.all(a.activeInputs.map((c,u)=>Array.from(c).map(async([l,h])=>{const f=await e(l).render(l,r),y=s.context.destination;!t(l)&&(s!==y||!t(s))&&f.connect(i,h,u)})).reduce((c,u)=>[...c,...u],[]))},createRenderInputsOfAudioParam=(n,e,t)=>async(s,r,i)=>{const a=e(s);await Promise.all(Array.from(a.activeInputs).map(async([c,u])=>{const h=await n(c).render(c,r);t(c)||h.connect(i,u)}))},createRenderNativeOfflineAudioContext=(n,e,t,s)=>r=>n(testPromiseSupport,()=>testPromiseSupport(r))?Promise.resolve(n(s,s)).then(i=>{if(!i){const a=t(r,512,0,1);r.oncomplete=()=>{a.onaudioprocess=null,a.disconnect()},a.onaudioprocess=()=>r.currentTime,a.connect(r.destination)}return r.startRendering()}):new Promise(i=>{const a=e(r,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});r.oncomplete=c=>{a.disconnect(),i(c.renderedBuffer)},a.connect(r.destination),r.startRendering()}),createSetActiveAudioWorkletNodeInputs=n=>(e,t)=>{n.set(e,t)},createSetAudioNodeTailTime=n=>(e,t)=>n.set(e,t),createStartRendering=(n,e,t,s,r,i,a,c)=>(u,l)=>t(u).render(u,l).then(()=>Promise.all(Array.from(s(l)).map(h=>t(h).render(h,l)))).then(()=>r(l)).then(h=>(typeof h.copyFromChannel!="function"?(a(h),wrapAudioBufferGetChannelDataMethod(h)):e(i,()=>i(h))||c(h),n.add(h),h)),DEFAULT_OPTIONS$1={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},createStereoPannerNodeConstructor=(n,e,t,s,r,i)=>class extends n{constructor(c,u){const l=r(c),h=te(te({},DEFAULT_OPTIONS$1),u),d=t(l,h),f=i(l),y=f?s():null;super(c,!1,d,y);this._pan=e(this,f,d.pan)}get pan(){return this._pan}},createStereoPannerNodeRendererFactory=(n,e,t,s,r)=>()=>{const i=new WeakMap,a=async(c,u)=>{let l=t(c);const h=isOwnedByContext(l,u);if(!h){const d={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,pan:l.pan.value};l=e(u,d)}return i.set(u,l),h?await n(u,c.pan,l.pan):await s(u,c.pan,l.pan),isNativeAudioNodeFaker(l)?await r(c,u,l.inputs[0]):await r(c,u,l),l};return{render(c,u){const l=i.get(u);return l!==void 0?Promise.resolve(l):a(c,u)}}},createTestAudioBufferConstructorSupport=n=>()=>{if(n===null)return!1;try{new n({length:1,sampleRate:44100})}catch{return!1}return!0},createTestAudioBufferCopyChannelMethodsSubarraySupport=n=>()=>{if(n===null)return!1;const t=new n(1,1,44100).createBuffer(1,1,44100);if(t.copyToChannel===void 0)return!0;const s=new Float32Array(2);try{t.copyFromChannel(s,0,0)}catch{return!1}return!0},createTestAudioContextCloseMethodSupport=n=>()=>{if(n===null)return!1;if(n.prototype!==void 0&&n.prototype.close!==void 0)return!0;const e=new n,t=e.close!==void 0;try{e.close()}catch{}return t},createTestAudioContextDecodeAudioDataMethodTypeErrorSupport=n=>()=>{if(n===null)return Promise.resolve(!1);const e=new n(1,1,44100);return new Promise(t=>{let s=!0;const r=a=>{s&&(s=!1,e.startRendering(),t(a instanceof TypeError))};let i;try{i=e.decodeAudioData(null,()=>{},r)}catch(a){r(a)}i!==void 0&&i.catch(r)})},createTestAudioContextOptionsSupport=n=>()=>{if(n===null)return!1;let e;try{e=new n({latencyHint:"balanced"})}catch{return!1}return e.close(),!0},createTestAudioNodeConnectMethodSupport=n=>()=>{if(n===null)return!1;const t=new n(1,1,44100).createGain(),s=t.connect(t)===t;return t.disconnect(t),s},createTestAudioWorkletProcessorNoOutputsSupport=(n,e)=>async()=>{if(n===null)return!0;if(e===null)return!1;const t=new Blob(['let c,p;class A extends AudioWorkletProcessor{constructor(){super();this.port.onmessage=(e)=>{p=e.data;p.onmessage=()=>{p.postMessage(c);p.close()};this.port.postMessage(0)}}process(){c=1}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),s=new MessageChannel,r=new e(1,128,44100),i=URL.createObjectURL(t);let a=!1;try{await r.audioWorklet.addModule(i);const c=new n(r,"a",{numberOfOutputs:0}),u=r.createOscillator();await new Promise(l=>{c.port.onmessage=()=>l(),c.port.postMessage(s.port2,[s.port2])}),c.port.onmessage=()=>a=!0,u.connect(c),u.start(0),await r.startRendering(),a=await new Promise(l=>{s.port1.onmessage=({data:h})=>l(h===1),s.port1.postMessage(0)})}catch{}finally{s.port1.close(),URL.revokeObjectURL(i)}return a},createTestAudioWorkletProcessorPostMessageSupport=(n,e)=>async()=>{if(n===null)return!0;if(e===null)return!1;const t=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),s=new e(1,128,44100),r=URL.createObjectURL(t);let i=!1,a=!1;try{await s.audioWorklet.addModule(r);const c=new n(s,"a",{numberOfOutputs:0}),u=s.createOscillator();c.port.onmessage=()=>i=!0,c.onprocessorerror=()=>a=!0,u.connect(c),u.start(0),await s.startRendering()}catch{}finally{URL.revokeObjectURL(r)}return i&&!a},createTestChannelMergerNodeChannelCountSupport=n=>()=>{if(n===null)return!1;const t=new n(1,1,44100).createChannelMerger();if(t.channelCountMode==="max")return!0;try{t.channelCount=2}catch{return!0}return!1},createTestConstantSourceNodeAccurateSchedulingSupport=n=>()=>{if(n===null)return!1;const e=new n(1,1,44100);return e.createConstantSource===void 0?!0:e.createConstantSource().offset.maxValue!==Number.POSITIVE_INFINITY},createTestConvolverNodeBufferReassignabilitySupport=n=>()=>{if(n===null)return!1;const e=new n(1,1,44100),t=e.createConvolver();t.buffer=e.createBuffer(1,1,e.sampleRate);try{t.buffer=e.createBuffer(1,1,e.sampleRate)}catch{return!1}return!0},createTestConvolverNodeChannelCountSupport=n=>()=>{if(n===null)return!1;const t=new n(1,1,44100).createConvolver();try{t.channelCount=1}catch{return!1}return!0},createTestIsSecureContextSupport=n=>()=>n!==null&&n.hasOwnProperty("isSecureContext"),createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport=n=>()=>{if(n===null)return!1;const e=new n;try{return e.createMediaStreamSource(new MediaStream),!1}catch{return!0}finally{e.close()}},createTestOfflineAudioContextCurrentTimeSupport=(n,e)=>()=>{if(e===null)return Promise.resolve(!1);const t=new e(1,1,44100),s=n(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise(r=>{t.oncomplete=()=>{s.disconnect(),r(t.currentTime!==0)},t.startRendering()})},createTestStereoPannerNodeDefaultValueSupport=n=>()=>{if(n===null)return Promise.resolve(!1);const e=new n(1,1,44100);if(e.createStereoPanner===void 0||e.createConstantSource===void 0)return Promise.resolve(!0);const t=e.createConstantSource(),s=e.createStereoPanner();return t.channelCount=1,t.offset.value=1,s.channelCount=1,t.start(),t.connect(s).connect(e.destination),e.startRendering().then(r=>r.getChannelData(0)[0]!==1)},createUnknownError=()=>new DOMException("","UnknownError"),DEFAULT_OPTIONS={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},createWaveShaperNodeConstructor=(n,e,t,s,r,i,a)=>class extends n{constructor(u,l){const h=r(u),d=te(te({},DEFAULT_OPTIONS),l),f=t(h,d),g=i(h)?s():null;super(u,!0,f,g);this._isCurveNullified=!1,this._nativeWaveShaperNode=f,a(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(u){if(u===null)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(u.length<2)throw e();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=u}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(u){this._nativeWaveShaperNode.oversample=u}},createWaveShaperNodeRendererFactory=(n,e,t)=>()=>{const s=new WeakMap,r=async(i,a)=>{let c=e(i);if(!isOwnedByContext(c,a)){const l={channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,curve:c.curve,oversample:c.oversample};c=n(a,l)}return s.set(a,c),isNativeAudioNodeFaker(c)?await t(i,a,c.inputs[0]):await t(i,a,c),c};return{render(i,a){const c=s.get(a);return c!==void 0?Promise.resolve(c):r(i,a)}}},createWindow=()=>typeof window=="undefined"?null:window,createWrapAudioBufferCopyChannelMethods=(n,e)=>t=>{t.copyFromChannel=(s,r,i=0)=>{const a=n(i),c=n(r);if(c>=t.numberOfChannels)throw e();const u=t.length,l=t.getChannelData(c),h=s.length;for(let d=a<0?-a:0;d+a<u&&d<h;d+=1)s[d]=l[d+a]},t.copyToChannel=(s,r,i=0)=>{const a=n(i),c=n(r);if(c>=t.numberOfChannels)throw e();const u=t.length,l=t.getChannelData(c),h=s.length;for(let d=a<0?-a:0;d+a<u&&d<h;d+=1)l[d+a]=s[d]}},createWrapAudioBufferCopyChannelMethodsOutOfBounds=n=>e=>{e.copyFromChannel=(t=>(s,r,i=0)=>{const a=n(i),c=n(r);if(a<e.length)return t.call(e,s,c,a)})(e.copyFromChannel),e.copyToChannel=(t=>(s,r,i=0)=>{const a=n(i),c=n(r);if(a<e.length)return t.call(e,s,c,a)})(e.copyToChannel)},createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer=n=>(e,t)=>{const s=t.createBuffer(1,1,44100);e.buffer===null&&(e.buffer=s),n(e,"buffer",r=>()=>{const i=r.call(e);return i===s?null:i},r=>i=>r.call(e,i===null?s:i))},createWrapChannelMergerNode=(n,e)=>(t,s)=>{s.channelCount=1,s.channelCountMode="explicit",Object.defineProperty(s,"channelCount",{get:()=>1,set:()=>{throw n()}}),Object.defineProperty(s,"channelCountMode",{get:()=>"explicit",set:()=>{throw n()}});const r=t.createBufferSource();e(s,()=>{const c=s.numberOfInputs;for(let u=0;u<c;u+=1)r.connect(s,0,u)},()=>r.disconnect(s))},getFirstSample=(n,e,t)=>n.copyFromChannel===void 0?n.getChannelData(t)[0]:(n.copyFromChannel(e,t),e[0]),isDCCurve=n=>{if(n===null)return!1;const e=n.length;return e%2!=0?n[Math.floor(e/2)]!==0:n[e/2-1]+n[e/2]!==0},overwriteAccessors=(n,e,t,s)=>{let r=n;for(;!r.hasOwnProperty(e);)r=Object.getPrototypeOf(r);const{get:i,set:a}=Object.getOwnPropertyDescriptor(r,e);Object.defineProperty(n,e,{get:t(i),set:s(a)})},sanitizeAudioWorkletNodeOptions=n=>de(te({},n),{outputChannelCount:n.outputChannelCount!==void 0?n.outputChannelCount:n.numberOfInputs===1&&n.numberOfOutputs===1?[n.channelCount]:Array.from({length:n.numberOfOutputs},()=>1)}),sanitizeChannelSplitterOptions=n=>de(te({},n),{channelCount:n.numberOfOutputs}),sanitizePeriodicWaveOptions=n=>{const{imag:e,real:t}=n;return e===void 0?t===void 0?de(te({},n),{imag:[0,0],real:[0,0]}):de(te({},n),{imag:Array.from(t,()=>0),real:t}):t===void 0?de(te({},n),{imag:e,real:Array.from(e,()=>0)}):de(te({},n),{imag:e,real:t})},setValueAtTimeUntilPossible=(n,e,t)=>{try{n.setValueAtTime(e,t)}catch(s){if(s.code!==9)throw s;setValueAtTimeUntilPossible(n,e,t+1e-7)}},testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport=n=>{const e=n.createBufferSource();e.start();try{e.start()}catch{return!0}return!1},testAudioBufferSourceNodeStartMethodOffsetClampingSupport=n=>{const e=n.createBufferSource(),t=n.createBuffer(1,1,44100);e.buffer=t;try{e.start(0,1)}catch{return!1}return!0},testAudioBufferSourceNodeStopMethodNullifiedBufferSupport=n=>{const e=n.createBufferSource();e.start();try{e.stop()}catch{return!1}return!0},testAudioScheduledSourceNodeStartMethodNegativeParametersSupport=n=>{const e=n.createOscillator();try{e.start(-1)}catch(t){return t instanceof RangeError}return!1},testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport=n=>{const e=n.createBuffer(1,1,44100),t=n.createBufferSource();t.buffer=e,t.start(),t.stop();try{return t.stop(),!0}catch{return!1}},testAudioScheduledSourceNodeStopMethodNegativeParametersSupport=n=>{const e=n.createOscillator();try{e.stop(-1)}catch(t){return t instanceof RangeError}return!1},testAudioWorkletNodeOptionsClonability=n=>{const{port1:e,port2:t}=new MessageChannel;try{e.postMessage(n)}finally{e.close(),t.close()}},testDomExceptionConstructorSupport=()=>{try{new DOMException}catch{return!1}return!0},testTransferablesSupport=()=>new Promise(n=>{const e=new ArrayBuffer(0),{port1:t,port2:s}=new MessageChannel;t.onmessage=({data:r})=>n(r!==null),s.postMessage(e,[e])}),wrapAudioBufferSourceNodeStartMethodOffsetClamping=n=>{n.start=(e=>(t=0,s=0,r)=>{const i=n.buffer,a=i===null?s:Math.min(i.duration,s);i!==null&&a>i.duration-.5/n.context.sampleRate?e.call(n,t,0,0):e.call(n,t,a,r)})(n.start)},wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls=(n,e)=>{const t=e.createGain();n.connect(t);const s=(r=>()=>{r.call(n,t),n.removeEventListener("ended",s)})(n.disconnect);n.addEventListener("ended",s),interceptConnections(n,t),n.stop=(r=>{let i=!1;return(a=0)=>{if(i)try{r.call(n,a)}catch{t.gain.setValueAtTime(0,a)}else r.call(n,a),i=!0}})(n.stop)},wrapEventListener=(n,e)=>t=>{const s={value:n};return Object.defineProperties(t,{currentTarget:s,target:s}),typeof e=="function"?e.call(n,t):e.handleEvent.call(n,t)},addActiveInputConnectionToAudioNode=createAddActiveInputConnectionToAudioNode(insertElementInSet),addPassiveInputConnectionToAudioNode=createAddPassiveInputConnectionToAudioNode(insertElementInSet),deleteActiveInputConnectionToAudioNode=createDeleteActiveInputConnectionToAudioNode(pickElementFromSet),audioNodeTailTimeStore=new WeakMap,getAudioNodeTailTime=createGetAudioNodeTailTime(audioNodeTailTimeStore),cacheTestResult=createCacheTestResult(new Map,new WeakMap),window$1=createWindow(),createNativeAnalyserNode=createNativeAnalyserNodeFactory(cacheTestResult,createIndexSizeError),getAudioNodeRenderer=createGetAudioNodeRenderer(getAudioNodeConnections),renderInputsOfAudioNode=createRenderInputsOfAudioNode(getAudioNodeConnections,getAudioNodeRenderer,isPartOfACycle),createAnalyserNodeRenderer=createAnalyserNodeRendererFactory(createNativeAnalyserNode,getNativeAudioNode,renderInputsOfAudioNode),getNativeContext=createGetNativeContext(CONTEXT_STORE),nativeOfflineAudioContextConstructor=createNativeOfflineAudioContextConstructor(window$1),isNativeOfflineAudioContext=createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor),audioParamAudioNodeStore=new WeakMap,eventTargetConstructor=createEventTargetConstructor(wrapEventListener),nativeAudioContextConstructor=createNativeAudioContextConstructor(window$1),isNativeAudioContext=createIsNativeAudioContext(nativeAudioContextConstructor),isNativeAudioNode=createIsNativeAudioNode(window$1),isNativeAudioParam=createIsNativeAudioParam(window$1),nativeAudioWorkletNodeConstructor=createNativeAudioWorkletNodeConstructor(window$1),audioNodeConstructor=createAudioNodeConstructor(createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE),createAddConnectionToAudioNode(addActiveInputConnectionToAudioNode,addPassiveInputConnectionToAudioNode,connectNativeAudioNodeToNativeAudioNode,deleteActiveInputConnectionToAudioNode,disconnectNativeAudioNodeFromNativeAudioNode,getAudioNodeConnections,getAudioNodeTailTime,getEventListenersOfAudioNode,getNativeAudioNode,insertElementInSet,isActiveAudioNode,isPartOfACycle,isPassiveAudioNode),cacheTestResult,createIncrementCycleCounterFactory(CYCLE_COUNTERS,disconnectNativeAudioNodeFromNativeAudioNode,getAudioNodeConnections,getNativeAudioNode,getNativeAudioParam,isActiveAudioNode),createIndexSizeError,createInvalidAccessError,createNotSupportedError,createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode,CYCLE_COUNTERS,getAudioNodeConnections,getNativeAudioNode,getNativeAudioParam,getNativeContext,isActiveAudioNode,isNativeOfflineAudioContext),createDetectCycles(audioParamAudioNodeStore,getAudioNodeConnections,getValueForKey),eventTargetConstructor,getNativeContext,isNativeAudioContext,isNativeAudioNode,isNativeAudioParam,isNativeOfflineAudioContext,nativeAudioWorkletNodeConstructor),analyserNodeConstructor=createAnalyserNodeConstructor(audioNodeConstructor,createAnalyserNodeRenderer,createIndexSizeError,createNativeAnalyserNode,getNativeContext,isNativeOfflineAudioContext),audioBufferStore=new WeakSet,nativeAudioBufferConstructor=createNativeAudioBufferConstructor(window$1),convertNumberToUnsignedLong=createConvertNumberToUnsignedLong(new Uint32Array(1)),wrapAudioBufferCopyChannelMethods=createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong,createIndexSizeError),wrapAudioBufferCopyChannelMethodsOutOfBounds=createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong),audioBufferConstructor=createAudioBufferConstructor(audioBufferStore,cacheTestResult,createNotSupportedError,nativeAudioBufferConstructor,nativeOfflineAudioContextConstructor,createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor),wrapAudioBufferCopyChannelMethods,wrapAudioBufferCopyChannelMethodsOutOfBounds),addSilentConnection=createAddSilentConnection(createNativeGainNode),renderInputsOfAudioParam=createRenderInputsOfAudioParam(getAudioNodeRenderer,getAudioParamConnections,isPartOfACycle),connectAudioParam=createConnectAudioParam(renderInputsOfAudioParam),createNativeAudioBufferSourceNode=createNativeAudioBufferSourceNodeFactory(addSilentConnection,cacheTestResult,testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport,testAudioBufferSourceNodeStartMethodOffsetClampingSupport,testAudioBufferSourceNodeStopMethodNullifiedBufferSupport,testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport,testAudioScheduledSourceNodeStopMethodNegativeParametersSupport,wrapAudioBufferSourceNodeStartMethodOffsetClamping,createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors),wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls),renderAutomation=createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections),renderInputsOfAudioParam),createAudioBufferSourceNodeRenderer=createAudioBufferSourceNodeRendererFactory(connectAudioParam,createNativeAudioBufferSourceNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),createAudioParam=createAudioParamFactory(createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE),audioParamAudioNodeStore,AUDIO_PARAM_STORE,createAudioParamRenderer,createCancelAndHoldAutomationEvent,createCancelScheduledValuesAutomationEvent,createExponentialRampToValueAutomationEvent,createLinearRampToValueAutomationEvent,createSetTargetAutomationEvent,createSetValueAutomationEvent,createSetValueCurveAutomationEvent,nativeAudioContextConstructor,setValueAtTimeUntilPossible),audioBufferSourceNodeConstructor=createAudioBufferSourceNodeConstructor(audioNodeConstructor,createAudioBufferSourceNodeRenderer,createAudioParam,createInvalidStateError,createNativeAudioBufferSourceNode,getNativeContext,isNativeOfflineAudioContext,wrapEventListener),audioDestinationNodeConstructor=createAudioDestinationNodeConstructor(audioNodeConstructor,createAudioDestinationNodeRenderer,createIndexSizeError,createInvalidStateError,createNativeAudioDestinationNodeFactory(createNativeGainNode,overwriteAccessors),getNativeContext,isNativeOfflineAudioContext,renderInputsOfAudioNode),createBiquadFilterNodeRenderer=createBiquadFilterNodeRendererFactory(connectAudioParam,createNativeBiquadFilterNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),setAudioNodeTailTime=createSetAudioNodeTailTime(audioNodeTailTimeStore),biquadFilterNodeConstructor=createBiquadFilterNodeConstructor(audioNodeConstructor,createAudioParam,createBiquadFilterNodeRenderer,createInvalidAccessError,createNativeBiquadFilterNode,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),monitorConnections=createMonitorConnections(insertElementInSet,isNativeAudioNode),wrapChannelMergerNode=createWrapChannelMergerNode(createInvalidStateError,monitorConnections),createNativeChannelMergerNode=createNativeChannelMergerNodeFactory(nativeAudioContextConstructor,wrapChannelMergerNode),createChannelMergerNodeRenderer=createChannelMergerNodeRendererFactory(createNativeChannelMergerNode,getNativeAudioNode,renderInputsOfAudioNode),channelMergerNodeConstructor=createChannelMergerNodeConstructor(audioNodeConstructor,createChannelMergerNodeRenderer,createNativeChannelMergerNode,getNativeContext,isNativeOfflineAudioContext),createChannelSplitterNodeRenderer=createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode,getNativeAudioNode,renderInputsOfAudioNode),channelSplitterNodeConstructor=createChannelSplitterNodeConstructor(audioNodeConstructor,createChannelSplitterNodeRenderer,createNativeChannelSplitterNode,getNativeContext,isNativeOfflineAudioContext,sanitizeChannelSplitterOptions),createNativeConstantSourceNodeFaker=createNativeConstantSourceNodeFakerFactory(addSilentConnection,createNativeAudioBufferSourceNode,createNativeGainNode,monitorConnections),createNativeConstantSourceNode=createNativeConstantSourceNodeFactory(addSilentConnection,cacheTestResult,createNativeConstantSourceNodeFaker,testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,testAudioScheduledSourceNodeStopMethodNegativeParametersSupport),createConstantSourceNodeRenderer=createConstantSourceNodeRendererFactory(connectAudioParam,createNativeConstantSourceNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),constantSourceNodeConstructor=createConstantSourceNodeConstructor(audioNodeConstructor,createAudioParam,createConstantSourceNodeRenderer,createNativeConstantSourceNode,getNativeContext,isNativeOfflineAudioContext,wrapEventListener),createNativeConvolverNode=createNativeConvolverNodeFactory(createNotSupportedError,overwriteAccessors),createConvolverNodeRenderer=createConvolverNodeRendererFactory(createNativeConvolverNode,getNativeAudioNode,renderInputsOfAudioNode),convolverNodeConstructor=createConvolverNodeConstructor(audioNodeConstructor,createConvolverNodeRenderer,createNativeConvolverNode,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),createDelayNodeRenderer=createDelayNodeRendererFactory(connectAudioParam,createNativeDelayNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),delayNodeConstructor=createDelayNodeConstructor(audioNodeConstructor,createAudioParam,createDelayNodeRenderer,createNativeDelayNode,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),createNativeDynamicsCompressorNode=createNativeDynamicsCompressorNodeFactory(createNotSupportedError),createDynamicsCompressorNodeRenderer=createDynamicsCompressorNodeRendererFactory(connectAudioParam,createNativeDynamicsCompressorNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),dynamicsCompressorNodeConstructor=createDynamicsCompressorNodeConstructor(audioNodeConstructor,createAudioParam,createDynamicsCompressorNodeRenderer,createNativeDynamicsCompressorNode,createNotSupportedError,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),createGainNodeRenderer=createGainNodeRendererFactory(connectAudioParam,createNativeGainNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),gainNodeConstructor=createGainNodeConstructor(audioNodeConstructor,createAudioParam,createGainNodeRenderer,createNativeGainNode,getNativeContext,isNativeOfflineAudioContext),createNativeIIRFilterNodeFaker=createNativeIIRFilterNodeFakerFactory(createInvalidAccessError,createInvalidStateError,createNativeScriptProcessorNode,createNotSupportedError),renderNativeOfflineAudioContext=createRenderNativeOfflineAudioContext(cacheTestResult,createNativeGainNode,createNativeScriptProcessorNode,createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode,nativeOfflineAudioContextConstructor)),createIIRFilterNodeRenderer=createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode,getNativeAudioNode,nativeOfflineAudioContextConstructor,renderInputsOfAudioNode,renderNativeOfflineAudioContext),createNativeIIRFilterNode=createNativeIIRFilterNodeFactory(createNativeIIRFilterNodeFaker),iIRFilterNodeConstructor=createIIRFilterNodeConstructor(audioNodeConstructor,createNativeIIRFilterNode,createIIRFilterNodeRenderer,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),createAudioListener=createAudioListenerFactory(createAudioParam,createNativeChannelMergerNode,createNativeConstantSourceNode,createNativeScriptProcessorNode,createNotSupportedError,getFirstSample,isNativeOfflineAudioContext,overwriteAccessors),unrenderedAudioWorkletNodeStore=new WeakMap,minimalBaseAudioContextConstructor=createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor,createAudioListener,eventTargetConstructor,isNativeOfflineAudioContext,unrenderedAudioWorkletNodeStore,wrapEventListener),createNativeOscillatorNode=createNativeOscillatorNodeFactory(addSilentConnection,cacheTestResult,testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport,testAudioScheduledSourceNodeStopMethodNegativeParametersSupport,wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls),createOscillatorNodeRenderer=createOscillatorNodeRendererFactory(connectAudioParam,createNativeOscillatorNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),oscillatorNodeConstructor=createOscillatorNodeConstructor(audioNodeConstructor,createAudioParam,createNativeOscillatorNode,createOscillatorNodeRenderer,getNativeContext,isNativeOfflineAudioContext,wrapEventListener),createConnectedNativeAudioBufferSourceNode=createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode),createNativeWaveShaperNodeFaker=createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode,createInvalidStateError,createNativeGainNode,isDCCurve,monitorConnections),createNativeWaveShaperNode=createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode,createInvalidStateError,createNativeWaveShaperNodeFaker,isDCCurve,monitorConnections,nativeAudioContextConstructor,overwriteAccessors),createNativePannerNodeFaker=createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode,createInvalidStateError,createNativeChannelMergerNode,createNativeGainNode,createNativeScriptProcessorNode,createNativeWaveShaperNode,createNotSupportedError,disconnectNativeAudioNodeFromNativeAudioNode,getFirstSample,monitorConnections),createNativePannerNode=createNativePannerNodeFactory(createNativePannerNodeFaker),createPannerNodeRenderer=createPannerNodeRendererFactory(connectAudioParam,createNativeChannelMergerNode,createNativeConstantSourceNode,createNativeGainNode,createNativePannerNode,getNativeAudioNode,nativeOfflineAudioContextConstructor,renderAutomation,renderInputsOfAudioNode,renderNativeOfflineAudioContext),pannerNodeConstructor=createPannerNodeConstructor(audioNodeConstructor,createAudioParam,createNativePannerNode,createPannerNodeRenderer,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),createNativePeriodicWave=createNativePeriodicWaveFactory(createIndexSizeError),periodicWaveConstructor=createPeriodicWaveConstructor(createNativePeriodicWave,getNativeContext,new WeakSet,sanitizePeriodicWaveOptions),nativeStereoPannerNodeFakerFactory=createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode,createNativeChannelSplitterNode,createNativeGainNode,createNativeWaveShaperNode,createNotSupportedError,monitorConnections),createNativeStereoPannerNode=createNativeStereoPannerNodeFactory(nativeStereoPannerNodeFakerFactory,createNotSupportedError),createStereoPannerNodeRenderer=createStereoPannerNodeRendererFactory(connectAudioParam,createNativeStereoPannerNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),stereoPannerNodeConstructor=createStereoPannerNodeConstructor(audioNodeConstructor,createAudioParam,createNativeStereoPannerNode,createStereoPannerNodeRenderer,getNativeContext,isNativeOfflineAudioContext),createWaveShaperNodeRenderer=createWaveShaperNodeRendererFactory(createNativeWaveShaperNode,getNativeAudioNode,renderInputsOfAudioNode),waveShaperNodeConstructor=createWaveShaperNodeConstructor(audioNodeConstructor,createInvalidStateError,createNativeWaveShaperNode,createWaveShaperNodeRenderer,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),isSecureContext=createIsSecureContext(window$1),exposeCurrentFrameAndCurrentTime=createExposeCurrentFrameAndCurrentTime(window$1),backupOfflineAudioContextStore=new WeakMap,getOrCreateBackupOfflineAudioContext=createGetOrCreateBackupOfflineAudioContext(backupOfflineAudioContextStore,nativeOfflineAudioContextConstructor),addAudioWorkletModule=isSecureContext?createAddAudioWorkletModule(cacheTestResult,createNotSupportedError,createEvaluateSource(window$1),exposeCurrentFrameAndCurrentTime,createFetchSource(createAbortError),getNativeContext,getOrCreateBackupOfflineAudioContext,isNativeOfflineAudioContext,nativeAudioWorkletNodeConstructor,new WeakMap,new WeakMap,createTestAudioWorkletProcessorPostMessageSupport(nativeAudioWorkletNodeConstructor,nativeOfflineAudioContextConstructor),window$1):void 0,isNativeContext=createIsNativeContext(isNativeAudioContext,isNativeOfflineAudioContext),decodeAudioData=createDecodeAudioData(audioBufferStore,cacheTestResult,createDataCloneError,createEncodingError,new WeakSet,getNativeContext,isNativeContext,testAudioBufferCopyChannelMethodsOutOfBoundsSupport,testPromiseSupport,wrapAudioBufferCopyChannelMethods,wrapAudioBufferCopyChannelMethodsOutOfBounds),baseAudioContextConstructor=createBaseAudioContextConstructor(addAudioWorkletModule,analyserNodeConstructor,audioBufferConstructor,audioBufferSourceNodeConstructor,biquadFilterNodeConstructor,channelMergerNodeConstructor,channelSplitterNodeConstructor,constantSourceNodeConstructor,convolverNodeConstructor,decodeAudioData,delayNodeConstructor,dynamicsCompressorNodeConstructor,gainNodeConstructor,iIRFilterNodeConstructor,minimalBaseAudioContextConstructor,oscillatorNodeConstructor,pannerNodeConstructor,periodicWaveConstructor,stereoPannerNodeConstructor,waveShaperNodeConstructor),mediaElementAudioSourceNodeConstructor=createMediaElementAudioSourceNodeConstructor(audioNodeConstructor,createNativeMediaElementAudioSourceNode,getNativeContext,isNativeOfflineAudioContext),mediaStreamAudioDestinationNodeConstructor=createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor,createNativeMediaStreamAudioDestinationNode,getNativeContext,isNativeOfflineAudioContext),mediaStreamAudioSourceNodeConstructor=createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor,createNativeMediaStreamAudioSourceNode,getNativeContext,isNativeOfflineAudioContext),createNativeMediaStreamTrackAudioSourceNode=createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError,isNativeOfflineAudioContext),mediaStreamTrackAudioSourceNodeConstructor=createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor,createNativeMediaStreamTrackAudioSourceNode,getNativeContext),audioContextConstructor=createAudioContextConstructor(baseAudioContextConstructor,createInvalidStateError,createNotSupportedError,createUnknownError,mediaElementAudioSourceNodeConstructor,mediaStreamAudioDestinationNodeConstructor,mediaStreamAudioSourceNodeConstructor,mediaStreamTrackAudioSourceNodeConstructor,nativeAudioContextConstructor),getUnrenderedAudioWorkletNodes=createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore),addUnrenderedAudioWorkletNode=createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes),connectMultipleOutputs=createConnectMultipleOutputs(createIndexSizeError),deleteUnrenderedAudioWorkletNode=createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes),disconnectMultipleOutputs=createDisconnectMultipleOutputs(createIndexSizeError),activeAudioWorkletNodeInputsStore=new WeakMap,getActiveAudioWorkletNodeInputs=createGetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore,getValueForKey),createNativeAudioWorkletNodeFaker=createNativeAudioWorkletNodeFakerFactory(connectMultipleOutputs,createIndexSizeError,createInvalidStateError,createNativeChannelMergerNode,createNativeChannelSplitterNode,createNativeConstantSourceNode,createNativeGainNode,createNativeScriptProcessorNode,createNotSupportedError,disconnectMultipleOutputs,exposeCurrentFrameAndCurrentTime,getActiveAudioWorkletNodeInputs,monitorConnections),createNativeAudioWorkletNode=createNativeAudioWorkletNodeFactory(createInvalidStateError,createNativeAudioWorkletNodeFaker,createNativeGainNode,createNotSupportedError,monitorConnections),createAudioWorkletNodeRenderer=createAudioWorkletNodeRendererFactory(connectAudioParam,connectMultipleOutputs,createNativeAudioBufferSourceNode,createNativeChannelMergerNode,createNativeChannelSplitterNode,createNativeConstantSourceNode,createNativeGainNode,deleteUnrenderedAudioWorkletNode,disconnectMultipleOutputs,exposeCurrentFrameAndCurrentTime,getNativeAudioNode,nativeAudioWorkletNodeConstructor,nativeOfflineAudioContextConstructor,renderAutomation,renderInputsOfAudioNode,renderNativeOfflineAudioContext),getBackupOfflineAudioContext=createGetBackupOfflineAudioContext(backupOfflineAudioContextStore),setActiveAudioWorkletNodeInputs=createSetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore),audioWorkletNodeConstructor=isSecureContext?createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode,audioNodeConstructor,createAudioParam,createAudioWorkletNodeRenderer,createNativeAudioWorkletNode,getAudioNodeConnections,getBackupOfflineAudioContext,getNativeContext,isNativeOfflineAudioContext,nativeAudioWorkletNodeConstructor,sanitizeAudioWorkletNodeOptions,setActiveAudioWorkletNodeInputs,testAudioWorkletNodeOptionsClonability,wrapEventListener):void 0,createNativeOfflineAudioContext=createCreateNativeOfflineAudioContext(createNotSupportedError,nativeOfflineAudioContextConstructor),startRendering=createStartRendering(audioBufferStore,cacheTestResult,getAudioNodeRenderer,getUnrenderedAudioWorkletNodes,renderNativeOfflineAudioContext,testAudioBufferCopyChannelMethodsOutOfBoundsSupport,wrapAudioBufferCopyChannelMethods,wrapAudioBufferCopyChannelMethodsOutOfBounds),offlineAudioContextConstructor=createOfflineAudioContextConstructor(baseAudioContextConstructor,cacheTestResult,createInvalidStateError,createNativeOfflineAudioContext,startRendering),isAnyAudioContext=createIsAnyAudioContext(CONTEXT_STORE,isNativeAudioContext),isAnyAudioNode=createIsAnyAudioNode(AUDIO_NODE_STORE,isNativeAudioNode),isAnyAudioParam=createIsAnyAudioParam(AUDIO_PARAM_STORE,isNativeAudioParam),isAnyOfflineAudioContext=createIsAnyOfflineAudioContext(CONTEXT_STORE,isNativeOfflineAudioContext),isSupported=()=>createIsSupportedPromise(cacheTestResult,createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor),createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor),createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor),createTestAudioContextOptionsSupport(nativeAudioContextConstructor),createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor),createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor,nativeOfflineAudioContextConstructor),createTestChannelMergerNodeChannelCountSupport(nativeOfflineAudioContextConstructor),createTestConstantSourceNodeAccurateSchedulingSupport(nativeOfflineAudioContextConstructor),createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor),createTestConvolverNodeChannelCountSupport(nativeOfflineAudioContextConstructor),testDomExceptionConstructorSupport,createTestIsSecureContextSupport(window$1),createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor),createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor),testTransferablesSupport);function assert(n,e){if(!n)throw new Error(e)}function assertRange(n,e,t=1/0){if(!(e<=n&&n<=t))throw new RangeError(`Value must be within [${e}, ${t}], got: ${n}`)}function assertContextRunning(n){!n.isOffline&&n.state!=="running"&&warn('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let defaultLogger=console;function setLogger(n){defaultLogger=n}function log(...n){defaultLogger.log(...n)}function warn(...n){defaultLogger.warn(...n)}var Debug=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",assert,assertRange,assertContextRunning,setLogger,log,warn});function isUndef(n){return typeof n=="undefined"}function isDefined(n){return!isUndef(n)}function isFunction(n){return typeof n=="function"}function isNumber(n){return typeof n=="number"}function isObject(n){return Object.prototype.toString.call(n)==="[object Object]"&&n.constructor===Object}function isBoolean(n){return typeof n=="boolean"}function isArray(n){return Array.isArray(n)}function isString(n){return typeof n=="string"}function isNote(n){return isString(n)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(n)}function createAudioContext(n){return new audioContextConstructor(n)}function createOfflineAudioContext(n,e,t){return new offlineAudioContextConstructor(n,e,t)}const theWindow=typeof self=="object"?self:null,hasAudioContext=theWindow&&(theWindow.hasOwnProperty("AudioContext")||theWindow.hasOwnProperty("webkitAudioContext"));function createAudioWorkletNode(n,e,t){return assert(isDefined(audioWorkletNodeConstructor),"This node only works in a secure context (https or localhost)"),new audioWorkletNodeConstructor(n,e,t)}/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */function __decorate(n,e,t,s){var r=arguments.length,i=r<3?e:s===null?s=Object.getOwnPropertyDescriptor(e,t):s,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(n,e,t,s);else for(var c=n.length-1;c>=0;c--)(a=n[c])&&(i=(r<3?a(i):r>3?a(e,t,i):a(e,t))||i);return r>3&&i&&Object.defineProperty(e,t,i),i}function __awaiter$1(n,e,t,s){function r(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function c(h){try{l(s.next(h))}catch(d){a(d)}}function u(h){try{l(s.throw(h))}catch(d){a(d)}}function l(h){h.done?i(h.value):r(h.value).then(c,u)}l((s=s.apply(n,e||[])).next())})}class Ticker{constructor(e,t,s){this._callback=e,this._type=t,this._updateInterval=s,this._createClock()}_createWorker(){const e=new Blob([`
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval*1e3).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`],{type:"text/javascript"}),t=URL.createObjectURL(e),s=new Worker(t);s.onmessage=this._callback.bind(this),this._worker=s}_createTimeout(){this._timeout=setTimeout(()=>{this._createTimeout(),this._callback()},this._updateInterval*1e3)}_createClock(){if(this._type==="worker")try{this._createWorker()}catch{this._type="timeout",this._createClock()}else this._type==="timeout"&&this._createTimeout()}_disposeClock(){this._timeout&&(clearTimeout(this._timeout),this._timeout=0),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(e){this._updateInterval=Math.max(e,128/44100),this._type==="worker"&&this._worker.postMessage(Math.max(e*1e3,1))}get type(){return this._type}set type(e){this._disposeClock(),this._type=e,this._createClock()}dispose(){this._disposeClock()}}function isAudioParam(n){return isAnyAudioParam(n)}function isAudioNode(n){return isAnyAudioNode(n)}function isOfflineAudioContext(n){return isAnyOfflineAudioContext(n)}function isAudioContext(n){return isAnyAudioContext(n)}function isAudioBuffer(n){return n instanceof AudioBuffer}function noCopy(n,e){return n==="value"||isAudioParam(e)||isAudioNode(e)||isAudioBuffer(e)}function deepMerge(n,...e){if(!e.length)return n;const t=e.shift();if(isObject(n)&&isObject(t))for(const s in t)noCopy(s,t[s])?n[s]=t[s]:isObject(t[s])?(n[s]||Object.assign(n,{[s]:{}}),deepMerge(n[s],t[s])):Object.assign(n,{[s]:t[s]});return deepMerge(n,...e)}function deepEquals(n,e){return n.length===e.length&&n.every((t,s)=>e[s]===t)}function optionsFromArguments(n,e,t=[],s){const r={},i=Array.from(e);if(isObject(i[0])&&s&&!Reflect.has(i[0],s)&&(Object.keys(i[0]).some(c=>Reflect.has(n,c))||(deepMerge(r,{[s]:i[0]}),t.splice(t.indexOf(s),1),i.shift())),i.length===1&&isObject(i[0]))deepMerge(r,i[0]);else for(let a=0;a<t.length;a++)isDefined(i[a])&&(r[t[a]]=i[a]);return deepMerge(n,r)}function getDefaultsFromInstance(n){return n.constructor.getDefaults()}function defaultArg(n,e){return isUndef(n)?e:n}function omitFromObject(n,e){return e.forEach(t=>{Reflect.has(n,t)&&delete n[t]}),n}/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2019 Yotam Mann
 */class Tone$1{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...e){(this.debug||theWindow&&this.toString()===theWindow.TONE_DEBUG_CLASS)&&log(this,...e)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}}Tone$1.version=version;const EPSILON=1e-6;function GT(n,e){return n>e+EPSILON}function GTE(n,e){return GT(n,e)||EQ(n,e)}function LT(n,e){return n+EPSILON<e}function EQ(n,e){return Math.abs(n-e)<EPSILON}function clamp(n,e,t){return Math.max(Math.min(n,t),e)}class Timeline extends Tone$1{constructor(){super();this.name="Timeline",this._timeline=[];const e=optionsFromArguments(Timeline.getDefaults(),arguments,["memory"]);this.memory=e.memory,this.increasing=e.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(e){if(assert(Reflect.has(e,"time"),"Timeline: events must have a time attribute"),e.time=e.time.valueOf(),this.increasing&&this.length){const t=this._timeline[this.length-1];assert(GTE(e.time,t.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(e)}else{const t=this._search(e.time);this._timeline.splice(t+1,0,e)}if(this.length>this.memory){const t=this.length-this.memory;this._timeline.splice(0,t)}return this}remove(e){const t=this._timeline.indexOf(e);return t!==-1&&this._timeline.splice(t,1),this}get(e,t="time"){const s=this._search(e,t);return s!==-1?this._timeline[s]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(e,t="time"){const s=this._search(e,t);return s+1<this._timeline.length?this._timeline[s+1]:null}getBefore(e){const t=this._timeline.length;if(t>0&&this._timeline[t-1].time<e)return this._timeline[t-1];const s=this._search(e);return s-1>=0?this._timeline[s-1]:null}cancel(e){if(this._timeline.length>1){let t=this._search(e);if(t>=0)if(EQ(this._timeline[t].time,e)){for(let s=t;s>=0&&EQ(this._timeline[s].time,e);s--)t=s;this._timeline=this._timeline.slice(0,t)}else this._timeline=this._timeline.slice(0,t+1);else this._timeline=[]}else this._timeline.length===1&&GTE(this._timeline[0].time,e)&&(this._timeline=[]);return this}cancelBefore(e){const t=this._search(e);return t>=0&&(this._timeline=this._timeline.slice(t+1)),this}previousEvent(e){const t=this._timeline.indexOf(e);return t>0?this._timeline[t-1]:null}_search(e,t="time"){if(this._timeline.length===0)return-1;let s=0;const r=this._timeline.length;let i=r;if(r>0&&this._timeline[r-1][t]<=e)return r-1;for(;s<i;){let a=Math.floor(s+(i-s)/2);const c=this._timeline[a],u=this._timeline[a+1];if(EQ(c[t],e)){for(let l=a;l<this._timeline.length;l++){const h=this._timeline[l];if(EQ(h[t],e))a=l;else break}return a}else{if(LT(c[t],e)&&GT(u[t],e))return a;GT(c[t],e)?i=a:s=a+1}}return-1}_iterate(e,t=0,s=this._timeline.length-1){this._timeline.slice(t,s+1).forEach(e)}forEach(e){return this._iterate(e),this}forEachBefore(e,t){const s=this._search(e);return s!==-1&&this._iterate(t,0,s),this}forEachAfter(e,t){const s=this._search(e);return this._iterate(t,s+1),this}forEachBetween(e,t,s){let r=this._search(e),i=this._search(t);return r!==-1&&i!==-1?(this._timeline[r].time!==e&&(r+=1),this._timeline[i].time===t&&(i-=1),this._iterate(s,r,i)):r===-1&&this._iterate(s,0,i),this}forEachFrom(e,t){let s=this._search(e);for(;s>=0&&this._timeline[s].time>=e;)s--;return this._iterate(t,s+1),this}forEachAtTime(e,t){const s=this._search(e);if(s!==-1&&EQ(this._timeline[s].time,e)){let r=s;for(let i=s;i>=0&&EQ(this._timeline[i].time,e);i--)r=i;this._iterate(i=>{t(i)},r,s)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const notifyNewContext=[];function onContextInit(n){notifyNewContext.push(n)}function initializeContext(n){notifyNewContext.forEach(e=>e(n))}const notifyCloseContext=[];function onContextClose(n){notifyCloseContext.push(n)}function closeContext(n){notifyCloseContext.forEach(e=>e(n))}class Emitter extends Tone$1{constructor(){super(...arguments);this.name="Emitter"}on(e,t){return e.split(/\W+/).forEach(r=>{isUndef(this._events)&&(this._events={}),this._events.hasOwnProperty(r)||(this._events[r]=[]),this._events[r].push(t)}),this}once(e,t){const s=(...r)=>{t(...r),this.off(e,s)};return this.on(e,s),this}off(e,t){return e.split(/\W+/).forEach(r=>{if(isUndef(this._events)&&(this._events={}),this._events.hasOwnProperty(e))if(isUndef(t))this._events[e]=[];else{const i=this._events[e];for(let a=i.length-1;a>=0;a--)i[a]===t&&i.splice(a,1)}}),this}emit(e,...t){if(this._events&&this._events.hasOwnProperty(e)){const s=this._events[e].slice(0);for(let r=0,i=s.length;r<i;r++)s[r].apply(this,t)}return this}static mixin(e){["on","once","off","emit"].forEach(t=>{const s=Object.getOwnPropertyDescriptor(Emitter.prototype,t);Object.defineProperty(e.prototype,t,s)})}dispose(){return super.dispose(),this._events=void 0,this}}class BaseContext extends Emitter{constructor(){super(...arguments);this.isOffline=!1}toJSON(){return{}}}class Context extends BaseContext{constructor(){super();this.name="Context",this._constants=new Map,this._timeouts=new Timeline,this._timeoutIds=0,this._initialized=!1,this.isOffline=!1,this._workletModules=new Map;const e=optionsFromArguments(Context.getDefaults(),arguments,["context"]);e.context?this._context=e.context:this._context=createAudioContext({latencyHint:e.latencyHint}),this._ticker=new Ticker(this.emit.bind(this,"tick"),e.clockSource,e.updateInterval),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this._setLatencyHint(e.latencyHint),this.lookAhead=e.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){return this._initialized||(initializeContext(this),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(e,t,s){return this._context.createBuffer(e,t,s)}createChannelMerger(e){return this._context.createChannelMerger(e)}createChannelSplitter(e){return this._context.createChannelSplitter(e)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(e){return this._context.createDelay(e)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(e,t){return this._context.createIIRFilter(e,t)}createPanner(){return this._context.createPanner()}createPeriodicWave(e,t,s){return this._context.createPeriodicWave(e,t,s)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(e){return assert(isAudioContext(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(e)}createMediaElementSource(e){return assert(isAudioContext(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(e)}createMediaStreamDestination(){return assert(isAudioContext(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(e){return this._context.decodeAudioData(e)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(e){assert(!this._initialized,"The listener cannot be set after initialization."),this._listener=e}get transport(){return this.initialize(),this._transport}set transport(e){assert(!this._initialized,"The transport cannot be set after initialization."),this._transport=e}get draw(){return this.initialize(),this._draw}set draw(e){assert(!this._initialized,"Draw cannot be set after initialization."),this._draw=e}get destination(){return this.initialize(),this._destination}set destination(e){assert(!this._initialized,"The destination cannot be set after initialization."),this._destination=e}createAudioWorkletNode(e,t){return createAudioWorkletNode(this.rawContext,e,t)}addAudioWorkletModule(e,t){return __awaiter$1(this,void 0,void 0,function*(){assert(isDefined(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletModules.has(t)||this._workletModules.set(t,this.rawContext.audioWorklet.addModule(e)),yield this._workletModules.get(t)})}workletsAreReady(){return __awaiter$1(this,void 0,void 0,function*(){const e=[];this._workletModules.forEach(t=>e.push(t)),yield Promise.all(e)})}get updateInterval(){return this._ticker.updateInterval}set updateInterval(e){this._ticker.updateInterval=e}get clockSource(){return this._ticker.type}set clockSource(e){this._ticker.type=e}get latencyHint(){return this._latencyHint}_setLatencyHint(e){let t=0;if(this._latencyHint=e,isString(e))switch(e){case"interactive":t=.1;break;case"playback":t=.5;break;case"balanced":t=.25;break}this.lookAhead=t,this.updateInterval=t/2}get rawContext(){return this._context}now(){return this._context.currentTime+this.lookAhead}immediate(){return this._context.currentTime}resume(){return isAudioContext(this._context)?this._context.resume():Promise.resolve()}close(){return __awaiter$1(this,void 0,void 0,function*(){isAudioContext(this._context)&&(yield this._context.close()),this._initialized&&closeContext(this)})}getConstant(e){if(this._constants.has(e))return this._constants.get(e);{const t=this._context.createBuffer(1,128,this._context.sampleRate),s=t.getChannelData(0);for(let i=0;i<s.length;i++)s[i]=e;const r=this._context.createBufferSource();return r.channelCount=1,r.channelCountMode="explicit",r.buffer=t,r.loop=!0,r.start(0),this._constants.set(e,r),r}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map(e=>this._constants[e].disconnect()),this}_timeoutLoop(){const e=this.now();let t=this._timeouts.peek();for(;this._timeouts.length&&t&&t.time<=e;)t.callback(),this._timeouts.shift(),t=this._timeouts.peek()}setTimeout(e,t){this._timeoutIds++;const s=this.now();return this._timeouts.add({callback:e,id:this._timeoutIds,time:s+t}),this._timeoutIds}clearTimeout(e){return this._timeouts.forEach(t=>{t.id===e&&this._timeouts.remove(t)}),this}clearInterval(e){return this.clearTimeout(e)}setInterval(e,t){const s=++this._timeoutIds,r=()=>{const i=this.now();this._timeouts.add({callback:()=>{e(),r()},id:s,time:i+t})};return r(),s}}class DummyContext extends BaseContext{constructor(){super(...arguments);this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(e,t,s){return{}}createChannelMerger(e){return{}}createChannelSplitter(e){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(e){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(e,t){return{}}createPanner(){return{}}createPeriodicWave(e,t,s){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(e){return{}}createMediaElementSource(e){return{}}createMediaStreamDestination(){return{}}decodeAudioData(e){return Promise.resolve({})}createAudioWorkletNode(e,t){return{}}get rawContext(){return{}}addAudioWorkletModule(e,t){return __awaiter$1(this,void 0,void 0,function*(){return Promise.resolve()})}resume(){return Promise.resolve()}setTimeout(e,t){return 0}clearTimeout(e){return this}setInterval(e,t){return 0}clearInterval(e){return this}getConstant(e){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(e){}get destination(){return{}}set destination(e){}now(){return 0}immediate(){return 0}}function readOnly(n,e){isArray(e)?e.forEach(t=>readOnly(n,t)):Object.defineProperty(n,e,{enumerable:!0,writable:!1})}function writable(n,e){isArray(e)?e.forEach(t=>writable(n,t)):Object.defineProperty(n,e,{writable:!0})}const noOp=()=>{};class ToneAudioBuffer extends Tone$1{constructor(){super();this.name="ToneAudioBuffer",this.onload=noOp;const e=optionsFromArguments(ToneAudioBuffer.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=e.reverse,this.onload=e.onload,e.url&&isAudioBuffer(e.url)||e.url instanceof ToneAudioBuffer?this.set(e.url):isString(e.url)&&this.load(e.url).catch(e.onerror)}static getDefaults(){return{onerror:noOp,onload:noOp,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:getContext().sampleRate}set(e){return e instanceof ToneAudioBuffer?e.loaded?this._buffer=e.get():e.onload=()=>{this.set(e),this.onload(this)}:this._buffer=e,this._reversed&&this._reverse(),this}get(){return this._buffer}load(e){return __awaiter$1(this,void 0,void 0,function*(){const t=ToneAudioBuffer.load(e).then(s=>{this.set(s),this.onload(this)});ToneAudioBuffer.downloads.push(t);try{yield t}finally{const s=ToneAudioBuffer.downloads.indexOf(t);ToneAudioBuffer.downloads.splice(s,1)}return this})}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(e){const t=isArray(e)&&e[0].length>0,s=t?e.length:1,r=t?e[0].length:e.length,i=getContext(),a=i.createBuffer(s,r,i.sampleRate),c=!t&&s===1?[e]:e;for(let u=0;u<s;u++)a.copyToChannel(c[u],u);return this._buffer=a,this}toMono(e){if(isNumber(e))this.fromArray(this.toArray(e));else{let t=new Float32Array(this.length);const s=this.numberOfChannels;for(let r=0;r<s;r++){const i=this.toArray(r);for(let a=0;a<i.length;a++)t[a]+=i[a]}t=t.map(r=>r/s),this.fromArray(t)}return this}toArray(e){if(isNumber(e))return this.getChannelData(e);if(this.numberOfChannels===1)return this.toArray(0);{const t=[];for(let s=0;s<this.numberOfChannels;s++)t[s]=this.getChannelData(s);return t}}getChannelData(e){return this._buffer?this._buffer.getChannelData(e):new Float32Array(0)}slice(e,t=this.duration){const s=Math.floor(e*this.sampleRate),r=Math.floor(t*this.sampleRate);assert(s<r,"The start time must be less than the end time");const i=r-s,a=getContext().createBuffer(this.numberOfChannels,i,this.sampleRate);for(let c=0;c<this.numberOfChannels;c++)a.copyToChannel(this.getChannelData(c).subarray(s,r),c);return new ToneAudioBuffer(a)}_reverse(){if(this.loaded)for(let e=0;e<this.numberOfChannels;e++)this.getChannelData(e).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(e){this._reversed!==e&&(this._reversed=e,this._reverse())}static fromArray(e){return new ToneAudioBuffer().fromArray(e)}static fromUrl(e){return __awaiter$1(this,void 0,void 0,function*(){return yield new ToneAudioBuffer().load(e)})}static load(e){return __awaiter$1(this,void 0,void 0,function*(){const t=e.match(/\[([^\]\[]+\|.+)\]$/);if(t){const c=t[1].split("|");let u=c[0];for(const l of c)if(ToneAudioBuffer.supportsType(l)){u=l;break}e=e.replace(t[0],u)}const s=ToneAudioBuffer.baseUrl===""||ToneAudioBuffer.baseUrl.endsWith("/")?ToneAudioBuffer.baseUrl:ToneAudioBuffer.baseUrl+"/",r=yield fetch(s+e);if(!r.ok)throw new Error(`could not load url: ${e}`);const i=yield r.arrayBuffer();return yield getContext().decodeAudioData(i)})}static supportsType(e){const t=e.split("."),s=t[t.length-1];return document.createElement("audio").canPlayType("audio/"+s)!==""}static loaded(){return __awaiter$1(this,void 0,void 0,function*(){for(yield Promise.resolve();ToneAudioBuffer.downloads.length;)yield ToneAudioBuffer.downloads[0]})}}ToneAudioBuffer.baseUrl="";ToneAudioBuffer.downloads=[];class OfflineContext extends Context{constructor(){super({clockSource:"offline",context:isOfflineAudioContext(arguments[0])?arguments[0]:createOfflineAudioContext(arguments[0],arguments[1]*arguments[2],arguments[2]),lookAhead:0,updateInterval:isOfflineAudioContext(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]});this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=isOfflineAudioContext(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(e){return __awaiter$1(this,void 0,void 0,function*(){let t=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,t++;const s=Math.floor(this.sampleRate/128);e&&t%s==0&&(yield new Promise(r=>setTimeout(r,1)))}})}render(e=!0){return __awaiter$1(this,void 0,void 0,function*(){yield this.workletsAreReady(),yield this._renderClock(e);const t=yield this._context.startRendering();return new ToneAudioBuffer(t)})}close(){return Promise.resolve()}}const dummyContext=new DummyContext;let globalContext=dummyContext;function getContext(){return globalContext===dummyContext&&hasAudioContext&&setContext(new Context),globalContext}function setContext(n){isAudioContext(n)?globalContext=new Context(n):isOfflineAudioContext(n)?globalContext=new OfflineContext(n):globalContext=n}function start(){return globalContext.resume()}if(theWindow&&!theWindow.TONE_SILENCE_LOGGING){const e=` * Tone.js v${version} * `;console.log(`%c${e}`,"background: #000; color: #fff")}function dbToGain(n){return Math.pow(10,n/20)}function gainToDb(n){return 20*(Math.log(n)/Math.LN10)}function intervalToFrequencyRatio(n){return Math.pow(2,n/12)}let A4=440;function getA4(){return A4}function setA4(n){A4=n}function ftom(n){return Math.round(ftomf(n))}function ftomf(n){return 69+12*Math.log2(n/A4)}function mtof(n){return A4*Math.pow(2,(n-69)/12)}class TimeBaseClass extends Tone$1{constructor(e,t,s){super();this.defaultUnits="s",this._val=t,this._units=s,this.context=e,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:e=>this._frequencyToUnits(parseFloat(e)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:e=>this._ticksToUnits(parseInt(e,10)),regexp:/^(\d+)i$/i},m:{method:e=>this._beatsToUnits(parseInt(e,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(e,t)=>{const s=parseInt(e,10),r=t==="."?1.5:1;return s===1?this._beatsToUnits(this._getTimeSignature())*r:this._beatsToUnits(4/s)*r},regexp:/^(\d+)n(\.?)$/i},number:{method:e=>this._expressions[this.defaultUnits].method.call(this,e),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:e=>this._secondsToUnits(parseFloat(e)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:e=>parseInt(e,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:e=>{const t=parseInt(e,10);return this._beatsToUnits(8/(Math.floor(t)*3))},regexp:/^(\d+)t$/i},tr:{method:(e,t,s)=>{let r=0;return e&&e!=="0"&&(r+=this._beatsToUnits(this._getTimeSignature()*parseFloat(e))),t&&t!=="0"&&(r+=this._beatsToUnits(parseFloat(t))),s&&s!=="0"&&(r+=this._beatsToUnits(parseFloat(s)/4)),r},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof TimeBaseClass&&this.fromType(this._val),isUndef(this._val))return this._noArg();if(isString(this._val)&&isUndef(this._units)){for(const e in this._expressions)if(this._expressions[e].regexp.test(this._val.trim())){this._units=e;break}}else if(isObject(this._val)){let e=0;for(const t in this._val)if(isDefined(this._val[t])){const s=this._val[t];e+=new this.constructor(this.context,t).valueOf()*s}return e}if(isDefined(this._units)){const e=this._expressions[this._units],t=this._val.toString().trim().match(e.regexp);return t?e.method.apply(this,t.slice(1)):e.method.call(this,this._val)}else return isString(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(e){return 1/e}_beatsToUnits(e){return 60/this._getBpm()*e}_secondsToUnits(e){return e}_ticksToUnits(e){return e*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(e){switch(this._units=void 0,this.defaultUnits){case"s":this._val=e.toSeconds();break;case"i":this._val=e.toTicks();break;case"hz":this._val=e.toFrequency();break;case"midi":this._val=e.toMidi();break}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return this.toSeconds()*1e3}}class TimeClass extends TimeBaseClass{constructor(){super(...arguments);this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:e=>this._now()+new this.constructor(this.context,e).valueOf(),regexp:/^\+(.+)/},quantize:{method:e=>{const t=new TimeClass(this.context,e).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(t))},regexp:/^@(.+)/}})}quantize(e,t=1){const s=new this.constructor(this.context,e).valueOf(),r=this.valueOf(),c=Math.round(r/s)*s-r;return r+c*t}toNotation(){const e=this.toSeconds(),t=["1m"];for(let i=1;i<9;i++){const a=Math.pow(2,i);t.push(a+"n."),t.push(a+"n"),t.push(a+"t")}t.push("0");let s=t[0],r=new TimeClass(this.context,t[0]).toSeconds();return t.forEach(i=>{const a=new TimeClass(this.context,i).toSeconds();Math.abs(a-e)<Math.abs(r-e)&&(s=i,r=a)}),s}toBarsBeatsSixteenths(){const e=this._beatsToUnits(1);let t=this.valueOf()/e;t=parseFloat(t.toFixed(4));const s=Math.floor(t/this._getTimeSignature());let r=t%1*4;t=Math.floor(t)%this._getTimeSignature();const i=r.toString();return i.length>3&&(r=parseFloat(parseFloat(i).toFixed(3))),[s,t,r].join(":")}toTicks(){const e=this._beatsToUnits(1),t=this.valueOf()/e;return Math.round(t*this._getPPQ())}toSeconds(){return this.valueOf()}toMidi(){return ftom(this.toFrequency())}_now(){return this.context.now()}}function Time(n,e){return new TimeClass(getContext(),n,e)}class FrequencyClass extends TimeClass{constructor(){super(...arguments);this.name="Frequency",this.defaultUnits="hz"}static get A4(){return getA4()}static set A4(e){setA4(e)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(e){return this.defaultUnits==="midi"?e:FrequencyClass.mtof(e)}},note:{regexp:/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,method(e,t){const r=noteToScaleIndex[e.toLowerCase()]+(parseInt(t,10)+1)*12;return this.defaultUnits==="midi"?r:FrequencyClass.mtof(r)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(e,t,s){let r=1;return e&&e!=="0"&&(r*=this._beatsToUnits(this._getTimeSignature()*parseFloat(e))),t&&t!=="0"&&(r*=this._beatsToUnits(parseFloat(t))),s&&s!=="0"&&(r*=this._beatsToUnits(parseFloat(s)/4)),r}}})}transpose(e){return new FrequencyClass(this.context,this.valueOf()*intervalToFrequencyRatio(e))}harmonize(e){return e.map(t=>this.transpose(t))}toMidi(){return ftom(this.valueOf())}toNote(){const e=this.toFrequency(),t=Math.log2(e/FrequencyClass.A4);let s=Math.round(12*t)+57;const r=Math.floor(s/12);return r<0&&(s+=-12*r),scaleIndexToNote[s%12]+r.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const e=this._beatsToUnits(1),t=this.valueOf()/e;return Math.floor(t*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(e){return e}_ticksToUnits(e){return 1/(e*60/(this._getBpm()*this._getPPQ()))}_beatsToUnits(e){return 1/super._beatsToUnits(e)}_secondsToUnits(e){return 1/e}static mtof(e){return mtof(e)}static ftom(e){return ftom(e)}}const noteToScaleIndex={cbb:-2,cb:-1,c:0,"c#":1,cx:2,dbb:0,db:1,d:2,"d#":3,dx:4,ebb:2,eb:3,e:4,"e#":5,ex:6,fbb:3,fb:4,f:5,"f#":6,fx:7,gbb:5,gb:6,g:7,"g#":8,gx:9,abb:7,ab:8,a:9,"a#":10,ax:11,bbb:9,bb:10,b:11,"b#":12,bx:13},scaleIndexToNote=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];function Frequency(n,e){return new FrequencyClass(getContext(),n,e)}class TransportTimeClass extends TimeClass{constructor(){super(...arguments);this.name="TransportTime"}_now(){return this.context.transport.seconds}}function TransportTime(n,e){return new TransportTimeClass(getContext(),n,e)}class ToneWithContext extends Tone$1{constructor(){super();const e=optionsFromArguments(ToneWithContext.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=e.context}static getDefaults(){return{context:getContext()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(e){return new TimeClass(this.context,e).toSeconds()}toFrequency(e){return new FrequencyClass(this.context,e).toFrequency()}toTicks(e){return new TransportTimeClass(this.context,e).toTicks()}_getPartialProperties(e){const t=this.get();return Object.keys(t).forEach(s=>{isUndef(e[s])&&delete t[s]}),t}get(){const e=getDefaultsFromInstance(this);return Object.keys(e).forEach(t=>{if(Reflect.has(this,t)){const s=this[t];isDefined(s)&&isDefined(s.value)&&isDefined(s.setValueAtTime)?e[t]=s.value:s instanceof ToneWithContext?e[t]=s._getPartialProperties(e[t]):isArray(s)||isNumber(s)||isString(s)||isBoolean(s)?e[t]=s:delete e[t]}}),e}set(e){return Object.keys(e).forEach(t=>{Reflect.has(this,t)&&isDefined(this[t])&&(this[t]&&isDefined(this[t].value)&&isDefined(this[t].setValueAtTime)?this[t].value!==e[t]&&(this[t].value=e[t]):this[t]instanceof ToneWithContext?this[t].set(e[t]):this[t]=e[t])}),this}}class StateTimeline extends Timeline{constructor(e="stopped"){super();this.name="StateTimeline",this._initial=e,this.setStateAtTime(this._initial,0)}getValueAtTime(e){const t=this.get(e);return t!==null?t.state:this._initial}setStateAtTime(e,t,s){return assertRange(t,0),this.add(Object.assign({},s,{state:e,time:t})),this}getLastState(e,t){const s=this._search(t);for(let r=s;r>=0;r--){const i=this._timeline[r];if(i.state===e)return i}}getNextState(e,t){const s=this._search(t);if(s!==-1)for(let r=s;r<this._timeline.length;r++){const i=this._timeline[r];if(i.state===e)return i}}}class Param extends ToneWithContext{constructor(){super(optionsFromArguments(Param.getDefaults(),arguments,["param","units","convert"]));this.name="Param",this.overridden=!1,this._minOutput=1e-7;const e=optionsFromArguments(Param.getDefaults(),arguments,["param","units","convert"]);for(assert(isDefined(e.param)&&(isAudioParam(e.param)||e.param instanceof Param),"param must be an AudioParam");!isAudioParam(e.param);)e.param=e.param._param;this._swappable=isDefined(e.swappable)?e.swappable:!1,this._swappable?(this.input=this.context.createGain(),this._param=e.param,this.input.connect(this._param)):this._param=this.input=e.param,this._events=new Timeline(1e3),this._initialValue=this._param.defaultValue,this.units=e.units,this.convert=e.convert,this._minValue=e.minValue,this._maxValue=e.maxValue,isDefined(e.value)&&e.value!==this._toType(this._initialValue)&&this.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(ToneWithContext.getDefaults(),{convert:!0,units:"number"})}get value(){const e=this.now();return this.getValueAtTime(e)}set value(e){this.cancelScheduledValues(this.now()),this.setValueAtTime(e,this.now())}get minValue(){return isDefined(this._minValue)?this._minValue:this.units==="time"||this.units==="frequency"||this.units==="normalRange"||this.units==="positive"||this.units==="transportTime"||this.units==="ticks"||this.units==="bpm"||this.units==="hertz"||this.units==="samples"?0:this.units==="audioRange"?-1:this.units==="decibels"?-1/0:this._param.minValue}get maxValue(){return isDefined(this._maxValue)?this._maxValue:this.units==="normalRange"||this.units==="audioRange"?1:this._param.maxValue}_is(e,t){return this.units===t}_assertRange(e){return isDefined(this.maxValue)&&isDefined(this.minValue)&&assertRange(e,this._fromType(this.minValue),this._fromType(this.maxValue)),e}_fromType(e){return this.convert&&!this.overridden?this._is(e,"time")?this.toSeconds(e):this._is(e,"decibels")?dbToGain(e):this._is(e,"frequency")?this.toFrequency(e):e:this.overridden?0:e}_toType(e){return this.convert&&this.units==="decibels"?gainToDb(e):e}setValueAtTime(e,t){const s=this.toSeconds(t),r=this._fromType(e);return assert(isFinite(r)&&isFinite(s),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._assertRange(r),this.log(this.units,"setValueAtTime",e,s),this._events.add({time:s,type:"setValueAtTime",value:r}),this._param.setValueAtTime(r,s),this}getValueAtTime(e){const t=Math.max(this.toSeconds(e),0),s=this._events.getAfter(t),r=this._events.get(t);let i=this._initialValue;if(r===null)i=this._initialValue;else if(r.type==="setTargetAtTime"&&(s===null||s.type==="setValueAtTime")){const a=this._events.getBefore(r.time);let c;a===null?c=this._initialValue:c=a.value,r.type==="setTargetAtTime"&&(i=this._exponentialApproach(r.time,c,r.value,r.constant,t))}else if(s===null)i=r.value;else if(s.type==="linearRampToValueAtTime"||s.type==="exponentialRampToValueAtTime"){let a=r.value;if(r.type==="setTargetAtTime"){const c=this._events.getBefore(r.time);c===null?a=this._initialValue:a=c.value}s.type==="linearRampToValueAtTime"?i=this._linearInterpolate(r.time,a,s.time,s.value,t):i=this._exponentialInterpolate(r.time,a,s.time,s.value,t)}else i=r.value;return this._toType(i)}setRampPoint(e){e=this.toSeconds(e);let t=this.getValueAtTime(e);return this.cancelAndHoldAtTime(e),this._fromType(t)===0&&(t=this._toType(this._minOutput)),this.setValueAtTime(t,e),this}linearRampToValueAtTime(e,t){const s=this._fromType(e),r=this.toSeconds(t);return assert(isFinite(s)&&isFinite(r),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._assertRange(s),this._events.add({time:r,type:"linearRampToValueAtTime",value:s}),this.log(this.units,"linearRampToValueAtTime",e,r),this._param.linearRampToValueAtTime(s,r),this}exponentialRampToValueAtTime(e,t){let s=this._fromType(e);s=EQ(s,0)?this._minOutput:s,this._assertRange(s);const r=this.toSeconds(t);return assert(isFinite(s)&&isFinite(r),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._events.add({time:r,type:"exponentialRampToValueAtTime",value:s}),this.log(this.units,"exponentialRampToValueAtTime",e,r),this._param.exponentialRampToValueAtTime(s,r),this}exponentialRampTo(e,t,s){return s=this.toSeconds(s),this.setRampPoint(s),this.exponentialRampToValueAtTime(e,s+this.toSeconds(t)),this}linearRampTo(e,t,s){return s=this.toSeconds(s),this.setRampPoint(s),this.linearRampToValueAtTime(e,s+this.toSeconds(t)),this}targetRampTo(e,t,s){return s=this.toSeconds(s),this.setRampPoint(s),this.exponentialApproachValueAtTime(e,s,t),this}exponentialApproachValueAtTime(e,t,s){t=this.toSeconds(t),s=this.toSeconds(s);const r=Math.log(s+1)/Math.log(200);return this.setTargetAtTime(e,t,r),this.cancelAndHoldAtTime(t+s*.9),this.linearRampToValueAtTime(e,t+s),this}setTargetAtTime(e,t,s){const r=this._fromType(e);assert(isFinite(s)&&s>0,"timeConstant must be a number greater than 0");const i=this.toSeconds(t);return this._assertRange(r),assert(isFinite(r)&&isFinite(i),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._events.add({constant:s,time:i,type:"setTargetAtTime",value:r}),this.log(this.units,"setTargetAtTime",e,i,s),this._param.setTargetAtTime(r,i,s),this}setValueCurveAtTime(e,t,s,r=1){s=this.toSeconds(s),t=this.toSeconds(t);const i=this._fromType(e[0])*r;this.setValueAtTime(this._toType(i),t);const a=s/(e.length-1);for(let c=1;c<e.length;c++){const u=this._fromType(e[c])*r;this.linearRampToValueAtTime(this._toType(u),t+c*a)}return this}cancelScheduledValues(e){const t=this.toSeconds(e);return assert(isFinite(t),`Invalid argument to cancelScheduledValues: ${JSON.stringify(e)}`),this._events.cancel(t),this._param.cancelScheduledValues(t),this.log(this.units,"cancelScheduledValues",t),this}cancelAndHoldAtTime(e){const t=this.toSeconds(e),s=this._fromType(this.getValueAtTime(t));assert(isFinite(t),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(e)}`),this.log(this.units,"cancelAndHoldAtTime",t,"value="+s);const r=this._events.get(t),i=this._events.getAfter(t);return r&&EQ(r.time,t)?i?(this._param.cancelScheduledValues(i.time),this._events.cancel(i.time)):(this._param.cancelAndHoldAtTime(t),this._events.cancel(t+this.sampleTime)):i&&(this._param.cancelScheduledValues(i.time),this._events.cancel(i.time),i.type==="linearRampToValueAtTime"?this.linearRampToValueAtTime(this._toType(s),t):i.type==="exponentialRampToValueAtTime"&&this.exponentialRampToValueAtTime(this._toType(s),t)),this._events.add({time:t,type:"setValueAtTime",value:s}),this._param.setValueAtTime(s,t),this}rampTo(e,t=.1,s){return this.units==="frequency"||this.units==="bpm"||this.units==="decibels"?this.exponentialRampTo(e,t,s):this.linearRampTo(e,t,s),this}apply(e){const t=this.context.currentTime;e.setValueAtTime(this.getValueAtTime(t),t);const s=this._events.get(t);if(s&&s.type==="setTargetAtTime"){const r=this._events.getAfter(s.time),i=r?r.time:t+2,a=(i-t)/10;for(let c=t;c<i;c+=a)e.linearRampToValueAtTime(this.getValueAtTime(c),c)}return this._events.forEachAfter(this.context.currentTime,r=>{r.type==="cancelScheduledValues"?e.cancelScheduledValues(r.time):r.type==="setTargetAtTime"?e.setTargetAtTime(r.value,r.time,r.constant):e[r.type](r.value,r.time)}),this}setParam(e){assert(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const t=this.input;return t.disconnect(this._param),this.apply(e),this._param=e,t.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(e,t,s,r,i){return s+(t-s)*Math.exp(-(i-e)/r)}_linearInterpolate(e,t,s,r,i){return t+(r-t)*((i-e)/(s-e))}_exponentialInterpolate(e,t,s,r,i){return t*Math.pow(r/t,(i-e)/(s-e))}}class ToneAudioNode extends ToneWithContext{constructor(){super(...arguments);this.name="ToneAudioNode",this._internalChannels=[]}get numberOfInputs(){return isDefined(this.input)?isAudioParam(this.input)||this.input instanceof Param?1:this.input.numberOfInputs:0}get numberOfOutputs(){return isDefined(this.output)?this.output.numberOfOutputs:0}_isAudioNode(e){return isDefined(e)&&(e instanceof ToneAudioNode||isAudioNode(e))}_getInternalNodes(){const e=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&e.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&e.push(this.output),e}_setChannelProperties(e){this._getInternalNodes().forEach(s=>{s.channelCount=e.channelCount,s.channelCountMode=e.channelCountMode,s.channelInterpretation=e.channelInterpretation})}_getChannelProperties(){const e=this._getInternalNodes();assert(e.length>0,"ToneAudioNode does not have any internal nodes");const t=e[0];return{channelCount:t.channelCount,channelCountMode:t.channelCountMode,channelInterpretation:t.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelCount:e}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelCountMode:e}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelInterpretation:e}))}connect(e,t=0,s=0){return connect(this,e,t,s),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return warn("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(e,t=0,s=0){return disconnect(this,e,t,s),this}chain(...e){return connectSeries(this,...e),this}fan(...e){return e.forEach(t=>this.connect(t)),this}dispose(){return super.dispose(),isDefined(this.input)&&(this.input instanceof ToneAudioNode?this.input.dispose():isAudioNode(this.input)&&this.input.disconnect()),isDefined(this.output)&&(this.output instanceof ToneAudioNode?this.output.dispose():isAudioNode(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function connectSeries(...n){const e=n.shift();n.reduce((t,s)=>(t instanceof ToneAudioNode?t.connect(s):isAudioNode(t)&&connect(t,s),s),e)}function connect(n,e,t=0,s=0){for(assert(isDefined(n),"Cannot connect from undefined node"),assert(isDefined(e),"Cannot connect to undefined node"),(e instanceof ToneAudioNode||isAudioNode(e))&&assert(e.numberOfInputs>0,"Cannot connect to node with no inputs"),assert(n.numberOfOutputs>0,"Cannot connect from node with no outputs");e instanceof ToneAudioNode||e instanceof Param;)isDefined(e.input)&&(e=e.input);for(;n instanceof ToneAudioNode;)isDefined(n.output)&&(n=n.output);isAudioParam(e)?n.connect(e,t):n.connect(e,t,s)}function disconnect(n,e,t=0,s=0){if(isDefined(e))for(;e instanceof ToneAudioNode;)e=e.input;for(;!isAudioNode(n);)isDefined(n.output)&&(n=n.output);isAudioParam(e)?n.disconnect(e,t):isAudioNode(e)?n.disconnect(e,t,s):n.disconnect()}class Gain extends ToneAudioNode{constructor(){super(optionsFromArguments(Gain.getDefaults(),arguments,["gain","units"]));this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode;const e=optionsFromArguments(Gain.getDefaults(),arguments,["gain","units"]);this.gain=new Param({context:this.context,convert:e.convert,param:this._gainNode.gain,units:e.units,value:e.gain,minValue:e.minValue,maxValue:e.maxValue}),readOnly(this,"gain")}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class OneShotSource extends ToneAudioNode{constructor(e){super(e);this.onended=noOp,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new Gain({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(t){const s=this.toSeconds(t);return this._startTime!==-1&&s>=this._startTime&&(this._stopTime===-1||s<=this._stopTime)?"started":"stopped"},this._fadeIn=e.fadeIn,this._fadeOut=e.fadeOut,this._curve=e.curve,this.onended=e.onended}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:noOp})}_startGain(e,t=1){assert(this._startTime===-1,"Source cannot be started more than once");const s=this.toSeconds(this._fadeIn);return this._startTime=e+s,this._startTime=Math.max(this._startTime,this.context.currentTime),s>0?(this._gainNode.gain.setValueAtTime(0,e),this._curve==="linear"?this._gainNode.gain.linearRampToValueAtTime(t,e+s):this._gainNode.gain.exponentialApproachValueAtTime(t,e,s)):this._gainNode.gain.setValueAtTime(t,e),this}stop(e){return this.log("stop",e),this._stopGain(this.toSeconds(e)),this}_stopGain(e){assert(this._startTime!==-1,"'start' must be called before 'stop'"),this.cancelStop();const t=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(e)+t,this._stopTime=Math.max(this._stopTime,this.context.currentTime),t>0?this._curve==="linear"?this._gainNode.gain.linearRampTo(0,t,e):this._gainNode.gain.targetRampTo(0,t,e):(this._gainNode.gain.cancelAndHoldAtTime(e),this._gainNode.gain.setValueAtTime(0,e)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout(()=>{const s=this._curve==="exponential"?t*2:0;this._stopSource(this.now()+s),this._onended()},this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==noOp&&(this.onended(this),this.onended=noOp,!this.context.isOffline)){const e=()=>this.dispose();typeof window.requestIdleCallback!="undefined"?window.requestIdleCallback(e):setTimeout(e,1e3)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),assert(this._startTime!==-1,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.disconnect(),this}}class ToneConstantSource extends OneShotSource{constructor(){super(optionsFromArguments(ToneConstantSource.getDefaults(),arguments,["offset"]));this.name="ToneConstantSource",this._source=this.context.createConstantSource();const e=optionsFromArguments(ToneConstantSource.getDefaults(),arguments,["offset"]);connect(this._source,this._gainNode),this.offset=new Param({context:this.context,convert:e.convert,param:this._source.offset,units:e.units,value:e.offset,minValue:e.minValue,maxValue:e.maxValue})}static getDefaults(){return Object.assign(OneShotSource.getDefaults(),{convert:!0,offset:1,units:"number"})}start(e){const t=this.toSeconds(e);return this.log("start",t),this._startGain(t),this._source.start(t),this}_stopSource(e){this._source.stop(e)}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class Signal extends ToneAudioNode{constructor(){super(optionsFromArguments(Signal.getDefaults(),arguments,["value","units"]));this.name="Signal",this.override=!0;const e=optionsFromArguments(Signal.getDefaults(),arguments,["value","units"]);this.output=this._constantSource=new ToneConstantSource({context:this.context,convert:e.convert,offset:e.value,units:e.units,minValue:e.minValue,maxValue:e.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{convert:!0,units:"number",value:0})}connect(e,t=0,s=0){return connectSignal(this,e,t,s),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(e,t){return this._param.setValueAtTime(e,t),this}getValueAtTime(e){return this._param.getValueAtTime(e)}setRampPoint(e){return this._param.setRampPoint(e),this}linearRampToValueAtTime(e,t){return this._param.linearRampToValueAtTime(e,t),this}exponentialRampToValueAtTime(e,t){return this._param.exponentialRampToValueAtTime(e,t),this}exponentialRampTo(e,t,s){return this._param.exponentialRampTo(e,t,s),this}linearRampTo(e,t,s){return this._param.linearRampTo(e,t,s),this}targetRampTo(e,t,s){return this._param.targetRampTo(e,t,s),this}exponentialApproachValueAtTime(e,t,s){return this._param.exponentialApproachValueAtTime(e,t,s),this}setTargetAtTime(e,t,s){return this._param.setTargetAtTime(e,t,s),this}setValueCurveAtTime(e,t,s,r){return this._param.setValueCurveAtTime(e,t,s,r),this}cancelScheduledValues(e){return this._param.cancelScheduledValues(e),this}cancelAndHoldAtTime(e){return this._param.cancelAndHoldAtTime(e),this}rampTo(e,t,s){return this._param.rampTo(e,t,s),this}get value(){return this._param.value}set value(e){this._param.value=e}get convert(){return this._param.convert}set convert(e){this._param.convert=e}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(e){this._param.overridden=e}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(e){return this._param.apply(e),this}}function connectSignal(n,e,t,s){(e instanceof Param||isAudioParam(e)||e instanceof Signal&&e.override)&&(e.cancelScheduledValues(0),e.setValueAtTime(0,0),e instanceof Signal&&(e.overridden=!0)),connect(n,e,t,s)}class TickParam extends Param{constructor(){super(optionsFromArguments(TickParam.getDefaults(),arguments,["value"]));this.name="TickParam",this._events=new Timeline(1/0),this._multiplier=1;const e=optionsFromArguments(TickParam.getDefaults(),arguments,["value"]);this._multiplier=e.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(e.value)}),this.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(Param.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(e,t,s){t=this.toSeconds(t),this.setRampPoint(t);const r=this._fromType(e),i=this._events.get(t),a=Math.round(Math.max(1/s,1));for(let c=0;c<=a;c++){const u=s*c+t,l=this._exponentialApproach(i.time,i.value,r,s,u);this.linearRampToValueAtTime(this._toType(l),u)}return this}setValueAtTime(e,t){const s=this.toSeconds(t);super.setValueAtTime(e,t);const r=this._events.get(s),i=this._events.previousEvent(r),a=this._getTicksUntilEvent(i,s);return r.ticks=Math.max(a,0),this}linearRampToValueAtTime(e,t){const s=this.toSeconds(t);super.linearRampToValueAtTime(e,t);const r=this._events.get(s),i=this._events.previousEvent(r),a=this._getTicksUntilEvent(i,s);return r.ticks=Math.max(a,0),this}exponentialRampToValueAtTime(e,t){t=this.toSeconds(t);const s=this._fromType(e),r=this._events.get(t),i=Math.round(Math.max((t-r.time)*10,1)),a=(t-r.time)/i;for(let c=0;c<=i;c++){const u=a*c+r.time,l=this._exponentialInterpolate(r.time,r.value,t,s,u);this.linearRampToValueAtTime(this._toType(l),u)}return this}_getTicksUntilEvent(e,t){if(e===null)e={ticks:0,time:0,type:"setValueAtTime",value:0};else if(isUndef(e.ticks)){const a=this._events.previousEvent(e);e.ticks=this._getTicksUntilEvent(a,e.time)}const s=this._fromType(this.getValueAtTime(e.time));let r=this._fromType(this.getValueAtTime(t));const i=this._events.get(t);return i&&i.time===t&&i.type==="setValueAtTime"&&(r=this._fromType(this.getValueAtTime(t-this.sampleTime))),.5*(t-e.time)*(s+r)+e.ticks}getTicksAtTime(e){const t=this.toSeconds(e),s=this._events.get(t);return Math.max(this._getTicksUntilEvent(s,t),0)}getDurationOfTicks(e,t){const s=this.toSeconds(t),r=this.getTicksAtTime(t);return this.getTimeOfTick(r+e)-s}getTimeOfTick(e){const t=this._events.get(e,"ticks"),s=this._events.getAfter(e,"ticks");if(t&&t.ticks===e)return t.time;if(t&&s&&s.type==="linearRampToValueAtTime"&&t.value!==s.value){const r=this._fromType(this.getValueAtTime(t.time)),a=(this._fromType(this.getValueAtTime(s.time))-r)/(s.time-t.time),c=Math.sqrt(Math.pow(r,2)-2*a*(t.ticks-e)),u=(-r+c)/a,l=(-r-c)/a;return(u>0?u:l)+t.time}else return t?t.value===0?1/0:t.time+(e-t.ticks)/t.value:e/this._initialValue}ticksToTime(e,t){return this.getDurationOfTicks(e,t)}timeToTicks(e,t){const s=this.toSeconds(t),r=this.toSeconds(e),i=this.getTicksAtTime(s);return this.getTicksAtTime(s+r)-i}_fromType(e){return this.units==="bpm"&&this.multiplier?1/(60/e/this.multiplier):super._fromType(e)}_toType(e){return this.units==="bpm"&&this.multiplier?e/this.multiplier*60:super._toType(e)}get multiplier(){return this._multiplier}set multiplier(e){const t=this.value;this._multiplier=e,this.cancelScheduledValues(0),this.setValueAtTime(t,0)}}class TickSignal extends Signal{constructor(){super(optionsFromArguments(TickSignal.getDefaults(),arguments,["value"]));this.name="TickSignal";const e=optionsFromArguments(TickSignal.getDefaults(),arguments,["value"]);this.input=this._param=new TickParam({context:this.context,convert:e.convert,multiplier:e.multiplier,param:this._constantSource.offset,units:e.units,value:e.value})}static getDefaults(){return Object.assign(Signal.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(e,t){return this._param.ticksToTime(e,t)}timeToTicks(e,t){return this._param.timeToTicks(e,t)}getTimeOfTick(e){return this._param.getTimeOfTick(e)}getDurationOfTicks(e,t){return this._param.getDurationOfTicks(e,t)}getTicksAtTime(e){return this._param.getTicksAtTime(e)}get multiplier(){return this._param.multiplier}set multiplier(e){this._param.multiplier=e}dispose(){return super.dispose(),this._param.dispose(),this}}class TickSource extends ToneWithContext{constructor(){super(optionsFromArguments(TickSource.getDefaults(),arguments,["frequency"]));this.name="TickSource",this._state=new StateTimeline,this._tickOffset=new Timeline;const e=optionsFromArguments(TickSource.getDefaults(),arguments,["frequency"]);this.frequency=new TickSignal({context:this.context,units:e.units,value:e.frequency}),readOnly(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},ToneWithContext.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(e,t){const s=this.toSeconds(e);return this._state.getValueAtTime(s)!=="started"&&(this._state.setStateAtTime("started",s),isDefined(t)&&this.setTicksAtTime(t,s)),this}stop(e){const t=this.toSeconds(e);if(this._state.getValueAtTime(t)==="stopped"){const s=this._state.get(t);s&&s.time>0&&(this._tickOffset.cancel(s.time),this._state.cancel(s.time))}return this._state.cancel(t),this._state.setStateAtTime("stopped",t),this.setTicksAtTime(0,t),this}pause(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)==="started"&&this._state.setStateAtTime("paused",t),this}cancel(e){return e=this.toSeconds(e),this._state.cancel(e),this._tickOffset.cancel(e),this}getTicksAtTime(e){const t=this.toSeconds(e),s=this._state.getLastState("stopped",t),r={state:"paused",time:t};this._state.add(r);let i=s,a=0;return this._state.forEachBetween(s.time,t+this.sampleTime,c=>{let u=i.time;const l=this._tickOffset.get(c.time);l&&l.time>=i.time&&(a=l.ticks,u=l.time),i.state==="started"&&c.state!=="started"&&(a+=this.frequency.getTicksAtTime(c.time)-this.frequency.getTicksAtTime(u)),i=c}),this._state.remove(r),a}get ticks(){return this.getTicksAtTime(this.now())}set ticks(e){this.setTicksAtTime(e,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(e){const t=this.now(),s=this.frequency.timeToTicks(e,t);this.setTicksAtTime(s,t)}getSecondsAtTime(e){e=this.toSeconds(e);const t=this._state.getLastState("stopped",e),s={state:"paused",time:e};this._state.add(s);let r=t,i=0;return this._state.forEachBetween(t.time,e+this.sampleTime,a=>{let c=r.time;const u=this._tickOffset.get(a.time);u&&u.time>=r.time&&(i=u.seconds,c=u.time),r.state==="started"&&a.state!=="started"&&(i+=a.time-c),r=a}),this._state.remove(s),i}setTicksAtTime(e,t){return t=this.toSeconds(t),this._tickOffset.cancel(t),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(e,t),ticks:e,time:t}),this}getStateAtTime(e){return e=this.toSeconds(e),this._state.getValueAtTime(e)}getTimeOfTick(e,t=this.now()){const s=this._tickOffset.get(t),r=this._state.get(t),i=Math.max(s.time,r.time),a=this.frequency.getTicksAtTime(i)+e-s.ticks;return this.frequency.getTimeOfTick(a)}forEachTickBetween(e,t,s){let r=this._state.get(e);this._state.forEachBetween(e,t,a=>{r&&r.state==="started"&&a.state!=="started"&&this.forEachTickBetween(Math.max(r.time,e),a.time-this.sampleTime,s),r=a});let i=null;if(r&&r.state==="started"){const a=Math.max(r.time,e),c=this.frequency.getTicksAtTime(a),u=this.frequency.getTicksAtTime(r.time),l=c-u;let h=Math.ceil(l)-l;h=EQ(h,1)?0:h;let d=this.frequency.getTimeOfTick(c+h);for(;d<t;){try{s(d,Math.round(this.getTicksAtTime(d)))}catch(f){i=f;break}d+=this.frequency.getDurationOfTicks(1,d)}}if(i)throw i;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this.frequency.dispose(),this}}class Clock extends ToneWithContext{constructor(){super(optionsFromArguments(Clock.getDefaults(),arguments,["callback","frequency"]));this.name="Clock",this.callback=noOp,this._lastUpdate=0,this._state=new StateTimeline("stopped"),this._boundLoop=this._loop.bind(this);const e=optionsFromArguments(Clock.getDefaults(),arguments,["callback","frequency"]);this.callback=e.callback,this._tickSource=new TickSource({context:this.context,frequency:e.frequency,units:e.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,readOnly(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(ToneWithContext.getDefaults(),{callback:noOp,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(e,t){assertContextRunning(this.context);const s=this.toSeconds(e);return this.log("start",s),this._state.getValueAtTime(s)!=="started"&&(this._state.setStateAtTime("started",s),this._tickSource.start(s,t),s<this._lastUpdate&&this.emit("start",s,t)),this}stop(e){const t=this.toSeconds(e);return this.log("stop",t),this._state.cancel(t),this._state.setStateAtTime("stopped",t),this._tickSource.stop(t),t<this._lastUpdate&&this.emit("stop",t),this}pause(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)==="started"&&(this._state.setStateAtTime("paused",t),this._tickSource.pause(t),t<this._lastUpdate&&this.emit("pause",t)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(e){this._tickSource.ticks=e}get seconds(){return this._tickSource.seconds}set seconds(e){this._tickSource.seconds=e}getSecondsAtTime(e){return this._tickSource.getSecondsAtTime(e)}setTicksAtTime(e,t){return this._tickSource.setTicksAtTime(e,t),this}getTimeOfTick(e,t=this.now()){return this._tickSource.getTimeOfTick(e,t)}getTicksAtTime(e){return this._tickSource.getTicksAtTime(e)}nextTickTime(e,t){const s=this.toSeconds(t),r=this.getTicksAtTime(s);return this._tickSource.getTimeOfTick(r+e,s)}_loop(){const e=this._lastUpdate,t=this.now();this._lastUpdate=t,this.log("loop",e,t),e!==t&&(this._state.forEachBetween(e,t,s=>{switch(s.state){case"started":const r=this._tickSource.getTicksAtTime(s.time);this.emit("start",s.time,r);break;case"stopped":s.time!==0&&this.emit("stop",s.time);break;case"paused":this.emit("pause",s.time);break}}),this._tickSource.forEachTickBetween(e,t,(s,r)=>{this.callback(s,r)}))}getStateAtTime(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}Emitter.mixin(Clock);class Delay extends ToneAudioNode{constructor(){super(optionsFromArguments(Delay.getDefaults(),arguments,["delayTime","maxDelay"]));this.name="Delay";const e=optionsFromArguments(Delay.getDefaults(),arguments,["delayTime","maxDelay"]),t=this.toSeconds(e.maxDelay);this._maxDelay=Math.max(t,this.toSeconds(e.delayTime)),this._delayNode=this.input=this.output=this.context.createDelay(t),this.delayTime=new Param({context:this.context,param:this._delayNode.delayTime,units:"time",value:e.delayTime,minValue:0,maxValue:this.maxDelay}),readOnly(this,"delayTime")}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{delayTime:0,maxDelay:1})}get maxDelay(){return this._maxDelay}dispose(){return super.dispose(),this._delayNode.disconnect(),this.delayTime.dispose(),this}}function Offline(n,e,t=2,s=getContext().sampleRate){return __awaiter$1(this,void 0,void 0,function*(){const r=getContext(),i=new OfflineContext(t,e,s);setContext(i),yield n(i);const a=i.render();setContext(r);const c=yield a;return new ToneAudioBuffer(c)})}class ToneAudioBuffers extends Tone$1{constructor(){super();this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const e=optionsFromArguments(ToneAudioBuffers.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=e.baseUrl,Object.keys(e.urls).forEach(t=>{this._loadingCount++;const s=e.urls[t];this.add(t,s,this._bufferLoaded.bind(this,e.onload),e.onerror)})}static getDefaults(){return{baseUrl:"",onerror:noOp,onload:noOp,urls:{}}}has(e){return this._buffers.has(e.toString())}get(e){return assert(this.has(e),`ToneAudioBuffers has no buffer named: ${e}`),this._buffers.get(e.toString())}_bufferLoaded(e){this._loadingCount--,this._loadingCount===0&&e&&e()}get loaded(){return Array.from(this._buffers).every(([e,t])=>t.loaded)}add(e,t,s=noOp,r=noOp){return isString(t)?this._buffers.set(e.toString(),new ToneAudioBuffer(this.baseUrl+t,s,r)):this._buffers.set(e.toString(),new ToneAudioBuffer(t,s,r)),this}dispose(){return super.dispose(),this._buffers.forEach(e=>e.dispose()),this._buffers.clear(),this}}class MidiClass extends FrequencyClass{constructor(){super(...arguments);this.name="MidiClass",this.defaultUnits="midi"}_frequencyToUnits(e){return ftom(super._frequencyToUnits(e))}_ticksToUnits(e){return ftom(super._ticksToUnits(e))}_beatsToUnits(e){return ftom(super._beatsToUnits(e))}_secondsToUnits(e){return ftom(super._secondsToUnits(e))}toMidi(){return this.valueOf()}toFrequency(){return mtof(this.toMidi())}transpose(e){return new MidiClass(this.context,this.toMidi()+e)}}function Midi$2(n,e){return new MidiClass(getContext(),n,e)}class TicksClass extends TransportTimeClass{constructor(){super(...arguments);this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(e){return this._getPPQ()*e}_secondsToUnits(e){return Math.floor(e/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(e){return e}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}function Ticks(n,e){return new TicksClass(getContext(),n,e)}class Draw$1 extends ToneWithContext{constructor(){super(...arguments);this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new Timeline,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(e,t){return this._events.add({callback:e,time:this.toSeconds(t)}),this._events.length===1&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(e){return this._events.cancel(this.toSeconds(e)),this}_drawLoop(){const e=this.context.currentTime;for(;this._events.length&&this._events.peek().time-this.anticipation<=e;){const t=this._events.shift();t&&e-t.time<=this.expiration&&t.callback()}this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}}onContextInit(n=>{n.draw=new Draw$1({context:n})});onContextClose(n=>{n.draw.dispose()});class IntervalTimeline extends Tone$1{constructor(){super(...arguments);this.name="IntervalTimeline",this._root=null,this._length=0}add(e){assert(isDefined(e.time),"Events must have a time property"),assert(isDefined(e.duration),"Events must have a duration parameter"),e.time=e.time.valueOf();let t=new IntervalNode(e.time,e.time+e.duration,e);for(this._root===null?this._root=t:this._root.insert(t),this._length++;t!==null;)t.updateHeight(),t.updateMax(),this._rebalance(t),t=t.parent;return this}remove(e){if(this._root!==null){const t=[];this._root.search(e.time,t);for(const s of t)if(s.event===e){this._removeNode(s),this._length--;break}}return this}get length(){return this._length}cancel(e){return this.forEachFrom(e,t=>this.remove(t)),this}_setRoot(e){this._root=e,this._root!==null&&(this._root.parent=null)}_replaceNodeInParent(e,t){e.parent!==null?(e.isLeftChild()?e.parent.left=t:e.parent.right=t,this._rebalance(e.parent)):this._setRoot(t)}_removeNode(e){if(e.left===null&&e.right===null)this._replaceNodeInParent(e,null);else if(e.right===null)this._replaceNodeInParent(e,e.left);else if(e.left===null)this._replaceNodeInParent(e,e.right);else{const t=e.getBalance();let s,r=null;if(t>0)if(e.left.right===null)s=e.left,s.right=e.right,r=s;else{for(s=e.left.right;s.right!==null;)s=s.right;s.parent&&(s.parent.right=s.left,r=s.parent,s.left=e.left,s.right=e.right)}else if(e.right.left===null)s=e.right,s.left=e.left,r=s;else{for(s=e.right.left;s.left!==null;)s=s.left;s.parent&&(s.parent.left=s.right,r=s.parent,s.left=e.left,s.right=e.right)}e.parent!==null?e.isLeftChild()?e.parent.left=s:e.parent.right=s:this._setRoot(s),r&&this._rebalance(r)}e.dispose()}_rotateLeft(e){const t=e.parent,s=e.isLeftChild(),r=e.right;r&&(e.right=r.left,r.left=e),t!==null?s?t.left=r:t.right=r:this._setRoot(r)}_rotateRight(e){const t=e.parent,s=e.isLeftChild(),r=e.left;r&&(e.left=r.right,r.right=e),t!==null?s?t.left=r:t.right=r:this._setRoot(r)}_rebalance(e){const t=e.getBalance();t>1&&e.left?e.left.getBalance()<0?this._rotateLeft(e.left):this._rotateRight(e):t<-1&&e.right&&(e.right.getBalance()>0?this._rotateRight(e.right):this._rotateLeft(e))}get(e){if(this._root!==null){const t=[];if(this._root.search(e,t),t.length>0){let s=t[0];for(let r=1;r<t.length;r++)t[r].low>s.low&&(s=t[r]);return s.event}}return null}forEach(e){if(this._root!==null){const t=[];this._root.traverse(s=>t.push(s)),t.forEach(s=>{s.event&&e(s.event)})}return this}forEachAtTime(e,t){if(this._root!==null){const s=[];this._root.search(e,s),s.forEach(r=>{r.event&&t(r.event)})}return this}forEachFrom(e,t){if(this._root!==null){const s=[];this._root.searchAfter(e,s),s.forEach(r=>{r.event&&t(r.event)})}return this}dispose(){return super.dispose(),this._root!==null&&this._root.traverse(e=>e.dispose()),this._root=null,this}}class IntervalNode{constructor(e,t,s){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=s,this.low=e,this.high=t,this.max=this.high}insert(e){e.low<=this.low?this.left===null?this.left=e:this.left.insert(e):this.right===null?this.right=e:this.right.insert(e)}search(e,t){e>this.max||(this.left!==null&&this.left.search(e,t),this.low<=e&&this.high>e&&t.push(this),!(this.low>e)&&this.right!==null&&this.right.search(e,t))}searchAfter(e,t){this.low>=e&&(t.push(this),this.left!==null&&this.left.searchAfter(e,t)),this.right!==null&&this.right.searchAfter(e,t)}traverse(e){e(this),this.left!==null&&this.left.traverse(e),this.right!==null&&this.right.traverse(e)}updateHeight(){this.left!==null&&this.right!==null?this.height=Math.max(this.left.height,this.right.height)+1:this.right!==null?this.height=this.right.height+1:this.left!==null?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,this.left!==null&&(this.max=Math.max(this.max,this.left.max)),this.right!==null&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let e=0;return this.left!==null&&this.right!==null?e=this.left.height-this.right.height:this.left!==null?e=this.left.height+1:this.right!==null&&(e=-(this.right.height+1)),e}isLeftChild(){return this.parent!==null&&this.parent.left===this}get left(){return this._left}set left(e){this._left=e,e!==null&&(e.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(e){this._right=e,e!==null&&(e.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}var Units=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module"});class Volume extends ToneAudioNode{constructor(){super(optionsFromArguments(Volume.getDefaults(),arguments,["volume"]));this.name="Volume";const e=optionsFromArguments(Volume.getDefaults(),arguments,["volume"]);this.input=this.output=new Gain({context:this.context,gain:e.volume,units:"decibels"}),this.volume=this.output.gain,readOnly(this,"volume"),this._unmutedVolume=e.volume,this.mute=e.mute}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(e){!this.mute&&e?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!e&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}class Destination$1 extends ToneAudioNode{constructor(){super(optionsFromArguments(Destination$1.getDefaults(),arguments));this.name="Destination",this.input=new Volume({context:this.context}),this.output=new Gain({context:this.context}),this.volume=this.input.volume;const e=optionsFromArguments(Destination$1.getDefaults(),arguments);connectSeries(this.input,this.output,this.context.rawContext.destination),this.mute=e.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(e){this.input.mute=e}chain(...e){return this.input.disconnect(),e.unshift(this.input),e.push(this.output),connectSeries(...e),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}}onContextInit(n=>{n.destination=new Destination$1({context:n})});onContextClose(n=>{n.destination.dispose()});class TimelineValue extends Tone$1{constructor(e){super();this.name="TimelineValue",this._timeline=new Timeline({memory:10}),this._initialValue=e}set(e,t){return this._timeline.add({value:e,time:t}),this}get(e){const t=this._timeline.get(e);return t?t.value:this._initialValue}}class TransportEvent{constructor(e,t){this.id=TransportEvent._eventId++;const s=Object.assign(TransportEvent.getDefaults(),t);this.transport=e,this.callback=s.callback,this._once=s.once,this.time=s.time}static getDefaults(){return{callback:noOp,once:!1,time:0}}invoke(e){this.callback&&(this.callback(e),this._once&&this.transport.clear(this.id))}dispose(){return this.callback=void 0,this}}TransportEvent._eventId=0;class TransportRepeatEvent extends TransportEvent{constructor(e,t){super(e,t);this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const s=Object.assign(TransportRepeatEvent.getDefaults(),t);this.duration=new TicksClass(e.context,s.duration).valueOf(),this._interval=new TicksClass(e.context,s.interval).valueOf(),this._nextTick=s.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},TransportEvent.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(e){this._createEvents(e),super.invoke(e)}_createEvents(e){const t=this.transport.getTicksAtTime(e);t>=this.time&&t>=this._nextTick&&this._nextTick+this._interval<this.time+this.duration&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new TicksClass(this.context,this._nextTick).toSeconds()))}_restart(e){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.time;const t=this.transport.getTicksAtTime(e);t>this.time&&(this._nextTick=this.time+Math.ceil((t-this.time)/this._interval)*this._interval),this._currentId=this.transport.scheduleOnce(this.invoke.bind(this),new TicksClass(this.context,this._nextTick).toSeconds()),this._nextTick+=this._interval,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new TicksClass(this.context,this._nextTick).toSeconds())}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this}}class Transport$1 extends ToneWithContext{constructor(){super(optionsFromArguments(Transport$1.getDefaults(),arguments));this.name="Transport",this._loop=new TimelineValue(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new Timeline,this._repeatedEvents=new IntervalTimeline,this._syncedSignals=[],this._swingAmount=0;const e=optionsFromArguments(Transport$1.getDefaults(),arguments);this._ppq=e.ppq,this._clock=new Clock({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=e.ppq,this.bpm.setValueAtTime(e.bpm,0),readOnly(this,"bpm"),this._timeSignature=e.timeSignature,this._swingTicks=e.ppq/2}static getDefaults(){return Object.assign(ToneWithContext.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(e,t){if(this._loop.get(e)&&t>=this._loopEnd&&(this.emit("loopEnd",e),this._clock.setTicksAtTime(this._loopStart,e),t=this._loopStart,this.emit("loopStart",e,this._clock.getSecondsAtTime(e)),this.emit("loop",e)),this._swingAmount>0&&t%this._ppq!=0&&t%(this._swingTicks*2)!=0){const s=t%(this._swingTicks*2)/(this._swingTicks*2),r=Math.sin(s*Math.PI)*this._swingAmount;e+=new TicksClass(this.context,this._swingTicks*2/3).toSeconds()*r}this._timeline.forEachAtTime(t,s=>s.invoke(e))}schedule(e,t){const s=new TransportEvent(this,{callback:e,time:new TransportTimeClass(this.context,t).toTicks()});return this._addEvent(s,this._timeline)}scheduleRepeat(e,t,s,r=1/0){const i=new TransportRepeatEvent(this,{callback:e,duration:new TimeClass(this.context,r).toTicks(),interval:new TimeClass(this.context,t).toTicks(),time:new TransportTimeClass(this.context,s).toTicks()});return this._addEvent(i,this._repeatedEvents)}scheduleOnce(e,t){const s=new TransportEvent(this,{callback:e,once:!0,time:new TransportTimeClass(this.context,t).toTicks()});return this._addEvent(s,this._timeline)}clear(e){if(this._scheduledEvents.hasOwnProperty(e)){const t=this._scheduledEvents[e.toString()];t.timeline.remove(t.event),t.event.dispose(),delete this._scheduledEvents[e.toString()]}return this}_addEvent(e,t){return this._scheduledEvents[e.id.toString()]={event:e,timeline:t},t.add(e),e.id}cancel(e=0){const t=this.toTicks(e);return this._timeline.forEachFrom(t,s=>this.clear(s.id)),this._repeatedEvents.forEachFrom(t,s=>this.clear(s.id)),this}_bindClockEvents(){this._clock.on("start",(e,t)=>{t=new TicksClass(this.context,t).toSeconds(),this.emit("start",e,t)}),this._clock.on("stop",e=>{this.emit("stop",e)}),this._clock.on("pause",e=>{this.emit("pause",e)})}get state(){return this._clock.getStateAtTime(this.now())}start(e,t){let s;return isDefined(t)&&(s=this.toTicks(t)),this._clock.start(e,s),this}stop(e){return this._clock.stop(e),this}pause(e){return this._clock.pause(e),this}toggle(e){return e=this.toSeconds(e),this._clock.getStateAtTime(e)!=="started"?this.start(e):this.stop(e),this}get timeSignature(){return this._timeSignature}set timeSignature(e){isArray(e)&&(e=e[0]/e[1]*4),this._timeSignature=e}get loopStart(){return new TimeClass(this.context,this._loopStart,"i").toSeconds()}set loopStart(e){this._loopStart=this.toTicks(e)}get loopEnd(){return new TimeClass(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(e){this._loopEnd=this.toTicks(e)}get loop(){return this._loop.get(this.now())}set loop(e){this._loop.set(e,this.now())}setLoopPoints(e,t){return this.loopStart=e,this.loopEnd=t,this}get swing(){return this._swingAmount}set swing(e){this._swingAmount=e}get swingSubdivision(){return new TicksClass(this.context,this._swingTicks).toNotation()}set swingSubdivision(e){this._swingTicks=this.toTicks(e)}get position(){const e=this.now(),t=this._clock.getTicksAtTime(e);return new TicksClass(this.context,t).toBarsBeatsSixteenths()}set position(e){const t=this.toTicks(e);this.ticks=t}get seconds(){return this._clock.seconds}set seconds(e){const t=this.now(),s=this._clock.frequency.timeToTicks(e,t);this.ticks=s}get progress(){if(this.loop){const e=this.now();return(this._clock.getTicksAtTime(e)-this._loopStart)/(this._loopEnd-this._loopStart)}else return 0}get ticks(){return this._clock.ticks}set ticks(e){if(this._clock.ticks!==e){const t=this.now();if(this.state==="started"){const s=this._clock.getTicksAtTime(t),r=this._clock.frequency.getDurationOfTicks(Math.ceil(s)-s,t),i=t+r;this.emit("stop",i),this._clock.setTicksAtTime(e,i),this.emit("start",i,this._clock.getSecondsAtTime(i))}else this._clock.setTicksAtTime(e,t)}}getTicksAtTime(e){return Math.round(this._clock.getTicksAtTime(e))}getSecondsAtTime(e){return this._clock.getSecondsAtTime(e)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(e){this._clock.frequency.multiplier=e}nextSubdivision(e){if(e=this.toTicks(e),this.state!=="started")return 0;{const t=this.now(),s=this.getTicksAtTime(t),r=e-s%e;return this._clock.nextTickTime(r,t)}}syncSignal(e,t){if(!t){const r=this.now();if(e.getValueAtTime(r)!==0){const i=this.bpm.getValueAtTime(r),a=1/(60/i/this.PPQ);t=e.getValueAtTime(r)/a}else t=0}const s=new Gain(t);return this.bpm.connect(s),s.connect(e._param),this._syncedSignals.push({initial:e.value,ratio:s,signal:e}),e.value=0,this}unsyncSignal(e){for(let t=this._syncedSignals.length-1;t>=0;t--){const s=this._syncedSignals[t];s.signal===e&&(s.ratio.dispose(),s.signal.value=s.initial,this._syncedSignals.splice(t,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),writable(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}}Emitter.mixin(Transport$1);onContextInit(n=>{n.transport=new Transport$1({context:n})});onContextClose(n=>{n.transport.dispose()});class Source extends ToneAudioNode{constructor(e){super(e);this.input=void 0,this._state=new StateTimeline("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=noOp,this._syncedStop=noOp,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new Volume({context:this.context,mute:e.mute,volume:e.volume}),this.volume=this._volume.volume,readOnly(this,"volume"),this.onstop=e.onstop}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{mute:!1,onstop:noOp,volume:0})}get state(){return this._synced?this.context.transport.state==="started"?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}_clampToCurrentTime(e){return this._synced?e:Math.max(e,this.context.currentTime)}start(e,t,s){let r=isUndef(e)&&this._synced?this.context.transport.seconds:this.toSeconds(e);if(r=this._clampToCurrentTime(r),!this._synced&&this._state.getValueAtTime(r)==="started")assert(GT(r,this._state.get(r).time),"Start time must be strictly greater than previous start time"),this._state.cancel(r),this._state.setStateAtTime("started",r),this.log("restart",r),this.restart(r,t,s);else if(this.log("start",r),this._state.setStateAtTime("started",r),this._synced){const i=this._state.get(r);i&&(i.offset=this.toSeconds(defaultArg(t,0)),i.duration=s?this.toSeconds(s):void 0);const a=this.context.transport.schedule(c=>{this._start(c,t,s)},r);this._scheduled.push(a),this.context.transport.state==="started"&&this.context.transport.getSecondsAtTime(this.immediate())>r&&this._syncedStart(this.now(),this.context.transport.seconds)}else assertContextRunning(this.context),this._start(r,t,s);return this}stop(e){let t=isUndef(e)&&this._synced?this.context.transport.seconds:this.toSeconds(e);if(t=this._clampToCurrentTime(t),this._state.getValueAtTime(t)==="started"||isDefined(this._state.getNextState("started",t))){if(this.log("stop",t),!this._synced)this._stop(t);else{const s=this.context.transport.schedule(this._stop.bind(this),t);this._scheduled.push(s)}this._state.cancel(t),this._state.setStateAtTime("stopped",t)}return this}restart(e,t,s){return e=this.toSeconds(e),this._state.getValueAtTime(e)==="started"&&(this._state.cancel(e),this._restart(e,t,s)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(e,t)=>{if(t>0){const s=this._state.get(t);if(s&&s.state==="started"&&s.time!==t){const r=t-this.toSeconds(s.time);let i;s.duration&&(i=this.toSeconds(s.duration)-r),this._start(e,this.toSeconds(s.offset)+r,i)}}},this._syncedStop=e=>{const t=this.context.transport.getSecondsAtTime(Math.max(e-this.sampleTime,0));this._state.getValueAtTime(t)==="started"&&this._stop(e)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach(e=>this.context.transport.clear(e)),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=noOp,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class ToneBufferSource extends OneShotSource{constructor(){super(optionsFromArguments(ToneBufferSource.getDefaults(),arguments,["url","onload"]));this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1;const e=optionsFromArguments(ToneBufferSource.getDefaults(),arguments,["url","onload"]);connect(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new Param({context:this.context,param:this._source.playbackRate,units:"positive",value:e.playbackRate}),this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this._buffer=new ToneAudioBuffer(e.url,e.onload,e.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(OneShotSource.getDefaults(),{url:new ToneAudioBuffer,loop:!1,loopEnd:0,loopStart:0,onload:noOp,onerror:noOp,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(e){this._fadeIn=e}get fadeOut(){return this._fadeOut}set fadeOut(e){this._fadeOut=e}get curve(){return this._curve}set curve(e){this._curve=e}start(e,t,s,r=1){assert(this.buffer.loaded,"buffer is either not set or not loaded");const i=this.toSeconds(e);this._startGain(i,r),this.loop?t=defaultArg(t,this.loopStart):t=defaultArg(t,0);let a=Math.max(this.toSeconds(t),0);if(this.loop){const c=this.toSeconds(this.loopEnd)||this.buffer.duration,u=this.toSeconds(this.loopStart),l=c-u;GTE(a,c)&&(a=(a-u)%l+u),EQ(a,this.buffer.duration)&&(a=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,LT(a,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(i,a)),isDefined(s)){let c=this.toSeconds(s);c=Math.max(c,0),this.stop(i+c)}return this}_stopSource(e){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(e)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(e){this._source.loopStart=this.toSeconds(e)}get loopEnd(){return this._source.loopEnd}set loopEnd(e){this._source.loopEnd=this.toSeconds(e)}get buffer(){return this._buffer}set buffer(e){this._buffer.set(e)}get loop(){return this._source.loop}set loop(e){this._source.loop=e,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}class Noise extends Source{constructor(){super(optionsFromArguments(Noise.getDefaults(),arguments,["type"]));this.name="Noise",this._source=null;const e=optionsFromArguments(Noise.getDefaults(),arguments,["type"]);this._playbackRate=e.playbackRate,this.type=e.type,this._fadeIn=e.fadeIn,this._fadeOut=e.fadeOut}static getDefaults(){return Object.assign(Source.getDefaults(),{fadeIn:0,fadeOut:0,playbackRate:1,type:"white"})}get type(){return this._type}set type(e){if(assert(e in _noiseBuffers,"Noise: invalid type: "+e),this._type!==e&&(this._type=e,this.state==="started")){const t=this.now();this._stop(t),this._start(t)}}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e,this._source&&(this._source.playbackRate.value=e)}_start(e){const t=_noiseBuffers[this._type];this._source=new ToneBufferSource({url:t,context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,loop:!0,onended:()=>this.onstop(this),playbackRate:this._playbackRate}).connect(this.output),this._source.start(this.toSeconds(e),Math.random()*(t.duration-.001))}_stop(e){this._source&&(this._source.stop(this.toSeconds(e)),this._source=null)}get fadeIn(){return this._fadeIn}set fadeIn(e){this._fadeIn=e,this._source&&(this._source.fadeIn=this._fadeIn)}get fadeOut(){return this._fadeOut}set fadeOut(e){this._fadeOut=e,this._source&&(this._source.fadeOut=this._fadeOut)}_restart(e){this._stop(e),this._start(e)}dispose(){return super.dispose(),this._source&&this._source.disconnect(),this}}const BUFFER_LENGTH=44100*5,NUM_CHANNELS=2,_noiseCache={brown:null,pink:null,white:null},_noiseBuffers={get brown(){if(!_noiseCache.brown){const n=[];for(let e=0;e<NUM_CHANNELS;e++){const t=new Float32Array(BUFFER_LENGTH);n[e]=t;let s=0;for(let r=0;r<BUFFER_LENGTH;r++){const i=Math.random()*2-1;t[r]=(s+.02*i)/1.02,s=t[r],t[r]*=3.5}}_noiseCache.brown=new ToneAudioBuffer().fromArray(n)}return _noiseCache.brown},get pink(){if(!_noiseCache.pink){const n=[];for(let e=0;e<NUM_CHANNELS;e++){const t=new Float32Array(BUFFER_LENGTH);n[e]=t;let s,r,i,a,c,u,l;s=r=i=a=c=u=l=0;for(let h=0;h<BUFFER_LENGTH;h++){const d=Math.random()*2-1;s=.99886*s+d*.0555179,r=.99332*r+d*.0750759,i=.969*i+d*.153852,a=.8665*a+d*.3104856,c=.55*c+d*.5329522,u=-.7616*u-d*.016898,t[h]=s+r+i+a+c+u+l+d*.5362,t[h]*=.11,l=d*.115926}}_noiseCache.pink=new ToneAudioBuffer().fromArray(n)}return _noiseCache.pink},get white(){if(!_noiseCache.white){const n=[];for(let e=0;e<NUM_CHANNELS;e++){const t=new Float32Array(BUFFER_LENGTH);n[e]=t;for(let s=0;s<BUFFER_LENGTH;s++)t[s]=Math.random()*2-1}_noiseCache.white=new ToneAudioBuffer().fromArray(n)}return _noiseCache.white}};class UserMedia extends ToneAudioNode{constructor(){super(optionsFromArguments(UserMedia.getDefaults(),arguments,["volume"]));this.name="UserMedia";const e=optionsFromArguments(UserMedia.getDefaults(),arguments,["volume"]);this._volume=this.output=new Volume({context:this.context,volume:e.volume}),this.volume=this._volume.volume,readOnly(this,"volume"),this.mute=e.mute}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{mute:!1,volume:0})}open(e){return __awaiter$1(this,void 0,void 0,function*(){assert(UserMedia.supported,"UserMedia is not supported"),this.state==="started"&&this.close();const t=yield UserMedia.enumerateDevices();isNumber(e)?this._device=t[e]:(this._device=t.find(i=>i.label===e||i.deviceId===e),!this._device&&t.length>0&&(this._device=t[0]),assert(isDefined(this._device),`No matching device ${e}`));const s={audio:{echoCancellation:!1,sampleRate:this.context.sampleRate,noiseSuppression:!1,mozNoiseSuppression:!1}};this._device&&(s.audio.deviceId=this._device.deviceId);const r=yield navigator.mediaDevices.getUserMedia(s);if(!this._stream){this._stream=r;const i=this.context.createMediaStreamSource(r);connect(i,this.output),this._mediaStream=i}return this})}close(){return this._stream&&this._mediaStream&&(this._stream.getAudioTracks().forEach(e=>{e.stop()}),this._stream=void 0,this._mediaStream.disconnect(),this._mediaStream=void 0),this._device=void 0,this}static enumerateDevices(){return __awaiter$1(this,void 0,void 0,function*(){return(yield navigator.mediaDevices.enumerateDevices()).filter(t=>t.kind==="audioinput")})}get state(){return this._stream&&this._stream.active?"started":"stopped"}get deviceId(){if(this._device)return this._device.deviceId}get groupId(){if(this._device)return this._device.groupId}get label(){if(this._device)return this._device.label}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}dispose(){return super.dispose(),this.close(),this._volume.dispose(),this.volume.dispose(),this}static get supported(){return isDefined(navigator.mediaDevices)&&isDefined(navigator.mediaDevices.getUserMedia)}}function generateWaveform(n,e){return __awaiter$1(this,void 0,void 0,function*(){const t=e/n.context.sampleRate,s=new OfflineContext(1,t,n.context.sampleRate);return new n.constructor(Object.assign(n.get(),{frequency:2/t,detune:0,context:s})).toDestination().start(0),(yield s.render()).getChannelData(0)})}class ToneOscillatorNode extends OneShotSource{constructor(){super(optionsFromArguments(ToneOscillatorNode.getDefaults(),arguments,["frequency","type"]));this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator];const e=optionsFromArguments(ToneOscillatorNode.getDefaults(),arguments,["frequency","type"]);connect(this._oscillator,this._gainNode),this.type=e.type,this.frequency=new Param({context:this.context,param:this._oscillator.frequency,units:"frequency",value:e.frequency}),this.detune=new Param({context:this.context,param:this._oscillator.detune,units:"cents",value:e.detune}),readOnly(this,["frequency","detune"])}static getDefaults(){return Object.assign(OneShotSource.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(e){const t=this.toSeconds(e);return this.log("start",t),this._startGain(t),this._oscillator.start(t),this}_stopSource(e){this._oscillator.stop(e)}setPeriodicWave(e){return this._oscillator.setPeriodicWave(e),this}get type(){return this._oscillator.type}set type(e){this._oscillator.type=e}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class Oscillator extends Source{constructor(){super(optionsFromArguments(Oscillator.getDefaults(),arguments,["frequency","type"]));this.name="Oscillator",this._oscillator=null;const e=optionsFromArguments(Oscillator.getDefaults(),arguments,["frequency","type"]);this.frequency=new Signal({context:this.context,units:"frequency",value:e.frequency}),readOnly(this,"frequency"),this.detune=new Signal({context:this.context,units:"cents",value:e.detune}),readOnly(this,"detune"),this._partials=e.partials,this._partialCount=e.partialCount,this._type=e.type,e.partialCount&&e.type!=="custom"&&(this._type=this.baseType+e.partialCount.toString()),this.phase=e.phase}static getDefaults(){return Object.assign(Source.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(e){const t=this.toSeconds(e),s=new ToneOscillatorNode({context:this.context,onended:()=>this.onstop(this)});this._oscillator=s,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(t)}_stop(e){const t=this.toSeconds(e);this._oscillator&&this._oscillator.stop(t)}_restart(e){const t=this.toSeconds(e);return this.log("restart",t),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(t),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if(this._type==="custom")return Oscillator._periodicWaveCache.find(t=>t.phase===this._phase&&deepEquals(t.partials,this._partials));{const e=Oscillator._periodicWaveCache.find(t=>t.type===this._type&&t.phase===this._phase);return this._partialCount=e?e.partialCount:this._partialCount,e}}get type(){return this._type}set type(e){this._type=e;const t=["sine","square","sawtooth","triangle"].indexOf(e)!==-1;if(this._phase===0&&t)this._wave=void 0,this._partialCount=0,this._oscillator!==null&&(this._oscillator.type=e);else{const s=this._getCachedPeriodicWave();if(isDefined(s)){const{partials:r,wave:i}=s;this._wave=i,this._partials=r,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave)}else{const[r,i]=this._getRealImaginary(e,this._phase),a=this.context.createPeriodicWave(r,i);this._wave=a,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave),Oscillator._periodicWaveCache.push({imag:i,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:r,type:this._type,wave:this._wave}),Oscillator._periodicWaveCache.length>100&&Oscillator._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(e){this.partialCount&&this._type!=="custom"&&e!=="custom"?this.type=e+this.partialCount:this.type=e}get partialCount(){return this._partialCount}set partialCount(e){assertRange(e,0);let t=this._type;const s=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(s&&(t=s[1]),this._type!=="custom")e===0?this.type=t:this.type=t+e.toString();else{const r=new Float32Array(e);this._partials.forEach((i,a)=>r[a]=i),this._partials=Array.from(r),this.type=this._type}}_getRealImaginary(e,t){let r=4096/2;const i=new Float32Array(r),a=new Float32Array(r);let c=1;if(e==="custom"){if(c=this._partials.length+1,this._partialCount=this._partials.length,r=c,this._partials.length===0)return[i,a]}else{const u=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(e);u?(c=parseInt(u[2],10)+1,this._partialCount=parseInt(u[2],10),e=u[1],c=Math.max(c,2),r=c):this._partialCount=0,this._partials=[]}for(let u=1;u<r;++u){const l=2/(u*Math.PI);let h;switch(e){case"sine":h=u<=c?1:0,this._partials[u-1]=h;break;case"square":h=u&1?2*l:0,this._partials[u-1]=h;break;case"sawtooth":h=l*(u&1?1:-1),this._partials[u-1]=h;break;case"triangle":u&1?h=2*(l*l)*(u-1>>1&1?-1:1):h=0,this._partials[u-1]=h;break;case"custom":h=this._partials[u-1];break;default:throw new TypeError("Oscillator: invalid type: "+e)}h!==0?(i[u]=-h*Math.sin(t*u),a[u]=h*Math.cos(t*u)):(i[u]=0,a[u]=0)}return[i,a]}_inverseFFT(e,t,s){let r=0;const i=e.length;for(let a=0;a<i;a++)r+=e[a]*Math.cos(a*s)+t[a]*Math.sin(a*s);return r}getInitialValue(){const[e,t]=this._getRealImaginary(this._type,0);let s=0;const r=Math.PI*2,i=32;for(let a=0;a<i;a++)s=Math.max(this._inverseFFT(e,t,a/i*r),s);return clamp(-this._inverseFFT(e,t,this._phase)/s,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(e){this._partials=e,this._partialCount=this._partials.length,e.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(e){this._phase=e*Math.PI/180,this.type=this._type}asArray(e=1024){return __awaiter$1(this,void 0,void 0,function*(){return generateWaveform(this,e)})}dispose(){return super.dispose(),this._oscillator!==null&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}Oscillator._periodicWaveCache=[];class SignalOperator extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(SignalOperator.getDefaults(),arguments,["context"])))}connect(e,t=0,s=0){return connectSignal(this,e,t,s),this}}class WaveShaper extends SignalOperator{constructor(){super(Object.assign(optionsFromArguments(WaveShaper.getDefaults(),arguments,["mapping","length"])));this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper;const e=optionsFromArguments(WaveShaper.getDefaults(),arguments,["mapping","length"]);isArray(e.mapping)||e.mapping instanceof Float32Array?this.curve=Float32Array.from(e.mapping):isFunction(e.mapping)&&this.setMap(e.mapping,e.length)}static getDefaults(){return Object.assign(Signal.getDefaults(),{length:1024})}setMap(e,t=1024){const s=new Float32Array(t);for(let r=0,i=t;r<i;r++){const a=r/(i-1)*2-1;s[r]=e(a,r)}return this.curve=s,this}get curve(){return this._shaper.curve}set curve(e){this._shaper.curve=e}get oversample(){return this._shaper.oversample}set oversample(e){const t=["none","2x","4x"].some(s=>s.includes(e));assert(t,"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=e}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class AudioToGain extends SignalOperator{constructor(){super(...arguments);this.name="AudioToGain",this._norm=new WaveShaper({context:this.context,mapping:e=>(e+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class Multiply extends Signal{constructor(){super(Object.assign(optionsFromArguments(Multiply.getDefaults(),arguments,["value"])));this.name="Multiply",this.override=!1;const e=optionsFromArguments(Multiply.getDefaults(),arguments,["value"]);this._mult=this.input=this.output=new Gain({context:this.context,minValue:e.minValue,maxValue:e.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(Signal.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class AMOscillator extends Source{constructor(){super(optionsFromArguments(AMOscillator.getDefaults(),arguments,["frequency","type","modulationType"]));this.name="AMOscillator",this._modulationScale=new AudioToGain({context:this.context}),this._modulationNode=new Gain({context:this.context});const e=optionsFromArguments(AMOscillator.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new Oscillator({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase,type:e.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new Oscillator({context:this.context,phase:e.phase,type:e.modulationType}),this.harmonicity=new Multiply({context:this.context,units:"positive",value:e.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),readOnly(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(Oscillator.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(e){this._modulator.start(e),this._carrier.start(e)}_stop(e){this._modulator.stop(e),this._carrier.stop(e)}_restart(e){this._modulator.restart(e),this._carrier.restart(e)}get type(){return this._carrier.type}set type(e){this._carrier.type=e}get baseType(){return this._carrier.baseType}set baseType(e){this._carrier.baseType=e}get partialCount(){return this._carrier.partialCount}set partialCount(e){this._carrier.partialCount=e}get modulationType(){return this._modulator.type}set modulationType(e){this._modulator.type=e}get phase(){return this._carrier.phase}set phase(e){this._carrier.phase=e,this._modulator.phase=e}get partials(){return this._carrier.partials}set partials(e){this._carrier.partials=e}asArray(e=1024){return __awaiter$1(this,void 0,void 0,function*(){return generateWaveform(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class FMOscillator extends Source{constructor(){super(optionsFromArguments(FMOscillator.getDefaults(),arguments,["frequency","type","modulationType"]));this.name="FMOscillator",this._modulationNode=new Gain({context:this.context,gain:0});const e=optionsFromArguments(FMOscillator.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new Oscillator({context:this.context,detune:e.detune,frequency:0,onstop:()=>this.onstop(this),phase:e.phase,type:e.type}),this.detune=this._carrier.detune,this.frequency=new Signal({context:this.context,units:"frequency",value:e.frequency}),this._modulator=new Oscillator({context:this.context,phase:e.phase,type:e.modulationType}),this.harmonicity=new Multiply({context:this.context,units:"positive",value:e.harmonicity}),this.modulationIndex=new Multiply({context:this.context,units:"positive",value:e.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),readOnly(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(Oscillator.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(e){this._modulator.start(e),this._carrier.start(e)}_stop(e){this._modulator.stop(e),this._carrier.stop(e)}_restart(e){return this._modulator.restart(e),this._carrier.restart(e),this}get type(){return this._carrier.type}set type(e){this._carrier.type=e}get baseType(){return this._carrier.baseType}set baseType(e){this._carrier.baseType=e}get partialCount(){return this._carrier.partialCount}set partialCount(e){this._carrier.partialCount=e}get modulationType(){return this._modulator.type}set modulationType(e){this._modulator.type=e}get phase(){return this._carrier.phase}set phase(e){this._carrier.phase=e,this._modulator.phase=e}get partials(){return this._carrier.partials}set partials(e){this._carrier.partials=e}asArray(e=1024){return __awaiter$1(this,void 0,void 0,function*(){return generateWaveform(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class PulseOscillator extends Source{constructor(){super(optionsFromArguments(PulseOscillator.getDefaults(),arguments,["frequency","width"]));this.name="PulseOscillator",this._widthGate=new Gain({context:this.context,gain:0}),this._thresh=new WaveShaper({context:this.context,mapping:t=>t<=0?-1:1});const e=optionsFromArguments(PulseOscillator.getDefaults(),arguments,["frequency","width"]);this.width=new Signal({context:this.context,units:"audioRange",value:e.width}),this._triangle=new Oscillator({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),readOnly(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(Source.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(e){e=this.toSeconds(e),this._triangle.start(e),this._widthGate.gain.setValueAtTime(1,e)}_stop(e){e=this.toSeconds(e),this._triangle.stop(e),this._widthGate.gain.cancelScheduledValues(e),this._widthGate.gain.setValueAtTime(0,e)}_restart(e){this._triangle.restart(e),this._widthGate.gain.cancelScheduledValues(e),this._widthGate.gain.setValueAtTime(1,e)}get phase(){return this._triangle.phase}set phase(e){this._triangle.phase=e}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(e){this._triangle.type=e}asArray(e=1024){return __awaiter$1(this,void 0,void 0,function*(){return generateWaveform(this,e)})}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class FatOscillator extends Source{constructor(){super(optionsFromArguments(FatOscillator.getDefaults(),arguments,["frequency","type","spread"]));this.name="FatOscillator",this._oscillators=[];const e=optionsFromArguments(FatOscillator.getDefaults(),arguments,["frequency","type","spread"]);this.frequency=new Signal({context:this.context,units:"frequency",value:e.frequency}),this.detune=new Signal({context:this.context,units:"cents",value:e.detune}),this._spread=e.spread,this._type=e.type,this._phase=e.phase,this._partials=e.partials,this._partialCount=e.partialCount,this.count=e.count,readOnly(this,["frequency","detune"])}static getDefaults(){return Object.assign(Oscillator.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(e){e=this.toSeconds(e),this._forEach(t=>t.start(e))}_stop(e){e=this.toSeconds(e),this._forEach(t=>t.stop(e))}_restart(e){this._forEach(t=>t.restart(e))}_forEach(e){for(let t=0;t<this._oscillators.length;t++)e(this._oscillators[t],t)}get type(){return this._type}set type(e){this._type=e,this._forEach(t=>t.type=e)}get spread(){return this._spread}set spread(e){if(this._spread=e,this._oscillators.length>1){const t=-e/2,s=e/(this._oscillators.length-1);this._forEach((r,i)=>r.detune.value=t+s*i)}}get count(){return this._oscillators.length}set count(e){if(assertRange(e,1),this._oscillators.length!==e){this._forEach(t=>t.dispose()),this._oscillators=[];for(let t=0;t<e;t++){const s=new Oscillator({context:this.context,volume:-6-e*1.1,type:this._type,phase:this._phase+t/e*360,partialCount:this._partialCount,onstop:t===0?()=>this.onstop(this):noOp});this.type==="custom"&&(s.partials=this._partials),this.frequency.connect(s.frequency),this.detune.connect(s.detune),s.detune.overridden=!1,s.connect(this.output),this._oscillators[t]=s}this.spread=this._spread,this.state==="started"&&this._forEach(t=>t.start())}}get phase(){return this._phase}set phase(e){this._phase=e,this._forEach((t,s)=>t.phase=this._phase+s/this.count*360)}get baseType(){return this._oscillators[0].baseType}set baseType(e){this._forEach(t=>t.baseType=e),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(e){this._partials=e,this._partialCount=this._partials.length,e.length&&(this._type="custom",this._forEach(t=>t.partials=e))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(e){this._partialCount=e,this._forEach(t=>t.partialCount=e),this._type=this._oscillators[0].type}asArray(e=1024){return __awaiter$1(this,void 0,void 0,function*(){return generateWaveform(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach(e=>e.dispose()),this}}class PWMOscillator extends Source{constructor(){super(optionsFromArguments(PWMOscillator.getDefaults(),arguments,["frequency","modulationFrequency"]));this.name="PWMOscillator",this.sourceType="pwm",this._scale=new Multiply({context:this.context,value:2});const e=optionsFromArguments(PWMOscillator.getDefaults(),arguments,["frequency","modulationFrequency"]);this._pulse=new PulseOscillator({context:this.context,frequency:e.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new Oscillator({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),readOnly(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(Source.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(e){e=this.toSeconds(e),this._modulator.start(e),this._pulse.start(e)}_stop(e){e=this.toSeconds(e),this._modulator.stop(e),this._pulse.stop(e)}_restart(e){this._modulator.restart(e),this._pulse.restart(e)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(e){this._modulator.phase=e}asArray(e=1024){return __awaiter$1(this,void 0,void 0,function*(){return generateWaveform(this,e)})}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const OmniOscillatorSourceMap={am:AMOscillator,fat:FatOscillator,fm:FMOscillator,oscillator:Oscillator,pulse:PulseOscillator,pwm:PWMOscillator};class OmniOscillator extends Source{constructor(){super(optionsFromArguments(OmniOscillator.getDefaults(),arguments,["frequency","type"]));this.name="OmniOscillator";const e=optionsFromArguments(OmniOscillator.getDefaults(),arguments,["frequency","type"]);this.frequency=new Signal({context:this.context,units:"frequency",value:e.frequency}),this.detune=new Signal({context:this.context,units:"cents",value:e.detune}),readOnly(this,["frequency","detune"]),this.set(e)}static getDefaults(){return Object.assign(Oscillator.getDefaults(),FMOscillator.getDefaults(),AMOscillator.getDefaults(),FatOscillator.getDefaults(),PulseOscillator.getDefaults(),PWMOscillator.getDefaults())}_start(e){this._oscillator.start(e)}_stop(e){this._oscillator.stop(e)}_restart(e){return this._oscillator.restart(e),this}get type(){let e="";return["am","fm","fat"].some(t=>this._sourceType===t)&&(e=this._sourceType),e+this._oscillator.type}set type(e){e.substr(0,2)==="fm"?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(2)):e.substr(0,2)==="am"?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(2)):e.substr(0,3)==="fat"?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(3)):e==="pwm"?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):e==="pulse"?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=e)}get partials(){return this._oscillator.partials}set partials(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partials=e)}get partialCount(){return this._oscillator.partialCount}set partialCount(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partialCount=e)}set(e){return Reflect.has(e,"type")&&e.type&&(this.type=e.type),super.set(e),this}_createNewOscillator(e){if(e!==this._sourceType){this._sourceType=e;const t=OmniOscillatorSourceMap[e],s=this.now();if(this._oscillator){const r=this._oscillator;r.stop(s),this.context.setTimeout(()=>r.dispose(),this.blockTime)}this._oscillator=new t({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),this.state==="started"&&this._oscillator.start(s)}}get phase(){return this._oscillator.phase}set phase(e){this._oscillator.phase=e}get sourceType(){return this._sourceType}set sourceType(e){let t="sine";this._oscillator.type!=="pwm"&&this._oscillator.type!=="pulse"&&(t=this._oscillator.type),e==="fm"?this.type="fm"+t:e==="am"?this.type="am"+t:e==="fat"?this.type="fat"+t:e==="oscillator"?this.type=t:e==="pulse"?this.type="pulse":e==="pwm"&&(this.type="pwm")}_getOscType(e,t){return e instanceof OmniOscillatorSourceMap[t]}get baseType(){return this._oscillator.baseType}set baseType(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&e!=="pulse"&&e!=="pwm"&&(this._oscillator.baseType=e)}get width(){if(this._getOscType(this._oscillator,"pulse"))return this._oscillator.width}get count(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.count}set count(e){this._getOscType(this._oscillator,"fat")&&isNumber(e)&&(this._oscillator.count=e)}get spread(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.spread}set spread(e){this._getOscType(this._oscillator,"fat")&&isNumber(e)&&(this._oscillator.spread=e)}get modulationType(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.modulationType}set modulationType(e){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&isString(e)&&(this._oscillator.modulationType=e)}get modulationIndex(){if(this._getOscType(this._oscillator,"fm"))return this._oscillator.modulationIndex}get harmonicity(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.harmonicity}get modulationFrequency(){if(this._getOscType(this._oscillator,"pwm"))return this._oscillator.modulationFrequency}asArray(e=1024){return __awaiter$1(this,void 0,void 0,function*(){return generateWaveform(this,e)})}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}class Add extends Signal{constructor(){super(Object.assign(optionsFromArguments(Add.getDefaults(),arguments,["value"])));this.override=!1,this.name="Add",this._sum=new Gain({context:this.context}),this.input=this._sum,this.output=this._sum,this.addend=this._param,connectSeries(this._constantSource,this._sum)}static getDefaults(){return Object.assign(Signal.getDefaults(),{value:0})}dispose(){return super.dispose(),this._sum.dispose(),this}}class Scale extends SignalOperator{constructor(){super(Object.assign(optionsFromArguments(Scale.getDefaults(),arguments,["min","max"])));this.name="Scale";const e=optionsFromArguments(Scale.getDefaults(),arguments,["min","max"]);this._mult=this.input=new Multiply({context:this.context,value:e.max-e.min}),this._add=this.output=new Add({context:this.context,value:e.min}),this._min=e.min,this._max=e.max,this.input.connect(this.output)}static getDefaults(){return Object.assign(SignalOperator.getDefaults(),{max:1,min:0})}get min(){return this._min}set min(e){this._min=e,this._setRange()}get max(){return this._max}set max(e){this._max=e,this._setRange()}_setRange(){this._add.value=this._min,this._mult.value=this._max-this._min}dispose(){return super.dispose(),this._add.dispose(),this._mult.dispose(),this}}class Zero extends SignalOperator{constructor(){super(Object.assign(optionsFromArguments(Zero.getDefaults(),arguments)));this.name="Zero",this._gain=new Gain({context:this.context}),this.output=this._gain,this.input=void 0,connect(this.context.getConstant(0),this._gain)}dispose(){return super.dispose(),disconnect(this.context.getConstant(0),this._gain),this}}class LFO extends ToneAudioNode{constructor(){super(optionsFromArguments(LFO.getDefaults(),arguments,["frequency","min","max"]));this.name="LFO",this._stoppedValue=0,this._units="number",this.convert=!0,this._fromType=Param.prototype._fromType,this._toType=Param.prototype._toType,this._is=Param.prototype._is,this._clampValue=Param.prototype._clampValue;const e=optionsFromArguments(LFO.getDefaults(),arguments,["frequency","min","max"]);this._oscillator=new Oscillator(e),this.frequency=this._oscillator.frequency,this._amplitudeGain=new Gain({context:this.context,gain:e.amplitude,units:"normalRange"}),this.amplitude=this._amplitudeGain.gain,this._stoppedSignal=new Signal({context:this.context,units:"audioRange",value:0}),this._zeros=new Zero({context:this.context}),this._a2g=new AudioToGain({context:this.context}),this._scaler=this.output=new Scale({context:this.context,max:e.max,min:e.min}),this.units=e.units,this.min=e.min,this.max=e.max,this._oscillator.chain(this._amplitudeGain,this._a2g,this._scaler),this._zeros.connect(this._a2g),this._stoppedSignal.connect(this._a2g),readOnly(this,["amplitude","frequency"]),this.phase=e.phase}static getDefaults(){return Object.assign(Oscillator.getDefaults(),{amplitude:1,frequency:"4n",max:1,min:0,type:"sine",units:"number"})}start(e){return e=this.toSeconds(e),this._stoppedSignal.setValueAtTime(0,e),this._oscillator.start(e),this}stop(e){return e=this.toSeconds(e),this._stoppedSignal.setValueAtTime(this._stoppedValue,e),this._oscillator.stop(e),this}sync(){return this._oscillator.sync(),this._oscillator.syncFrequency(),this}unsync(){return this._oscillator.unsync(),this._oscillator.unsyncFrequency(),this}_setStoppedValue(){this._stoppedValue=this._oscillator.getInitialValue(),this._stoppedSignal.value=this._stoppedValue}get min(){return this._toType(this._scaler.min)}set min(e){e=this._fromType(e),this._scaler.min=e}get max(){return this._toType(this._scaler.max)}set max(e){e=this._fromType(e),this._scaler.max=e}get type(){return this._oscillator.type}set type(e){this._oscillator.type=e,this._setStoppedValue()}get partials(){return this._oscillator.partials}set partials(e){this._oscillator.partials=e,this._setStoppedValue()}get phase(){return this._oscillator.phase}set phase(e){this._oscillator.phase=e,this._setStoppedValue()}get units(){return this._units}set units(e){const t=this.min,s=this.max;this._units=e,this.min=t,this.max=s}get state(){return this._oscillator.state}connect(e,t,s){return(e instanceof Param||e instanceof Signal)&&(this.convert=e.convert,this.units=e.units),connectSignal(this,e,t,s),this}dispose(){return super.dispose(),this._oscillator.dispose(),this._stoppedSignal.dispose(),this._zeros.dispose(),this._scaler.dispose(),this._a2g.dispose(),this._amplitudeGain.dispose(),this.amplitude.dispose(),this}}function range(n,e=1/0){const t=new WeakMap;return function(s,r){Reflect.defineProperty(s,r,{configurable:!0,enumerable:!0,get:function(){return t.get(this)},set:function(i){assertRange(i,n,e),t.set(this,i)}})}}function timeRange(n,e=1/0){const t=new WeakMap;return function(s,r){Reflect.defineProperty(s,r,{configurable:!0,enumerable:!0,get:function(){return t.get(this)},set:function(i){assertRange(this.toSeconds(i),n,e),t.set(this,i)}})}}class Player$1 extends Source{constructor(){super(optionsFromArguments(Player$1.getDefaults(),arguments,["url","onload"]));this.name="Player",this._activeSources=new Set;const e=optionsFromArguments(Player$1.getDefaults(),arguments,["url","onload"]);this._buffer=new ToneAudioBuffer({onload:this._onload.bind(this,e.onload),onerror:e.onerror,reverse:e.reverse,url:e.url}),this.autostart=e.autostart,this._loop=e.loop,this._loopStart=e.loopStart,this._loopEnd=e.loopEnd,this._playbackRate=e.playbackRate,this.fadeIn=e.fadeIn,this.fadeOut=e.fadeOut}static getDefaults(){return Object.assign(Source.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:noOp,onerror:noOp,playbackRate:1,reverse:!1})}load(e){return __awaiter$1(this,void 0,void 0,function*(){return yield this._buffer.load(e),this._onload(),this})}_onload(e=noOp){e(),this.autostart&&this.start()}_onSourceEnd(e){this.onstop(this),this._activeSources.delete(e),this._activeSources.size===0&&!this._synced&&this._state.getValueAtTime(this.now())==="started"&&(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(e,t,s){return super.start(e,t,s),this}_start(e,t,s){this._loop?t=defaultArg(t,this._loopStart):t=defaultArg(t,0);const r=this.toSeconds(t),i=s;s=defaultArg(s,Math.max(this._buffer.duration-r,0));let a=this.toSeconds(s);a=a/this._playbackRate,e=this.toSeconds(e);const c=new ToneBufferSource({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);!this._loop&&!this._synced&&(this._state.cancel(e+a),this._state.setStateAtTime("stopped",e+a,{implicitEnd:!0})),this._activeSources.add(c),this._loop&&isUndef(i)?c.start(e,r):c.start(e,r,a-this.toSeconds(this.fadeOut))}_stop(e){const t=this.toSeconds(e);this._activeSources.forEach(s=>s.stop(t))}restart(e,t,s){return super.restart(e,t,s),this}_restart(e,t,s){this._stop(e),this._start(e,t,s)}seek(e,t){const s=this.toSeconds(t);if(this._state.getValueAtTime(s)==="started"){const r=this.toSeconds(e);this._stop(s),this._start(s,r)}return this}setLoopPoints(e,t){return this.loopStart=e,this.loopEnd=t,this}get loopStart(){return this._loopStart}set loopStart(e){this._loopStart=e,this.buffer.loaded&&assertRange(this.toSeconds(e),0,this.buffer.duration),this._activeSources.forEach(t=>{t.loopStart=e})}get loopEnd(){return this._loopEnd}set loopEnd(e){this._loopEnd=e,this.buffer.loaded&&assertRange(this.toSeconds(e),0,this.buffer.duration),this._activeSources.forEach(t=>{t.loopEnd=e})}get buffer(){return this._buffer}set buffer(e){this._buffer.set(e)}get loop(){return this._loop}set loop(e){if(this._loop!==e&&(this._loop=e,this._activeSources.forEach(t=>{t.loop=e}),e)){const t=this._state.getNextState("stopped",this.now());t&&this._state.cancel(t.time)}}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e;const t=this.now(),s=this._state.getNextState("stopped",t);s&&s.implicitEnd&&(this._state.cancel(s.time),this._activeSources.forEach(r=>r.cancelStop())),this._activeSources.forEach(r=>{r.playbackRate.setValueAtTime(e,t)})}get reverse(){return this._buffer.reverse}set reverse(e){this._buffer.reverse=e}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach(e=>e.dispose()),this._activeSources.clear(),this._buffer.dispose(),this}}__decorate([timeRange(0)],Player$1.prototype,"fadeIn",void 0);__decorate([timeRange(0)],Player$1.prototype,"fadeOut",void 0);class Players extends ToneAudioNode{constructor(){super(optionsFromArguments(Players.getDefaults(),arguments,["urls","onload"],"urls"));this.name="Players",this.input=void 0,this._players=new Map;const e=optionsFromArguments(Players.getDefaults(),arguments,["urls","onload"],"urls");this._volume=this.output=new Volume({context:this.context,volume:e.volume}),this.volume=this._volume.volume,readOnly(this,"volume"),this._buffers=new ToneAudioBuffers({urls:e.urls,onload:e.onload,baseUrl:e.baseUrl,onerror:e.onerror}),this.mute=e.mute,this._fadeIn=e.fadeIn,this._fadeOut=e.fadeOut}static getDefaults(){return Object.assign(Source.getDefaults(),{baseUrl:"",fadeIn:0,fadeOut:0,mute:!1,onload:noOp,onerror:noOp,urls:{},volume:0})}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}get fadeIn(){return this._fadeIn}set fadeIn(e){this._fadeIn=e,this._players.forEach(t=>{t.fadeIn=e})}get fadeOut(){return this._fadeOut}set fadeOut(e){this._fadeOut=e,this._players.forEach(t=>{t.fadeOut=e})}get state(){return Array.from(this._players).some(([t,s])=>s.state==="started")?"started":"stopped"}has(e){return this._buffers.has(e)}player(e){if(assert(this.has(e),`No Player with the name ${e} exists on this object`),!this._players.has(e)){const t=new Player$1({context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,url:this._buffers.get(e)}).connect(this.output);this._players.set(e,t)}return this._players.get(e)}get loaded(){return this._buffers.loaded}add(e,t,s){return assert(!this._buffers.has(e),"A buffer with that name already exists on this object"),this._buffers.add(e,t,s),this}stopAll(e){return this._players.forEach(t=>t.stop(e)),this}dispose(){return super.dispose(),this._volume.dispose(),this.volume.dispose(),this._players.forEach(e=>e.dispose()),this._buffers.dispose(),this}}class GrainPlayer extends Source{constructor(){super(optionsFromArguments(GrainPlayer.getDefaults(),arguments,["url","onload"]));this.name="GrainPlayer",this._loopStart=0,this._loopEnd=0,this._activeSources=[];const e=optionsFromArguments(GrainPlayer.getDefaults(),arguments,["url","onload"]);this.buffer=new ToneAudioBuffer({onload:e.onload,onerror:e.onerror,reverse:e.reverse,url:e.url}),this._clock=new Clock({context:this.context,callback:this._tick.bind(this),frequency:1/e.grainSize}),this._playbackRate=e.playbackRate,this._grainSize=e.grainSize,this._overlap=e.overlap,this.detune=e.detune,this.overlap=e.overlap,this.loop=e.loop,this.playbackRate=e.playbackRate,this.grainSize=e.grainSize,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.reverse=e.reverse,this._clock.on("stop",this._onstop.bind(this))}static getDefaults(){return Object.assign(Source.getDefaults(),{onload:noOp,onerror:noOp,overlap:.1,grainSize:.2,playbackRate:1,detune:0,loop:!1,loopStart:0,loopEnd:0,reverse:!1})}_start(e,t,s){t=defaultArg(t,0),t=this.toSeconds(t),e=this.toSeconds(e);const r=1/this._clock.frequency.getValueAtTime(e);this._clock.start(e,t/r),s&&this.stop(e+this.toSeconds(s))}restart(e,t,s){return super.restart(e,t,s),this}_restart(e,t,s){this._stop(e),this._start(e,t,s)}_stop(e){this._clock.stop(e)}_onstop(e){this._activeSources.forEach(t=>{t.fadeOut=0,t.stop(e)}),this.onstop(this)}_tick(e){const t=this._clock.getTicksAtTime(e),s=t*this._grainSize;if(this.log("offset",s),!this.loop&&s>this.buffer.duration){this.stop(e);return}const r=s<this._overlap?0:this._overlap,i=new ToneBufferSource({context:this.context,url:this.buffer,fadeIn:r,fadeOut:this._overlap,loop:this.loop,loopStart:this._loopStart,loopEnd:this._loopEnd,playbackRate:intervalToFrequencyRatio(this.detune/100)}).connect(this.output);i.start(e,this._grainSize*t),i.stop(e+this._grainSize/this.playbackRate),this._activeSources.push(i),i.onended=()=>{const a=this._activeSources.indexOf(i);a!==-1&&this._activeSources.splice(a,1)}}get playbackRate(){return this._playbackRate}set playbackRate(e){assertRange(e,.001),this._playbackRate=e,this.grainSize=this._grainSize}get loopStart(){return this._loopStart}set loopStart(e){this.buffer.loaded&&assertRange(this.toSeconds(e),0,this.buffer.duration),this._loopStart=this.toSeconds(e)}get loopEnd(){return this._loopEnd}set loopEnd(e){this.buffer.loaded&&assertRange(this.toSeconds(e),0,this.buffer.duration),this._loopEnd=this.toSeconds(e)}get reverse(){return this.buffer.reverse}set reverse(e){this.buffer.reverse=e}get grainSize(){return this._grainSize}set grainSize(e){this._grainSize=this.toSeconds(e),this._clock.frequency.setValueAtTime(this._playbackRate/this._grainSize,this.now())}get overlap(){return this._overlap}set overlap(e){const t=this.toSeconds(e);assertRange(t,0),this._overlap=t}get loaded(){return this.buffer.loaded}dispose(){return super.dispose(),this.buffer.dispose(),this._clock.dispose(),this._activeSources.forEach(e=>e.dispose()),this}}class Abs extends SignalOperator{constructor(){super(...arguments);this.name="Abs",this._abs=new WaveShaper({context:this.context,mapping:e=>Math.abs(e)<.001?0:Math.abs(e)}),this.input=this._abs,this.output=this._abs}dispose(){return super.dispose(),this._abs.dispose(),this}}class GainToAudio extends SignalOperator{constructor(){super(...arguments);this.name="GainToAudio",this._norm=new WaveShaper({context:this.context,mapping:e=>Math.abs(e)*2-1}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class Negate extends SignalOperator{constructor(){super(...arguments);this.name="Negate",this._multiply=new Multiply({context:this.context,value:-1}),this.input=this._multiply,this.output=this._multiply}dispose(){return super.dispose(),this._multiply.dispose(),this}}class Subtract extends Signal{constructor(){super(Object.assign(optionsFromArguments(Subtract.getDefaults(),arguments,["value"])));this.override=!1,this.name="Subtract",this._sum=new Gain({context:this.context}),this.input=this._sum,this.output=this._sum,this._neg=new Negate({context:this.context}),this.subtrahend=this._param,connectSeries(this._constantSource,this._neg,this._sum)}static getDefaults(){return Object.assign(Signal.getDefaults(),{value:0})}dispose(){return super.dispose(),this._neg.dispose(),this._sum.dispose(),this}}class GreaterThanZero extends SignalOperator{constructor(){super(Object.assign(optionsFromArguments(GreaterThanZero.getDefaults(),arguments)));this.name="GreaterThanZero",this._thresh=this.output=new WaveShaper({context:this.context,length:127,mapping:e=>e<=0?0:1}),this._scale=this.input=new Multiply({context:this.context,value:1e4}),this._scale.connect(this._thresh)}dispose(){return super.dispose(),this._scale.dispose(),this._thresh.dispose(),this}}class GreaterThan extends Signal{constructor(){super(Object.assign(optionsFromArguments(GreaterThan.getDefaults(),arguments,["value"])));this.name="GreaterThan",this.override=!1;const e=optionsFromArguments(GreaterThan.getDefaults(),arguments,["value"]);this._subtract=this.input=new Subtract({context:this.context,value:e.value}),this._gtz=this.output=new GreaterThanZero({context:this.context}),this.comparator=this._param=this._subtract.subtrahend,readOnly(this,"comparator"),this._subtract.connect(this._gtz)}static getDefaults(){return Object.assign(Signal.getDefaults(),{value:0})}dispose(){return super.dispose(),this._gtz.dispose(),this._subtract.dispose(),this.comparator.dispose(),this}}class Pow extends SignalOperator{constructor(){super(Object.assign(optionsFromArguments(Pow.getDefaults(),arguments,["value"])));this.name="Pow";const e=optionsFromArguments(Pow.getDefaults(),arguments,["value"]);this._exponentScaler=this.input=this.output=new WaveShaper({context:this.context,mapping:this._expFunc(e.value),length:8192}),this._exponent=e.value}static getDefaults(){return Object.assign(SignalOperator.getDefaults(),{value:1})}_expFunc(e){return t=>Math.pow(Math.abs(t),e)}get value(){return this._exponent}set value(e){this._exponent=e,this._exponentScaler.setMap(this._expFunc(this._exponent))}dispose(){return super.dispose(),this._exponentScaler.dispose(),this}}class ScaleExp extends Scale{constructor(){super(Object.assign(optionsFromArguments(ScaleExp.getDefaults(),arguments,["min","max","exponent"])));this.name="ScaleExp";const e=optionsFromArguments(ScaleExp.getDefaults(),arguments,["min","max","exponent"]);this.input=this._exp=new Pow({context:this.context,value:e.exponent}),this._exp.connect(this._mult)}static getDefaults(){return Object.assign(Scale.getDefaults(),{exponent:1})}get exponent(){return this._exp.value}set exponent(e){this._exp.value=e}dispose(){return super.dispose(),this._exp.dispose(),this}}class SyncedSignal extends Signal{constructor(){super(optionsFromArguments(Signal.getDefaults(),arguments,["value","units"]));this.name="SyncedSignal",this.override=!1;const e=optionsFromArguments(Signal.getDefaults(),arguments,["value","units"]);this._lastVal=e.value,this._synced=this.context.transport.scheduleRepeat(this._onTick.bind(this),"1i"),this._syncedCallback=this._anchorValue.bind(this),this.context.transport.on("start",this._syncedCallback),this.context.transport.on("pause",this._syncedCallback),this.context.transport.on("stop",this._syncedCallback),this._constantSource.disconnect(),this._constantSource.stop(0),this._constantSource=this.output=new ToneConstantSource({context:this.context,offset:e.value,units:e.units}).start(0),this.setValueAtTime(e.value,0)}_onTick(e){const t=super.getValueAtTime(this.context.transport.seconds);this._lastVal!==t&&(this._lastVal=t,this._constantSource.offset.setValueAtTime(t,e))}_anchorValue(e){const t=super.getValueAtTime(this.context.transport.seconds);this._lastVal=t,this._constantSource.offset.cancelAndHoldAtTime(e),this._constantSource.offset.setValueAtTime(t,e)}getValueAtTime(e){const t=new TransportTimeClass(this.context,e).toSeconds();return super.getValueAtTime(t)}setValueAtTime(e,t){const s=new TransportTimeClass(this.context,t).toSeconds();return super.setValueAtTime(e,s),this}linearRampToValueAtTime(e,t){const s=new TransportTimeClass(this.context,t).toSeconds();return super.linearRampToValueAtTime(e,s),this}exponentialRampToValueAtTime(e,t){const s=new TransportTimeClass(this.context,t).toSeconds();return super.exponentialRampToValueAtTime(e,s),this}setTargetAtTime(e,t,s){const r=new TransportTimeClass(this.context,t).toSeconds();return super.setTargetAtTime(e,r,s),this}cancelScheduledValues(e){const t=new TransportTimeClass(this.context,e).toSeconds();return super.cancelScheduledValues(t),this}setValueCurveAtTime(e,t,s,r){const i=new TransportTimeClass(this.context,t).toSeconds();return s=this.toSeconds(s),super.setValueCurveAtTime(e,i,s,r),this}cancelAndHoldAtTime(e){const t=new TransportTimeClass(this.context,e).toSeconds();return super.cancelAndHoldAtTime(t),this}setRampPoint(e){const t=new TransportTimeClass(this.context,e).toSeconds();return super.setRampPoint(t),this}exponentialRampTo(e,t,s){const r=new TransportTimeClass(this.context,s).toSeconds();return super.exponentialRampTo(e,t,r),this}linearRampTo(e,t,s){const r=new TransportTimeClass(this.context,s).toSeconds();return super.linearRampTo(e,t,r),this}targetRampTo(e,t,s){const r=new TransportTimeClass(this.context,s).toSeconds();return super.targetRampTo(e,t,r),this}dispose(){return super.dispose(),this.context.transport.clear(this._synced),this.context.transport.off("start",this._syncedCallback),this.context.transport.off("pause",this._syncedCallback),this.context.transport.off("stop",this._syncedCallback),this._constantSource.dispose(),this}}class Envelope extends ToneAudioNode{constructor(){super(optionsFromArguments(Envelope.getDefaults(),arguments,["attack","decay","sustain","release"]));this.name="Envelope",this._sig=new Signal({context:this.context,value:0}),this.output=this._sig,this.input=void 0;const e=optionsFromArguments(Envelope.getDefaults(),arguments,["attack","decay","sustain","release"]);this.attack=e.attack,this.decay=e.decay,this.sustain=e.sustain,this.release=e.release,this.attackCurve=e.attackCurve,this.releaseCurve=e.releaseCurve,this.decayCurve=e.decayCurve}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(e,t){if(isString(e))return e;{let s;for(s in EnvelopeCurves)if(EnvelopeCurves[s][t]===e)return s;return e}}_setCurve(e,t,s){if(isString(s)&&Reflect.has(EnvelopeCurves,s)){const r=EnvelopeCurves[s];isObject(r)?e!=="_decayCurve"&&(this[e]=r[t]):this[e]=r}else if(isArray(s)&&e!=="_decayCurve")this[e]=s;else throw new Error("Envelope: invalid curve: "+s)}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(e){this._setCurve("_attackCurve","In",e)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(e){this._setCurve("_releaseCurve","Out",e)}get decayCurve(){return this._decayCurve}set decayCurve(e){assert(["linear","exponential"].some(t=>t===e),`Invalid envelope curve: ${e}`),this._decayCurve=e}triggerAttack(e,t=1){this.log("triggerAttack",e,t),e=this.toSeconds(e);let r=this.toSeconds(this.attack);const i=this.toSeconds(this.decay),a=this.getValueAtTime(e);if(a>0){const c=1/r;r=(1-a)/c}if(r<this.sampleTime)this._sig.cancelScheduledValues(e),this._sig.setValueAtTime(t,e);else if(this._attackCurve==="linear")this._sig.linearRampTo(t,r,e);else if(this._attackCurve==="exponential")this._sig.targetRampTo(t,r,e);else{this._sig.cancelAndHoldAtTime(e);let c=this._attackCurve;for(let u=1;u<c.length;u++)if(c[u-1]<=a&&a<=c[u]){c=this._attackCurve.slice(u),c[0]=a;break}this._sig.setValueCurveAtTime(c,e,r,t)}if(i&&this.sustain<1){const c=t*this.sustain,u=e+r;this.log("decay",u),this._decayCurve==="linear"?this._sig.linearRampToValueAtTime(c,i+u):this._sig.exponentialApproachValueAtTime(c,u,i)}return this}triggerRelease(e){this.log("triggerRelease",e),e=this.toSeconds(e);const t=this.getValueAtTime(e);if(t>0){const s=this.toSeconds(this.release);s<this.sampleTime?this._sig.setValueAtTime(0,e):this._releaseCurve==="linear"?this._sig.linearRampTo(0,s,e):this._releaseCurve==="exponential"?this._sig.targetRampTo(0,s,e):(assert(isArray(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(e),this._sig.setValueCurveAtTime(this._releaseCurve,e,s,t))}return this}getValueAtTime(e){return this._sig.getValueAtTime(e)}triggerAttackRelease(e,t,s=1){return t=this.toSeconds(t),this.triggerAttack(t,s),this.triggerRelease(t+this.toSeconds(e)),this}cancel(e){return this._sig.cancelScheduledValues(this.toSeconds(e)),this}connect(e,t=0,s=0){return connectSignal(this,e,t,s),this}asArray(e=1024){return __awaiter$1(this,void 0,void 0,function*(){const t=e/this.context.sampleRate,s=new OfflineContext(1,t,this.context.sampleRate),r=this.toSeconds(this.attack)+this.toSeconds(this.decay),i=r+this.toSeconds(this.release),a=i*.1,c=i+a,u=new this.constructor(Object.assign(this.get(),{attack:t*this.toSeconds(this.attack)/c,decay:t*this.toSeconds(this.decay)/c,release:t*this.toSeconds(this.release)/c,context:s}));return u._sig.toDestination(),u.triggerAttackRelease(t*(r+a)/c,0),(yield s.render()).getChannelData(0)})}dispose(){return super.dispose(),this._sig.dispose(),this}}__decorate([timeRange(0)],Envelope.prototype,"attack",void 0);__decorate([timeRange(0)],Envelope.prototype,"decay",void 0);__decorate([range(0,1)],Envelope.prototype,"sustain",void 0);__decorate([timeRange(0)],Envelope.prototype,"release",void 0);const EnvelopeCurves=(()=>{const n=128;let e,t;const s=[];for(e=0;e<n;e++)s[e]=Math.sin(e/(n-1)*(Math.PI/2));const r=[],i=6.4;for(e=0;e<n-1;e++){t=e/(n-1);const f=Math.sin(t*(Math.PI*2)*i-Math.PI/2)+1;r[e]=f/10+t*.83}r[n-1]=1;const a=[],c=5;for(e=0;e<n;e++)a[e]=Math.ceil(e/(n-1)*c)/c;const u=[];for(e=0;e<n;e++)t=e/(n-1),u[e]=.5*(1-Math.cos(Math.PI*t));const l=[];for(e=0;e<n;e++){t=e/(n-1);const f=Math.pow(t,3)*4+.2,y=Math.cos(f*Math.PI*2*t);l[e]=Math.abs(y*(1-t))}function h(f){const y=new Array(f.length);for(let g=0;g<f.length;g++)y[g]=1-f[g];return y}function d(f){return f.slice(0).reverse()}return{bounce:{In:h(l),Out:l},cosine:{In:s,Out:d(s)},exponential:"exponential",linear:"linear",ripple:{In:r,Out:h(r)},sine:{In:u,Out:h(u)},step:{In:a,Out:h(a)}}})();class Instrument$2 extends ToneAudioNode{constructor(){super(optionsFromArguments(Instrument$2.getDefaults(),arguments));this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease;const e=optionsFromArguments(Instrument$2.getDefaults(),arguments);this._volume=this.output=new Volume({context:this.context,volume:e.volume}),this.volume=this._volume.volume,readOnly(this,"volume")}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0)),this}_syncState(){let e=!1;return this._synced||(this._synced=!0,e=!0),e}_syncMethod(e,t){const s=this["_original_"+e]=this[e];this[e]=(...r)=>{const i=r[t],a=this.context.transport.schedule(c=>{r[t]=c,s.apply(this,r)},i);this._scheduledEvents.push(a)}}unsync(){return this._scheduledEvents.forEach(e=>this.context.transport.clear(e)),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease),this}triggerAttackRelease(e,t,s,r){const i=this.toSeconds(s),a=this.toSeconds(t);return this.triggerAttack(e,i,r),this.triggerRelease(i+a),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class Monophonic extends Instrument$2{constructor(){super(optionsFromArguments(Monophonic.getDefaults(),arguments));const e=optionsFromArguments(Monophonic.getDefaults(),arguments);this.portamento=e.portamento,this.onsilence=e.onsilence}static getDefaults(){return Object.assign(Instrument$2.getDefaults(),{detune:0,onsilence:noOp,portamento:0})}triggerAttack(e,t,s=1){this.log("triggerAttack",e,t,s);const r=this.toSeconds(t);return this._triggerEnvelopeAttack(r,s),this.setNote(e,r),this}triggerRelease(e){this.log("triggerRelease",e);const t=this.toSeconds(e);return this._triggerEnvelopeRelease(t),this}setNote(e,t){const s=this.toSeconds(t),r=e instanceof FrequencyClass?e.toFrequency():e;if(this.portamento>0&&this.getLevelAtTime(s)>.05){const i=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(r,i,s)}else this.frequency.setValueAtTime(r,s);return this}}__decorate([timeRange(0)],Monophonic.prototype,"portamento",void 0);class AmplitudeEnvelope extends Envelope{constructor(){super(optionsFromArguments(AmplitudeEnvelope.getDefaults(),arguments,["attack","decay","sustain","release"]));this.name="AmplitudeEnvelope",this._gainNode=new Gain({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class Synth extends Monophonic{constructor(){super(optionsFromArguments(Synth.getDefaults(),arguments));this.name="Synth";const e=optionsFromArguments(Synth.getDefaults(),arguments);this.oscillator=new OmniOscillator(Object.assign({context:this.context,detune:e.detune,onstop:()=>this.onsilence(this)},e.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new AmplitudeEnvelope(Object.assign({context:this.context},e.envelope)),this.oscillator.chain(this.envelope,this.output),readOnly(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(Monophonic.getDefaults(),{envelope:Object.assign(omitFromObject(Envelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(omitFromObject(OmniOscillator.getDefaults(),[...Object.keys(Source.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(e,t){if(this.envelope.triggerAttack(e,t),this.oscillator.start(e),this.envelope.sustain===0){const s=this.toSeconds(this.envelope.attack),r=this.toSeconds(this.envelope.decay);this.oscillator.stop(e+s+r)}}_triggerEnvelopeRelease(e){this.envelope.triggerRelease(e),this.oscillator.stop(e+this.toSeconds(this.envelope.release))}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class ModulationSynth extends Monophonic{constructor(){super(optionsFromArguments(ModulationSynth.getDefaults(),arguments));this.name="ModulationSynth";const e=optionsFromArguments(ModulationSynth.getDefaults(),arguments);this._carrier=new Synth({context:this.context,oscillator:e.oscillator,envelope:e.envelope,onsilence:()=>this.onsilence(this),volume:-10}),this._modulator=new Synth({context:this.context,oscillator:e.modulation,envelope:e.modulationEnvelope,volume:-10}),this.oscillator=this._carrier.oscillator,this.envelope=this._carrier.envelope,this.modulation=this._modulator.oscillator,this.modulationEnvelope=this._modulator.envelope,this.frequency=new Signal({context:this.context,units:"frequency"}),this.detune=new Signal({context:this.context,value:e.detune,units:"cents"}),this.harmonicity=new Multiply({context:this.context,value:e.harmonicity,minValue:0}),this._modulationNode=new Gain({context:this.context,gain:0}),readOnly(this,["frequency","harmonicity","oscillator","envelope","modulation","modulationEnvelope","detune"])}static getDefaults(){return Object.assign(Monophonic.getDefaults(),{harmonicity:3,oscillator:Object.assign(omitFromObject(OmniOscillator.getDefaults(),[...Object.keys(Source.getDefaults()),"frequency","detune"]),{type:"sine"}),envelope:Object.assign(omitFromObject(Envelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{attack:.01,decay:.01,sustain:1,release:.5}),modulation:Object.assign(omitFromObject(OmniOscillator.getDefaults(),[...Object.keys(Source.getDefaults()),"frequency","detune"]),{type:"square"}),modulationEnvelope:Object.assign(omitFromObject(Envelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{attack:.5,decay:0,sustain:1,release:.5})})}_triggerEnvelopeAttack(e,t){this._carrier._triggerEnvelopeAttack(e,t),this._modulator._triggerEnvelopeAttack(e,t)}_triggerEnvelopeRelease(e){return this._carrier._triggerEnvelopeRelease(e),this._modulator._triggerEnvelopeRelease(e),this}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}dispose(){return super.dispose(),this._carrier.dispose(),this._modulator.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._modulationNode.dispose(),this}}class AMSynth extends ModulationSynth{constructor(){super(optionsFromArguments(AMSynth.getDefaults(),arguments));this.name="AMSynth",this._modulationScale=new AudioToGain({context:this.context}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output)}dispose(){return super.dispose(),this._modulationScale.dispose(),this}}class BiquadFilter extends ToneAudioNode{constructor(){super(optionsFromArguments(BiquadFilter.getDefaults(),arguments,["frequency","type"]));this.name="BiquadFilter";const e=optionsFromArguments(BiquadFilter.getDefaults(),arguments,["frequency","type"]);this._filter=this.context.createBiquadFilter(),this.input=this.output=this._filter,this.Q=new Param({context:this.context,units:"number",value:e.Q,param:this._filter.Q}),this.frequency=new Param({context:this.context,units:"frequency",value:e.frequency,param:this._filter.frequency}),this.detune=new Param({context:this.context,units:"cents",value:e.detune,param:this._filter.detune}),this.gain=new Param({context:this.context,units:"decibels",convert:!1,value:e.gain,param:this._filter.gain}),this.type=e.type}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{Q:1,type:"lowpass",frequency:350,detune:0,gain:0})}get type(){return this._filter.type}set type(e){assert(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(e)!==-1,`Invalid filter type: ${e}`),this._filter.type=e}getFrequencyResponse(e=128){const t=new Float32Array(e);for(let a=0;a<e;a++){const u=Math.pow(a/e,2)*(2e4-20)+20;t[a]=u}const s=new Float32Array(e),r=new Float32Array(e),i=this.context.createBiquadFilter();return i.type=this.type,i.Q.value=this.Q.value,i.frequency.value=this.frequency.value,i.gain.value=this.gain.value,i.getFrequencyResponse(t,s,r),s}dispose(){return super.dispose(),this._filter.disconnect(),this.Q.dispose(),this.frequency.dispose(),this.gain.dispose(),this.detune.dispose(),this}}class Filter extends ToneAudioNode{constructor(){super(optionsFromArguments(Filter.getDefaults(),arguments,["frequency","type","rolloff"]));this.name="Filter",this.input=new Gain({context:this.context}),this.output=new Gain({context:this.context}),this._filters=[];const e=optionsFromArguments(Filter.getDefaults(),arguments,["frequency","type","rolloff"]);this._filters=[],this.Q=new Signal({context:this.context,units:"positive",value:e.Q}),this.frequency=new Signal({context:this.context,units:"frequency",value:e.frequency}),this.detune=new Signal({context:this.context,units:"cents",value:e.detune}),this.gain=new Signal({context:this.context,units:"decibels",convert:!1,value:e.gain}),this._type=e.type,this.rolloff=e.rolloff,readOnly(this,["detune","frequency","gain","Q"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{Q:1,detune:0,frequency:350,gain:0,rolloff:-12,type:"lowpass"})}get type(){return this._type}set type(e){assert(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(e)!==-1,`Invalid filter type: ${e}`),this._type=e,this._filters.forEach(s=>s.type=e)}get rolloff(){return this._rolloff}set rolloff(e){const t=isNumber(e)?e:parseInt(e,10),s=[-12,-24,-48,-96];let r=s.indexOf(t);assert(r!==-1,`rolloff can only be ${s.join(", ")}`),r+=1,this._rolloff=t,this.input.disconnect(),this._filters.forEach(i=>i.disconnect()),this._filters=new Array(r);for(let i=0;i<r;i++){const a=new BiquadFilter({context:this.context});a.type=this._type,this.frequency.connect(a.frequency),this.detune.connect(a.detune),this.Q.connect(a.Q),this.gain.connect(a.gain),this._filters[i]=a}this._internalChannels=this._filters,connectSeries(this.input,...this._internalChannels,this.output)}getFrequencyResponse(e=128){const t=new BiquadFilter({frequency:this.frequency.value,gain:this.gain.value,Q:this.Q.value,type:this._type,detune:this.detune.value}),s=new Float32Array(e).map(()=>1);return this._filters.forEach(()=>{t.getFrequencyResponse(e).forEach((i,a)=>s[a]*=i)}),t.dispose(),s}dispose(){return super.dispose(),this._filters.forEach(e=>{e.dispose()}),writable(this,["detune","frequency","gain","Q"]),this.frequency.dispose(),this.Q.dispose(),this.detune.dispose(),this.gain.dispose(),this}}class FrequencyEnvelope extends Envelope{constructor(){super(optionsFromArguments(FrequencyEnvelope.getDefaults(),arguments,["attack","decay","sustain","release"]));this.name="FrequencyEnvelope";const e=optionsFromArguments(FrequencyEnvelope.getDefaults(),arguments,["attack","decay","sustain","release"]);this._octaves=e.octaves,this._baseFrequency=this.toFrequency(e.baseFrequency),this._exponent=this.input=new Pow({context:this.context,value:e.exponent}),this._scale=this.output=new Scale({context:this.context,min:this._baseFrequency,max:this._baseFrequency*Math.pow(2,this._octaves)}),this._sig.chain(this._exponent,this._scale)}static getDefaults(){return Object.assign(Envelope.getDefaults(),{baseFrequency:200,exponent:1,octaves:4})}get baseFrequency(){return this._baseFrequency}set baseFrequency(e){const t=this.toFrequency(e);assertRange(t,0),this._baseFrequency=t,this._scale.min=this._baseFrequency,this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(e){this._octaves=e,this._scale.max=this._baseFrequency*Math.pow(2,e)}get exponent(){return this._exponent.value}set exponent(e){this._exponent.value=e}dispose(){return super.dispose(),this._exponent.dispose(),this._scale.dispose(),this}}class MonoSynth extends Monophonic{constructor(){super(optionsFromArguments(MonoSynth.getDefaults(),arguments));this.name="MonoSynth";const e=optionsFromArguments(MonoSynth.getDefaults(),arguments);this.oscillator=new OmniOscillator(Object.assign(e.oscillator,{context:this.context,detune:e.detune,onstop:()=>this.onsilence(this)})),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.filter=new Filter(Object.assign(e.filter,{context:this.context})),this.filterEnvelope=new FrequencyEnvelope(Object.assign(e.filterEnvelope,{context:this.context})),this.envelope=new AmplitudeEnvelope(Object.assign(e.envelope,{context:this.context})),this.oscillator.chain(this.filter,this.envelope,this.output),this.filterEnvelope.connect(this.filter.frequency),readOnly(this,["oscillator","frequency","detune","filter","filterEnvelope","envelope"])}static getDefaults(){return Object.assign(Monophonic.getDefaults(),{envelope:Object.assign(omitFromObject(Envelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.9}),filter:Object.assign(omitFromObject(Filter.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{Q:1,rolloff:-12,type:"lowpass"}),filterEnvelope:Object.assign(omitFromObject(FrequencyEnvelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{attack:.6,baseFrequency:200,decay:.2,exponent:2,octaves:3,release:2,sustain:.5}),oscillator:Object.assign(omitFromObject(OmniOscillator.getDefaults(),Object.keys(Source.getDefaults())),{type:"sawtooth"})})}_triggerEnvelopeAttack(e,t=1){if(this.envelope.triggerAttack(e,t),this.filterEnvelope.triggerAttack(e),this.oscillator.start(e),this.envelope.sustain===0){const s=this.toSeconds(this.envelope.attack),r=this.toSeconds(this.envelope.decay);this.oscillator.stop(e+s+r)}}_triggerEnvelopeRelease(e){this.envelope.triggerRelease(e),this.filterEnvelope.triggerRelease(e),this.oscillator.stop(e+this.toSeconds(this.envelope.release))}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this.filterEnvelope.dispose(),this.filter.dispose(),this}}class DuoSynth extends Monophonic{constructor(){super(optionsFromArguments(DuoSynth.getDefaults(),arguments));this.name="DuoSynth";const e=optionsFromArguments(DuoSynth.getDefaults(),arguments);this.voice0=new MonoSynth(Object.assign(e.voice0,{context:this.context,onsilence:()=>this.onsilence(this)})),this.voice1=new MonoSynth(Object.assign(e.voice1,{context:this.context})),this.harmonicity=new Multiply({context:this.context,units:"positive",value:e.harmonicity}),this._vibrato=new LFO({frequency:e.vibratoRate,context:this.context,min:-50,max:50}),this._vibrato.start(),this.vibratoRate=this._vibrato.frequency,this._vibratoGain=new Gain({context:this.context,units:"normalRange",gain:e.vibratoAmount}),this.vibratoAmount=this._vibratoGain.gain,this.frequency=new Signal({context:this.context,units:"frequency",value:440}),this.detune=new Signal({context:this.context,units:"cents",value:e.detune}),this.frequency.connect(this.voice0.frequency),this.frequency.chain(this.harmonicity,this.voice1.frequency),this._vibrato.connect(this._vibratoGain),this._vibratoGain.fan(this.voice0.detune,this.voice1.detune),this.detune.fan(this.voice0.detune,this.voice1.detune),this.voice0.connect(this.output),this.voice1.connect(this.output),readOnly(this,["voice0","voice1","frequency","vibratoAmount","vibratoRate"])}getLevelAtTime(e){return e=this.toSeconds(e),this.voice0.envelope.getValueAtTime(e)+this.voice1.envelope.getValueAtTime(e)}static getDefaults(){return deepMerge(Monophonic.getDefaults(),{vibratoAmount:.5,vibratoRate:5,harmonicity:1.5,voice0:deepMerge(omitFromObject(MonoSynth.getDefaults(),Object.keys(Monophonic.getDefaults())),{filterEnvelope:{attack:.01,decay:0,sustain:1,release:.5},envelope:{attack:.01,decay:0,sustain:1,release:.5}}),voice1:deepMerge(omitFromObject(MonoSynth.getDefaults(),Object.keys(Monophonic.getDefaults())),{filterEnvelope:{attack:.01,decay:0,sustain:1,release:.5},envelope:{attack:.01,decay:0,sustain:1,release:.5}})})}_triggerEnvelopeAttack(e,t){this.voice0._triggerEnvelopeAttack(e,t),this.voice1._triggerEnvelopeAttack(e,t)}_triggerEnvelopeRelease(e){return this.voice0._triggerEnvelopeRelease(e),this.voice1._triggerEnvelopeRelease(e),this}dispose(){return super.dispose(),this.voice0.dispose(),this.voice1.dispose(),this.frequency.dispose(),this.detune.dispose(),this._vibrato.dispose(),this.vibratoRate.dispose(),this._vibratoGain.dispose(),this.harmonicity.dispose(),this}}class FMSynth extends ModulationSynth{constructor(){super(optionsFromArguments(FMSynth.getDefaults(),arguments));this.name="FMSynth";const e=optionsFromArguments(FMSynth.getDefaults(),arguments);this.modulationIndex=new Multiply({context:this.context,value:e.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output)}static getDefaults(){return Object.assign(ModulationSynth.getDefaults(),{modulationIndex:10})}dispose(){return super.dispose(),this.modulationIndex.dispose(),this}}const inharmRatios=[1,1.483,1.932,2.546,2.63,3.897];class MetalSynth extends Monophonic{constructor(){super(optionsFromArguments(MetalSynth.getDefaults(),arguments));this.name="MetalSynth",this._oscillators=[],this._freqMultipliers=[];const e=optionsFromArguments(MetalSynth.getDefaults(),arguments);this.detune=new Signal({context:this.context,units:"cents",value:e.detune}),this.frequency=new Signal({context:this.context,units:"frequency"}),this._amplitude=new Gain({context:this.context,gain:0}).connect(this.output),this._highpass=new Filter({Q:0,context:this.context,type:"highpass"}).connect(this._amplitude);for(let t=0;t<inharmRatios.length;t++){const s=new FMOscillator({context:this.context,harmonicity:e.harmonicity,modulationIndex:e.modulationIndex,modulationType:"square",onstop:t===0?()=>this.onsilence(this):noOp,type:"square"});s.connect(this._highpass),this._oscillators[t]=s;const r=new Multiply({context:this.context,value:inharmRatios[t]});this._freqMultipliers[t]=r,this.frequency.chain(r,s.frequency),this.detune.connect(s.detune)}this._filterFreqScaler=new Scale({context:this.context,max:7e3,min:this.toFrequency(e.resonance)}),this.envelope=new Envelope({attack:e.envelope.attack,attackCurve:"linear",context:this.context,decay:e.envelope.decay,release:e.envelope.release,sustain:0}),this.envelope.chain(this._filterFreqScaler,this._highpass.frequency),this.envelope.connect(this._amplitude.gain),this._octaves=e.octaves,this.octaves=e.octaves}static getDefaults(){return deepMerge(Monophonic.getDefaults(),{envelope:Object.assign(omitFromObject(Envelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{attack:.001,decay:1.4,release:.2}),harmonicity:5.1,modulationIndex:32,octaves:1.5,resonance:4e3})}_triggerEnvelopeAttack(e,t=1){return this.envelope.triggerAttack(e,t),this._oscillators.forEach(s=>s.start(e)),this.envelope.sustain===0&&this._oscillators.forEach(s=>{s.stop(e+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay))}),this}_triggerEnvelopeRelease(e){return this.envelope.triggerRelease(e),this._oscillators.forEach(t=>t.stop(e+this.toSeconds(this.envelope.release))),this}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}get modulationIndex(){return this._oscillators[0].modulationIndex.value}set modulationIndex(e){this._oscillators.forEach(t=>t.modulationIndex.value=e)}get harmonicity(){return this._oscillators[0].harmonicity.value}set harmonicity(e){this._oscillators.forEach(t=>t.harmonicity.value=e)}get resonance(){return this._filterFreqScaler.min}set resonance(e){this._filterFreqScaler.min=this.toFrequency(e),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(e){this._octaves=e,this._filterFreqScaler.max=this._filterFreqScaler.min*Math.pow(2,e)}dispose(){return super.dispose(),this._oscillators.forEach(e=>e.dispose()),this._freqMultipliers.forEach(e=>e.dispose()),this.frequency.dispose(),this.detune.dispose(),this._filterFreqScaler.dispose(),this._amplitude.dispose(),this.envelope.dispose(),this._highpass.dispose(),this}}class MembraneSynth extends Synth{constructor(){super(optionsFromArguments(MembraneSynth.getDefaults(),arguments));this.name="MembraneSynth",this.portamento=0;const e=optionsFromArguments(MembraneSynth.getDefaults(),arguments);this.pitchDecay=e.pitchDecay,this.octaves=e.octaves,readOnly(this,["oscillator","envelope"])}static getDefaults(){return deepMerge(Monophonic.getDefaults(),Synth.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(e,t){const s=this.toSeconds(t),r=this.toFrequency(e instanceof FrequencyClass?e.toFrequency():e),i=r*this.octaves;return this.oscillator.frequency.setValueAtTime(i,s),this.oscillator.frequency.exponentialRampToValueAtTime(r,s+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}__decorate([range(0)],MembraneSynth.prototype,"octaves",void 0);__decorate([timeRange(0)],MembraneSynth.prototype,"pitchDecay",void 0);class NoiseSynth extends Instrument$2{constructor(){super(optionsFromArguments(NoiseSynth.getDefaults(),arguments));this.name="NoiseSynth";const e=optionsFromArguments(NoiseSynth.getDefaults(),arguments);this.noise=new Noise(Object.assign({context:this.context},e.noise)),this.envelope=new AmplitudeEnvelope(Object.assign({context:this.context},e.envelope)),this.noise.chain(this.envelope,this.output)}static getDefaults(){return Object.assign(Instrument$2.getDefaults(),{envelope:Object.assign(omitFromObject(Envelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{decay:.1,sustain:0}),noise:Object.assign(omitFromObject(Noise.getDefaults(),Object.keys(Source.getDefaults())),{type:"white"})})}triggerAttack(e,t=1){return e=this.toSeconds(e),this.envelope.triggerAttack(e,t),this.noise.start(e),this.envelope.sustain===0&&this.noise.stop(e+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay)),this}triggerRelease(e){return e=this.toSeconds(e),this.envelope.triggerRelease(e),this.noise.stop(e+this.toSeconds(this.envelope.release)),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",0),this._syncMethod("triggerRelease",0)),this}triggerAttackRelease(e,t,s=1){return t=this.toSeconds(t),e=this.toSeconds(e),this.triggerAttack(t,s),this.triggerRelease(t+e),this}dispose(){return super.dispose(),this.noise.dispose(),this.envelope.dispose(),this}}const workletContext=new Set;function addToWorklet(n){workletContext.add(n)}function registerProcessor(n,e){const t=`registerProcessor("${n}", ${e})`;workletContext.add(t)}function getWorkletGlobalScope(){return Array.from(workletContext).join(`
`)}class ToneAudioWorklet extends ToneAudioNode{constructor(e){super(e);this.name="ToneAudioWorklet",this.workletOptions={},this.onprocessorerror=noOp;const t=URL.createObjectURL(new Blob([getWorkletGlobalScope()],{type:"text/javascript"})),s=this._audioWorkletName();this._dummyGain=this.context.createGain(),this._dummyParam=this._dummyGain.gain,this.context.addAudioWorkletModule(t,s).then(()=>{this.disposed||(this._worklet=this.context.createAudioWorkletNode(s,this.workletOptions),this._worklet.onprocessorerror=this.onprocessorerror.bind(this),this.onReady(this._worklet))})}dispose(){return super.dispose(),this._dummyGain.disconnect(),this._worklet&&(this._worklet.port.postMessage("dispose"),this._worklet.disconnect()),this}}const toneAudioWorkletProcessor=`
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;addToWorklet(toneAudioWorkletProcessor);const singleIOProcess=`
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;addToWorklet(singleIOProcess);const delayLine=`
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;addToWorklet(delayLine);const workletName$1="feedback-comb-filter",feedbackCombFilter=`
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;registerProcessor(workletName$1,feedbackCombFilter);class FeedbackCombFilter extends ToneAudioWorklet{constructor(){super(optionsFromArguments(FeedbackCombFilter.getDefaults(),arguments,["delayTime","resonance"]));this.name="FeedbackCombFilter";const e=optionsFromArguments(FeedbackCombFilter.getDefaults(),arguments,["delayTime","resonance"]);this.input=new Gain({context:this.context}),this.output=new Gain({context:this.context}),this.delayTime=new Param({context:this.context,value:e.delayTime,units:"time",minValue:0,maxValue:1,param:this._dummyParam,swappable:!0}),this.resonance=new Param({context:this.context,value:e.resonance,units:"normalRange",param:this._dummyParam,swappable:!0}),readOnly(this,["resonance","delayTime"])}_audioWorkletName(){return workletName$1}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{delayTime:.1,resonance:.5})}onReady(e){connectSeries(this.input,e,this.output);const t=e.parameters.get("delayTime");this.delayTime.setParam(t);const s=e.parameters.get("feedback");this.resonance.setParam(s)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.delayTime.dispose(),this.resonance.dispose(),this}}class OnePoleFilter extends ToneAudioNode{constructor(){super(optionsFromArguments(OnePoleFilter.getDefaults(),arguments,["frequency","type"]));this.name="OnePoleFilter";const e=optionsFromArguments(OnePoleFilter.getDefaults(),arguments,["frequency","type"]);this._frequency=e.frequency,this._type=e.type,this.input=new Gain({context:this.context}),this.output=new Gain({context:this.context}),this._createFilter()}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{frequency:880,type:"lowpass"})}_createFilter(){const e=this._filter,t=this.toFrequency(this._frequency),s=1/(2*Math.PI*t);if(this._type==="lowpass"){const r=1/(s*this.context.sampleRate),i=r-1;this._filter=this.context.createIIRFilter([r,0],[1,i])}else{const r=1/(s*this.context.sampleRate)-1;this._filter=this.context.createIIRFilter([1,-1],[1,r])}this.input.chain(this._filter,this.output),e&&this.context.setTimeout(()=>{this.disposed||(this.input.disconnect(e),e.disconnect())},this.blockTime)}get frequency(){return this._frequency}set frequency(e){this._frequency=e,this._createFilter()}get type(){return this._type}set type(e){this._type=e,this._createFilter()}getFrequencyResponse(e=128){const t=new Float32Array(e);for(let i=0;i<e;i++){const c=Math.pow(i/e,2)*(2e4-20)+20;t[i]=c}const s=new Float32Array(e),r=new Float32Array(e);return this._filter.getFrequencyResponse(t,s,r),s}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this._filter.disconnect(),this}}class LowpassCombFilter extends ToneAudioNode{constructor(){super(optionsFromArguments(LowpassCombFilter.getDefaults(),arguments,["delayTime","resonance","dampening"]));this.name="LowpassCombFilter";const e=optionsFromArguments(LowpassCombFilter.getDefaults(),arguments,["delayTime","resonance","dampening"]);this._combFilter=this.output=new FeedbackCombFilter({context:this.context,delayTime:e.delayTime,resonance:e.resonance}),this.delayTime=this._combFilter.delayTime,this.resonance=this._combFilter.resonance,this._lowpass=this.input=new OnePoleFilter({context:this.context,frequency:e.dampening,type:"lowpass"}),this._lowpass.connect(this._combFilter)}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{dampening:3e3,delayTime:.1,resonance:.5})}get dampening(){return this._lowpass.frequency}set dampening(e){this._lowpass.frequency=e}dispose(){return super.dispose(),this._combFilter.dispose(),this._lowpass.dispose(),this}}class PluckSynth extends Instrument$2{constructor(){super(optionsFromArguments(PluckSynth.getDefaults(),arguments));this.name="PluckSynth";const e=optionsFromArguments(PluckSynth.getDefaults(),arguments);this._noise=new Noise({context:this.context,type:"pink"}),this.attackNoise=e.attackNoise,this._lfcf=new LowpassCombFilter({context:this.context,dampening:e.dampening,resonance:e.resonance}),this.resonance=e.resonance,this.release=e.release,this._noise.connect(this._lfcf),this._lfcf.connect(this.output)}static getDefaults(){return deepMerge(Instrument$2.getDefaults(),{attackNoise:1,dampening:4e3,resonance:.7,release:1})}get dampening(){return this._lfcf.dampening}set dampening(e){this._lfcf.dampening=e}triggerAttack(e,t){const s=this.toFrequency(e);t=this.toSeconds(t);const r=1/s;return this._lfcf.delayTime.setValueAtTime(r,t),this._noise.start(t),this._noise.stop(t+r*this.attackNoise),this._lfcf.resonance.cancelScheduledValues(t),this._lfcf.resonance.setValueAtTime(this.resonance,t),this}triggerRelease(e){return this._lfcf.resonance.linearRampTo(0,this.release,e),this}dispose(){return super.dispose(),this._noise.dispose(),this._lfcf.dispose(),this}}class PolySynth extends Instrument$2{constructor(){super(optionsFromArguments(PolySynth.getDefaults(),arguments,["voice","options"]));this.name="PolySynth",this._availableVoices=[],this._activeVoices=[],this._voices=[],this._gcTimeout=-1,this._averageActiveVoices=0;const e=optionsFromArguments(PolySynth.getDefaults(),arguments,["voice","options"]);assert(!isNumber(e.voice),"DEPRECATED: The polyphony count is no longer the first argument.");const t=e.voice.getDefaults();this.options=Object.assign(t,e.options),this.voice=e.voice,this.maxPolyphony=e.maxPolyphony,this._dummyVoice=this._getNextAvailableVoice();const s=this._voices.indexOf(this._dummyVoice);this._voices.splice(s,1),this._gcTimeout=this.context.setInterval(this._collectGarbage.bind(this),1)}static getDefaults(){return Object.assign(Instrument$2.getDefaults(),{maxPolyphony:32,options:{},voice:Synth})}get activeVoices(){return this._activeVoices.length}_makeVoiceAvailable(e){this._availableVoices.push(e);const t=this._activeVoices.findIndex(s=>s.voice===e);this._activeVoices.splice(t,1)}_getNextAvailableVoice(){if(this._availableVoices.length)return this._availableVoices.shift();if(this._voices.length<this.maxPolyphony){const e=new this.voice(Object.assign(this.options,{context:this.context,onsilence:this._makeVoiceAvailable.bind(this)}));return e.connect(this.output),this._voices.push(e),e}else warn("Max polyphony exceeded. Note dropped.")}_collectGarbage(){if(this._averageActiveVoices=Math.max(this._averageActiveVoices*.95,this.activeVoices),this._availableVoices.length&&this._voices.length>Math.ceil(this._averageActiveVoices+1)){const e=this._availableVoices.shift(),t=this._voices.indexOf(e);this._voices.splice(t,1),this.context.isOffline||e.dispose()}}_triggerAttack(e,t,s){e.forEach(r=>{const i=new MidiClass(this.context,r).toMidi(),a=this._getNextAvailableVoice();a&&(a.triggerAttack(r,t,s),this._activeVoices.push({midi:i,voice:a,released:!1}),this.log("triggerAttack",r,t))})}_triggerRelease(e,t){e.forEach(s=>{const r=new MidiClass(this.context,s).toMidi(),i=this._activeVoices.find(({midi:a,released:c})=>a===r&&!c);i&&(i.voice.triggerRelease(t),i.released=!0,this.log("triggerRelease",s,t))})}_scheduleEvent(e,t,s,r){assert(!this.disposed,"Synth was already disposed"),s<=this.now()?e==="attack"?this._triggerAttack(t,s,r):this._triggerRelease(t,s):this.context.setTimeout(()=>{this._scheduleEvent(e,t,s,r)},s-this.now())}triggerAttack(e,t,s){Array.isArray(e)||(e=[e]);const r=this.toSeconds(t);return this._scheduleEvent("attack",e,r,s),this}triggerRelease(e,t){Array.isArray(e)||(e=[e]);const s=this.toSeconds(t);return this._scheduleEvent("release",e,s),this}triggerAttackRelease(e,t,s,r){const i=this.toSeconds(s);if(this.triggerAttack(e,i,r),isArray(t)){assert(isArray(e),"If the duration is an array, the notes must also be an array"),e=e;for(let a=0;a<e.length;a++){const c=t[Math.min(a,t.length-1)],u=this.toSeconds(c);assert(u>0,"The duration must be greater than 0"),this.triggerRelease(e[a],i+u)}}else{const a=this.toSeconds(t);assert(a>0,"The duration must be greater than 0"),this.triggerRelease(e,i+a)}return this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}set(e){const t=omitFromObject(e,["onsilence","context"]);return this.options=deepMerge(this.options,t),this._voices.forEach(s=>s.set(t)),this._dummyVoice.set(t),this}get(){return this._dummyVoice.get()}releaseAll(e){const t=this.toSeconds(e);return this._activeVoices.forEach(({voice:s})=>{s.triggerRelease(t)}),this}dispose(){return super.dispose(),this._dummyVoice.dispose(),this._voices.forEach(e=>e.dispose()),this._activeVoices=[],this._availableVoices=[],this.context.clearInterval(this._gcTimeout),this}}class Sampler extends Instrument$2{constructor(){super(optionsFromArguments(Sampler.getDefaults(),arguments,["urls","onload","baseUrl"],"urls"));this.name="Sampler",this._activeSources=new Map;const e=optionsFromArguments(Sampler.getDefaults(),arguments,["urls","onload","baseUrl"],"urls"),t={};Object.keys(e.urls).forEach(s=>{const r=parseInt(s,10);if(assert(isNote(s)||isNumber(r)&&isFinite(r),`url key is neither a note or midi pitch: ${s}`),isNote(s)){const i=new FrequencyClass(this.context,s).toMidi();t[i]=e.urls[s]}else isNumber(r)&&isFinite(r)&&(t[r]=e.urls[r])}),this._buffers=new ToneAudioBuffers({urls:t,onload:e.onload,baseUrl:e.baseUrl,onerror:e.onerror}),this.attack=e.attack,this.release=e.release,this.curve=e.curve,this._buffers.loaded&&Promise.resolve().then(e.onload)}static getDefaults(){return Object.assign(Instrument$2.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:noOp,onerror:noOp,release:.1,urls:{}})}_findClosest(e){const t=96;let s=0;for(;s<t;){if(this._buffers.has(e+s))return-s;if(this._buffers.has(e-s))return s;s++}throw new Error(`No available buffers for note: ${e}`)}triggerAttack(e,t,s=1){return this.log("triggerAttack",e,t,s),Array.isArray(e)||(e=[e]),e.forEach(r=>{const i=ftomf(new FrequencyClass(this.context,r).toFrequency()),a=Math.round(i),c=i-a,u=this._findClosest(a),l=a-u,h=this._buffers.get(l),d=intervalToFrequencyRatio(u+c),f=new ToneBufferSource({url:h,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:d}).connect(this.output);f.start(t,0,h.duration/d,s),isArray(this._activeSources.get(a))||this._activeSources.set(a,[]),this._activeSources.get(a).push(f),f.onended=()=>{if(this._activeSources&&this._activeSources.has(a)){const y=this._activeSources.get(a),g=y.indexOf(f);g!==-1&&y.splice(g,1)}}}),this}triggerRelease(e,t){return this.log("triggerRelease",e,t),Array.isArray(e)||(e=[e]),e.forEach(s=>{const r=new FrequencyClass(this.context,s).toMidi();if(this._activeSources.has(r)&&this._activeSources.get(r).length){const i=this._activeSources.get(r);t=this.toSeconds(t),i.forEach(a=>{a.stop(t)}),this._activeSources.set(r,[])}}),this}releaseAll(e){const t=this.toSeconds(e);return this._activeSources.forEach(s=>{for(;s.length;)s.shift().stop(t)}),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(e,t,s,r=1){const i=this.toSeconds(s);return this.triggerAttack(e,i,r),isArray(t)?(assert(isArray(e),"notes must be an array when duration is array"),e.forEach((a,c)=>{const u=t[Math.min(c,t.length-1)];this.triggerRelease(a,i+this.toSeconds(u))})):this.triggerRelease(e,i+this.toSeconds(t)),this}add(e,t,s){if(assert(isNote(e)||isFinite(e),`note must be a pitch or midi: ${e}`),isNote(e)){const r=new FrequencyClass(this.context,e).toMidi();this._buffers.add(r,t,s)}else this._buffers.add(e,t,s);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach(e=>{e.forEach(t=>t.dispose())}),this._activeSources.clear(),this}}__decorate([timeRange(0)],Sampler.prototype,"attack",void 0);__decorate([timeRange(0)],Sampler.prototype,"release",void 0);class ToneEvent extends ToneWithContext{constructor(){super(optionsFromArguments(ToneEvent.getDefaults(),arguments,["callback","value"]));this.name="ToneEvent",this._state=new StateTimeline("stopped"),this._startOffset=0;const e=optionsFromArguments(ToneEvent.getDefaults(),arguments,["callback","value"]);this._loop=e.loop,this.callback=e.callback,this.value=e.value,this._loopStart=this.toTicks(e.loopStart),this._loopEnd=this.toTicks(e.loopEnd),this._playbackRate=e.playbackRate,this._probability=e.probability,this._humanize=e.humanize,this.mute=e.mute,this._playbackRate=e.playbackRate,this._state.increasing=!0,this._rescheduleEvents()}static getDefaults(){return Object.assign(ToneWithContext.getDefaults(),{callback:noOp,humanize:!1,loop:!1,loopEnd:"1m",loopStart:0,mute:!1,playbackRate:1,probability:1,value:null})}_rescheduleEvents(e=-1){this._state.forEachFrom(e,t=>{let s;if(t.state==="started"){t.id!==-1&&this.context.transport.clear(t.id);const r=t.time+Math.round(this.startOffset/this._playbackRate);if(this._loop===!0||isNumber(this._loop)&&this._loop>1){s=1/0,isNumber(this._loop)&&(s=this._loop*this._getLoopDuration());const i=this._state.getAfter(r);i!==null&&(s=Math.min(s,i.time-r)),s!==1/0&&(this._state.setStateAtTime("stopped",r+s+1,{id:-1}),s=new TicksClass(this.context,s));const a=new TicksClass(this.context,this._getLoopDuration());t.id=this.context.transport.scheduleRepeat(this._tick.bind(this),a,new TicksClass(this.context,r),s)}else t.id=this.context.transport.schedule(this._tick.bind(this),new TicksClass(this.context,r))}})}get state(){return this._state.getValueAtTime(this.context.transport.ticks)}get startOffset(){return this._startOffset}set startOffset(e){this._startOffset=e}get probability(){return this._probability}set probability(e){this._probability=e}get humanize(){return this._humanize}set humanize(e){this._humanize=e}start(e){const t=this.toTicks(e);return this._state.getValueAtTime(t)==="stopped"&&(this._state.add({id:-1,state:"started",time:t}),this._rescheduleEvents(t)),this}stop(e){this.cancel(e);const t=this.toTicks(e);if(this._state.getValueAtTime(t)==="started"){this._state.setStateAtTime("stopped",t,{id:-1});const s=this._state.getBefore(t);let r=t;s!==null&&(r=s.time),this._rescheduleEvents(r)}return this}cancel(e){e=defaultArg(e,-1/0);const t=this.toTicks(e);return this._state.forEachFrom(t,s=>{this.context.transport.clear(s.id)}),this._state.cancel(t),this}_tick(e){const t=this.context.transport.getTicksAtTime(e);if(!this.mute&&this._state.getValueAtTime(t)==="started"){if(this.probability<1&&Math.random()>this.probability)return;if(this.humanize){let s=.02;isBoolean(this.humanize)||(s=this.toSeconds(this.humanize)),e+=(Math.random()*2-1)*s}this.callback(e,this.value)}}_getLoopDuration(){return Math.round((this._loopEnd-this._loopStart)/this._playbackRate)}get loop(){return this._loop}set loop(e){this._loop=e,this._rescheduleEvents()}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e,this._rescheduleEvents()}get loopEnd(){return new TicksClass(this.context,this._loopEnd).toSeconds()}set loopEnd(e){this._loopEnd=this.toTicks(e),this._loop&&this._rescheduleEvents()}get loopStart(){return new TicksClass(this.context,this._loopStart).toSeconds()}set loopStart(e){this._loopStart=this.toTicks(e),this._loop&&this._rescheduleEvents()}get progress(){if(this._loop){const e=this.context.transport.ticks,t=this._state.get(e);if(t!==null&&t.state==="started"){const s=this._getLoopDuration();return(e-t.time)%s/s}else return 0}else return 0}dispose(){return super.dispose(),this.cancel(),this._state.dispose(),this}}class Loop extends ToneWithContext{constructor(){super(optionsFromArguments(Loop.getDefaults(),arguments,["callback","interval"]));this.name="Loop";const e=optionsFromArguments(Loop.getDefaults(),arguments,["callback","interval"]);this._event=new ToneEvent({context:this.context,callback:this._tick.bind(this),loop:!0,loopEnd:e.interval,playbackRate:e.playbackRate,probability:e.probability}),this.callback=e.callback,this.iterations=e.iterations}static getDefaults(){return Object.assign(ToneWithContext.getDefaults(),{interval:"4n",callback:noOp,playbackRate:1,iterations:1/0,probability:1,mute:!1,humanize:!1})}start(e){return this._event.start(e),this}stop(e){return this._event.stop(e),this}cancel(e){return this._event.cancel(e),this}_tick(e){this.callback(e)}get state(){return this._event.state}get progress(){return this._event.progress}get interval(){return this._event.loopEnd}set interval(e){this._event.loopEnd=e}get playbackRate(){return this._event.playbackRate}set playbackRate(e){this._event.playbackRate=e}get humanize(){return this._event.humanize}set humanize(e){this._event.humanize=e}get probability(){return this._event.probability}set probability(e){this._event.probability=e}get mute(){return this._event.mute}set mute(e){this._event.mute=e}get iterations(){return this._event.loop===!0?1/0:this._event.loop}set iterations(e){e===1/0?this._event.loop=!0:this._event.loop=e}dispose(){return super.dispose(),this._event.dispose(),this}}class Part extends ToneEvent{constructor(){super(optionsFromArguments(Part.getDefaults(),arguments,["callback","events"]));this.name="Part",this._state=new StateTimeline("stopped"),this._events=new Set;const e=optionsFromArguments(Part.getDefaults(),arguments,["callback","events"]);this._state.increasing=!0,e.events.forEach(t=>{isArray(t)?this.add(t[0],t[1]):this.add(t)})}static getDefaults(){return Object.assign(ToneEvent.getDefaults(),{events:[]})}start(e,t){const s=this.toTicks(e);if(this._state.getValueAtTime(s)!=="started"){t=defaultArg(t,this._loop?this._loopStart:0),this._loop?t=defaultArg(t,this._loopStart):t=defaultArg(t,0);const r=this.toTicks(t);this._state.add({id:-1,offset:r,state:"started",time:s}),this._forEach(i=>{this._startNote(i,s,r)})}return this}_startNote(e,t,s){t-=s,this._loop?e.startOffset>=this._loopStart&&e.startOffset<this._loopEnd?(e.startOffset<s&&(t+=this._getLoopDuration()),e.start(new TicksClass(this.context,t))):e.startOffset<this._loopStart&&e.startOffset>=s&&(e.loop=!1,e.start(new TicksClass(this.context,t))):e.startOffset>=s&&e.start(new TicksClass(this.context,t))}get startOffset(){return this._startOffset}set startOffset(e){this._startOffset=e,this._forEach(t=>{t.startOffset+=this._startOffset})}stop(e){const t=this.toTicks(e);return this._state.cancel(t),this._state.setStateAtTime("stopped",t),this._forEach(s=>{s.stop(e)}),this}at(e,t){const s=new TransportTimeClass(this.context,e).toTicks(),r=new TicksClass(this.context,1).toSeconds(),i=this._events.values();let a=i.next();for(;!a.done;){const c=a.value;if(Math.abs(s-c.startOffset)<r)return isDefined(t)&&(c.value=t),c;a=i.next()}return isDefined(t)?(this.add(e,t),this.at(e)):null}add(e,t){e instanceof Object&&Reflect.has(e,"time")&&(t=e,e=t.time);const s=this.toTicks(e);let r;return t instanceof ToneEvent?(r=t,r.callback=this._tick.bind(this)):r=new ToneEvent({callback:this._tick.bind(this),context:this.context,value:t}),r.startOffset=s,r.set({humanize:this.humanize,loop:this.loop,loopEnd:this.loopEnd,loopStart:this.loopStart,playbackRate:this.playbackRate,probability:this.probability}),this._events.add(r),this._restartEvent(r),this}_restartEvent(e){this._state.forEach(t=>{t.state==="started"?this._startNote(e,t.time,t.offset):e.stop(new TicksClass(this.context,t.time))})}remove(e,t){return isObject(e)&&e.hasOwnProperty("time")&&(t=e,e=t.time),e=this.toTicks(e),this._events.forEach(s=>{s.startOffset===e&&(isUndef(t)||isDefined(t)&&s.value===t)&&(this._events.delete(s),s.dispose())}),this}clear(){return this._forEach(e=>e.dispose()),this._events.clear(),this}cancel(e){return this._forEach(t=>t.cancel(e)),this._state.cancel(this.toTicks(e)),this}_forEach(e){return this._events&&this._events.forEach(t=>{t instanceof Part?t._forEach(e):e(t)}),this}_setAll(e,t){this._forEach(s=>{s[e]=t})}_tick(e,t){this.mute||this.callback(e,t)}_testLoopBoundries(e){this._loop&&(e.startOffset<this._loopStart||e.startOffset>=this._loopEnd)?e.cancel(0):e.state==="stopped"&&this._restartEvent(e)}get probability(){return this._probability}set probability(e){this._probability=e,this._setAll("probability",e)}get humanize(){return this._humanize}set humanize(e){this._humanize=e,this._setAll("humanize",e)}get loop(){return this._loop}set loop(e){this._loop=e,this._forEach(t=>{t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.loop=e,this._testLoopBoundries(t)})}get loopEnd(){return new TicksClass(this.context,this._loopEnd).toSeconds()}set loopEnd(e){this._loopEnd=this.toTicks(e),this._loop&&this._forEach(t=>{t.loopEnd=e,this._testLoopBoundries(t)})}get loopStart(){return new TicksClass(this.context,this._loopStart).toSeconds()}set loopStart(e){this._loopStart=this.toTicks(e),this._loop&&this._forEach(t=>{t.loopStart=this.loopStart,this._testLoopBoundries(t)})}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e,this._setAll("playbackRate",e)}get length(){return this._events.size}dispose(){return super.dispose(),this.clear(),this}}function*upPatternGen(n){let e=0;for(;e<n.length;)e=clampToArraySize(e,n),yield n[e],e++}function*downPatternGen(n){let e=n.length-1;for(;e>=0;)e=clampToArraySize(e,n),yield n[e],e--}function*infiniteGen(n,e){for(;;)yield*e(n)}function clampToArraySize(n,e){return clamp(n,0,e.length-1)}function*alternatingGenerator(n,e){let t=e?0:n.length-1;for(;;)t=clampToArraySize(t,n),yield n[t],e?(t++,t>=n.length-1&&(e=!1)):(t--,t<=0&&(e=!0))}function*jumpUp(n){let e=0,t=0;for(;e<n.length;)e=clampToArraySize(e,n),yield n[e],t++,e+=t%2?2:-1}function*jumpDown(n){let e=n.length-1,t=0;for(;e>=0;)e=clampToArraySize(e,n),yield n[e],t++,e+=t%2?-2:1}function*randomGen(n){for(;;){const e=Math.floor(Math.random()*n.length);yield n[e]}}function*randomOnce(n){const e=[];for(let t=0;t<n.length;t++)e.push(t);for(;e.length>0;){const t=e.splice(Math.floor(e.length*Math.random()),1),s=clampToArraySize(t[0],n);yield n[s]}}function*randomWalk(n){let e=Math.floor(Math.random()*n.length);for(;;)e===0?e++:e===n.length-1||Math.random()<.5?e--:e++,yield n[e]}function*PatternGenerator(n,e="up",t=0){switch(assert(n.length>0,"The array must have more than one value in it"),e){case"up":yield*infiniteGen(n,upPatternGen);case"down":yield*infiniteGen(n,downPatternGen);case"upDown":yield*alternatingGenerator(n,!0);case"downUp":yield*alternatingGenerator(n,!1);case"alternateUp":yield*infiniteGen(n,jumpUp);case"alternateDown":yield*infiniteGen(n,jumpDown);case"random":yield*randomGen(n);case"randomOnce":yield*infiniteGen(n,randomOnce);case"randomWalk":yield*randomWalk(n)}}class Pattern extends Loop{constructor(){super(optionsFromArguments(Pattern.getDefaults(),arguments,["callback","values","pattern"]));this.name="Pattern";const e=optionsFromArguments(Pattern.getDefaults(),arguments,["callback","values","pattern"]);this.callback=e.callback,this._values=e.values,this._pattern=PatternGenerator(e.values,e.pattern),this._type=e.pattern}static getDefaults(){return Object.assign(Loop.getDefaults(),{pattern:"up",values:[],callback:noOp})}_tick(e){const t=this._pattern.next();this._value=t.value,this.callback(e,this._value)}get values(){return this._values}set values(e){this._values=e,this.pattern=this._type}get value(){return this._value}get pattern(){return this._type}set pattern(e){this._type=e,this._pattern=PatternGenerator(this._values,this._type)}}class Sequence extends ToneEvent{constructor(){super(optionsFromArguments(Sequence.getDefaults(),arguments,["callback","events","subdivision"]));this.name="Sequence",this._part=new Part({callback:this._seqCallback.bind(this),context:this.context}),this._events=[],this._eventsArray=[];const e=optionsFromArguments(Sequence.getDefaults(),arguments,["callback","events","subdivision"]);this._subdivision=this.toTicks(e.subdivision),this.events=e.events,this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.playbackRate=e.playbackRate,this.probability=e.probability,this.humanize=e.humanize,this.mute=e.mute,this.playbackRate=e.playbackRate}static getDefaults(){return Object.assign(omitFromObject(ToneEvent.getDefaults(),["value"]),{events:[],loop:!0,loopEnd:0,loopStart:0,subdivision:"8n"})}_seqCallback(e,t){t!==null&&this.callback(e,t)}get events(){return this._events}set events(e){this.clear(),this._eventsArray=e,this._events=this._createSequence(this._eventsArray),this._eventsUpdated()}start(e,t){return this._part.start(e,t&&this._indexTime(t)),this}stop(e){return this._part.stop(e),this}get subdivision(){return new TicksClass(this.context,this._subdivision).toSeconds()}_createSequence(e){return new Proxy(e,{get:(t,s)=>t[s],set:(t,s,r)=>(isString(s)&&isFinite(parseInt(s,10))&&isArray(r)?t[s]=this._createSequence(r):t[s]=r,this._eventsUpdated(),!0)})}_eventsUpdated(){this._part.clear(),this._rescheduleSequence(this._eventsArray,this._subdivision,this.startOffset),this.loopEnd=this.loopEnd}_rescheduleSequence(e,t,s){e.forEach((r,i)=>{const a=i*t+s;if(isArray(r))this._rescheduleSequence(r,t/r.length,a);else{const c=new TicksClass(this.context,a,"i").toSeconds();this._part.add(c,r)}})}_indexTime(e){return new TicksClass(this.context,e*this._subdivision+this.startOffset).toSeconds()}clear(){return this._part.clear(),this}dispose(){return super.dispose(),this._part.dispose(),this}get loop(){return this._part.loop}set loop(e){this._part.loop=e}get loopStart(){return this._loopStart}set loopStart(e){this._loopStart=e,this._part.loopStart=this._indexTime(e)}get loopEnd(){return this._loopEnd}set loopEnd(e){this._loopEnd=e,e===0?this._part.loopEnd=this._indexTime(this._eventsArray.length):this._part.loopEnd=this._indexTime(e)}get startOffset(){return this._part.startOffset}set startOffset(e){this._part.startOffset=e}get playbackRate(){return this._part.playbackRate}set playbackRate(e){this._part.playbackRate=e}get probability(){return this._part.probability}set probability(e){this._part.probability=e}get progress(){return this._part.progress}get humanize(){return this._part.humanize}set humanize(e){this._part.humanize=e}get length(){return this._part.length}}class CrossFade extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(CrossFade.getDefaults(),arguments,["fade"])));this.name="CrossFade",this._panner=this.context.createStereoPanner(),this._split=this.context.createChannelSplitter(2),this._g2a=new GainToAudio({context:this.context}),this.a=new Gain({context:this.context,gain:0}),this.b=new Gain({context:this.context,gain:0}),this.output=new Gain({context:this.context}),this._internalChannels=[this.a,this.b];const e=optionsFromArguments(CrossFade.getDefaults(),arguments,["fade"]);this.fade=new Signal({context:this.context,units:"normalRange",value:e.fade}),readOnly(this,"fade"),this.context.getConstant(1).connect(this._panner),this._panner.connect(this._split),this._panner.channelCount=1,this._panner.channelCountMode="explicit",connect(this._split,this.a.gain,0),connect(this._split,this.b.gain,1),this.fade.chain(this._g2a,this._panner.pan),this.a.connect(this.output),this.b.connect(this.output)}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{fade:.5})}dispose(){return super.dispose(),this.a.dispose(),this.b.dispose(),this.output.dispose(),this.fade.dispose(),this._g2a.dispose(),this._panner.disconnect(),this._split.disconnect(),this}}class Effect extends ToneAudioNode{constructor(e){super(e);this.name="Effect",this._dryWet=new CrossFade({context:this.context}),this.wet=this._dryWet.fade,this.effectSend=new Gain({context:this.context}),this.effectReturn=new Gain({context:this.context}),this.input=new Gain({context:this.context}),this.output=this._dryWet,this.input.fan(this._dryWet.a,this.effectSend),this.effectReturn.connect(this._dryWet.b),this.wet.setValueAtTime(e.wet,0),this._internalChannels=[this.effectReturn,this.effectSend],readOnly(this,"wet")}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{wet:1})}connectEffect(e){return this._internalChannels.push(e),this.effectSend.chain(e,this.effectReturn),this}dispose(){return super.dispose(),this._dryWet.dispose(),this.effectSend.dispose(),this.effectReturn.dispose(),this.wet.dispose(),this}}class LFOEffect extends Effect{constructor(e){super(e);this.name="LFOEffect",this._lfo=new LFO({context:this.context,frequency:e.frequency,amplitude:e.depth}),this.depth=this._lfo.amplitude,this.frequency=this._lfo.frequency,this.type=e.type,readOnly(this,["frequency","depth"])}static getDefaults(){return Object.assign(Effect.getDefaults(),{frequency:1,type:"sine",depth:1})}start(e){return this._lfo.start(e),this}stop(e){return this._lfo.stop(e),this}sync(){return this._lfo.sync(),this}unsync(){return this._lfo.unsync(),this}get type(){return this._lfo.type}set type(e){this._lfo.type=e}dispose(){return super.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class AutoFilter extends LFOEffect{constructor(){super(optionsFromArguments(AutoFilter.getDefaults(),arguments,["frequency","baseFrequency","octaves"]));this.name="AutoFilter";const e=optionsFromArguments(AutoFilter.getDefaults(),arguments,["frequency","baseFrequency","octaves"]);this.filter=new Filter(Object.assign(e.filter,{context:this.context})),this.connectEffect(this.filter),this._lfo.connect(this.filter.frequency),this.octaves=e.octaves,this.baseFrequency=e.baseFrequency}static getDefaults(){return Object.assign(LFOEffect.getDefaults(),{baseFrequency:200,octaves:2.6,filter:{type:"lowpass",rolloff:-12,Q:1}})}get baseFrequency(){return this._lfo.min}set baseFrequency(e){this._lfo.min=this.toFrequency(e),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(e){this._octaves=e,this._lfo.max=this._lfo.min*Math.pow(2,e)}dispose(){return super.dispose(),this.filter.dispose(),this}}class Panner extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(Panner.getDefaults(),arguments,["pan"])));this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner;const e=optionsFromArguments(Panner.getDefaults(),arguments,["pan"]);this.pan=new Param({context:this.context,param:this._panner.pan,value:e.pan,minValue:-1,maxValue:1}),this._panner.channelCount=e.channelCount,this._panner.channelCountMode="explicit",readOnly(this,"pan")}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}class AutoPanner extends LFOEffect{constructor(){super(optionsFromArguments(AutoPanner.getDefaults(),arguments,["frequency"]));this.name="AutoPanner";const e=optionsFromArguments(AutoPanner.getDefaults(),arguments,["frequency"]);this._panner=new Panner({context:this.context,channelCount:e.channelCount}),this.connectEffect(this._panner),this._lfo.connect(this._panner.pan),this._lfo.min=-1,this._lfo.max=1}static getDefaults(){return Object.assign(LFOEffect.getDefaults(),{channelCount:1})}dispose(){return super.dispose(),this._panner.dispose(),this}}class Follower extends ToneAudioNode{constructor(){super(optionsFromArguments(Follower.getDefaults(),arguments,["smoothing"]));this.name="Follower";const e=optionsFromArguments(Follower.getDefaults(),arguments,["smoothing"]);this._abs=this.input=new Abs({context:this.context}),this._lowpass=this.output=new OnePoleFilter({context:this.context,frequency:1/this.toSeconds(e.smoothing),type:"lowpass"}),this._abs.connect(this._lowpass),this._smoothing=e.smoothing}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{smoothing:.05})}get smoothing(){return this._smoothing}set smoothing(e){this._smoothing=e,this._lowpass.frequency=1/this.toSeconds(this.smoothing)}dispose(){return super.dispose(),this._abs.dispose(),this._lowpass.dispose(),this}}class AutoWah extends Effect{constructor(){super(optionsFromArguments(AutoWah.getDefaults(),arguments,["baseFrequency","octaves","sensitivity"]));this.name="AutoWah";const e=optionsFromArguments(AutoWah.getDefaults(),arguments,["baseFrequency","octaves","sensitivity"]);this._follower=new Follower({context:this.context,smoothing:e.follower}),this._sweepRange=new ScaleExp({context:this.context,min:0,max:1,exponent:.5}),this._baseFrequency=this.toFrequency(e.baseFrequency),this._octaves=e.octaves,this._inputBoost=new Gain({context:this.context}),this._bandpass=new Filter({context:this.context,rolloff:-48,frequency:0,Q:e.Q}),this._peaking=new Filter({context:this.context,type:"peaking"}),this._peaking.gain.value=e.gain,this.gain=this._peaking.gain,this.Q=this._bandpass.Q,this.effectSend.chain(this._inputBoost,this._follower,this._sweepRange),this._sweepRange.connect(this._bandpass.frequency),this._sweepRange.connect(this._peaking.frequency),this.effectSend.chain(this._bandpass,this._peaking,this.effectReturn),this._setSweepRange(),this.sensitivity=e.sensitivity,readOnly(this,["gain","Q"])}static getDefaults(){return Object.assign(Effect.getDefaults(),{baseFrequency:100,octaves:6,sensitivity:0,Q:2,gain:2,follower:.2})}get octaves(){return this._octaves}set octaves(e){this._octaves=e,this._setSweepRange()}get follower(){return this._follower.smoothing}set follower(e){this._follower.smoothing=e}get baseFrequency(){return this._baseFrequency}set baseFrequency(e){this._baseFrequency=this.toFrequency(e),this._setSweepRange()}get sensitivity(){return gainToDb(1/this._inputBoost.gain.value)}set sensitivity(e){this._inputBoost.gain.value=1/dbToGain(e)}_setSweepRange(){this._sweepRange.min=this._baseFrequency,this._sweepRange.max=Math.min(this._baseFrequency*Math.pow(2,this._octaves),this.context.sampleRate/2)}dispose(){return super.dispose(),this._follower.dispose(),this._sweepRange.dispose(),this._bandpass.dispose(),this._peaking.dispose(),this._inputBoost.dispose(),this}}const workletName="bit-crusher",bitCrusherWorklet=`
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;registerProcessor(workletName,bitCrusherWorklet);class BitCrusher extends Effect{constructor(){super(optionsFromArguments(BitCrusher.getDefaults(),arguments,["bits"]));this.name="BitCrusher";const e=optionsFromArguments(BitCrusher.getDefaults(),arguments,["bits"]);this._bitCrusherWorklet=new BitCrusherWorklet({context:this.context,bits:e.bits}),this.connectEffect(this._bitCrusherWorklet),this.bits=this._bitCrusherWorklet.bits}static getDefaults(){return Object.assign(Effect.getDefaults(),{bits:4})}dispose(){return super.dispose(),this._bitCrusherWorklet.dispose(),this}}class BitCrusherWorklet extends ToneAudioWorklet{constructor(){super(optionsFromArguments(BitCrusherWorklet.getDefaults(),arguments));this.name="BitCrusherWorklet";const e=optionsFromArguments(BitCrusherWorklet.getDefaults(),arguments);this.input=new Gain({context:this.context}),this.output=new Gain({context:this.context}),this.bits=new Param({context:this.context,value:e.bits,units:"positive",minValue:1,maxValue:16,param:this._dummyParam,swappable:!0})}static getDefaults(){return Object.assign(ToneAudioWorklet.getDefaults(),{bits:12})}_audioWorkletName(){return workletName}onReady(e){connectSeries(this.input,e,this.output);const t=e.parameters.get("bits");this.bits.setParam(t)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.bits.dispose(),this}}class Chebyshev extends Effect{constructor(){super(optionsFromArguments(Chebyshev.getDefaults(),arguments,["order"]));this.name="Chebyshev";const e=optionsFromArguments(Chebyshev.getDefaults(),arguments,["order"]);this._shaper=new WaveShaper({context:this.context,length:4096}),this._order=e.order,this.connectEffect(this._shaper),this.order=e.order,this.oversample=e.oversample}static getDefaults(){return Object.assign(Effect.getDefaults(),{order:1,oversample:"none"})}_getCoefficient(e,t,s){return s.has(t)||(t===0?s.set(t,0):t===1?s.set(t,e):s.set(t,2*e*this._getCoefficient(e,t-1,s)-this._getCoefficient(e,t-2,s))),s.get(t)}get order(){return this._order}set order(e){this._order=e,this._shaper.setMap(t=>this._getCoefficient(t,e,new Map))}get oversample(){return this._shaper.oversample}set oversample(e){this._shaper.oversample=e}dispose(){return super.dispose(),this._shaper.dispose(),this}}class Split extends ToneAudioNode{constructor(){super(optionsFromArguments(Split.getDefaults(),arguments,["channels"]));this.name="Split";const e=optionsFromArguments(Split.getDefaults(),arguments,["channels"]);this._splitter=this.input=this.output=this.context.createChannelSplitter(e.channels),this._internalChannels=[this._splitter]}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._splitter.disconnect(),this}}class Merge extends ToneAudioNode{constructor(){super(optionsFromArguments(Merge.getDefaults(),arguments,["channels"]));this.name="Merge";const e=optionsFromArguments(Merge.getDefaults(),arguments,["channels"]);this._merger=this.output=this.input=this.context.createChannelMerger(e.channels)}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._merger.disconnect(),this}}class StereoEffect extends ToneAudioNode{constructor(e){super(e);this.name="StereoEffect",this.input=new Gain({context:this.context}),this.input.channelCount=2,this.input.channelCountMode="explicit",this._dryWet=this.output=new CrossFade({context:this.context,fade:e.wet}),this.wet=this._dryWet.fade,this._split=new Split({context:this.context,channels:2}),this._merge=new Merge({context:this.context,channels:2}),this.input.connect(this._split),this.input.connect(this._dryWet.a),this._merge.connect(this._dryWet.b),readOnly(this,["wet"])}connectEffectLeft(...e){this._split.connect(e[0],0,0),connectSeries(...e),connect(e[e.length-1],this._merge,0,0)}connectEffectRight(...e){this._split.connect(e[0],1,0),connectSeries(...e),connect(e[e.length-1],this._merge,0,1)}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{wet:1})}dispose(){return super.dispose(),this._dryWet.dispose(),this._split.dispose(),this._merge.dispose(),this}}class StereoFeedbackEffect extends StereoEffect{constructor(e){super(e);this.feedback=new Signal({context:this.context,value:e.feedback,units:"normalRange"}),this._feedbackL=new Gain({context:this.context}),this._feedbackR=new Gain({context:this.context}),this._feedbackSplit=new Split({context:this.context,channels:2}),this._feedbackMerge=new Merge({context:this.context,channels:2}),this._merge.connect(this._feedbackSplit),this._feedbackMerge.connect(this._split),this._feedbackSplit.connect(this._feedbackL,0,0),this._feedbackL.connect(this._feedbackMerge,0,0),this._feedbackSplit.connect(this._feedbackR,1,0),this._feedbackR.connect(this._feedbackMerge,0,1),this.feedback.fan(this._feedbackL.gain,this._feedbackR.gain),readOnly(this,["feedback"])}static getDefaults(){return Object.assign(StereoEffect.getDefaults(),{feedback:.5})}dispose(){return super.dispose(),this.feedback.dispose(),this._feedbackL.dispose(),this._feedbackR.dispose(),this._feedbackSplit.dispose(),this._feedbackMerge.dispose(),this}}class Chorus extends StereoFeedbackEffect{constructor(){super(optionsFromArguments(Chorus.getDefaults(),arguments,["frequency","delayTime","depth"]));this.name="Chorus";const e=optionsFromArguments(Chorus.getDefaults(),arguments,["frequency","delayTime","depth"]);this._depth=e.depth,this._delayTime=e.delayTime/1e3,this._lfoL=new LFO({context:this.context,frequency:e.frequency,min:0,max:1}),this._lfoR=new LFO({context:this.context,frequency:e.frequency,min:0,max:1,phase:180}),this._delayNodeL=new Delay({context:this.context}),this._delayNodeR=new Delay({context:this.context}),this.frequency=this._lfoL.frequency,readOnly(this,["frequency"]),this._lfoL.frequency.connect(this._lfoR.frequency),this.connectEffectLeft(this._delayNodeL),this.connectEffectRight(this._delayNodeR),this._lfoL.connect(this._delayNodeL.delayTime),this._lfoR.connect(this._delayNodeR.delayTime),this.depth=this._depth,this.type=e.type,this.spread=e.spread}static getDefaults(){return Object.assign(StereoFeedbackEffect.getDefaults(),{frequency:1.5,delayTime:3.5,depth:.7,type:"sine",spread:180,feedback:0,wet:.5})}get depth(){return this._depth}set depth(e){this._depth=e;const t=this._delayTime*e;this._lfoL.min=Math.max(this._delayTime-t,0),this._lfoL.max=this._delayTime+t,this._lfoR.min=Math.max(this._delayTime-t,0),this._lfoR.max=this._delayTime+t}get delayTime(){return this._delayTime*1e3}set delayTime(e){this._delayTime=e/1e3,this.depth=this._depth}get type(){return this._lfoL.type}set type(e){this._lfoL.type=e,this._lfoR.type=e}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(e){this._lfoL.phase=90-e/2,this._lfoR.phase=e/2+90}start(e){return this._lfoL.start(e),this._lfoR.start(e),this}stop(e){return this._lfoL.stop(e),this._lfoR.stop(e),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._delayNodeL.dispose(),this._delayNodeR.dispose(),this.frequency.dispose(),this}}class Distortion extends Effect{constructor(){super(optionsFromArguments(Distortion.getDefaults(),arguments,["distortion"]));this.name="Distortion";const e=optionsFromArguments(Distortion.getDefaults(),arguments,["distortion"]);this._shaper=new WaveShaper({context:this.context,length:4096}),this._distortion=e.distortion,this.connectEffect(this._shaper),this.distortion=e.distortion,this.oversample=e.oversample}static getDefaults(){return Object.assign(Effect.getDefaults(),{distortion:.4,oversample:"none"})}get distortion(){return this._distortion}set distortion(e){this._distortion=e;const t=e*100,s=Math.PI/180;this._shaper.setMap(r=>Math.abs(r)<.001?0:(3+t)*r*20*s/(Math.PI+t*Math.abs(r)))}get oversample(){return this._shaper.oversample}set oversample(e){this._shaper.oversample=e}dispose(){return super.dispose(),this._shaper.dispose(),this}}class FeedbackEffect extends Effect{constructor(e){super(e);this.name="FeedbackEffect",this._feedbackGain=new Gain({context:this.context,gain:e.feedback,units:"normalRange"}),this.feedback=this._feedbackGain.gain,readOnly(this,"feedback"),this.effectReturn.chain(this._feedbackGain,this.effectSend)}static getDefaults(){return Object.assign(Effect.getDefaults(),{feedback:.125})}dispose(){return super.dispose(),this._feedbackGain.dispose(),this.feedback.dispose(),this}}class FeedbackDelay extends FeedbackEffect{constructor(){super(optionsFromArguments(FeedbackDelay.getDefaults(),arguments,["delayTime","feedback"]));this.name="FeedbackDelay";const e=optionsFromArguments(FeedbackDelay.getDefaults(),arguments,["delayTime","feedback"]);this._delayNode=new Delay({context:this.context,delayTime:e.delayTime,maxDelay:e.maxDelay}),this.delayTime=this._delayNode.delayTime,this.connectEffect(this._delayNode),readOnly(this,"delayTime")}static getDefaults(){return Object.assign(FeedbackEffect.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._delayNode.dispose(),this.delayTime.dispose(),this}}class PhaseShiftAllpass extends ToneAudioNode{constructor(e){super(e);this.name="PhaseShiftAllpass",this.input=new Gain({context:this.context}),this.output=new Gain({context:this.context}),this.offset90=new Gain({context:this.context});const t=[.6923878,.9360654322959,.988229522686,.9987488452737],s=[.4021921162426,.856171088242,.9722909545651,.9952884791278];this._bank0=this._createAllPassFilterBank(t),this._bank1=this._createAllPassFilterBank(s),this._oneSampleDelay=this.context.createIIRFilter([0,1],[1,0]),connectSeries(this.input,...this._bank0,this._oneSampleDelay,this.output),connectSeries(this.input,...this._bank1,this.offset90)}_createAllPassFilterBank(e){return e.map(s=>{const r=[[s*s,0,-1],[1,0,-(s*s)]];return this.context.createIIRFilter(r[0],r[1])})}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.offset90.dispose(),this._bank0.forEach(e=>e.disconnect()),this._bank1.forEach(e=>e.disconnect()),this._oneSampleDelay.disconnect(),this}}class FrequencyShifter extends Effect{constructor(){super(optionsFromArguments(FrequencyShifter.getDefaults(),arguments,["frequency"]));this.name="FrequencyShifter";const e=optionsFromArguments(FrequencyShifter.getDefaults(),arguments,["frequency"]);this.frequency=new Signal({context:this.context,units:"frequency",value:e.frequency,minValue:-this.context.sampleRate/2,maxValue:this.context.sampleRate/2}),this._sine=new ToneOscillatorNode({context:this.context,type:"sine"}),this._cosine=new Oscillator({context:this.context,phase:-90,type:"sine"}),this._sineMultiply=new Multiply({context:this.context}),this._cosineMultiply=new Multiply({context:this.context}),this._negate=new Negate({context:this.context}),this._add=new Add({context:this.context}),this._phaseShifter=new PhaseShiftAllpass({context:this.context}),this.effectSend.connect(this._phaseShifter),this.frequency.fan(this._sine.frequency,this._cosine.frequency),this._phaseShifter.offset90.connect(this._cosineMultiply),this._cosine.connect(this._cosineMultiply.factor),this._phaseShifter.connect(this._sineMultiply),this._sine.connect(this._sineMultiply.factor),this._sineMultiply.connect(this._negate),this._cosineMultiply.connect(this._add),this._negate.connect(this._add.addend),this._add.connect(this.effectReturn);const t=this.immediate();this._sine.start(t),this._cosine.start(t)}static getDefaults(){return Object.assign(Effect.getDefaults(),{frequency:0})}dispose(){return super.dispose(),this.frequency.dispose(),this._add.dispose(),this._cosine.dispose(),this._cosineMultiply.dispose(),this._negate.dispose(),this._phaseShifter.dispose(),this._sine.dispose(),this._sineMultiply.dispose(),this}}const combFilterTunings=[1557/44100,1617/44100,1491/44100,1422/44100,1277/44100,1356/44100,1188/44100,1116/44100],allpassFilterFrequencies=[225,556,441,341];class Freeverb extends StereoEffect{constructor(){super(optionsFromArguments(Freeverb.getDefaults(),arguments,["roomSize","dampening"]));this.name="Freeverb",this._combFilters=[],this._allpassFiltersL=[],this._allpassFiltersR=[];const e=optionsFromArguments(Freeverb.getDefaults(),arguments,["roomSize","dampening"]);this.roomSize=new Signal({context:this.context,value:e.roomSize,units:"normalRange"}),this._allpassFiltersL=allpassFilterFrequencies.map(t=>{const s=this.context.createBiquadFilter();return s.type="allpass",s.frequency.value=t,s}),this._allpassFiltersR=allpassFilterFrequencies.map(t=>{const s=this.context.createBiquadFilter();return s.type="allpass",s.frequency.value=t,s}),this._combFilters=combFilterTunings.map((t,s)=>{const r=new LowpassCombFilter({context:this.context,dampening:e.dampening,delayTime:t});return s<combFilterTunings.length/2?this.connectEffectLeft(r,...this._allpassFiltersL):this.connectEffectRight(r,...this._allpassFiltersR),this.roomSize.connect(r.resonance),r}),readOnly(this,["roomSize"])}static getDefaults(){return Object.assign(StereoEffect.getDefaults(),{roomSize:.7,dampening:3e3})}get dampening(){return this._combFilters[0].dampening}set dampening(e){this._combFilters.forEach(t=>t.dampening=e)}dispose(){return super.dispose(),this._allpassFiltersL.forEach(e=>e.disconnect()),this._allpassFiltersR.forEach(e=>e.disconnect()),this._combFilters.forEach(e=>e.dispose()),this.roomSize.dispose(),this}}const combFilterDelayTimes=[1687/25e3,1601/25e3,2053/25e3,2251/25e3],combFilterResonances=[.773,.802,.753,.733],allpassFilterFreqs=[347,113,37];class JCReverb extends StereoEffect{constructor(){super(optionsFromArguments(JCReverb.getDefaults(),arguments,["roomSize"]));this.name="JCReverb",this._allpassFilters=[],this._feedbackCombFilters=[];const e=optionsFromArguments(JCReverb.getDefaults(),arguments,["roomSize"]);this.roomSize=new Signal({context:this.context,value:e.roomSize,units:"normalRange"}),this._scaleRoomSize=new Scale({context:this.context,min:-.733,max:.197}),this._allpassFilters=allpassFilterFreqs.map(t=>{const s=this.context.createBiquadFilter();return s.type="allpass",s.frequency.value=t,s}),this._feedbackCombFilters=combFilterDelayTimes.map((t,s)=>{const r=new FeedbackCombFilter({context:this.context,delayTime:t});return this._scaleRoomSize.connect(r.resonance),r.resonance.value=combFilterResonances[s],s<combFilterDelayTimes.length/2?this.connectEffectLeft(...this._allpassFilters,r):this.connectEffectRight(...this._allpassFilters,r),r}),this.roomSize.connect(this._scaleRoomSize),readOnly(this,["roomSize"])}static getDefaults(){return Object.assign(StereoEffect.getDefaults(),{roomSize:.5})}dispose(){return super.dispose(),this._allpassFilters.forEach(e=>e.disconnect()),this._feedbackCombFilters.forEach(e=>e.dispose()),this.roomSize.dispose(),this._scaleRoomSize.dispose(),this}}class StereoXFeedbackEffect extends StereoFeedbackEffect{constructor(e){super(e);this._feedbackL.disconnect(),this._feedbackL.connect(this._feedbackMerge,0,1),this._feedbackR.disconnect(),this._feedbackR.connect(this._feedbackMerge,0,0),readOnly(this,["feedback"])}}class PingPongDelay extends StereoXFeedbackEffect{constructor(){super(optionsFromArguments(PingPongDelay.getDefaults(),arguments,["delayTime","feedback"]));this.name="PingPongDelay";const e=optionsFromArguments(PingPongDelay.getDefaults(),arguments,["delayTime","feedback"]);this._leftDelay=new Delay({context:this.context,maxDelay:e.maxDelay}),this._rightDelay=new Delay({context:this.context,maxDelay:e.maxDelay}),this._rightPreDelay=new Delay({context:this.context,maxDelay:e.maxDelay}),this.delayTime=new Signal({context:this.context,units:"time",value:e.delayTime}),this.connectEffectLeft(this._leftDelay),this.connectEffectRight(this._rightPreDelay,this._rightDelay),this.delayTime.fan(this._leftDelay.delayTime,this._rightDelay.delayTime,this._rightPreDelay.delayTime),this._feedbackL.disconnect(),this._feedbackL.connect(this._rightDelay),readOnly(this,["delayTime"])}static getDefaults(){return Object.assign(StereoXFeedbackEffect.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._leftDelay.dispose(),this._rightDelay.dispose(),this._rightPreDelay.dispose(),this.delayTime.dispose(),this}}class PitchShift extends FeedbackEffect{constructor(){super(optionsFromArguments(PitchShift.getDefaults(),arguments,["pitch"]));this.name="PitchShift";const e=optionsFromArguments(PitchShift.getDefaults(),arguments,["pitch"]);this._frequency=new Signal({context:this.context}),this._delayA=new Delay({maxDelay:1,context:this.context}),this._lfoA=new LFO({context:this.context,min:0,max:.1,type:"sawtooth"}).connect(this._delayA.delayTime),this._delayB=new Delay({maxDelay:1,context:this.context}),this._lfoB=new LFO({context:this.context,min:0,max:.1,type:"sawtooth",phase:180}).connect(this._delayB.delayTime),this._crossFade=new CrossFade({context:this.context}),this._crossFadeLFO=new LFO({context:this.context,min:0,max:1,type:"triangle",phase:90}).connect(this._crossFade.fade),this._feedbackDelay=new Delay({delayTime:e.delayTime,context:this.context}),this.delayTime=this._feedbackDelay.delayTime,readOnly(this,"delayTime"),this._pitch=e.pitch,this._windowSize=e.windowSize,this._delayA.connect(this._crossFade.a),this._delayB.connect(this._crossFade.b),this._frequency.fan(this._lfoA.frequency,this._lfoB.frequency,this._crossFadeLFO.frequency),this.effectSend.fan(this._delayA,this._delayB),this._crossFade.chain(this._feedbackDelay,this.effectReturn);const t=this.now();this._lfoA.start(t),this._lfoB.start(t),this._crossFadeLFO.start(t),this.windowSize=this._windowSize}static getDefaults(){return Object.assign(FeedbackEffect.getDefaults(),{pitch:0,windowSize:.1,delayTime:0,feedback:0})}get pitch(){return this._pitch}set pitch(e){this._pitch=e;let t=0;e<0?(this._lfoA.min=0,this._lfoA.max=this._windowSize,this._lfoB.min=0,this._lfoB.max=this._windowSize,t=intervalToFrequencyRatio(e-1)+1):(this._lfoA.min=this._windowSize,this._lfoA.max=0,this._lfoB.min=this._windowSize,this._lfoB.max=0,t=intervalToFrequencyRatio(e)-1),this._frequency.value=t*(1.2/this._windowSize)}get windowSize(){return this._windowSize}set windowSize(e){this._windowSize=this.toSeconds(e),this.pitch=this._pitch}dispose(){return super.dispose(),this._frequency.dispose(),this._delayA.dispose(),this._delayB.dispose(),this._lfoA.dispose(),this._lfoB.dispose(),this._crossFade.dispose(),this._crossFadeLFO.dispose(),this._feedbackDelay.dispose(),this}}class Phaser extends StereoEffect{constructor(){super(optionsFromArguments(Phaser.getDefaults(),arguments,["frequency","octaves","baseFrequency"]));this.name="Phaser";const e=optionsFromArguments(Phaser.getDefaults(),arguments,["frequency","octaves","baseFrequency"]);this._lfoL=new LFO({context:this.context,frequency:e.frequency,min:0,max:1}),this._lfoR=new LFO({context:this.context,frequency:e.frequency,min:0,max:1,phase:180}),this._baseFrequency=this.toFrequency(e.baseFrequency),this._octaves=e.octaves,this.Q=new Signal({context:this.context,value:e.Q,units:"positive"}),this._filtersL=this._makeFilters(e.stages,this._lfoL),this._filtersR=this._makeFilters(e.stages,this._lfoR),this.frequency=this._lfoL.frequency,this.frequency.value=e.frequency,this.connectEffectLeft(...this._filtersL),this.connectEffectRight(...this._filtersR),this._lfoL.frequency.connect(this._lfoR.frequency),this.baseFrequency=e.baseFrequency,this.octaves=e.octaves,this._lfoL.start(),this._lfoR.start(),readOnly(this,["frequency","Q"])}static getDefaults(){return Object.assign(StereoEffect.getDefaults(),{frequency:.5,octaves:3,stages:10,Q:10,baseFrequency:350})}_makeFilters(e,t){const s=[];for(let r=0;r<e;r++){const i=this.context.createBiquadFilter();i.type="allpass",this.Q.connect(i.Q),t.connect(i.frequency),s.push(i)}return s}get octaves(){return this._octaves}set octaves(e){this._octaves=e;const t=this._baseFrequency*Math.pow(2,e);this._lfoL.max=t,this._lfoR.max=t}get baseFrequency(){return this._baseFrequency}set baseFrequency(e){this._baseFrequency=this.toFrequency(e),this._lfoL.min=this._baseFrequency,this._lfoR.min=this._baseFrequency,this.octaves=this._octaves}dispose(){return super.dispose(),this.Q.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._filtersL.forEach(e=>e.disconnect()),this._filtersR.forEach(e=>e.disconnect()),this.frequency.dispose(),this}}class Reverb extends Effect{constructor(){super(optionsFromArguments(Reverb.getDefaults(),arguments,["decay"]));this.name="Reverb",this._convolver=this.context.createConvolver(),this.ready=Promise.resolve();const e=optionsFromArguments(Reverb.getDefaults(),arguments,["decay"]);this._decay=e.decay,this._preDelay=e.preDelay,this.generate(),this.connectEffect(this._convolver)}static getDefaults(){return Object.assign(Effect.getDefaults(),{decay:1.5,preDelay:.01})}get decay(){return this._decay}set decay(e){e=this.toSeconds(e),assertRange(e,.001),this._decay=e,this.generate()}get preDelay(){return this._preDelay}set preDelay(e){e=this.toSeconds(e),assertRange(e,0),this._preDelay=e,this.generate()}generate(){return __awaiter$1(this,void 0,void 0,function*(){const e=this.ready,t=new OfflineContext(2,this._decay+this._preDelay,this.context.sampleRate),s=new Noise({context:t}),r=new Noise({context:t}),i=new Merge({context:t});s.connect(i,0,0),r.connect(i,0,1);const a=new Gain({context:t}).toDestination();i.connect(a),s.start(0),r.start(0),a.gain.setValueAtTime(0,0),a.gain.setValueAtTime(1,this._preDelay),a.gain.exponentialApproachValueAtTime(0,this._preDelay,this.decay);const c=t.render();return this.ready=c.then(noOp),yield e,this._convolver.buffer=(yield c).get(),this})}dispose(){return super.dispose(),this._convolver.disconnect(),this}}class MidSideSplit extends ToneAudioNode{constructor(){super(optionsFromArguments(MidSideSplit.getDefaults(),arguments));this.name="MidSideSplit",this._split=this.input=new Split({channels:2,context:this.context}),this._midAdd=new Add({context:this.context}),this.mid=new Multiply({context:this.context,value:Math.SQRT1_2}),this._sideSubtract=new Subtract({context:this.context}),this.side=new Multiply({context:this.context,value:Math.SQRT1_2}),this._split.connect(this._midAdd,0),this._split.connect(this._midAdd.addend,1),this._split.connect(this._sideSubtract,0),this._split.connect(this._sideSubtract.subtrahend,1),this._midAdd.connect(this.mid),this._sideSubtract.connect(this.side)}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._midAdd.dispose(),this._sideSubtract.dispose(),this._split.dispose(),this}}class MidSideMerge extends ToneAudioNode{constructor(){super(optionsFromArguments(MidSideMerge.getDefaults(),arguments));this.name="MidSideMerge",this.mid=new Gain({context:this.context}),this.side=new Gain({context:this.context}),this._left=new Add({context:this.context}),this._leftMult=new Multiply({context:this.context,value:Math.SQRT1_2}),this._right=new Subtract({context:this.context}),this._rightMult=new Multiply({context:this.context,value:Math.SQRT1_2}),this._merge=this.output=new Merge({context:this.context}),this.mid.fan(this._left),this.side.connect(this._left.addend),this.mid.connect(this._right),this.side.connect(this._right.subtrahend),this._left.connect(this._leftMult),this._right.connect(this._rightMult),this._leftMult.connect(this._merge,0,0),this._rightMult.connect(this._merge,0,1)}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._leftMult.dispose(),this._rightMult.dispose(),this._left.dispose(),this._right.dispose(),this}}class MidSideEffect extends Effect{constructor(e){super(e);this.name="MidSideEffect",this._midSideMerge=new MidSideMerge({context:this.context}),this._midSideSplit=new MidSideSplit({context:this.context}),this._midSend=this._midSideSplit.mid,this._sideSend=this._midSideSplit.side,this._midReturn=this._midSideMerge.mid,this._sideReturn=this._midSideMerge.side,this.effectSend.connect(this._midSideSplit),this._midSideMerge.connect(this.effectReturn)}connectEffectMid(...e){this._midSend.chain(...e,this._midReturn)}connectEffectSide(...e){this._sideSend.chain(...e,this._sideReturn)}dispose(){return super.dispose(),this._midSideSplit.dispose(),this._midSideMerge.dispose(),this._midSend.dispose(),this._sideSend.dispose(),this._midReturn.dispose(),this._sideReturn.dispose(),this}}class StereoWidener extends MidSideEffect{constructor(){super(optionsFromArguments(StereoWidener.getDefaults(),arguments,["width"]));this.name="StereoWidener";const e=optionsFromArguments(StereoWidener.getDefaults(),arguments,["width"]);this.width=new Signal({context:this.context,value:e.width,units:"normalRange"}),readOnly(this,["width"]),this._twoTimesWidthMid=new Multiply({context:this.context,value:2}),this._twoTimesWidthSide=new Multiply({context:this.context,value:2}),this._midMult=new Multiply({context:this.context}),this._twoTimesWidthMid.connect(this._midMult.factor),this.connectEffectMid(this._midMult),this._oneMinusWidth=new Subtract({context:this.context}),this._oneMinusWidth.connect(this._twoTimesWidthMid),connect(this.context.getConstant(1),this._oneMinusWidth),this.width.connect(this._oneMinusWidth.subtrahend),this._sideMult=new Multiply({context:this.context}),this.width.connect(this._twoTimesWidthSide),this._twoTimesWidthSide.connect(this._sideMult.factor),this.connectEffectSide(this._sideMult)}static getDefaults(){return Object.assign(MidSideEffect.getDefaults(),{width:.5})}dispose(){return super.dispose(),this.width.dispose(),this._midMult.dispose(),this._sideMult.dispose(),this._twoTimesWidthMid.dispose(),this._twoTimesWidthSide.dispose(),this._oneMinusWidth.dispose(),this}}class Tremolo extends StereoEffect{constructor(){super(optionsFromArguments(Tremolo.getDefaults(),arguments,["frequency","depth"]));this.name="Tremolo";const e=optionsFromArguments(Tremolo.getDefaults(),arguments,["frequency","depth"]);this._lfoL=new LFO({context:this.context,type:e.type,min:1,max:0}),this._lfoR=new LFO({context:this.context,type:e.type,min:1,max:0}),this._amplitudeL=new Gain({context:this.context}),this._amplitudeR=new Gain({context:this.context}),this.frequency=new Signal({context:this.context,value:e.frequency,units:"frequency"}),this.depth=new Signal({context:this.context,value:e.depth,units:"normalRange"}),readOnly(this,["frequency","depth"]),this.connectEffectLeft(this._amplitudeL),this.connectEffectRight(this._amplitudeR),this._lfoL.connect(this._amplitudeL.gain),this._lfoR.connect(this._amplitudeR.gain),this.frequency.fan(this._lfoL.frequency,this._lfoR.frequency),this.depth.fan(this._lfoR.amplitude,this._lfoL.amplitude),this.spread=e.spread}static getDefaults(){return Object.assign(StereoEffect.getDefaults(),{frequency:10,type:"sine",depth:.5,spread:180})}start(e){return this._lfoL.start(e),this._lfoR.start(e),this}stop(e){return this._lfoL.stop(e),this._lfoR.stop(e),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this.context.transport.syncSignal(this.frequency),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this.context.transport.unsyncSignal(this.frequency),this}get type(){return this._lfoL.type}set type(e){this._lfoL.type=e,this._lfoR.type=e}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(e){this._lfoL.phase=90-e/2,this._lfoR.phase=e/2+90}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._amplitudeL.dispose(),this._amplitudeR.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class Vibrato extends Effect{constructor(){super(optionsFromArguments(Vibrato.getDefaults(),arguments,["frequency","depth"]));this.name="Vibrato";const e=optionsFromArguments(Vibrato.getDefaults(),arguments,["frequency","depth"]);this._delayNode=new Delay({context:this.context,delayTime:0,maxDelay:e.maxDelay}),this._lfo=new LFO({context:this.context,type:e.type,min:0,max:e.maxDelay,frequency:e.frequency,phase:-90}).start().connect(this._delayNode.delayTime),this.frequency=this._lfo.frequency,this.depth=this._lfo.amplitude,this.depth.value=e.depth,readOnly(this,["frequency","depth"]),this.effectSend.chain(this._delayNode,this.effectReturn)}static getDefaults(){return Object.assign(Effect.getDefaults(),{maxDelay:.005,frequency:5,depth:.1,type:"sine"})}get type(){return this._lfo.type}set type(e){this._lfo.type=e}dispose(){return super.dispose(),this._delayNode.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class Analyser extends ToneAudioNode{constructor(){super(optionsFromArguments(Analyser.getDefaults(),arguments,["type","size"]));this.name="Analyser",this._analysers=[],this._buffers=[];const e=optionsFromArguments(Analyser.getDefaults(),arguments,["type","size"]);this.input=this.output=this._gain=new Gain({context:this.context}),this._split=new Split({context:this.context,channels:e.channels}),this.input.connect(this._split),assertRange(e.channels,1);for(let t=0;t<e.channels;t++)this._analysers[t]=this.context.createAnalyser(),this._split.connect(this._analysers[t],t,0);this.size=e.size,this.type=e.type}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{size:1024,smoothing:.8,type:"fft",channels:1})}getValue(){return this._analysers.forEach((e,t)=>{const s=this._buffers[t];this._type==="fft"?e.getFloatFrequencyData(s):this._type==="waveform"&&e.getFloatTimeDomainData(s)}),this.channels===1?this._buffers[0]:this._buffers}get size(){return this._analysers[0].frequencyBinCount}set size(e){this._analysers.forEach((t,s)=>{t.fftSize=e*2,this._buffers[s]=new Float32Array(e)})}get channels(){return this._analysers.length}get type(){return this._type}set type(e){assert(e==="waveform"||e==="fft",`Analyser: invalid type: ${e}`),this._type=e}get smoothing(){return this._analysers[0].smoothingTimeConstant}set smoothing(e){this._analysers.forEach(t=>t.smoothingTimeConstant=e)}dispose(){return super.dispose(),this._analysers.forEach(e=>e.disconnect()),this._split.dispose(),this._gain.dispose(),this}}class MeterBase extends ToneAudioNode{constructor(){super(optionsFromArguments(MeterBase.getDefaults(),arguments));this.name="MeterBase",this.input=this.output=this._analyser=new Analyser({context:this.context,size:256,type:"waveform"})}dispose(){return super.dispose(),this._analyser.dispose(),this}}class Meter extends MeterBase{constructor(){super(optionsFromArguments(Meter.getDefaults(),arguments,["smoothing"]));this.name="Meter",this._rms=0;const e=optionsFromArguments(Meter.getDefaults(),arguments,["smoothing"]);this.input=this.output=this._analyser=new Analyser({context:this.context,size:256,type:"waveform",channels:e.channels}),this.smoothing=e.smoothing,this.normalRange=e.normalRange}static getDefaults(){return Object.assign(MeterBase.getDefaults(),{smoothing:.8,normalRange:!1,channels:1})}getLevel(){return warn("'getLevel' has been changed to 'getValue'"),this.getValue()}getValue(){const e=this._analyser.getValue(),s=(this.channels===1?[e]:e).map(r=>{const i=r.reduce((c,u)=>c+u*u,0),a=Math.sqrt(i/r.length);return this._rms=Math.max(a,this._rms*this.smoothing),this.normalRange?this._rms:gainToDb(this._rms)});return this.channels===1?s[0]:s}get channels(){return this._analyser.channels}dispose(){return super.dispose(),this._analyser.dispose(),this}}class FFT extends MeterBase{constructor(){super(optionsFromArguments(FFT.getDefaults(),arguments,["size"]));this.name="FFT";const e=optionsFromArguments(FFT.getDefaults(),arguments,["size"]);this.normalRange=e.normalRange,this._analyser.type="fft",this.size=e.size}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{normalRange:!1,size:1024,smoothing:.8})}getValue(){return this._analyser.getValue().map(t=>this.normalRange?dbToGain(t):t)}get size(){return this._analyser.size}set size(e){this._analyser.size=e}get smoothing(){return this._analyser.smoothing}set smoothing(e){this._analyser.smoothing=e}getFrequencyOfIndex(e){return assert(0<=e&&e<this.size,`index must be greater than or equal to 0 and less than ${this.size}`),e*this.context.sampleRate/(this.size*2)}}class DCMeter extends MeterBase{constructor(){super(optionsFromArguments(DCMeter.getDefaults(),arguments));this.name="DCMeter",this._analyser.type="waveform",this._analyser.size=256}getValue(){return this._analyser.getValue()[0]}}class Waveform extends MeterBase{constructor(){super(optionsFromArguments(Waveform.getDefaults(),arguments,["size"]));this.name="Waveform";const e=optionsFromArguments(Waveform.getDefaults(),arguments,["size"]);this._analyser.type="waveform",this.size=e.size}static getDefaults(){return Object.assign(MeterBase.getDefaults(),{size:1024})}getValue(){return this._analyser.getValue()}get size(){return this._analyser.size}set size(e){this._analyser.size=e}}class Solo extends ToneAudioNode{constructor(){super(optionsFromArguments(Solo.getDefaults(),arguments,["solo"]));this.name="Solo";const e=optionsFromArguments(Solo.getDefaults(),arguments,["solo"]);this.input=this.output=new Gain({context:this.context}),Solo._allSolos.has(this.context)||Solo._allSolos.set(this.context,new Set),Solo._allSolos.get(this.context).add(this),this.solo=e.solo}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(e){e?this._addSolo():this._removeSolo(),Solo._allSolos.get(this.context).forEach(t=>t._updateSolo())}get muted(){return this.input.gain.value===0}_addSolo(){Solo._soloed.has(this.context)||Solo._soloed.set(this.context,new Set),Solo._soloed.get(this.context).add(this)}_removeSolo(){Solo._soloed.has(this.context)&&Solo._soloed.get(this.context).delete(this)}_isSoloed(){return Solo._soloed.has(this.context)&&Solo._soloed.get(this.context).has(this)}_noSolos(){return!Solo._soloed.has(this.context)||Solo._soloed.has(this.context)&&Solo._soloed.get(this.context).size===0}_updateSolo(){this._isSoloed()?this.input.gain.value=1:this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),Solo._allSolos.get(this.context).delete(this),this._removeSolo(),this}}Solo._allSolos=new Map;Solo._soloed=new Map;class PanVol extends ToneAudioNode{constructor(){super(optionsFromArguments(PanVol.getDefaults(),arguments,["pan","volume"]));this.name="PanVol";const e=optionsFromArguments(PanVol.getDefaults(),arguments,["pan","volume"]);this._panner=this.input=new Panner({context:this.context,pan:e.pan,channelCount:e.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new Volume({context:this.context,volume:e.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=e.mute,readOnly(this,["pan","volume"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class Channel extends ToneAudioNode{constructor(){super(optionsFromArguments(Channel.getDefaults(),arguments,["volume","pan"]));this.name="Channel";const e=optionsFromArguments(Channel.getDefaults(),arguments,["volume","pan"]);this._solo=this.input=new Solo({solo:e.solo,context:this.context}),this._panVol=this.output=new PanVol({context:this.context,pan:e.pan,volume:e.volume,mute:e.mute,channelCount:e.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),readOnly(this,["pan","volume"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(e){this._solo.solo=e}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(e){this._panVol.mute=e}_getBus(e){return Channel.buses.has(e)||Channel.buses.set(e,new Gain({context:this.context})),Channel.buses.get(e)}send(e,t=0){const s=this._getBus(e),r=new Gain({context:this.context,units:"decibels",gain:t});return this.connect(r),r.connect(s),r}receive(e){return this._getBus(e).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}Channel.buses=new Map;class Mono extends ToneAudioNode{constructor(){super(optionsFromArguments(Mono.getDefaults(),arguments));this.name="Mono",this.input=new Gain({context:this.context}),this._merge=this.output=new Merge({channels:2,context:this.context}),this.input.connect(this._merge,0,0),this.input.connect(this._merge,0,1)}dispose(){return super.dispose(),this._merge.dispose(),this.input.dispose(),this}}class MultibandSplit extends ToneAudioNode{constructor(){super(optionsFromArguments(MultibandSplit.getDefaults(),arguments,["lowFrequency","highFrequency"]));this.name="MultibandSplit",this.input=new Gain({context:this.context}),this.output=void 0,this.low=new Filter({context:this.context,frequency:0,type:"lowpass"}),this._lowMidFilter=new Filter({context:this.context,frequency:0,type:"highpass"}),this.mid=new Filter({context:this.context,frequency:0,type:"lowpass"}),this.high=new Filter({context:this.context,frequency:0,type:"highpass"}),this._internalChannels=[this.low,this.mid,this.high];const e=optionsFromArguments(MultibandSplit.getDefaults(),arguments,["lowFrequency","highFrequency"]);this.lowFrequency=new Signal({context:this.context,units:"frequency",value:e.lowFrequency}),this.highFrequency=new Signal({context:this.context,units:"frequency",value:e.highFrequency}),this.Q=new Signal({context:this.context,units:"positive",value:e.Q}),this.input.fan(this.low,this.high),this.input.chain(this._lowMidFilter,this.mid),this.lowFrequency.fan(this.low.frequency,this._lowMidFilter.frequency),this.highFrequency.fan(this.mid.frequency,this.high.frequency),this.Q.connect(this.low.Q),this.Q.connect(this._lowMidFilter.Q),this.Q.connect(this.mid.Q),this.Q.connect(this.high.Q),readOnly(this,["high","mid","low","highFrequency","lowFrequency"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{Q:1,highFrequency:2500,lowFrequency:400})}dispose(){return super.dispose(),writable(this,["high","mid","low","highFrequency","lowFrequency"]),this.low.dispose(),this._lowMidFilter.dispose(),this.mid.dispose(),this.high.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this.Q.dispose(),this}}class Listener$1 extends ToneAudioNode{constructor(){super(...arguments);this.name="Listener",this.positionX=new Param({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new Param({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new Param({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new Param({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new Param({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new Param({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new Param({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new Param({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new Param({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}}onContextInit(n=>{n.listener=new Listener$1({context:n})});onContextClose(n=>{n.listener.dispose()});class Panner3D extends ToneAudioNode{constructor(){super(optionsFromArguments(Panner3D.getDefaults(),arguments,["positionX","positionY","positionZ"]));this.name="Panner3D";const e=optionsFromArguments(Panner3D.getDefaults(),arguments,["positionX","positionY","positionZ"]);this._panner=this.input=this.output=this.context.createPanner(),this.panningModel=e.panningModel,this.maxDistance=e.maxDistance,this.distanceModel=e.distanceModel,this.coneOuterGain=e.coneOuterGain,this.coneOuterAngle=e.coneOuterAngle,this.coneInnerAngle=e.coneInnerAngle,this.refDistance=e.refDistance,this.rolloffFactor=e.rolloffFactor,this.positionX=new Param({context:this.context,param:this._panner.positionX,value:e.positionX}),this.positionY=new Param({context:this.context,param:this._panner.positionY,value:e.positionY}),this.positionZ=new Param({context:this.context,param:this._panner.positionZ,value:e.positionZ}),this.orientationX=new Param({context:this.context,param:this._panner.orientationX,value:e.orientationX}),this.orientationY=new Param({context:this.context,param:this._panner.orientationY,value:e.orientationY}),this.orientationZ=new Param({context:this.context,param:this._panner.orientationZ,value:e.orientationZ})}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:0,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1})}setPosition(e,t,s){return this.positionX.value=e,this.positionY.value=t,this.positionZ.value=s,this}setOrientation(e,t,s){return this.orientationX.value=e,this.orientationY.value=t,this.orientationZ.value=s,this}get panningModel(){return this._panner.panningModel}set panningModel(e){this._panner.panningModel=e}get refDistance(){return this._panner.refDistance}set refDistance(e){this._panner.refDistance=e}get rolloffFactor(){return this._panner.rolloffFactor}set rolloffFactor(e){this._panner.rolloffFactor=e}get distanceModel(){return this._panner.distanceModel}set distanceModel(e){this._panner.distanceModel=e}get coneInnerAngle(){return this._panner.coneInnerAngle}set coneInnerAngle(e){this._panner.coneInnerAngle=e}get coneOuterAngle(){return this._panner.coneOuterAngle}set coneOuterAngle(e){this._panner.coneOuterAngle=e}get coneOuterGain(){return this._panner.coneOuterGain}set coneOuterGain(e){this._panner.coneOuterGain=e}get maxDistance(){return this._panner.maxDistance}set maxDistance(e){this._panner.maxDistance=e}dispose(){return super.dispose(),this._panner.disconnect(),this.orientationX.dispose(),this.orientationY.dispose(),this.orientationZ.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this}}class Recorder extends ToneAudioNode{constructor(){super(optionsFromArguments(Recorder.getDefaults(),arguments));this.name="Recorder";const e=optionsFromArguments(Recorder.getDefaults(),arguments);this.input=new Gain({context:this.context}),assert(Recorder.supported,"Media Recorder API is not available"),this._stream=this.context.createMediaStreamDestination(),this.input.connect(this._stream),this._recorder=new MediaRecorder(this._stream.stream,{mimeType:e.mimeType})}static getDefaults(){return ToneAudioNode.getDefaults()}get mimeType(){return this._recorder.mimeType}static get supported(){return theWindow!==null&&Reflect.has(theWindow,"MediaRecorder")}get state(){return this._recorder.state==="inactive"?"stopped":this._recorder.state==="paused"?"paused":"started"}start(){return __awaiter$1(this,void 0,void 0,function*(){assert(this.state!=="started","Recorder is already started");const e=new Promise(t=>{const s=()=>{this._recorder.removeEventListener("start",s,!1),t()};this._recorder.addEventListener("start",s,!1)});return this._recorder.start(),yield e})}stop(){return __awaiter$1(this,void 0,void 0,function*(){assert(this.state!=="stopped","Recorder is not started");const e=new Promise(t=>{const s=r=>{this._recorder.removeEventListener("dataavailable",s,!1),t(r.data)};this._recorder.addEventListener("dataavailable",s,!1)});return this._recorder.stop(),yield e})}pause(){return assert(this.state==="started","Recorder must be started"),this._recorder.pause(),this}dispose(){return super.dispose(),this.input.dispose(),this._stream.disconnect(),this}}class Compressor extends ToneAudioNode{constructor(){super(optionsFromArguments(Compressor.getDefaults(),arguments,["threshold","ratio"]));this.name="Compressor",this._compressor=this.context.createDynamicsCompressor(),this.input=this._compressor,this.output=this._compressor;const e=optionsFromArguments(Compressor.getDefaults(),arguments,["threshold","ratio"]);this.threshold=new Param({minValue:this._compressor.threshold.minValue,maxValue:this._compressor.threshold.maxValue,context:this.context,convert:!1,param:this._compressor.threshold,units:"decibels",value:e.threshold}),this.attack=new Param({minValue:this._compressor.attack.minValue,maxValue:this._compressor.attack.maxValue,context:this.context,param:this._compressor.attack,units:"time",value:e.attack}),this.release=new Param({minValue:this._compressor.release.minValue,maxValue:this._compressor.release.maxValue,context:this.context,param:this._compressor.release,units:"time",value:e.release}),this.knee=new Param({minValue:this._compressor.knee.minValue,maxValue:this._compressor.knee.maxValue,context:this.context,convert:!1,param:this._compressor.knee,units:"decibels",value:e.knee}),this.ratio=new Param({minValue:this._compressor.ratio.minValue,maxValue:this._compressor.ratio.maxValue,context:this.context,convert:!1,param:this._compressor.ratio,units:"positive",value:e.ratio}),readOnly(this,["knee","release","attack","ratio","threshold"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{attack:.003,knee:30,ratio:12,release:.25,threshold:-24})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.disconnect(),this.attack.dispose(),this.release.dispose(),this.threshold.dispose(),this.ratio.dispose(),this.knee.dispose(),this}}class Gate extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(Gate.getDefaults(),arguments,["threshold","smoothing"])));this.name="Gate";const e=optionsFromArguments(Gate.getDefaults(),arguments,["threshold","smoothing"]);this._follower=new Follower({context:this.context,smoothing:e.smoothing}),this._gt=new GreaterThan({context:this.context,value:dbToGain(e.threshold)}),this.input=new Gain({context:this.context}),this._gate=this.output=new Gain({context:this.context}),this.input.connect(this._gate),this.input.chain(this._follower,this._gt,this._gate.gain)}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{smoothing:.1,threshold:-40})}get threshold(){return gainToDb(this._gt.value)}set threshold(e){this._gt.value=dbToGain(e)}get smoothing(){return this._follower.smoothing}set smoothing(e){this._follower.smoothing=e}dispose(){return super.dispose(),this.input.dispose(),this._follower.dispose(),this._gt.dispose(),this._gate.dispose(),this}}class Limiter extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(Limiter.getDefaults(),arguments,["threshold"])));this.name="Limiter";const e=optionsFromArguments(Limiter.getDefaults(),arguments,["threshold"]);this._compressor=this.input=this.output=new Compressor({context:this.context,ratio:20,attack:.003,release:.01,threshold:e.threshold}),this.threshold=this._compressor.threshold,readOnly(this,"threshold")}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{threshold:-12})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.dispose(),this.threshold.dispose(),this}}class MidSideCompressor extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(MidSideCompressor.getDefaults(),arguments)));this.name="MidSideCompressor";const e=optionsFromArguments(MidSideCompressor.getDefaults(),arguments);this._midSideSplit=this.input=new MidSideSplit({context:this.context}),this._midSideMerge=this.output=new MidSideMerge({context:this.context}),this.mid=new Compressor(Object.assign(e.mid,{context:this.context})),this.side=new Compressor(Object.assign(e.side,{context:this.context})),this._midSideSplit.mid.chain(this.mid,this._midSideMerge.mid),this._midSideSplit.side.chain(this.side,this._midSideMerge.side),readOnly(this,["mid","side"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{mid:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16},side:{ratio:6,threshold:-30,release:.25,attack:.03,knee:10}})}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._midSideSplit.dispose(),this._midSideMerge.dispose(),this}}class MultibandCompressor extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(MultibandCompressor.getDefaults(),arguments)));this.name="MultibandCompressor";const e=optionsFromArguments(MultibandCompressor.getDefaults(),arguments);this._splitter=this.input=new MultibandSplit({context:this.context,lowFrequency:e.lowFrequency,highFrequency:e.highFrequency}),this.lowFrequency=this._splitter.lowFrequency,this.highFrequency=this._splitter.highFrequency,this.output=new Gain({context:this.context}),this.low=new Compressor(Object.assign(e.low,{context:this.context})),this.mid=new Compressor(Object.assign(e.mid,{context:this.context})),this.high=new Compressor(Object.assign(e.high,{context:this.context})),this._splitter.low.chain(this.low,this.output),this._splitter.mid.chain(this.mid,this.output),this._splitter.high.chain(this.high,this.output),readOnly(this,["high","mid","low","highFrequency","lowFrequency"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{lowFrequency:250,highFrequency:2e3,low:{ratio:6,threshold:-30,release:.25,attack:.03,knee:10},mid:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16},high:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16}})}dispose(){return super.dispose(),this._splitter.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.output.dispose(),this}}class EQ3 extends ToneAudioNode{constructor(){super(optionsFromArguments(EQ3.getDefaults(),arguments,["low","mid","high"]));this.name="EQ3",this.output=new Gain({context:this.context}),this._internalChannels=[];const e=optionsFromArguments(EQ3.getDefaults(),arguments,["low","mid","high"]);this.input=this._multibandSplit=new MultibandSplit({context:this.context,highFrequency:e.highFrequency,lowFrequency:e.lowFrequency}),this._lowGain=new Gain({context:this.context,gain:e.low,units:"decibels"}),this._midGain=new Gain({context:this.context,gain:e.mid,units:"decibels"}),this._highGain=new Gain({context:this.context,gain:e.high,units:"decibels"}),this.low=this._lowGain.gain,this.mid=this._midGain.gain,this.high=this._highGain.gain,this.Q=this._multibandSplit.Q,this.lowFrequency=this._multibandSplit.lowFrequency,this.highFrequency=this._multibandSplit.highFrequency,this._multibandSplit.low.chain(this._lowGain,this.output),this._multibandSplit.mid.chain(this._midGain,this.output),this._multibandSplit.high.chain(this._highGain,this.output),readOnly(this,["low","mid","high","lowFrequency","highFrequency"]),this._internalChannels=[this._multibandSplit]}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{high:0,highFrequency:2500,low:0,lowFrequency:400,mid:0})}dispose(){return super.dispose(),writable(this,["low","mid","high","lowFrequency","highFrequency"]),this._multibandSplit.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this._lowGain.dispose(),this._midGain.dispose(),this._highGain.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.Q.dispose(),this}}class Convolver extends ToneAudioNode{constructor(){super(optionsFromArguments(Convolver.getDefaults(),arguments,["url","onload"]));this.name="Convolver",this._convolver=this.context.createConvolver();const e=optionsFromArguments(Convolver.getDefaults(),arguments,["url","onload"]);this._buffer=new ToneAudioBuffer(e.url,t=>{this.buffer=t,e.onload()}),this.input=new Gain({context:this.context}),this.output=new Gain({context:this.context}),this._buffer.loaded&&(this.buffer=this._buffer),this.normalize=e.normalize,this.input.chain(this._convolver,this.output)}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{normalize:!0,onload:noOp})}load(e){return __awaiter$1(this,void 0,void 0,function*(){this.buffer=yield this._buffer.load(e)})}get buffer(){return this._buffer.length?this._buffer:null}set buffer(e){e&&this._buffer.set(e),this._convolver.buffer&&(this.input.disconnect(),this._convolver.disconnect(),this._convolver=this.context.createConvolver(),this.input.chain(this._convolver,this.output));const t=this._buffer.get();this._convolver.buffer=t||null}get normalize(){return this._convolver.normalize}set normalize(e){this._convolver.normalize=e}dispose(){return super.dispose(),this._buffer.dispose(),this._convolver.disconnect(),this}}function now(){return getContext().now()}function immediate(){return getContext().immediate()}const Transport=getContext().transport;function getTransport(){return getContext().transport}const Destination=getContext().destination,Master=getContext().destination;function getDestination(){return getContext().destination}const Listener=getContext().listener;function getListener(){return getContext().listener}const Draw=getContext().draw;function getDraw(){return getContext().draw}const context=getContext();function loaded(){return ToneAudioBuffer.loaded()}const Buffer$1=ToneAudioBuffer,Buffers=ToneAudioBuffers,BufferSource=ToneBufferSource;var Tone=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",now,immediate,Transport,getTransport,Destination,Master,getDestination,Listener,getListener,Draw,getDraw,context,loaded,Buffer:Buffer$1,Buffers,BufferSource,getContext,setContext,start,supported:isSupported,dbToGain,gainToDb,intervalToFrequencyRatio,ftom,mtof,optionsFromArguments,defaultArg,Clock,Context,BaseContext,Delay,Gain,Offline,OfflineContext,Param,ToneAudioBuffer,ToneAudioBuffers,ToneAudioNode,connectSeries,connect,disconnect,FrequencyClass,Frequency,MidiClass,Midi:Midi$2,TimeClass,Time,TicksClass,Ticks,TransportTimeClass,TransportTime,Emitter,IntervalTimeline,StateTimeline,Timeline,isUndef,isDefined,isFunction,isNumber,isObject,isBoolean,isArray,isString,isNote,Unit:Units,debug:Debug,Noise,UserMedia,Oscillator,AMOscillator,FMOscillator,PulseOscillator,FatOscillator,PWMOscillator,OmniOscillator,ToneOscillatorNode,LFO,ToneBufferSource,Player:Player$1,Players,GrainPlayer,Add,Abs,AudioToGain,GainToAudio,GreaterThan,GreaterThanZero,Multiply,Negate,Pow,Signal,connectSignal,Scale,ScaleExp,Subtract,SyncedSignal,WaveShaper,Zero,AMSynth,DuoSynth,FMSynth,MetalSynth,MembraneSynth,MonoSynth,NoiseSynth,PluckSynth,PolySynth,Sampler,Synth,Loop,Part,Pattern,Sequence,ToneEvent,AutoFilter,AutoPanner,AutoWah,BitCrusher,Chebyshev,Chorus,Distortion,FeedbackDelay,FrequencyShifter,Freeverb,JCReverb,PingPongDelay,PitchShift,Phaser,Reverb,StereoWidener,Tremolo,Vibrato,Analyser,Meter,FFT,DCMeter,Waveform,Follower,Channel,CrossFade,Merge,MidSideMerge,MidSideSplit,Mono,MultibandSplit,Panner,Panner3D,PanVol,Recorder,Solo,Split,Volume,Compressor,Gate,Limiter,MidSideCompressor,MultibandCompressor,AmplitudeEnvelope,Envelope,FrequencyEnvelope,EQ3,Filter,OnePoleFilter,FeedbackCombFilter,LowpassCombFilter,Convolver,BiquadFilter,version}),Midi$1={},midiFile={};function parseMidi(n){var e=new Parser(n),t=e.readChunk();if(t.id!="MThd")throw"Bad MIDI file.  Expected 'MHdr', got: '"+t.id+"'";for(var s=parseHeader(t.data),r=[],i=0;!e.eof()&&i<s.numTracks;i++){var a=e.readChunk();if(a.id!="MTrk")throw"Bad MIDI file.  Expected 'MTrk', got: '"+a.id+"'";var c=parseTrack(a.data);r.push(c)}return{header:s,tracks:r}}function parseHeader(n){var e=new Parser(n),t=e.readUInt16(),s=e.readUInt16(),r={format:t,numTracks:s},i=e.readUInt16();return i&32768?(r.framesPerSecond=256-(i>>8),r.ticksPerFrame=i&255):r.ticksPerBeat=i,r}function parseTrack(n){for(var e=new Parser(n),t=[];!e.eof();){var s=i();t.push(s)}return t;var r;function i(){var a={};a.deltaTime=e.readVarInt();var c=e.readUInt8();if((c&240)==240)if(c===255){a.meta=!0;var u=e.readUInt8(),l=e.readVarInt();switch(u){case 0:if(a.type="sequenceNumber",l!==2)throw"Expected length for sequenceNumber event is 2, got "+l;return a.number=e.readUInt16(),a;case 1:return a.type="text",a.text=e.readString(l),a;case 2:return a.type="copyrightNotice",a.text=e.readString(l),a;case 3:return a.type="trackName",a.text=e.readString(l),a;case 4:return a.type="instrumentName",a.text=e.readString(l),a;case 5:return a.type="lyrics",a.text=e.readString(l),a;case 6:return a.type="marker",a.text=e.readString(l),a;case 7:return a.type="cuePoint",a.text=e.readString(l),a;case 32:if(a.type="channelPrefix",l!=1)throw"Expected length for channelPrefix event is 1, got "+l;return a.channel=e.readUInt8(),a;case 33:if(a.type="portPrefix",l!=1)throw"Expected length for portPrefix event is 1, got "+l;return a.port=e.readUInt8(),a;case 47:if(a.type="endOfTrack",l!=0)throw"Expected length for endOfTrack event is 0, got "+l;return a;case 81:if(a.type="setTempo",l!=3)throw"Expected length for setTempo event is 3, got "+l;return a.microsecondsPerBeat=e.readUInt24(),a;case 84:if(a.type="smpteOffset",l!=5)throw"Expected length for smpteOffset event is 5, got "+l;var h=e.readUInt8(),d={0:24,32:25,64:29,96:30};return a.frameRate=d[h&96],a.hour=h&31,a.min=e.readUInt8(),a.sec=e.readUInt8(),a.frame=e.readUInt8(),a.subFrame=e.readUInt8(),a;case 88:if(a.type="timeSignature",l!=4)throw"Expected length for timeSignature event is 4, got "+l;return a.numerator=e.readUInt8(),a.denominator=1<<e.readUInt8(),a.metronome=e.readUInt8(),a.thirtyseconds=e.readUInt8(),a;case 89:if(a.type="keySignature",l!=2)throw"Expected length for keySignature event is 2, got "+l;return a.key=e.readInt8(),a.scale=e.readUInt8(),a;case 127:return a.type="sequencerSpecific",a.data=e.readBytes(l),a;default:return a.type="unknownMeta",a.data=e.readBytes(l),a.metatypeByte=u,a}}else if(c==240){a.type="sysEx";var l=e.readVarInt();return a.data=e.readBytes(l),a}else if(c==247){a.type="endSysEx";var l=e.readVarInt();return a.data=e.readBytes(l),a}else throw"Unrecognised MIDI event type byte: "+c;else{var f;if((c&128)==0){if(r===null)throw"Running status byte encountered before status byte";f=c,c=r,a.running=!0}else f=e.readUInt8(),r=c;var y=c>>4;switch(a.channel=c&15,y){case 8:return a.type="noteOff",a.noteNumber=f,a.velocity=e.readUInt8(),a;case 9:var g=e.readUInt8();return a.type=g===0?"noteOff":"noteOn",a.noteNumber=f,a.velocity=g,g===0&&(a.byte9=!0),a;case 10:return a.type="noteAftertouch",a.noteNumber=f,a.amount=e.readUInt8(),a;case 11:return a.type="controller",a.controllerType=f,a.value=e.readUInt8(),a;case 12:return a.type="programChange",a.programNumber=f,a;case 13:return a.type="channelAftertouch",a.amount=f,a;case 14:return a.type="pitchBend",a.value=f+(e.readUInt8()<<7)-8192,a;default:throw"Unrecognised MIDI event type: "+y}}}}function Parser(n){this.buffer=n,this.bufferLen=this.buffer.length,this.pos=0}Parser.prototype.eof=function(){return this.pos>=this.bufferLen};Parser.prototype.readUInt8=function(){var n=this.buffer[this.pos];return this.pos+=1,n};Parser.prototype.readInt8=function(){var n=this.readUInt8();return n&128?n-256:n};Parser.prototype.readUInt16=function(){var n=this.readUInt8(),e=this.readUInt8();return(n<<8)+e};Parser.prototype.readInt16=function(){var n=this.readUInt16();return n&32768?n-65536:n};Parser.prototype.readUInt24=function(){var n=this.readUInt8(),e=this.readUInt8(),t=this.readUInt8();return(n<<16)+(e<<8)+t};Parser.prototype.readInt24=function(){var n=this.readUInt24();return n&8388608?n-16777216:n};Parser.prototype.readUInt32=function(){var n=this.readUInt8(),e=this.readUInt8(),t=this.readUInt8(),s=this.readUInt8();return(n<<24)+(e<<16)+(t<<8)+s};Parser.prototype.readBytes=function(n){var e=this.buffer.slice(this.pos,this.pos+n);return this.pos+=n,e};Parser.prototype.readString=function(n){var e=this.readBytes(n);return String.fromCharCode.apply(null,e)};Parser.prototype.readVarInt=function(){for(var n=0;!this.eof();){var e=this.readUInt8();if(e&128)n+=e&127,n<<=7;else return n+e}return n};Parser.prototype.readChunk=function(){var n=this.readString(4),e=this.readUInt32(),t=this.readBytes(e);return{id:n,length:e,data:t}};var midiParser=parseMidi;function writeMidi(n,e){if(typeof n!="object")throw"Invalid MIDI data";e=e||{};var t=n.header||{},s=n.tracks||[],r,i=s.length,a=new Writer;for(writeHeader(a,t,i),r=0;r<i;r++)writeTrack(a,s[r],e);return a.buffer}function writeHeader(n,e,t){var s=e.format==null?1:e.format,r=128;e.timeDivision?r=e.timeDivision:e.ticksPerFrame&&e.framesPerSecond?r=-(e.framesPerSecond&255)<<8|e.ticksPerFrame&255:e.ticksPerBeat&&(r=e.ticksPerBeat&32767);var i=new Writer;i.writeUInt16(s),i.writeUInt16(t),i.writeUInt16(r),n.writeChunk("MThd",i.buffer)}function writeTrack(n,e,t){var s=new Writer,r,i=e.length,a=null;for(r=0;r<i;r++)(t.running===!1||!t.running&&!e[r].running)&&(a=null),a=writeEvent(s,e[r],a,t.useByte9ForNoteOff);n.writeChunk("MTrk",s.buffer)}function writeEvent(n,e,t,s){var r=e.type,i=e.deltaTime,a=e.text||"",c=e.data||[],u=null;switch(n.writeVarInt(i),r){case"sequenceNumber":n.writeUInt8(255),n.writeUInt8(0),n.writeVarInt(2),n.writeUInt16(e.number);break;case"text":n.writeUInt8(255),n.writeUInt8(1),n.writeVarInt(a.length),n.writeString(a);break;case"copyrightNotice":n.writeUInt8(255),n.writeUInt8(2),n.writeVarInt(a.length),n.writeString(a);break;case"trackName":n.writeUInt8(255),n.writeUInt8(3),n.writeVarInt(a.length),n.writeString(a);break;case"instrumentName":n.writeUInt8(255),n.writeUInt8(4),n.writeVarInt(a.length),n.writeString(a);break;case"lyrics":n.writeUInt8(255),n.writeUInt8(5),n.writeVarInt(a.length),n.writeString(a);break;case"marker":n.writeUInt8(255),n.writeUInt8(6),n.writeVarInt(a.length),n.writeString(a);break;case"cuePoint":n.writeUInt8(255),n.writeUInt8(7),n.writeVarInt(a.length),n.writeString(a);break;case"channelPrefix":n.writeUInt8(255),n.writeUInt8(32),n.writeVarInt(1),n.writeUInt8(e.channel);break;case"portPrefix":n.writeUInt8(255),n.writeUInt8(33),n.writeVarInt(1),n.writeUInt8(e.port);break;case"endOfTrack":n.writeUInt8(255),n.writeUInt8(47),n.writeVarInt(0);break;case"setTempo":n.writeUInt8(255),n.writeUInt8(81),n.writeVarInt(3),n.writeUInt24(e.microsecondsPerBeat);break;case"smpteOffset":n.writeUInt8(255),n.writeUInt8(84),n.writeVarInt(5);var l={24:0,25:32,29:64,30:96},h=e.hour&31|l[e.frameRate];n.writeUInt8(h),n.writeUInt8(e.min),n.writeUInt8(e.sec),n.writeUInt8(e.frame),n.writeUInt8(e.subFrame);break;case"timeSignature":n.writeUInt8(255),n.writeUInt8(88),n.writeVarInt(4),n.writeUInt8(e.numerator);var d=Math.floor(Math.log(e.denominator)/Math.LN2)&255;n.writeUInt8(d),n.writeUInt8(e.metronome),n.writeUInt8(e.thirtyseconds||8);break;case"keySignature":n.writeUInt8(255),n.writeUInt8(89),n.writeVarInt(2),n.writeInt8(e.key),n.writeUInt8(e.scale);break;case"sequencerSpecific":n.writeUInt8(255),n.writeUInt8(127),n.writeVarInt(c.length),n.writeBytes(c);break;case"unknownMeta":e.metatypeByte!=null&&(n.writeUInt8(255),n.writeUInt8(e.metatypeByte),n.writeVarInt(c.length),n.writeBytes(c));break;case"sysEx":n.writeUInt8(240),n.writeVarInt(c.length),n.writeBytes(c);break;case"endSysEx":n.writeUInt8(247),n.writeVarInt(c.length),n.writeBytes(c);break;case"noteOff":var f=s!==!1&&e.byte9||s&&e.velocity==0?144:128;u=f|e.channel,u!==t&&n.writeUInt8(u),n.writeUInt8(e.noteNumber),n.writeUInt8(e.velocity);break;case"noteOn":u=144|e.channel,u!==t&&n.writeUInt8(u),n.writeUInt8(e.noteNumber),n.writeUInt8(e.velocity);break;case"noteAftertouch":u=160|e.channel,u!==t&&n.writeUInt8(u),n.writeUInt8(e.noteNumber),n.writeUInt8(e.amount);break;case"controller":u=176|e.channel,u!==t&&n.writeUInt8(u),n.writeUInt8(e.controllerType),n.writeUInt8(e.value);break;case"programChange":u=192|e.channel,u!==t&&n.writeUInt8(u),n.writeUInt8(e.programNumber);break;case"channelAftertouch":u=208|e.channel,u!==t&&n.writeUInt8(u),n.writeUInt8(e.amount);break;case"pitchBend":u=224|e.channel,u!==t&&n.writeUInt8(u);var y=8192+e.value,g=y&127,x=y>>7&127;n.writeUInt8(g),n.writeUInt8(x);break;default:throw"Unrecognized event type: "+r}return u}function Writer(){this.buffer=[]}Writer.prototype.writeUInt8=function(n){this.buffer.push(n&255)};Writer.prototype.writeInt8=Writer.prototype.writeUInt8;Writer.prototype.writeUInt16=function(n){var e=n>>8&255,t=n&255;this.writeUInt8(e),this.writeUInt8(t)};Writer.prototype.writeInt16=Writer.prototype.writeUInt16;Writer.prototype.writeUInt24=function(n){var e=n>>16&255,t=n>>8&255,s=n&255;this.writeUInt8(e),this.writeUInt8(t),this.writeUInt8(s)};Writer.prototype.writeInt24=Writer.prototype.writeUInt24;Writer.prototype.writeUInt32=function(n){var e=n>>24&255,t=n>>16&255,s=n>>8&255,r=n&255;this.writeUInt8(e),this.writeUInt8(t),this.writeUInt8(s),this.writeUInt8(r)};Writer.prototype.writeInt32=Writer.prototype.writeUInt32;Writer.prototype.writeBytes=function(n){this.buffer=this.buffer.concat(Array.prototype.slice.call(n,0))};Writer.prototype.writeString=function(n){var e,t=n.length,s=[];for(e=0;e<t;e++)s.push(n.codePointAt(e));this.writeBytes(s)};Writer.prototype.writeVarInt=function(n){if(n<0)throw"Cannot write negative variable-length integer";if(n<=127)this.writeUInt8(n);else{var e=n,t=[];for(t.push(e&127),e>>=7;e;){var s=e&127|128;t.push(s),e>>=7}this.writeBytes(t.reverse())}};Writer.prototype.writeChunk=function(n,e){this.writeString(n),this.writeUInt32(e.length),this.writeBytes(e)};var midiWriter=writeMidi;midiFile.parseMidi=midiParser;midiFile.writeMidi=midiWriter;var Encode={},Header={},BinarySearch={};Object.defineProperty(BinarySearch,"__esModule",{value:!0});function search(n,e,t){t===void 0&&(t="ticks");var s=0,r=n.length,i=r;if(r>0&&n[r-1][t]<=e)return r-1;for(;s<i;){var a=Math.floor(s+(i-s)/2),c=n[a],u=n[a+1];if(c[t]===e){for(var l=a;l<n.length;l++){var h=n[l];h[t]===e&&(a=l)}return a}else{if(c[t]<e&&u[t]>e)return a;c[t]>e?i=a:c[t]<e&&(s=a+1)}}return-1}BinarySearch.search=search;function insert(n,e,t){if(t===void 0&&(t="ticks"),n.length){var s=search(n,e[t],t);n.splice(s+1,0,e)}else n.push(e)}BinarySearch.insert=insert;(function(n){Object.defineProperty(n,"__esModule",{value:!0});var e=BinarySearch,t=new WeakMap;n.keySignatureKeys=["Cb","Gb","Db","Ab","Eb","Bb","F","C","G","D","A","E","B","F#","C#"];var s=function(){function r(i){var a=this;this.tempos=[],this.timeSignatures=[],this.keySignatures=[],this.meta=[],this.name="",t.set(this,480),i&&(t.set(this,i.header.ticksPerBeat),i.tracks.forEach(function(c){return c.forEach(function(u){u.meta&&(u.type==="timeSignature"?a.timeSignatures.push({ticks:u.absoluteTime,timeSignature:[u.numerator,u.denominator]}):u.type==="setTempo"?a.tempos.push({bpm:6e7/u.microsecondsPerBeat,ticks:u.absoluteTime}):u.type==="keySignature"&&a.keySignatures.push({key:n.keySignatureKeys[u.key+7],scale:u.scale===0?"major":"minor",ticks:u.absoluteTime}))})}),i.tracks[0].forEach(function(c){c.meta&&(c.type==="trackName"?a.name=c.text:(c.type==="text"||c.type==="cuePoint"||c.type==="marker"||c.type==="lyrics")&&a.meta.push({text:c.text,ticks:c.absoluteTime,type:c.type}))}),this.update())}return r.prototype.update=function(){var i=this,a=0,c=0;this.tempos.sort(function(u,l){return u.ticks-l.ticks}),this.tempos.forEach(function(u,l){var h=l>0?i.tempos[l-1].bpm:i.tempos[0].bpm,d=u.ticks/i.ppq-c,f=60/h*d;u.time=f+a,a=u.time,c+=d}),this.timeSignatures.sort(function(u,l){return u.ticks-l.ticks}),this.timeSignatures.forEach(function(u,l){var h=l>0?i.timeSignatures[l-1]:i.timeSignatures[0],d=(u.ticks-h.ticks)/i.ppq,f=d/h.timeSignature[0]/(h.timeSignature[1]/4);h.measures=h.measures||0,u.measures=f+h.measures})},r.prototype.ticksToSeconds=function(i){var a=e.search(this.tempos,i);if(a!==-1){var c=this.tempos[a],u=c.time,l=(i-c.ticks)/this.ppq;return u+60/c.bpm*l}else{var h=i/this.ppq;return 60/120*h}},r.prototype.ticksToMeasures=function(i){var a=e.search(this.timeSignatures,i);if(a!==-1){var c=this.timeSignatures[a],u=(i-c.ticks)/this.ppq;return c.measures+u/(c.timeSignature[0]/c.timeSignature[1])/4}else return i/this.ppq/4},Object.defineProperty(r.prototype,"ppq",{get:function(){return t.get(this)},enumerable:!0,configurable:!0}),r.prototype.secondsToTicks=function(i){var a=e.search(this.tempos,i,"time");if(a!==-1){var c=this.tempos[a],u=c.time,l=i-u,h=l/(60/c.bpm);return Math.round(c.ticks+h*this.ppq)}else{var d=i/(60/120);return Math.round(d*this.ppq)}},r.prototype.toJSON=function(){return{keySignatures:this.keySignatures,meta:this.meta,name:this.name,ppq:this.ppq,tempos:this.tempos.map(function(i){return{bpm:i.bpm,ticks:i.ticks}}),timeSignatures:this.timeSignatures}},r.prototype.fromJSON=function(i){this.name=i.name,this.tempos=i.tempos.map(function(a){return Object.assign({},a)}),this.timeSignatures=i.timeSignatures.map(function(a){return Object.assign({},a)}),this.keySignatures=i.keySignatures.map(function(a){return Object.assign({},a)}),this.meta=i.meta.map(function(a){return Object.assign({},a)}),t.set(this,i.ppq),this.update()},r.prototype.setTempo=function(i){this.tempos=[{bpm:i,ticks:0}],this.update()},r}();n.Header=s})(Header);var arrayFlatten={exports:{}};arrayFlatten.exports=flatten;arrayFlatten.exports.from=flattenFrom;arrayFlatten.exports.depth=flattenDepth;arrayFlatten.exports.fromDepth=flattenFromDepth;function flatten(n){if(!Array.isArray(n))throw new TypeError("Expected value to be an array");return flattenFrom(n)}function flattenFrom(n){return flattenDown(n,[])}function flattenDepth(n,e){if(!Array.isArray(n))throw new TypeError("Expected value to be an array");return flattenFromDepth(n,e)}function flattenFromDepth(n,e){if(typeof e!="number")throw new TypeError("Expected the depth to be a number");return flattenDownDepth(n,[],e)}function flattenDown(n,e){for(var t=0;t<n.length;t++){var s=n[t];Array.isArray(s)?flattenDown(s,e):e.push(s)}return e}function flattenDownDepth(n,e,t){t--;for(var s=0;s<n.length;s++){var r=n[s];t>-1&&Array.isArray(r)?flattenDownDepth(r,e,t):e.push(r)}return e}var __spreadArrays=commonjsGlobal&&commonjsGlobal.__spreadArrays||function(){for(var n=0,e=0,t=arguments.length;e<t;e++)n+=arguments[e].length;for(var s=Array(n),r=0,e=0;e<t;e++)for(var i=arguments[e],a=0,c=i.length;a<c;a++,r++)s[r]=i[a];return s},__importDefault=commonjsGlobal&&commonjsGlobal.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(Encode,"__esModule",{value:!0});var midi_file_1$1=midiFile,Header_1$1=Header,array_flatten_1=__importDefault(arrayFlatten.exports);function encodeNote(n,e){return[{absoluteTime:n.ticks,channel:e,deltaTime:0,noteNumber:n.midi,type:"noteOn",velocity:Math.floor(n.velocity*127)},{absoluteTime:n.ticks+n.durationTicks,channel:e,deltaTime:0,noteNumber:n.midi,type:"noteOff",velocity:Math.floor(n.noteOffVelocity*127)}]}function encodeNotes(n){return array_flatten_1.default(n.notes.map(function(e){return encodeNote(e,n.channel)}))}function encodeControlChange(n,e){return{absoluteTime:n.ticks,channel:e,controllerType:n.number,deltaTime:0,type:"controller",value:Math.floor(n.value*127)}}function encodeControlChanges(n){for(var e=[],t=0;t<127;t++)n.controlChanges.hasOwnProperty(t)&&n.controlChanges[t].forEach(function(s){e.push(encodeControlChange(s,n.channel))});return e}function encodePitchBend(n,e){return{absoluteTime:n.ticks,channel:e,deltaTime:0,type:"pitchBend",value:n.value}}function encodePitchBends(n){var e=[];return n.pitchBends.forEach(function(t){e.push(encodePitchBend(t,n.channel))}),e}function encodeInstrument(n){return{absoluteTime:0,channel:n.channel,deltaTime:0,programNumber:n.instrument.number,type:"programChange"}}function encodeTrackName(n){return{absoluteTime:0,deltaTime:0,meta:!0,text:n,type:"trackName"}}function encodeTempo(n){return{absoluteTime:n.ticks,deltaTime:0,meta:!0,microsecondsPerBeat:Math.floor(6e7/n.bpm),type:"setTempo"}}function encodeTimeSignature(n){return{absoluteTime:n.ticks,deltaTime:0,denominator:n.timeSignature[1],meta:!0,metronome:24,numerator:n.timeSignature[0],thirtyseconds:8,type:"timeSignature"}}function encodeKeySignature(n){var e=Header_1$1.keySignatureKeys.indexOf(n.key);return{absoluteTime:n.ticks,deltaTime:0,key:e+7,meta:!0,scale:n.scale==="major"?0:1,type:"keySignature"}}function encodeText(n){return{absoluteTime:n.ticks,deltaTime:0,meta:!0,text:n.text,type:n.type}}function encode(n){var e={header:{format:1,numTracks:n.tracks.length+1,ticksPerBeat:n.header.ppq},tracks:__spreadArrays([__spreadArrays([{absoluteTime:0,deltaTime:0,meta:!0,text:n.header.name,type:"trackName"}],n.header.keySignatures.map(function(t){return encodeKeySignature(t)}),n.header.meta.map(function(t){return encodeText(t)}),n.header.tempos.map(function(t){return encodeTempo(t)}),n.header.timeSignatures.map(function(t){return encodeTimeSignature(t)}))],n.tracks.map(function(t){return __spreadArrays([encodeTrackName(t.name),encodeInstrument(t)],encodeNotes(t),encodeControlChanges(t),encodePitchBends(t))}))};return e.tracks=e.tracks.map(function(t){t=t.sort(function(r,i){return r.absoluteTime-i.absoluteTime});var s=0;return t.forEach(function(r){r.deltaTime=r.absoluteTime-s,s=r.absoluteTime,delete r.absoluteTime}),t.push({deltaTime:0,meta:!0,type:"endOfTrack"}),t}),new Uint8Array(midi_file_1$1.writeMidi(e))}Encode.encode=encode;var Track$1={},ControlChange={};(function(n){Object.defineProperty(n,"__esModule",{value:!0}),n.controlChangeNames={1:"modulationWheel",2:"breath",4:"footController",5:"portamentoTime",7:"volume",8:"balance",10:"pan",64:"sustain",65:"portamentoTime",66:"sostenuto",67:"softPedal",68:"legatoFootswitch",84:"portamentoControl"},n.controlChangeIds=Object.keys(n.controlChangeNames).reduce(function(r,i){return r[n.controlChangeNames[i]]=i,r},{});var e=new WeakMap,t=new WeakMap,s=function(){function r(i,a){e.set(this,a),t.set(this,i.controllerType),this.ticks=i.absoluteTime,this.value=i.value}return Object.defineProperty(r.prototype,"number",{get:function(){return t.get(this)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"name",{get:function(){return n.controlChangeNames[this.number]?n.controlChangeNames[this.number]:null},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"time",{get:function(){var i=e.get(this);return i.ticksToSeconds(this.ticks)},set:function(i){var a=e.get(this);this.ticks=a.secondsToTicks(i)},enumerable:!0,configurable:!0}),r.prototype.toJSON=function(){return{number:this.number,ticks:this.ticks,time:this.time,value:this.value}},r}();n.ControlChange=s})(ControlChange);var ControlChanges={};Object.defineProperty(ControlChanges,"__esModule",{value:!0});var ControlChange_1$1=ControlChange;function createControlChanges(){return new Proxy({},{get:function(n,e){if(n[e])return n[e];if(ControlChange_1$1.controlChangeIds.hasOwnProperty(e))return n[ControlChange_1$1.controlChangeIds[e]]},set:function(n,e,t){return ControlChange_1$1.controlChangeIds.hasOwnProperty(e)?n[ControlChange_1$1.controlChangeIds[e]]=t:n[e]=t,!0}})}ControlChanges.createControlChanges=createControlChanges;var PitchBend$1={};Object.defineProperty(PitchBend$1,"__esModule",{value:!0});var privateHeaderMap$2=new WeakMap,PitchBend=function(){function n(e,t){privateHeaderMap$2.set(this,t),this.ticks=e.absoluteTime,this.value=e.value}return Object.defineProperty(n.prototype,"time",{get:function(){var e=privateHeaderMap$2.get(this);return e.ticksToSeconds(this.ticks)},set:function(e){var t=privateHeaderMap$2.get(this);this.ticks=t.secondsToTicks(e)},enumerable:!0,configurable:!0}),n.prototype.toJSON=function(){return{ticks:this.ticks,time:this.time,value:this.value}},n}();PitchBend$1.PitchBend=PitchBend;var Instrument$1={},InstrumentMaps={};Object.defineProperty(InstrumentMaps,"__esModule",{value:!0});InstrumentMaps.instrumentByPatchID=["acoustic grand piano","bright acoustic piano","electric grand piano","honky-tonk piano","electric piano 1","electric piano 2","harpsichord","clavi","celesta","glockenspiel","music box","vibraphone","marimba","xylophone","tubular bells","dulcimer","drawbar organ","percussive organ","rock organ","church organ","reed organ","accordion","harmonica","tango accordion","acoustic guitar (nylon)","acoustic guitar (steel)","electric guitar (jazz)","electric guitar (clean)","electric guitar (muted)","overdriven guitar","distortion guitar","guitar harmonics","acoustic bass","electric bass (finger)","electric bass (pick)","fretless bass","slap bass 1","slap bass 2","synth bass 1","synth bass 2","violin","viola","cello","contrabass","tremolo strings","pizzicato strings","orchestral harp","timpani","string ensemble 1","string ensemble 2","synthstrings 1","synthstrings 2","choir aahs","voice oohs","synth voice","orchestra hit","trumpet","trombone","tuba","muted trumpet","french horn","brass section","synthbrass 1","synthbrass 2","soprano sax","alto sax","tenor sax","baritone sax","oboe","english horn","bassoon","clarinet","piccolo","flute","recorder","pan flute","blown bottle","shakuhachi","whistle","ocarina","lead 1 (square)","lead 2 (sawtooth)","lead 3 (calliope)","lead 4 (chiff)","lead 5 (charang)","lead 6 (voice)","lead 7 (fifths)","lead 8 (bass + lead)","pad 1 (new age)","pad 2 (warm)","pad 3 (polysynth)","pad 4 (choir)","pad 5 (bowed)","pad 6 (metallic)","pad 7 (halo)","pad 8 (sweep)","fx 1 (rain)","fx 2 (soundtrack)","fx 3 (crystal)","fx 4 (atmosphere)","fx 5 (brightness)","fx 6 (goblins)","fx 7 (echoes)","fx 8 (sci-fi)","sitar","banjo","shamisen","koto","kalimba","bag pipe","fiddle","shanai","tinkle bell","agogo","steel drums","woodblock","taiko drum","melodic tom","synth drum","reverse cymbal","guitar fret noise","breath noise","seashore","bird tweet","telephone ring","helicopter","applause","gunshot"];InstrumentMaps.InstrumentFamilyByID=["piano","chromatic percussion","organ","guitar","bass","strings","ensemble","brass","reed","pipe","synth lead","synth pad","synth effects","world","percussive","sound effects"];InstrumentMaps.DrumKitByPatchID={0:"standard kit",8:"room kit",16:"power kit",24:"electronic kit",25:"tr-808 kit",32:"jazz kit",40:"brush kit",48:"orchestra kit",56:"sound fx kit"};Object.defineProperty(Instrument$1,"__esModule",{value:!0});var InstrumentMaps_1=InstrumentMaps,privateTrackMap=new WeakMap,Instrument=function(){function n(e,t){if(this.number=0,privateTrackMap.set(this,t),this.number=0,e){var s=e.find(function(r){return r.type==="programChange"});s&&(this.number=s.programNumber)}}return Object.defineProperty(n.prototype,"name",{get:function(){return this.percussion?InstrumentMaps_1.DrumKitByPatchID[this.number]:InstrumentMaps_1.instrumentByPatchID[this.number]},set:function(e){var t=InstrumentMaps_1.instrumentByPatchID.indexOf(e);t!==-1&&(this.number=t)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"family",{get:function(){return this.percussion?"drums":InstrumentMaps_1.InstrumentFamilyByID[Math.floor(this.number/8)]},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"percussion",{get:function(){var e=privateTrackMap.get(this);return e.channel===9},enumerable:!0,configurable:!0}),n.prototype.toJSON=function(){return{family:this.family,name:this.name,number:this.number}},n.prototype.fromJSON=function(e){this.number=e.number},n}();Instrument$1.Instrument=Instrument;var Note$1={};Object.defineProperty(Note$1,"__esModule",{value:!0});function midiToPitch(n){var e=Math.floor(n/12)-1;return midiToPitchClass(n)+e.toString()}function midiToPitchClass(n){var e=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],t=n%12;return e[t]}function pitchClassToMidi(n){var e=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];return e.indexOf(n)}var pitchToMidi=function(){var n=/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,e={cbb:-2,cb:-1,c:0,"c#":1,cx:2,dbb:0,db:1,d:2,"d#":3,dx:4,ebb:2,eb:3,e:4,"e#":5,ex:6,fbb:3,fb:4,f:5,"f#":6,fx:7,gbb:5,gb:6,g:7,"g#":8,gx:9,abb:7,ab:8,a:9,"a#":10,ax:11,bbb:9,bb:10,b:11,"b#":12,bx:13};return function(t){var s=n.exec(t),r=s[1],i=s[2],a=e[r.toLowerCase()];return a+(parseInt(i,10)+1)*12}}(),privateHeaderMap$1=new WeakMap,Note=function(){function n(e,t,s){privateHeaderMap$1.set(this,s),this.midi=e.midi,this.velocity=e.velocity,this.noteOffVelocity=t.velocity,this.ticks=e.ticks,this.durationTicks=t.ticks-e.ticks}return Object.defineProperty(n.prototype,"name",{get:function(){return midiToPitch(this.midi)},set:function(e){this.midi=pitchToMidi(e)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"octave",{get:function(){return Math.floor(this.midi/12)-1},set:function(e){var t=e-this.octave;this.midi+=t*12},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"pitch",{get:function(){return midiToPitchClass(this.midi)},set:function(e){this.midi=12*(this.octave+1)+pitchClassToMidi(e)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"duration",{get:function(){var e=privateHeaderMap$1.get(this);return e.ticksToSeconds(this.ticks+this.durationTicks)-e.ticksToSeconds(this.ticks)},set:function(e){var t=privateHeaderMap$1.get(this),s=t.secondsToTicks(this.time+e);this.durationTicks=s-this.ticks},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"time",{get:function(){var e=privateHeaderMap$1.get(this);return e.ticksToSeconds(this.ticks)},set:function(e){var t=privateHeaderMap$1.get(this);this.ticks=t.secondsToTicks(e)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"bars",{get:function(){var e=privateHeaderMap$1.get(this);return e.ticksToMeasures(this.ticks)},enumerable:!0,configurable:!0}),n.prototype.toJSON=function(){return{duration:this.duration,durationTicks:this.durationTicks,midi:this.midi,name:this.name,ticks:this.ticks,time:this.time,velocity:this.velocity}},n}();Note$1.Note=Note;Object.defineProperty(Track$1,"__esModule",{value:!0});var BinarySearch_1=BinarySearch,ControlChange_1=ControlChange,ControlChanges_1=ControlChanges,PitchBend_1=PitchBend$1,Instrument_1=Instrument$1,Note_1=Note$1,privateHeaderMap=new WeakMap,Track=function(){function n(e,t){var s=this;if(this.name="",this.notes=[],this.controlChanges=ControlChanges_1.createControlChanges(),this.pitchBends=[],privateHeaderMap.set(this,t),e){var r=e.find(function(f){return f.type==="trackName"});this.name=r?r.text:""}if(this.instrument=new Instrument_1.Instrument(e,this),this.channel=0,e){for(var i=e.filter(function(f){return f.type==="noteOn"}),a=e.filter(function(f){return f.type==="noteOff"}),c=function(){var f=i.shift();u.channel=f.channel;var y=a.findIndex(function(x){return x.noteNumber===f.noteNumber&&x.absoluteTime>=f.absoluteTime});if(y!==-1){var g=a.splice(y,1)[0];u.addNote({durationTicks:g.absoluteTime-f.absoluteTime,midi:f.noteNumber,noteOffVelocity:g.velocity/127,ticks:f.absoluteTime,velocity:f.velocity/127})}},u=this;i.length;)c();var l=e.filter(function(f){return f.type==="controller"});l.forEach(function(f){s.addCC({number:f.controllerType,ticks:f.absoluteTime,value:f.value/127})});var h=e.filter(function(f){return f.type==="pitchBend"});h.forEach(function(f){s.addPitchBend({ticks:f.absoluteTime,value:f.value/Math.pow(2,13)})});var d=e.find(function(f){return f.type==="endOfTrack"});this.endOfTrackTicks=d!==void 0?d.absoluteTime:void 0}}return n.prototype.addNote=function(e){var t=privateHeaderMap.get(this),s=new Note_1.Note({midi:0,ticks:0,velocity:1},{ticks:0,velocity:0},t);return Object.assign(s,e),BinarySearch_1.insert(this.notes,s,"ticks"),this},n.prototype.addCC=function(e){var t=privateHeaderMap.get(this),s=new ControlChange_1.ControlChange({controllerType:e.number},t);return delete e.number,Object.assign(s,e),Array.isArray(this.controlChanges[s.number])||(this.controlChanges[s.number]=[]),BinarySearch_1.insert(this.controlChanges[s.number],s,"ticks"),this},n.prototype.addPitchBend=function(e){var t=privateHeaderMap.get(this),s=new PitchBend_1.PitchBend({},t);return Object.assign(s,e),BinarySearch_1.insert(this.pitchBends,s,"ticks"),this},Object.defineProperty(n.prototype,"duration",{get:function(){if(!this.notes.length)return 0;for(var e=this.notes[this.notes.length-1].time+this.notes[this.notes.length-1].duration,t=0;t<this.notes.length-1;t++){var s=this.notes[t].time+this.notes[t].duration;e<s&&(e=s)}return e},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"durationTicks",{get:function(){if(!this.notes.length)return 0;for(var e=this.notes[this.notes.length-1].ticks+this.notes[this.notes.length-1].durationTicks,t=0;t<this.notes.length-1;t++){var s=this.notes[t].ticks+this.notes[t].durationTicks;e<s&&(e=s)}return e},enumerable:!0,configurable:!0}),n.prototype.fromJSON=function(e){var t=this;this.name=e.name,this.channel=e.channel,this.instrument=new Instrument_1.Instrument(void 0,this),this.instrument.fromJSON(e.instrument),e.endOfTrackTicks!==void 0&&(this.endOfTrackTicks=e.endOfTrackTicks);for(var s in e.controlChanges)e.controlChanges[s]&&e.controlChanges[s].forEach(function(r){t.addCC({number:r.number,ticks:r.ticks,value:r.value})});e.notes.forEach(function(r){t.addNote({durationTicks:r.durationTicks,midi:r.midi,ticks:r.ticks,velocity:r.velocity})})},n.prototype.toJSON=function(){for(var e={},t=0;t<127;t++)this.controlChanges.hasOwnProperty(t)&&(e[t]=this.controlChanges[t].map(function(r){return r.toJSON()}));var s={channel:this.channel,controlChanges:e,pitchBends:this.pitchBends.map(function(r){return r.toJSON()}),instrument:this.instrument.toJSON(),name:this.name,notes:this.notes.map(function(r){return r.toJSON()})};return this.endOfTrackTicks!==void 0&&(s.endOfTrackTicks=this.endOfTrackTicks),s},n}();Track$1.Track=Track;var __awaiter=commonjsGlobal&&commonjsGlobal.__awaiter||function(n,e,t,s){function r(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function c(h){try{l(s.next(h))}catch(d){a(d)}}function u(h){try{l(s.throw(h))}catch(d){a(d)}}function l(h){h.done?i(h.value):r(h.value).then(c,u)}l((s=s.apply(n,e||[])).next())})},__generator=commonjsGlobal&&commonjsGlobal.__generator||function(n,e){var t={label:0,sent:function(){if(i[0]&1)throw i[1];return i[1]},trys:[],ops:[]},s,r,i,a;return a={next:c(0),throw:c(1),return:c(2)},typeof Symbol=="function"&&(a[Symbol.iterator]=function(){return this}),a;function c(l){return function(h){return u([l,h])}}function u(l){if(s)throw new TypeError("Generator is already executing.");for(;t;)try{if(s=1,r&&(i=l[0]&2?r.return:l[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,l[1])).done)return i;switch(r=0,i&&(l=[l[0]&2,i.value]),l[0]){case 0:case 1:i=l;break;case 4:return t.label++,{value:l[1],done:!1};case 5:t.label++,r=l[1],l=[0];continue;case 7:l=t.ops.pop(),t.trys.pop();continue;default:if(i=t.trys,!(i=i.length>0&&i[i.length-1])&&(l[0]===6||l[0]===2)){t=0;continue}if(l[0]===3&&(!i||l[1]>i[0]&&l[1]<i[3])){t.label=l[1];break}if(l[0]===6&&t.label<i[1]){t.label=i[1],i=l;break}if(i&&t.label<i[2]){t.label=i[2],t.ops.push(l);break}i[2]&&t.ops.pop(),t.trys.pop();continue}l=e.call(n,t)}catch(h){l=[6,h],r=0}finally{s=i=0}if(l[0]&5)throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}};Object.defineProperty(Midi$1,"__esModule",{value:!0});var midi_file_1=midiFile,Encode_1=Encode,Header_1=Header,Track_1=Track$1,Midi=function(){function n(e){var t=this,s=null;e&&(e instanceof ArrayBuffer&&(e=new Uint8Array(e)),s=midi_file_1.parseMidi(e),s.tracks.forEach(function(r){var i=0;r.forEach(function(a){i+=a.deltaTime,a.absoluteTime=i})}),s.tracks=splitTracks(s.tracks)),this.header=new Header_1.Header(s),this.tracks=[],e&&(this.tracks=s.tracks.map(function(r){return new Track_1.Track(r,t.header)}),s.header.format===1&&this.tracks[0].duration===0&&this.tracks.shift())}return n.fromUrl=function(e){return __awaiter(this,void 0,void 0,function(){var t,s;return __generator(this,function(r){switch(r.label){case 0:return[4,fetch(e)];case 1:return t=r.sent(),t.ok?[4,t.arrayBuffer()]:[3,3];case 2:return s=r.sent(),[2,new n(s)];case 3:throw new Error("could not load "+e)}})})},Object.defineProperty(n.prototype,"name",{get:function(){return this.header.name},set:function(e){this.header.name=e},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"duration",{get:function(){var e=this.tracks.map(function(t){return t.duration});return Math.max.apply(Math,e)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"durationTicks",{get:function(){var e=this.tracks.map(function(t){return t.durationTicks});return Math.max.apply(Math,e)},enumerable:!0,configurable:!0}),n.prototype.addTrack=function(){var e=new Track_1.Track(void 0,this.header);return this.tracks.push(e),e},n.prototype.toArray=function(){return Encode_1.encode(this)},n.prototype.toJSON=function(){return{header:this.header.toJSON(),tracks:this.tracks.map(function(e){return e.toJSON()})}},n.prototype.fromJSON=function(e){var t=this;this.header=new Header_1.Header,this.header.fromJSON(e.header),this.tracks=e.tracks.map(function(s){var r=new Track_1.Track(void 0,t.header);return r.fromJSON(s),r})},n.prototype.clone=function(){var e=new n;return e.fromJSON(this.toJSON()),e},n}();Midi$1.Midi=Midi;var Track_2=Track$1;Midi$1.Track=Track_2.Track;var Header_2=Header;Midi$1.Header=Header_2.Header;function splitTracks(n){for(var e=[],t=0;t<n.length;t++)for(var s=e.length,r=new Map,i=Array(16).fill(0),a=0,c=n[t];a<c.length;a++){var u=c[a],l=s,h=u.channel;if(h!==void 0){u.type==="programChange"&&(i[h]=u.programNumber);var d=i[h],f=d+" "+h;r.has(f)?l=r.get(f):(l=s+r.size,r.set(f,l))}e[l]||e.push([]),e[l].push(u)}return e}function compareQuantizedNotes(n,e){return n.quantizedStartStep<e.quantizedStartStep?-1:n.quantizedStartStep>e.quantizedStartStep?1:n.pitch<e.pitch?-1:1}class BasePlayer{constructor(e=!1,t){this.playClick=e,this.callbackObject=t,this.desiredQPM=void 0}setTempo(e){this.desiredQPM=e,Transport.state==="started"&&(Transport.bpm.value=e)}makeClickSequence(e){const t=clone(e),s=t.notes.map(i=>i.quantizedEndStep),r=Math.max(...s);for(let i=0;i<r;i+=4){const a={pitch:i%16==0?LO_CLICK_PITCH:HI_CLICK_PITCH,quantizedStartStep:i,isDrum:!0,quantizedEndStep:i+1};t.notes.push(a)}return t.notes.sort(compareQuantizedNotes),t}resumeContext(){context.resume()}start(e,t,s=0){if(this.getPlayState()==="started")throw new Error("Cannot start playback; player is already playing.");if(this.getPlayState()==="paused")throw new Error("Cannot `start()` a paused player; use `resume()`.");if(Transport.state!=="stopped")throw new Error("Cannot start playback while `Tone.Transport` is in use.");this.resumeContext();const r=isQuantizedSequence(e);if(this.playClick&&r&&(e=this.makeClickSequence(e)),t?Transport.bpm.value=t:e.tempos&&e.tempos.length>0&&e.tempos[0].qpm>0?Transport.bpm.value=e.tempos[0].qpm:Transport.bpm.value=DEFAULT_QUARTERS_PER_MINUTE,r)e=unquantizeSequence(e,t);else if(t)throw new Error("Cannot specify a `qpm` for a non-quantized sequence.");const i=new Part((a,c)=>{this.currentPart===i&&(this.playNote(a,c),this.callbackObject&&Draw.schedule(()=>{this.callbackObject.run(c,a)},a))},e.notes.map(a=>[a.startTime,a]));return this.currentPart=i,this.desiredQPM&&(Transport.bpm.value=this.desiredQPM),this.currentPart.start(void 0,s),Transport.state!=="started"&&Transport.start(),new Promise(a=>{this.scheduledStop=Transport.schedule(()=>{this.stop(),a(),this.callbackObject&&this.callbackObject.stop()},`+${e.totalTime}`)})}stop(){this.isPlaying()&&(this.currentPart.stop(),Transport.stop(),this.currentPart=null),Transport.clear(this.scheduledStop),this.scheduledStop=void 0,this.desiredQPM=void 0}pause(){if(!this.isPlaying())throw new Error("Cannot pause playback while the player is stopped.");Transport.pause()}resume(){if(this.getPlayState()!=="paused")throw new Error(`Cannot resume playback while "${this.getPlayState()}".`);Transport.start()}seekTo(e){if(!this.isPlaying())throw new Error("Cannot seek while the player is stopped.");Transport.seconds=e}isPlaying(){return!!this.currentPart}getPlayState(){return this.isPlaying()?Transport.state:"stopped"}}class DrumKit{constructor(){this.DRUM_PITCH_TO_CLASS=new Map,this.kick=new MembraneSynth().toDestination(),this.tomLow=new MembraneSynth({pitchDecay:.008,envelope:{attack:.01,decay:.5,sustain:0}}).toDestination(),this.tomMid=new MembraneSynth({pitchDecay:.008,envelope:{attack:.01,decay:.5,sustain:0}}).toDestination(),this.tomHigh=new MembraneSynth({pitchDecay:.008,envelope:{attack:.01,decay:.5,sustain:0}}).toDestination(),this.closedHihat=new MetalSynth({frequency:400,envelope:{attack:.001,decay:.1,release:.8},harmonicity:5.1,modulationIndex:32,resonance:4e3,octaves:1}).toDestination(),this.openHihat=new MetalSynth({frequency:400,envelope:{attack:.001,decay:.5,release:.8,sustain:1},harmonicity:5.1,modulationIndex:32,resonance:4e3,octaves:1}).toDestination(),this.ride=new MetalSynth().toDestination(),this.crash=new MetalSynth({frequency:300,envelope:{attack:.001,decay:1,release:3},harmonicity:5.1,modulationIndex:64,resonance:4e3,octaves:1.5}).toDestination(),this.snare=new NoiseSynth({noise:{type:"white"},envelope:{attack:.005,decay:.05,sustain:.1,release:.4}}).toDestination(),this.loClick=new MembraneSynth({pitchDecay:.008,envelope:{attack:.001,decay:.3,sustain:0}}).toDestination(),this.hiClick=new MembraneSynth({pitchDecay:.008,envelope:{attack:.001,decay:.3,sustain:0}}).toDestination(),this.pitchPlayers=[(e,t=1)=>this.kick.triggerAttackRelease("C2","8n",e,t),(e,t=1)=>this.snare.triggerAttackRelease("16n",e,t),(e,t=1)=>this.closedHihat.triggerAttack(e,.3,t),(e,t=1)=>this.openHihat.triggerAttack(e,.3,t),(e,t=.5)=>this.tomLow.triggerAttack("G3",e,t),(e,t=.5)=>this.tomMid.triggerAttack("C4",e,t),(e,t=.5)=>this.tomHigh.triggerAttack("F4",e,t),(e,t=1)=>this.crash.triggerAttack(e,1,t),(e,t=1)=>this.ride.triggerAttack(e,.5,t),(e,t=.5)=>this.loClick.triggerAttack("G5",e,t),(e,t=.5)=>this.hiClick.triggerAttack("C6",e,t)];for(let e=0;e<DEFAULT_DRUM_PITCH_CLASSES.length;++e)DEFAULT_DRUM_PITCH_CLASSES[e].forEach(t=>{this.DRUM_PITCH_TO_CLASS.set(t,e)});this.DRUM_PITCH_TO_CLASS.set(LO_CLICK_PITCH,LO_CLICK_CLASS),this.DRUM_PITCH_TO_CLASS.set(HI_CLICK_PITCH,HI_CLICK_CLASS)}static getInstance(){return DrumKit.instance||(DrumKit.instance=new DrumKit),DrumKit.instance}playNote(e,t,s){this.pitchPlayers[this.DRUM_PITCH_TO_CLASS.get(e)](t,s)}}class Player extends BasePlayer{constructor(){super(...arguments);this.drumKit=DrumKit.getInstance(),this.bassSynth=new Synth({volume:5,oscillator:{type:"triangle"}}).toDestination(),this.polySynth=new PolySynth().toDestination()}playNote(e,t){const s=t.hasOwnProperty("velocity")?t.velocity/MAX_MIDI_VELOCITY:void 0;if(t.isDrum)this.drumKit.playNote(t.pitch,e,s);else{const r=Frequency(t.pitch,"midi").toFrequency(),i=t.endTime-t.startTime;this.getSynth(t.instrument,t.program).triggerAttackRelease(r,i,e,s)}}getSynth(e,t){return t!==void 0&&t>=32&&t<=39?this.bassSynth:this.polySynth}}Player.tone=Tone;var es6={exports:{}};(function(n,e){(function(t,s){n.exports=s()})(self,function(){return function(t){var s={};function r(i){if(s[i])return s[i].exports;var a=s[i]={i,l:!1,exports:{}};return t[i].call(a.exports,a,a.exports,r),a.l=!0,a.exports}return r.m=t,r.c=s,r.d=function(i,a,c){r.o(i,a)||Object.defineProperty(i,a,{enumerable:!0,get:c})},r.r=function(i){typeof Symbol!="undefined"&&Symbol.toStringTag&&Object.defineProperty(i,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(i,"__esModule",{value:!0})},r.t=function(i,a){if(1&a&&(i=r(i)),8&a||4&a&&typeof i=="object"&&i&&i.__esModule)return i;var c=Object.create(null);if(r.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:i}),2&a&&typeof i!="string")for(var u in i)r.d(c,u,function(l){return i[l]}.bind(null,u));return c},r.n=function(i){var a=i&&i.__esModule?function(){return i.default}:function(){return i};return r.d(a,"a",a),a},r.o=function(i,a){return Object.prototype.hasOwnProperty.call(i,a)},r.p="",r(r.s=4)}([function(t,s,r){r.r(s),r.d(s,"SVGNS",function(){return i}),r.d(s,"drawSVGPath",function(){return a}),r.d(s,"drawSVGText",function(){return c}),r.d(s,"createSVGGroupChild",function(){return u}),r.d(s,"setFade",function(){return l});const i="http://www.w3.org/2000/svg";function a(h,d,f,y,g,x,b=1){const v=document.createElementNS(i,"path");return v.setAttributeNS(null,"d",d),v.setAttributeNS(null,"transform",`translate(${f}, ${y}) scale(${g}, ${x})`),v.setAttributeNS(null,"opacity",`${b}`),h.appendChild(v),v}function c(h,d,f,y,g,x=!1,b=1,v=1){const S=document.createElementNS(i,"text");S.setAttributeNS(null,"font-family","Times"),S.setAttributeNS(null,"font-size",g),x&&S.setAttributeNS(null,"font-weight","bold"),S.setAttributeNS(null,"transform",`translate(${f}, ${y}) scale(${b}, ${v})`);const T=document.createTextNode(d);return S.appendChild(T),h.appendChild(S),S}function u(h,d){const f=document.createElementNS(i,"g");return f.setAttribute("data-id",d),h.appendChild(f),f}function l(h,d=!1,f=1,y=0){let g=h.querySelector("animate");if(!g){(g=document.createElementNS(i,"animate")).setAttributeNS(null,"attributeName","opacity"),g.setAttributeNS(null,"dur","4s"),g.setAttributeNS(null,"fill","freeze"),g.setAttributeNS(null,"keyTimes","0; 0.25; 0.5; 0.75; 1");const x=(f+3*y)/4;g.setAttributeNS(null,"values",`${f}; ${x}; ${y}; ${x}; ${f}`)}return d?g.setAttributeNS(null,"repeatCount","indefinite"):g.setAttributeNS(null,"repeatCount","1"),h.appendChild(g),h}},function(t,s,r){r.r(s),r.d(s,"PATH_SCALE",function(){return i}),r.d(s,"staffLinePath",function(){return c}),r.d(s,"extraLinePath",function(){return u}),r.d(s,"barPath",function(){return l}),r.d(s,"stemPath",function(){return h}),r.d(s,"singleFlagPath",function(){return d}),r.d(s,"multiFlagPath",function(){return f}),r.d(s,"tiePath",function(){return y}),r.d(s,"dotPath",function(){return g}),r.d(s,"NOTE_PATHS",function(){return x}),r.d(s,"REST_PATHS",function(){return b}),r.d(s,"CLEF_PATHS",function(){return v}),r.d(s,"ACCIDENTAL_PATHS",function(){return S});const i=100,a=`M 0,10 C 0,-15 35,-50 80,-50 110,-50 125,-35 125,-10 
125,15 90,50 45,50 15,50 0,35 0,10 Z`,c="m 0,0 h 100",u="m -25,0 h 175",l="m 0,-200 v 400",h="m 0,0 v 100 h 15 v -100 z",d=`M0,0 h 12 c 7,100 175,156 62,314 79,-177 -49,
-193 -61,-200 l -13,-5 z`,f=`m 0,0 h 10 c 6,72 173,64 84,227 44,-120 -44,
-123 -94,-167 z`,y=`M 0,25 C 10,46 30,67 50,67 69,67 90,47 100,25 94,
65 73,89 50,89 26,89 5,63 0,25 Z`,g="M 5 -20 a 20 20 0 1 0 0.00001 0 z",x={4:{path:`m 0,0 c 0,-37 49,-51 79,-51 31,0 83,13 83,51 0,39 
-55,51 -84,51 C 49,51 0,37 0,0 Z m 111,31 c 13,-19 0,-58 -22,-68 -33,-15 
-53,10 -39,49 9,27 48,39 61,19 z`,width:150,stemVSteps:0,stemAnchor:0,flags:0},2:{path:`m 0,10 c 0,-25 35,-60 80,-60 15,0 45,4 45,40 C 125,16 
89,50 45,50 17,50 0,36 0,10 Z m 71,7 c 17,-11 45,-34 38,-45 -7,-10 -39,1 
-57,12 -19,11 -42,31 -36,42 6,10 37,2 55,-9 z`,width:125,stemVSteps:7,stemAnchor:-10,flags:0},1:{path:a,width:125,stemVSteps:7,stemAnchor:-10,flags:0},.5:{path:a,width:125,stemVSteps:7,stemAnchor:-10,flags:1},.25:{path:a,width:125,stemVSteps:9,stemAnchor:-10,flags:2},.125:{path:a,width:125,stemVSteps:11,stemAnchor:-10,flags:3},.0625:{path:a,width:125,stemVSteps:13,stemAnchor:-10,flags:4}},b={4:"m 0,-50 h 125 v -50 H 0 Z",2:"M 0,0 H 125 V -50 H 0 Z",1:`m 0,-25 c 39,-39 37,-75 8,-120 l 6,-5 61,103 C 
40,-13 31,4 73,71 l -5,5 C 14,52 16,125 67,144 l -4,6 C -37,102 -1,22 59,60 Z`,.5:`m 52,-47 c 26,-2 42,-21 48,-42 l 12,4 L 64,83 52,79 
88,-49 c 0,0 -17,22 -57,22 -16,0 -31,-13 -31,-27 0,-18 10,-31 27,-31 17,0 
33,15 25,38 z`,.25:`m 129,-191 c -6,21 -22,40 -48,42 8,-23 -8,-38 
-25,-38 -17,0 -27,13 -27,31 0,14 15,27 31,27 40,0 57,-22 57,-22 l -20,69 
c -7,18 -22,33 -45,35 8,-23 -8,-38 -25,-38 -17,0 -27,13 -27,31 0,14 15,27 
31,27 40,0 57,-22 57,-22 l -36,128 12,4 77,-270 z`,.125:`m 129,-191 c -6,21 -22,40 -48,42 8,-23 -8,-38 
-25,-38 -17,0 -27,13 -27,31 0,14 15,27 31,27 40,0 57,-22 57,-22 l -20,69 
c -7,18 -22,33 -45,35 8,-23 -8,-38 -25,-38 -17,0 -27,13 -27,31 0,14 15,27 
31,27 40,0 57,-22 57,-22 L 68,20 C 61,37 46,51 24,52 32,29 16,14 -1,14 c 
-17,0 -27,13 -27,31 0,14 15,27 31,27 38,0 55,-20 57,-22 l -36,128 12,4 
105,-369 z`,.0625:`m 158,-292 c -6,21 -22,40 -48,42 8,-23 -8,-38 
-25,-38 -17,0 -27,13 -27,31 0,14 15,27 31,27 40,0 57,-22 57,-22 l -17,61 
v 0 c -6,21 -22,40 -48,42 8,-23 -8,-38 -25,-38 -17,0 -27,13 -27,31 0,14 
15,27 31,27 40,0 57,-22 57,-22 l -20,69 c -7,18 -22,33 -45,35 8,-23 -8,-38 
-25,-38 -17,0 -27,13 -27,31 0,14 15,27 31,27 40,0 57,-22 57,-22 L 68,20 C 
61,37 46,51 24,52 32,29 16,14 -1,14 c -17,0 -27,13 -27,31 0,14 15,27 31,27 
38,0 55,-20 57,-22 l -36,128 12,4 134,-469 z`},v={50:{path:`m 101,-199 c -49,0 -100,28 -100,83 0,39 58,57 82,26 15,-20 
-4,-47 -32,-47 -23,1 -25,0 -25,-8 0,-22 40,-46 71,-41 91,16 67,208 -105,302 
75,-27 198,-94 211,-201 6,-66 -42,-114 -102,-114 z m 143,33 c -13,0 -23,11 
-23,24 0,14 10,24 23,24 13,0 23,-11 23,-24 0,-13 -10,-24 -23,-24 z m 2,83 c 
-13,0 -23,11 -23,24 0,14 10,24 23,24 13,0 23,-11 23,-24 0,-13 -10,-24 -23,-24 
z`,upper:-4,lower:3},71:{path:`M 139,48 C 102,57 76,120 131,151 41,128 64,24 129,2 L 
117,-57 C -32,47 26,217 166,182 Z m 12,-1 27,131 C 242,153 216,46 151,47 
Z m -35,-177 c 34,-23 82,-117 50,-140 -23,-17 -71,33 -50,140 z m -10,10 c 
-23,-77 -20,-200 48,-213 19,-4 89,171 -26,266 l 13,66 c 120,-6 137,155 
39,191 l 12,58 c 30,131 -137,145 -138,47 0,-29 37,-59 63,-37 21,18 25,71 
-25,70 32,42 103,0 91,-65 L 167,193 C 56,232 -112,63 106,-120 Z`,upper:-7,lower:8}},S=[null,`m -49,-121 v 52 l -29,9 v -48 h -8 v 51 l -20,6 v 29 l 
20,-6 v 70 l -20,6 v 30 l 20,-6 v 51 h 8 V 69 l 30,-8 v 50 h 8 V 58 l 20,-6 
V 23 l -20,6 v -71 l 20,-6 v -29 l -20,6 v -50 z m 1,82 v 71 l -29,9 v -71 z`,`M -106,-166 V 67 c 52,-42 85,-56 85,-94 0,-47 -46,-51 
-73,-22 v -117 z m 31,120 c 20,0 42,46 -20,91 V -7 c 0,-28 10,-39 20,-39 z`,`m -81,-58 v -48 H -92 V 73 l 60,-13 v 50 h 11 V -72 Z m 
50,24 v 58 l -50,11 v -58 z`]},function(t,s,r){r.r(s),r.d(s,"MIN_RESOLUTION",function(){return i}),r.d(s,"STEM_WIDTH",function(){return a}),r.d(s,"LINE_STROKE",function(){return c}),r.d(s,"COMPACT_SPACING",function(){return u});const i=.0625,a=15,c=1,u=150},function(t,s,r){r.r(s),r.d(s,"MAX_QUARTER_DIVISION",function(){return h}),r.d(s,"ScrollType",function(){return d}),r.d(s,"StaffSVGRender",function(){return f});var i=r(2),a=r(0),c=r(1);const u=[{steps:[0,0,-1,-1,-2,-3,-3,-4,-4,-5,-5,-6],accidental:[0,1,0,1,0,0,1,0,1,0,1,0]},{steps:[0,-1,-1,-2,-2,-3,-4,-4,-5,-5,-6,-6],accidental:[0,0,3,0,3,0,0,3,0,3,0,3]},{steps:[0,0,-1,-1,-2,-3,-3,-4,-4,-5,-5,-6],accidental:[3,0,0,1,0,3,0,0,1,0,1,0]},{steps:[0,-1,-1,-2,-2,-3,-4,-4,-5,-5,-6,-6],accidental:[0,2,0,0,3,0,2,0,0,3,0,3]},{steps:[0,0,-1,-1,-2,-3,-3,-4,-4,-5,-5,-6],accidental:[3,0,3,0,0,3,0,3,0,0,1,0]},{steps:[0,-1,-1,-2,-2,-3,-4,-4,-5,-5,-6,-6],accidental:[0,2,0,2,0,0,2,0,2,0,0,3]},{steps:[0,-1,-1,-2,-2,-3,-4,-4,-5,-5,-6,-7],accidental:[3,0,3,0,3,0,0,3,0,3,0,0]},{steps:[0,0,-1,-1,-2,-3,-3,-4,-4,-5,-5,-6],accidental:[0,1,0,1,0,3,0,0,1,0,1,0]},{steps:[0,-1,-1,-2,-2,-3,-4,-4,-5,-5,-6,-6],accidental:[0,0,3,0,3,0,2,0,0,3,0,3]},{steps:[0,0,-1,-1,-2,-3,-3,-4,-4,-5,-5,-6],accidental:[3,0,0,1,0,3,0,3,0,0,1,0]},{steps:[0,-1,-1,-2,-2,-3,-4,-4,-5,-5,-6,-6],accidental:[0,2,0,0,3,0,2,0,2,0,0,3]},{steps:[0,0,-1,-1,-2,-3,-3,-4,-4,-5,-5,-6],accidental:[3,0,3,0,0,3,0,3,0,3,0,0]}],l=[{accidental:1,pitches:[]},{accidental:2,pitches:[70,75,68,73,66]},{accidental:1,pitches:[78,73]},{accidental:2,pitches:[70,75,68]},{accidental:1,pitches:[78,73,80,75]},{accidental:2,pitches:[70]},{accidental:2,pitches:[70,75,68,73,66,71]},{accidental:1,pitches:[78]},{accidental:2,pitches:[70,75,68,73]},{accidental:1,pitches:[78,73,80]},{accidental:2,pitches:[70,75]},{accidental:1,pitches:[78,73,80,75,70]}],h=16;var d;(function(y){y[y.PAGE=0]="PAGE",y[y.NOTE=1]="NOTE",y[y.BAR=2]="BAR"})(d||(d={}));class f{constructor(g,x,b){this.handleScrollEvent=v=>{this.lastKnownScrollLeft=this.parentElement.scrollLeft,this.ticking||window.requestAnimationFrame(()=>{this.changeAndDrawSignaturesIfNeeded(this.lastKnownScrollLeft),this.ticking=!1}),this.ticking=!0},this.scoreInfo=g,this.config={noteHeight:x.noteHeight||6,noteSpacing:x.noteSpacing||1,pixelsPerTimeStep:x.pixelsPerTimeStep||30,noteRGB:x.noteRGB||"8, 41, 64",activeNoteRGB:x.activeNoteRGB||"240, 84, 119"},this.div=b,this.timeSignatureNumerator=4,this.timeSignatureDenominator=4,this.key=x.defaultKey||0,this.scrollType=x.scrollType||d.PAGE,this.scale=this.config.noteHeight/c.PATH_SCALE,(x.pixelsPerTimeStep===void 0||x.pixelsPerTimeStep<=0)&&(this.config.pixelsPerTimeStep=0,this.config.noteSpacing=i.COMPACT_SPACING*this.scale),this.clear(),this.redraw()}clear(){for(;this.div.lastChild;)this.div.removeChild(this.div.lastChild);this.div.style.overflow="visible",this.div.style.position="relative",this.overlaySVG=document.createElementNS(a.SVGNS,"svg"),this.overlaySVG.style.position="absolute",this.div.appendChild(this.overlaySVG),this.overlayG=Object(a.createSVGGroupChild)(this.overlaySVG,"overlay"),this.signaturesBlinking=!1,this.signaturesQuarters=0,this.parentElement=document.createElement("div"),this.parentElement.style.overflow="auto",this.div.appendChild(this.parentElement),this.ticking=!1,this.lastKnownScrollLeft=0,this.parentElement.addEventListener("scroll",this.handleScrollEvent),this.staffSVG=document.createElementNS(a.SVGNS,"svg"),this.parentElement.appendChild(this.staffSVG),this.staffG=Object(a.createSVGGroupChild)(this.staffSVG,"staff"),this.linesG=Object(a.createSVGGroupChild)(this.staffSVG,"lines"),this.setStroke(this.linesG),this.staffG.appendChild(this.linesG),this.musicG=Object(a.createSVGGroupChild)(this.staffSVG,"music"),this.setFill(this.musicG),this.setStroke(this.musicG,0),this.staffG.appendChild(this.musicG),this.signaturesG=Object(a.createSVGGroupChild)(this.staffSVG,"signatures"),this.staffG.appendChild(this.signaturesG);let g=0,x=0;this.scoreInfo.notes.forEach(v=>{g+=v.pitch,++x});const b=g/x;this.clef=b<60?50:71,this.signaturesList=[{x:0,q:0}],this.signatureCurrent=0,this.signatureNext=0,this.changeKeySignatureIfNeeded(0),this.changeTimeSignatureIfNeeded(0),this.vStepSize=this.config.noteHeight/2,this.hStepSize=this.config.pixelsPerTimeStep,this.staffOffset=0,this.height=0,this.width=0,this.musicBlockMap=new Map,this.playingNotes=[],this.lastBar=0,this.barAccidentals={},this.lastQ=-1}isPaintingActiveNote(g,x){const b=g.start===x.start,v=g.start<=x.start&&g.start+g.length>=x.start+x.length;return b||v}redraw(g,x){let b=-1;const v=this.config.pixelsPerTimeStep===0;if(g){const S=[];this.playingNotes.forEach(w=>{this.isPaintingActiveNote(w,g)?S.push(w):this.highlightElement(this.getGroup(w),!1)}),this.playingNotes=S;const T=this.getGroup(g);if(T){this.playingNotes.push(g),this.highlightElement(T,!0),b=T.getBoundingClientRect().left-this.staffSVG.getBoundingClientRect().left;const w=g.start,C=T.getAttribute("data-is-bar-beginning");(this.scrollType!==d.BAR||C)&&this.scrollIntoViewIfNeeded(x,b),!v&&this.signaturesBlinking&&w>=this.signaturesQuarters&&(this.signaturesBlinking=!1,Object(a.setFade)(this.overlayG,this.signaturesBlinking))}}else{this.setDetails();const S=this.lastQ===-1;let T=0,w=0;S?(w=this.drawSignatures(this.overlayG,T,!0,!0,!0),v&&(this.width=0,w+=this.config.noteSpacing),w+=this.drawRests(this.initialRest,T+w)):T=this.width,this.musicBlockMap.forEach((_,$)=>{v||(T=this.quartersToTime($)*this.hStepSize),$>this.lastQ?(w+=this.drawMusicBlock(_,T+w),this.lastQ=$):$===this.lastQ&&(w+=this.drawRests(_,T+w))});const C=this.staffSVG.getBoundingClientRect(),N=this.musicG.getBoundingClientRect();if(this.updateVerticalBoundaries(N.top-C.top,N.bottom-C.top),v)this.width+=w;else{const _=this.musicBlockMap.get(this.lastQ),$=this.quartersToTime(this.lastQ+_.notes[0].length);this.width=$*this.config.pixelsPerTimeStep}this.staffSVG.setAttributeNS(null,"width",`${this.width}`),this.redrawStaff(this.linesG,0,this.width)}return b}drawMusicBlock(g,x){const b=g.notes[0].start;let v=this.drawBarIfNeeded(b,x);v+=this.drawSignaturesIfNeeded(b,x+v);let S=0;for(let C=4;C>=i.MIN_RESOLUTION&&!S;C/=2)C<=g.notes[0].length&&(S=C);if(S===0){const C=g.notes[0].length===0?"[infinite]":`${4/g.notes[0].length}`;console.warn(" StaffRender ","background:orange; color:white",`StaffRender does not handle notes shorther than 1/${4/i.MIN_RESOLUTION}th, and this score tries to draw a 1/${C}th. Shortest possible note will be drawn instead.`),S=i.MIN_RESOLUTION}const T=c.NOTE_PATHS[S];let w;if(T.stemAnchor&&(w=Object(a.createSVGGroupChild)(this.musicG,"stem")),g.notes.forEach(C=>{const N=C.vSteps*this.vStepSize,_=2*(C.vSteps>0?Math.floor(C.vSteps/2):Math.ceil(C.vSteps/2)),$=C.vSteps>0?-2:2;for(let E=_;Math.abs(E)>4;E+=$)Object(a.drawSVGPath)(this.linesG,c.extraLinePath,x+v,E*this.vStepSize,this.scale,1);if(C.g=C.tiedFrom?C.tiedFrom.g:Object(a.createSVGGroupChild)(this.musicG,`${C.start}-${C.pitch}`),g.isBarBeginning&&C.g.setAttribute("data-is-bar-beginning","true"),C.tiedFrom){const E=x+v-C.tiedFrom.xHeadRight;Object(a.drawSVGPath)(C.g,c.tiePath,C.tiedFrom.xHeadRight,N,E/c.PATH_SCALE,this.scale*(C.vSteps<0?-1:1),C.opacity)}Object(a.drawSVGPath)(C.g,T.path,x+v,N,this.scale,this.scale,C.opacity),C.xHeadRight=x+v+T.width*this.scale,1.5*S<=C.length&&Object(a.drawSVGPath)(C.g,c.dotPath,x+v+T.width*this.scale+this.vStepSize/2,N-this.vStepSize/2,this.scale,this.scale,C.opacity),C.accidental!==0&&Object(a.drawSVGPath)(C.g,c.ACCIDENTAL_PATHS[C.accidental],x+v,N,this.scale,this.scale,C.opacity)}),T.stemAnchor){let C,N,_=x+v;const $=T.stemAnchor*this.scale,E=g.minVStep+g.maxVStep<0,k=T.flags>2?2*(T.flags-2):0;if(E?(C=g.maxVStep*this.vStepSize-$,N=(g.minVStep+7+k)*this.vStepSize):(_+=(T.width-i.STEM_WIDTH)*this.scale,C=g.minVStep*this.vStepSize+$,N=(g.maxVStep-7-k)*this.vStepSize),Object(a.drawSVGPath)(w,c.stemPath,_,C,this.scale,(N-C)/c.PATH_SCALE),T.flags===1)Object(a.drawSVGPath)(w,c.singleFlagPath,_,N,this.scale,this.scale*(E?-1:1),1);else if(T.flags>1)for(let F=0;F<T.flags;++F)Object(a.drawSVGPath)(w,c.multiFlagPath,_,N,this.scale,this.scale*(E?-1:1),1),N+=(E?-2:2)*this.vStepSize}return this.config.pixelsPerTimeStep===0&&(v+=T.width*this.scale,w&&(v+=w.getBoundingClientRect().width),v+=this.config.noteSpacing),v+=this.drawRests(g,x+v)}drawBarIfNeeded(g,x){let b=0;const v=this.lastBar+this.getBarLength();return g!==0&&g>=v&&(this.config.pixelsPerTimeStep>0?x-=this.config.noteSpacing:b=this.config.noteSpacing,Object(a.drawSVGPath)(this.linesG,c.barPath,x,0,1,this.scale),this.lastBar=v),b}drawRests(g,x){let b=0,v=g.restToNextLength;if(v){this.config.pixelsPerTimeStep>0&&(x+=this.quartersToTime(g.notes[0].length)*this.hStepSize);let S=g.notes[0].start+g.notes[0].length,T=0;const w=this.lastBar+this.getBarLength()-S;let C;for(v>w&&(T=v-w,v=w),C=4;C>this.getBarLength()&&C>=i.MIN_RESOLUTION;C/=2);let N=C;for(;(v||T)&&N>=i.MIN_RESOLUTION;){if(N<=v){b+=this.drawBarIfNeeded(S,x+b),b+=this.drawSignaturesIfNeeded(S,x+b);const _=Object(a.drawSVGPath)(this.musicG,c.REST_PATHS[N],x+b,0,this.scale,this.scale);this.config.pixelsPerTimeStep>0?x+=this.quartersToTime(N)*this.hStepSize:(b+=_.getBoundingClientRect().width,b+=this.config.noteSpacing),S+=N,v-=N}if(T&&v<=0){const _=this.getBarLength();for(T>_?(v=_,T-=_):(v=T,T=0),C=4;C>this.getBarLength()&&C>=i.MIN_RESOLUTION;C/=2);N=C}v<N&&(N/=2)}}return b}redrawStaff(g,x,b){let v=g.querySelector('g[data-id="staff-five-lines"]');if(v)v.setAttributeNS(null,"transform",`scale(${b/c.PATH_SCALE}, 1)`);else{v=Object(a.createSVGGroupChild)(g,"staff-five-lines");const S=0;for(let T=-4;T<=4;T+=2)Object(a.drawSVGPath)(v,c.staffLinePath,x,S+T*this.vStepSize,b/c.PATH_SCALE,1)}return v}clearSignatureOverlay(){for(;this.overlayG.lastChild;)this.overlayG.removeChild(this.overlayG.lastChild)}drawSignaturesIfNeeded(g,x){let b=0;const v=this.changeKeySignatureIfNeeded(g),S=this.changeTimeSignatureIfNeeded(g);if(v||S){const T=i.COMPACT_SPACING*this.scale*(this.config.pixelsPerTimeStep>0?3:2);this.signaturesList.push({x:x-T,q:g}),this.signatureNext===null&&(this.signatureNext=x);const w=g>0?Object(a.createSVGGroupChild)(this.signaturesG,"signatures"):this.overlayG;b+=this.drawSignatures(w,x+b,!1,v,S)}return this.config.pixelsPerTimeStep===0?b:0}drawSignatures(g,x,b,v,S){const T=i.COMPACT_SPACING*this.scale;let w,C=T;const N=g===this.overlayG||this.config.pixelsPerTimeStep>0;if(N){(w=document.createElementNS(a.SVGNS,"rect")).setAttributeNS(null,"x",`${x}`),w.setAttributeNS(null,"y","0"),w.setAttributeNS(null,"width","1"),w.setAttributeNS(null,"height","1"),w.setAttribute("data-id","background"),g.appendChild(w);const k=document.defaultView.getComputedStyle(this.div.parentElement);w.setAttributeNS(null,"fill",k.getPropertyValue("background-color"))}if(b){const k=Object(a.drawSVGPath)(g,c.CLEF_PATHS[this.clef].path,x+C,0,this.scale,this.scale);this.setFill(k),C+=3*T}if(v){const k=l[this.key].accidental,F=this.clef===71?0:14;l[this.key].pitches.forEach(P=>{const R=this.getPitchDetails(P).vSteps,O=Object(a.drawSVGPath)(g,c.ACCIDENTAL_PATHS[k],x+C,(F+R)*this.vStepSize,this.scale,this.scale);this.setFill(O),C+=O.getBoundingClientRect().width})}if(S){const k=Object(a.createSVGGroupChild)(g,"time-key"),F=`${2.85*this.config.noteHeight}px`;Object(a.drawSVGText)(k,`${this.timeSignatureNumerator}`,x+C,-.5,F,!0),Object(a.drawSVGText)(k,`${this.timeSignatureDenominator}`,x+C,4*this.vStepSize-.5,F,!0),this.setFill(k),C+=k.getBoundingClientRect().width+T}const _=this.redrawStaff(g,x,C);this.setStroke(_);const $=this.div.getBoundingClientRect(),E=g.getBoundingClientRect();if(this.updateVerticalBoundaries(E.top-$.top,E.bottom-$.top),N&&(w.setAttributeNS(null,"y",`${-this.staffOffset}`),w.setAttributeNS(null,"height",`${this.height}`),w.setAttributeNS(null,"width",`${C}`)),g===this.overlayG){this.overlaySVG.setAttributeNS(null,"width",`${C+5}`);for(let k=0;k<5;++k){const F=Object(a.drawSVGPath)(g,c.stemPath,C+k,k*k-this.staffOffset,1/i.STEM_WIDTH,(this.height-2*k*k)/c.PATH_SCALE,(k-5)*(k-5)*2/c.PATH_SCALE);this.setFill(F)}}if(this.config.pixelsPerTimeStep>0){const k=this.signaturesQuarters===0;return k&&(this.signaturesQuarters=this.timeToQuarters(C/this.hStepSize)),(k||x>0)&&(this.signaturesBlinking=!0,Object(a.setFade)(g,this.signaturesBlinking)),0}return C}changeKeySignatureIfNeeded(g){if(this.scoreInfo.keySignatures){let x=this.key;for(let b=0;b<this.scoreInfo.keySignatures.length&&this.scoreInfo.keySignatures[b].start<=g;++b)x=this.scoreInfo.keySignatures[b].key;if(x!==this.key)return this.key=x,!0}return!1}changeTimeSignatureIfNeeded(g){if(this.scoreInfo.timeSignatures){let x=this.timeSignatureNumerator,b=this.timeSignatureDenominator;for(let v=0;v<this.scoreInfo.timeSignatures.length&&this.scoreInfo.timeSignatures[v].start<=g;++v)x=this.scoreInfo.timeSignatures[v].numerator,b=this.scoreInfo.timeSignatures[v].denominator;if(x!==this.timeSignatureNumerator||b!==this.timeSignatureDenominator)return this.timeSignatureNumerator=x,this.timeSignatureDenominator=b,!0}return!1}changeAndDrawSignaturesIfNeeded(g){let x;if(g<this.signatureCurrent||this.signatureNext!==null&&this.signatureNext<=g){x=this.signaturesList[0].q,this.signatureNext=null;for(let b=0;b<this.signaturesList.length;++b){if(g<this.signaturesList[b].x){this.signatureNext=this.signaturesList[b].x;break}this.signatureCurrent=this.signaturesList[b].x,x=this.signaturesList[b].q}}if(x!==void 0){const b=this.key,v=this.timeSignatureNumerator,S=this.timeSignatureDenominator;this.changeKeySignatureIfNeeded(x),this.changeTimeSignatureIfNeeded(x),this.clearSignatureOverlay(),this.drawSignatures(this.overlayG,0,!0,!0,!0),this.key=b,this.timeSignatureNumerator=v,this.timeSignatureDenominator=S}this.config.pixelsPerTimeStep>0&&g===0&&(this.signatureNext=0,this.signaturesBlinking=!0,Object(a.setFade)(this.overlayG,this.signaturesBlinking))}getBarLength(){return 4*this.timeSignatureNumerator/this.timeSignatureDenominator}scrollIntoViewIfNeeded(g,x){if(g)if(this.scrollType===d.PAGE){const b=this.parentElement.getBoundingClientRect().width;x>this.parentElement.scrollLeft+b&&(this.parentElement.scrollLeft=x-20)}else{const b=this.parentElement.getBoundingClientRect().width;this.parentElement.scrollLeft=x-.5*b}}updateVerticalBoundaries(g,x){let b=0;if(g<0){this.staffOffset-=g;const v=`translate(0, ${this.staffOffset})`;this.overlayG.setAttributeNS(null,"transform",v),this.staffG.setAttributeNS(null,"transform",v),b=this.height-g}if((b=Math.max(b,x-g))>this.height){this.height=b,this.overlaySVG.setAttributeNS(null,"height",`${this.height}`),this.staffSVG.setAttributeNS(null,"height",`${this.height}`);const v=this.div.querySelectorAll('rect[data-id="background"]');for(let S=0;S<v.length;++S){const T=v[S];T.setAttributeNS(null,"y",`${-this.staffOffset}`),T.setAttributeNS(null,"height",`${this.height}`)}}}setFill(g,x=!1){g.setAttributeNS(null,"fill",this.getColor(x))}setStroke(g,x=i.LINE_STROKE,b=!1){g.setAttributeNS(null,"stroke",this.getColor(b)),g.setAttributeNS(null,"stroke-width",`${x}`)}getColor(g){return`rgb(${g?this.config.activeNoteRGB:this.config.noteRGB})`}getOpacity(g){return g?g/127*.8+.2:1}getGroup(g){const x=g.start,b=g.pitch;return this.staffSVG.querySelector(`g[data-id="${x}-${b}"]`)}highlightElement(g,x){g.setAttribute("fill",this.getColor(x)),g.setAttribute("stroke",this.getColor(x))}getBarBeginnings(){const g=new Set;let x=0;this.scoreInfo.notes.forEach(S=>{S.start+S.length>x&&(x=S.start+S.length)});const b=this.scoreInfo.timeSignatures?this.scoreInfo.timeSignatures.slice(0):[{start:0,numerator:4,denominator:4}];b.sort((S,T)=>S.start-T.start);let v=0;for(let S=0;S<b.length;++S){const T=S===b.length-1?x:b[S].start,w=4*b[S].numerator/b[S].denominator;for(;v<T;v+=w)g.add(v)}return g}quartersToTime(g){return g/this.scoreInfo.tempos[0].qpm*60}timeToQuarters(g){return g*this.scoreInfo.tempos[0].qpm/60}setDetails(){let g=new Map;const x=this.getBarBeginnings(),b=new Set(x);this.scoreInfo.notes.slice().sort((N,_)=>N.start-_.start).forEach(N=>{const _=this.getQNote(N);b.add(_.start),b.add(_.start+_.length),g.has(_.start)?g.get(_.start).push(_):g.set(_.start,[_])}),Array.from(b).sort((N,_)=>N-_).forEach(N=>{const _=[];g.forEach($=>{$.forEach(E=>{const k=this.splitQNote(E,N);k&&_.push(k)})}),_.forEach($=>{g.has($.start)?g.get($.start).push($):g.set($.start,[$])})}),g=new Map(Array.from(g).sort((N,_)=>N[0]-_[0]));const v=this.key;let S=null,T=0;const w=x[Symbol.iterator]();let C=w.next();g.forEach((N,_)=>{const $={maxVStep:Number.MAX_SAFE_INTEGER,minVStep:Number.MIN_SAFE_INTEGER,restToNextLength:0,isBarBeginning:!1,notes:[]};this.changeKeySignatureIfNeeded(_);const E=C.value+this.getBarLength();!C.done&&_>=E&&(C=w.next(),this.barAccidentals={},$.isBarBeginning=!0),N.forEach(k=>{this.analyzePitch(k,_),$.minVStep=Math.max(k.vSteps,$.minVStep),$.maxVStep=Math.min(k.vSteps,$.maxVStep),$.notes.push(k)}),S&&(S.restToNextLength=_-T),this.musicBlockMap.set(_,$),S=$,T=_+$.notes[0].length}),this.initialRest={maxVStep:0,minVStep:0,restToNextLength:this.musicBlockMap.values().next().value.notes[0].start,isBarBeginning:!0,notes:[{start:0,length:0,vSteps:0,accidental:0,opacity:0,pitch:0,xHeadRight:0}]},this.key=v}getQNote(g){return{start:g.start,length:g.length,vSteps:0,accidental:0,opacity:this.getOpacity(g.intensity),pitch:g.pitch,xHeadRight:0}}splitQNote(g,x){const b=g.start+g.length-x;return x>g.start&&b>0?(g.length-=b,{start:x,length:b,vSteps:g.vSteps,accidental:g.accidental,opacity:g.opacity,pitch:g.pitch,xHeadRight:0,tiedFrom:g}):null}analyzePitch(g,x){const b=this.getPitchDetails(g.pitch);b.vSteps in this.barAccidentals?b.accidental===this.barAccidentals[b.vSteps]?b.accidental=0:(this.barAccidentals[b.vSteps]===3?b.accidental=b.keyAccidental:b.accidental===0&&(b.accidental=3),this.barAccidentals[b.vSteps]=b.accidental):(g.tiedFrom&&(b.accidental=0),this.barAccidentals[b.vSteps]=b.accidental),g.vSteps=b.vSteps,g.accidental=b.accidental}getPitchDetails(g){const x=g-60,b=Math.floor(x/12),v=x-12*b,S=u[this.key].steps[v],T=this.clef===71?6:-6,w=l[this.key].accidental===1?69+(v+3)%12:64+(v+8)%12;return{vSteps:T-7*b+S,accidental:u[this.key].accidental[v],keyAccidental:l[this.key].pitches.indexOf(w)>-1?l[this.key].accidental:0}}}},function(t,s,r){r.r(s);var i=r(3);r.d(s,"MAX_QUARTER_DIVISION",function(){return i.MAX_QUARTER_DIVISION}),r.d(s,"ScrollType",function(){return i.ScrollType}),r.d(s,"StaffSVGRender",function(){return i.StaffSVGRender})}])})})(es6);const MIN_NOTE_LENGTH=1;class BaseVisualizer{constructor(e,t={}){const s=isQuantizedSequence(e),r=e.tempos&&e.tempos.length>0?e.tempos[0].qpm:void 0;this.noteSequence=s?unquantizeSequence(e,r):e;const i=30;this.config={noteHeight:t.noteHeight||6,noteSpacing:t.noteSpacing||1,pixelsPerTimeStep:t.pixelsPerTimeStep||i,noteRGB:t.noteRGB||"8, 41, 64",activeNoteRGB:t.activeNoteRGB||"240, 84, 119",minPitch:t.minPitch,maxPitch:t.maxPitch};const a=this.getSize();this.width=a.width,this.height=a.height}updateMinMaxPitches(e=!1){if(!(this.config.minPitch&&this.config.maxPitch)){this.config.minPitch===void 0&&(this.config.minPitch=MAX_MIDI_PITCH),this.config.maxPitch===void 0&&(this.config.maxPitch=MIN_MIDI_PITCH);for(const t of this.noteSequence.notes)this.config.minPitch=Math.min(t.pitch,this.config.minPitch),this.config.maxPitch=Math.max(t.pitch,this.config.maxPitch);e||(this.config.minPitch-=2,this.config.maxPitch+=2)}}getSize(){this.updateMinMaxPitches();const e=(this.config.maxPitch-this.config.minPitch)*this.config.noteHeight,t=this.noteSequence.totalTime;if(!t)throw new Error("The sequence you are using with the visualizer does not have a totalQuantizedSteps or totalTime field set, so the visualizer can't be horizontally sized correctly.");return{width:t*this.config.pixelsPerTimeStep,height:e}}getNotePosition(e,t){const s=this.getNoteEndTime(e)-this.getNoteStartTime(e),r=this.getNoteStartTime(e)*this.config.pixelsPerTimeStep,i=Math.max(this.config.pixelsPerTimeStep*s-this.config.noteSpacing,MIN_NOTE_LENGTH),a=this.height-(e.pitch-this.config.minPitch)*this.config.noteHeight;return{x:r,y:a,w:i,h:this.config.noteHeight}}scrollIntoViewIfNeeded(e,t){if(e&&this.parentElement){const s=this.parentElement.getBoundingClientRect().width;t>this.parentElement.scrollLeft+s&&(this.parentElement.scrollLeft=t-20)}}getNoteStartTime(e){return Math.round(e.startTime*1e8)/1e8}getNoteEndTime(e){return Math.round(e.endTime*1e8)/1e8}isPaintingActiveNote(e,t){const s=this.getNoteStartTime(e)===this.getNoteStartTime(t),r=this.getNoteStartTime(e)<=this.getNoteStartTime(t)&&this.getNoteEndTime(e)>=this.getNoteEndTime(t);return s||r}}class PianoRollCanvasVisualizer extends BaseVisualizer{constructor(e,t,s={}){super(e,s);this.ctx=t.getContext("2d"),this.parentElement=t.parentElement;const r=window.devicePixelRatio||1;this.ctx&&(this.ctx.canvas.width=r*this.width,this.ctx.canvas.height=r*this.height,t.style.width=`${this.width}px`,t.style.height=`${this.height}px`,this.ctx.scale(r,r)),this.redraw()}redraw(e,t){this.clear();let s;for(let r=0;r<this.noteSequence.notes.length;r++){const i=this.noteSequence.notes[r],a=this.getNotePosition(i,r),c=.2,u=i.velocity?i.velocity/100+c:1,l=e&&this.isPaintingActiveNote(i,e),h=`rgba(${l?this.config.activeNoteRGB:this.config.noteRGB},
  ${u})`;this.redrawNote(a.x,a.y,a.w,a.h,h),l&&i===e&&(s=a.x)}return this.scrollIntoViewIfNeeded(t,s),s}clear(){this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height)}clearActiveNotes(){this.redraw()}redrawNote(e,t,s,r,i){this.ctx.fillStyle=i,this.ctx.fillRect(Math.round(e),Math.round(t),Math.round(s),Math.round(r))}}var ScrollType;(function(n){n[n.PAGE=0]="PAGE",n[n.NOTE=1]="NOTE",n[n.BAR=2]="BAR"})(ScrollType||(ScrollType={}));/iPad|iPhone|iPod/.test(navigator.userAgent);const ATTENTION_PREFIX="attention_cell_wrapper/";class AttentionWrapper{constructor(e,t,s){this.cells=e,this.attnLength=t,this.attnSize=s}static isWrapped(e){return`rnn/${ATTENTION_PREFIX}kernel`in e}initialize(e){const t=`rnn/${ATTENTION_PREFIX}`;this.attnInputMatrix=e[`${t}kernel`],this.attnInputBias=e[`${t}bias`],this.attnW=e[`${t}attention/attn_w`],this.attnV=e[`${t}attention/attn_v`],this.attnMatrix=e[`${t}attention/kernel`],this.attnBias=e[`${t}attention/bias`],this.attnOutputMatrix=e[`${t}attention_output_projection/kernel`],this.attnOutputBias=e[`${t}attention_output_projection/bias`]}initState(){const e=zeros$1([this.attnSize]),t=zeros$1([1,this.attnSize*this.attnLength]);return{attention:e,attentionState:t}}call(e,t,s,r){const i=concat$2([e,r.attention.as2D(1,-1)],1),a=add$1(matMul$1(i,this.attnInputMatrix),this.attnInputBias.as2D(1,-1));[t,s]=multiRNNCell(this.cells,a,t,s);const c=reshape$2(r.attentionState,[-1,this.attnLength,1,this.attnSize]),u=conv2d$2(c,this.attnW,[1,1],"same"),l=[];for(let C=0;C<t.length;C++)l.push(t[C]),l.push(s[C]);const h=concat$2(l,1),d=matMul$1(h,this.attnMatrix).reshape([-1,1,1,this.attnSize]),f=sum$2(mul(this.attnV,tanh$2(add$1(u,d))),[2,3]),y=softmax$2(f),x=sum$2(mul(reshape$2(y,[-1,this.attnLength,1,1]),c),[1,2]).reshape([-1,this.attnSize]),b=r.attentionState.reshape([-1,this.attnLength,this.attnSize]),v=slice$2(b,[0,1,0],[b.shape[0],b.shape[1]-1,b.shape[2]]),S=add$1(matMul$1(concat$2([s[2],x],1),this.attnOutputMatrix),this.attnOutputBias),T=x.flatten(),w=concat$2([v,S.as3D(S.shape[0],1,S.shape[1])],1).reshape([-1,this.attnLength*this.attnSize]);return{output:S,c:t,h:s,attentionState:{attention:T,attentionState:w}}}}const CELL_FORMAT="multi_rnn_cell/cell_%d/basic_lstm_cell/";class MusicRNN{constructor(e,t){this.checkpointURL=e,this.spec=t,this.initialized=!1,this.rawVars={},this.biasShapes=[],this.lstmCells=[]}isInitialized(){return this.initialized}instantiateFromSpec(){this.dataConverter=converterFromSpec(this.spec.dataConverter),this.attentionLength=this.spec.attentionLength,this.chordEncoder=this.spec.chordEncoder?chordEncoderFromType(this.spec.chordEncoder):void 0,this.auxInputs=this.spec.auxInputs?this.spec.auxInputs.map(e=>auxiliaryInputFromSpec(e)):void 0}async initialize(){this.dispose();const e=performance$1.now();this.spec||await fetch$1(`${this.checkpointURL}/config.json`).then(a=>a.json()).then(a=>{if(a.type!=="MusicRNN")throw new Error(`Attempted to instantiate MusicRNN model with incorrect type:
                  ${a.type}`);this.spec=a}),this.instantiateFromSpec();const t=await fetch$1(`${this.checkpointURL}/weights_manifest.json`).then(a=>a.json()).then(a=>loadWeights(a,this.checkpointURL)),s=AttentionWrapper.isWrapped(t),r=s?`rnn/${ATTENTION_PREFIX}`:"rnn/";this.forgetBias=scalar(1),this.lstmCells.length=0,this.biasShapes.length=0;let i=0;for(;;){const a=r+CELL_FORMAT.replace("%d",i.toString());if(!(`${a}kernel`in t))break;this.lstmCells.push((c,u,l)=>basicLSTMCell(this.forgetBias,t[`${a}kernel`],t[`${a}bias`],c,u,l)),this.biasShapes.push(t[`${a}bias`].shape[0]),++i}this.lstmFcW=t["fully_connected/weights"],this.lstmFcB=t["fully_connected/biases"],s&&(this.attentionWrapper=new AttentionWrapper(this.lstmCells,this.attentionLength,this.biasShapes[0]/4),this.attentionWrapper.initialize(t)),this.rawVars=t,this.initialized=!0,logWithDuration("Initialized model",e,"MusicRNN")}dispose(){Object.keys(this.rawVars).forEach(e=>this.rawVars[e].dispose()),this.rawVars={},this.forgetBias&&(this.forgetBias.dispose(),this.forgetBias=void 0),this.initialized=!1}async continueSequence(e,t,s,r){return(await this.continueSequenceImpl(e,t,s,r,!1)).sequence}async continueSequenceAndReturnProbabilities(e,t,s,r){return this.continueSequenceImpl(e,t,s,r,!0)}async continueSequenceImpl(e,t,s,r,i){if(assertIsRelativeQuantizedSequence(e),this.chordEncoder&&!r)throw new Error("Chord progression expected but not provided.");if(!this.chordEncoder&&r)throw new Error("Unexpected chord progression provided.");this.initialized||await this.initialize();const a=performance$1.now(),c=tidy(()=>{const d=this.dataConverter.toTensor(e),f=d.shape[0],y=d.shape[1],g=this.chordEncoder?this.chordEncoder.encodeProgression(r,f+t):void 0,x=this.auxInputs?concat$2(this.auxInputs.map(S=>S.getTensors(f+t)),1):void 0,b=this.sampleRnn(d,t,s,g,x,i),v=b.samples;return{samples:stack(v).as2D(v.length,y),probs:b.probs}}),u=await c,l=this.dataConverter.toNoteSequence(u.samples,e.quantizationInfo.stepsPerQuarter),h=[];if(i)for(let d=0;d<u.probs.length;d++)h.push(await u.probs[d].data()),u.probs[d].dispose();return c.samples.dispose(),l.then(()=>logWithDuration("Continuation completed",a,"MusicRNN",20)),{sequence:l,probs:h}}sampleRnn(e,t,s,r,i,a){const c=e.shape[0],u=e.shape[1];let l=[],h=[];for(let S=0;S<this.biasShapes.length;S++)l.push(zeros$1([1,this.biasShapes[S]/4])),h.push(zeros$1([1,this.biasShapes[S]/4]));let d=this.attentionWrapper?this.attentionWrapper.initState():null,f;e=e.toFloat();const y=[],g=[],x=split(e.toFloat(),c),b=r?split(r,r.shape[0]):void 0,v=i?split(i,i.shape[0]):void 0;for(let S=0;S<c+t;S++){let T;if(S<c)T=x[S];else{let C=f.matMul(this.lstmFcW).add(this.lstmFcB).as1D(),N;s?(C=C.div(scalar(s)),N=multinomial$2(C,1).as1D()):N=C.argMax().as1D(),a&&g.push(softmax$2(C)),T=oneHot$2(N,u).toFloat(),y.push(T.as1D())}if(S===c+t-1)break;const w=[];if(b&&w.push(b[S+1]),w.push(T),v&&w.push(v[S]),T=concat$2(w,1),this.attentionWrapper){const C=this.attentionWrapper.call(T,l,h,d);l=C.c,h=C.h,d=C.attentionState,f=C.output}else[l,h]=multiRNNCell(this.lstmCells,T,l,h),f=h[h.length-1]}return{samples:y,probs:g}}}var PitchClass;(function(n){n[n.None=0]="None",n[n.C=1]="C",n[n.Cs=2]="Cs",n[n.D=3]="D",n[n.Eb=4]="Eb",n[n.E=5]="E",n[n.F=6]="F",n[n.Fs=7]="Fs",n[n.G=8]="G",n[n.Ab=9]="Ab",n[n.A=10]="A",n[n.Bb=11]="Bb",n[n.B=12]="B"})(PitchClass||(PitchClass={}));var ChordFamily;(function(n){n[n.None=0]="None",n[n.Maj=1]="Maj",n[n.Min=2]="Min",n[n.Aug=3]="Aug",n[n.Dim=4]="Dim",n[n.Seven=5]="Seven",n[n.Maj7=6]="Maj7",n[n.Min7=7]="Min7",n[n.Min7b5=8]="Min7b5"})(ChordFamily||(ChordFamily={}));var ndarrayOps={};function unique_pred(n,e){for(var t=1,s=n.length,r=n[0],i=n[0],a=1;a<s;++a)if(i=r,r=n[a],e(r,i)){if(a===t){t++;continue}n[t++]=r}return n.length=t,n}function unique_eq(n){for(var e=1,t=n.length,s=n[0],r=n[0],i=1;i<t;++i,r=s)if(r=s,s=n[i],s!==r){if(i===e){e++;continue}n[e++]=s}return n.length=e,n}function unique(n,e,t){return n.length===0?n:e?(t||n.sort(e),unique_pred(n,e)):(t||n.sort(),unique_eq(n))}var uniq$2=unique,uniq$1=uniq$2;function innerFill(n,e,t){var s=n.length,r=e.arrayArgs.length,i=e.indexArgs.length>0,a=[],c=[],u=0,l=0,h,d;for(h=0;h<s;++h)c.push(["i",h,"=0"].join(""));for(d=0;d<r;++d)for(h=0;h<s;++h)l=u,u=n[h],h===0?c.push(["d",d,"s",h,"=t",d,"p",u].join("")):c.push(["d",d,"s",h,"=(t",d,"p",u,"-s",l,"*t",d,"p",l,")"].join(""));for(c.length>0&&a.push("var "+c.join(",")),h=s-1;h>=0;--h)u=n[h],a.push(["for(i",h,"=0;i",h,"<s",u,";++i",h,"){"].join(""));for(a.push(t),h=0;h<s;++h){for(l=u,u=n[h],d=0;d<r;++d)a.push(["p",d,"+=d",d,"s",h].join(""));i&&(h>0&&a.push(["index[",l,"]-=s",l].join("")),a.push(["++index[",u,"]"].join(""))),a.push("}")}return a.join(`
`)}function outerFill(n,e,t,s){for(var r=e.length,i=t.arrayArgs.length,a=t.blockSize,c=t.indexArgs.length>0,u=[],l=0;l<i;++l)u.push(["var offset",l,"=p",l].join(""));for(var l=n;l<r;++l)u.push(["for(var j"+l+"=SS[",e[l],"]|0;j",l,">0;){"].join("")),u.push(["if(j",l,"<",a,"){"].join("")),u.push(["s",e[l],"=j",l].join("")),u.push(["j",l,"=0"].join("")),u.push(["}else{s",e[l],"=",a].join("")),u.push(["j",l,"-=",a,"}"].join("")),c&&u.push(["index[",e[l],"]=j",l].join(""));for(var l=0;l<i;++l){for(var h=["offset"+l],d=n;d<r;++d)h.push(["j",d,"*t",l,"p",e[d]].join(""));u.push(["p",l,"=(",h.join("+"),")"].join(""))}u.push(innerFill(e,t,s));for(var l=n;l<r;++l)u.push("}");return u.join(`
`)}function countMatches(n){for(var e=0,t=n[0].length;e<t;){for(var s=1;s<n.length;++s)if(n[s][e]!==n[0][e])return e;++e}return e}function processBlock(n,e,t){for(var s=n.body,r=[],i=[],a=0;a<n.args.length;++a){var c=n.args[a];if(!(c.count<=0)){var u=new RegExp(c.name,"g"),l="",h=e.arrayArgs.indexOf(a);switch(e.argTypes[a]){case"offset":var d=e.offsetArgIndex.indexOf(a),f=e.offsetArgs[d];h=f.array,l="+q"+d;case"array":l="p"+h+l;var y="l"+a,g="a"+h;if(e.arrayBlockIndices[h]===0)c.count===1?t[h]==="generic"?c.lvalue?(r.push(["var ",y,"=",g,".get(",l,")"].join("")),s=s.replace(u,y),i.push([g,".set(",l,",",y,")"].join(""))):s=s.replace(u,[g,".get(",l,")"].join("")):s=s.replace(u,[g,"[",l,"]"].join("")):t[h]==="generic"?(r.push(["var ",y,"=",g,".get(",l,")"].join("")),s=s.replace(u,y),c.lvalue&&i.push([g,".set(",l,",",y,")"].join(""))):(r.push(["var ",y,"=",g,"[",l,"]"].join("")),s=s.replace(u,y),c.lvalue&&i.push([g,"[",l,"]=",y].join("")));else{for(var x=[c.name],b=[l],v=0;v<Math.abs(e.arrayBlockIndices[h]);v++)x.push("\\s*\\[([^\\]]+)\\]"),b.push("$"+(v+1)+"*t"+h+"b"+v);if(u=new RegExp(x.join(""),"g"),l=b.join("+"),t[h]==="generic")throw new Error("cwise: Generic arrays not supported in combination with blocks!");s=s.replace(u,[g,"[",l,"]"].join(""))}break;case"scalar":s=s.replace(u,"Y"+e.scalarArgs.indexOf(a));break;case"index":s=s.replace(u,"index");break;case"shape":s=s.replace(u,"shape");break}}}return[r.join(`
`),s,i.join(`
`)].join(`
`).trim()}function typeSummary(n){for(var e=new Array(n.length),t=!0,s=0;s<n.length;++s){var r=n[s],i=r.match(/\d+/);i?i=i[0]:i="",r.charAt(0)===0?e[s]="u"+r.charAt(1)+i:e[s]=r.charAt(0)+i,s>0&&(t=t&&e[s]===e[s-1])}return t?e[0]:e.join("")}function generateCWiseOp(n,e){for(var t=e[1].length-Math.abs(n.arrayBlockIndices[0])|0,s=new Array(n.arrayArgs.length),r=new Array(n.arrayArgs.length),i=0;i<n.arrayArgs.length;++i)r[i]=e[2*i],s[i]=e[2*i+1];for(var a=[],c=[],u=[],l=[],h=[],i=0;i<n.arrayArgs.length;++i){n.arrayBlockIndices[i]<0?(u.push(0),l.push(t),a.push(t),c.push(t+n.arrayBlockIndices[i])):(u.push(n.arrayBlockIndices[i]),l.push(n.arrayBlockIndices[i]+t),a.push(0),c.push(n.arrayBlockIndices[i]));for(var d=[],f=0;f<s[i].length;f++)u[i]<=s[i][f]&&s[i][f]<l[i]&&d.push(s[i][f]-u[i]);h.push(d)}for(var y=["SS"],g=["'use strict'"],x=[],f=0;f<t;++f)x.push(["s",f,"=SS[",f,"]"].join(""));for(var i=0;i<n.arrayArgs.length;++i){y.push("a"+i),y.push("t"+i),y.push("p"+i);for(var f=0;f<t;++f)x.push(["t",i,"p",f,"=t",i,"[",u[i]+f,"]"].join(""));for(var f=0;f<Math.abs(n.arrayBlockIndices[i]);++f)x.push(["t",i,"b",f,"=t",i,"[",a[i]+f,"]"].join(""))}for(var i=0;i<n.scalarArgs.length;++i)y.push("Y"+i);if(n.shapeArgs.length>0&&x.push("shape=SS.slice(0)"),n.indexArgs.length>0){for(var b=new Array(t),i=0;i<t;++i)b[i]="0";x.push(["index=[",b.join(","),"]"].join(""))}for(var i=0;i<n.offsetArgs.length;++i){for(var v=n.offsetArgs[i],S=[],f=0;f<v.offset.length;++f)v.offset[f]!==0&&(v.offset[f]===1?S.push(["t",v.array,"p",f].join("")):S.push([v.offset[f],"*t",v.array,"p",f].join("")));S.length===0?x.push("q"+i+"=0"):x.push(["q",i,"=",S.join("+")].join(""))}var T=uniq$1([].concat(n.pre.thisVars).concat(n.body.thisVars).concat(n.post.thisVars));x=x.concat(T),x.length>0&&g.push("var "+x.join(","));for(var i=0;i<n.arrayArgs.length;++i)g.push("p"+i+"|=0");n.pre.body.length>3&&g.push(processBlock(n.pre,n,r));var w=processBlock(n.body,n,r),C=countMatches(h);C<t?g.push(outerFill(C,h[0],n,w)):g.push(innerFill(h[0],n,w)),n.post.body.length>3&&g.push(processBlock(n.post,n,r)),n.debug&&console.log("-----Generated cwise routine for ",e,`:
`+g.join(`
`)+`
----------`);var N=[n.funcName||"unnamed","_cwise_loop_",s[0].join("s"),"m",C,typeSummary(r)].join(""),_=new Function(["function ",N,"(",y.join(","),"){",g.join(`
`),"} return ",N].join(""));return _()}var compile$2=generateCWiseOp,compile$1=compile$2;function createThunk$1(n){var e=["'use strict'","var CACHED={}"],t=[],s=n.funcName+"_cwise_thunk";e.push(["return function ",s,"(",n.shimArgs.join(","),"){"].join(""));for(var r=[],i=[],a=[["array",n.arrayArgs[0],".shape.slice(",Math.max(0,n.arrayBlockIndices[0]),n.arrayBlockIndices[0]<0?","+n.arrayBlockIndices[0]+")":")"].join("")],c=[],u=[],l=0;l<n.arrayArgs.length;++l){var h=n.arrayArgs[l];t.push(["t",h,"=array",h,".dtype,","r",h,"=array",h,".order"].join("")),r.push("t"+h),r.push("r"+h),i.push("t"+h),i.push("r"+h+".join()"),a.push("array"+h+".data"),a.push("array"+h+".stride"),a.push("array"+h+".offset|0"),l>0&&(c.push("array"+n.arrayArgs[0]+".shape.length===array"+h+".shape.length+"+(Math.abs(n.arrayBlockIndices[0])-Math.abs(n.arrayBlockIndices[l]))),u.push("array"+n.arrayArgs[0]+".shape[shapeIndex+"+Math.max(0,n.arrayBlockIndices[0])+"]===array"+h+".shape[shapeIndex+"+Math.max(0,n.arrayBlockIndices[l])+"]"))}n.arrayArgs.length>1&&(e.push("if (!("+c.join(" && ")+")) throw new Error('cwise: Arrays do not all have the same dimensionality!')"),e.push("for(var shapeIndex=array"+n.arrayArgs[0]+".shape.length-"+Math.abs(n.arrayBlockIndices[0])+"; shapeIndex-->0;) {"),e.push("if (!("+u.join(" && ")+")) throw new Error('cwise: Arrays do not all have the same shape!')"),e.push("}"));for(var l=0;l<n.scalarArgs.length;++l)a.push("scalar"+n.scalarArgs[l]);t.push(["type=[",i.join(","),"].join()"].join("")),t.push("proc=CACHED[type]"),e.push("var "+t.join(",")),e.push(["if(!proc){","CACHED[type]=proc=compile([",r.join(","),"])}","return proc(",a.join(","),")}"].join("")),n.debug&&console.log(`-----Generated thunk:
`+e.join(`
`)+`
----------`);var d=new Function("compile",e.join(`
`));return d(compile$1.bind(void 0,n))}var thunk=createThunk$1,createThunk=thunk;function Procedure(){this.argTypes=[],this.shimArgs=[],this.arrayArgs=[],this.arrayBlockIndices=[],this.scalarArgs=[],this.offsetArgs=[],this.offsetArgIndex=[],this.indexArgs=[],this.shapeArgs=[],this.funcName="",this.pre=null,this.body=null,this.post=null,this.debug=!1}function compileCwise(n){var e=new Procedure;e.pre=n.pre,e.body=n.body,e.post=n.post;var t=n.args.slice(0);e.argTypes=t;for(var s=0;s<t.length;++s){var r=t[s];if(r==="array"||typeof r=="object"&&r.blockIndices){if(e.argTypes[s]="array",e.arrayArgs.push(s),e.arrayBlockIndices.push(r.blockIndices?r.blockIndices:0),e.shimArgs.push("array"+s),s<e.pre.args.length&&e.pre.args[s].count>0)throw new Error("cwise: pre() block may not reference array args");if(s<e.post.args.length&&e.post.args[s].count>0)throw new Error("cwise: post() block may not reference array args")}else if(r==="scalar")e.scalarArgs.push(s),e.shimArgs.push("scalar"+s);else if(r==="index"){if(e.indexArgs.push(s),s<e.pre.args.length&&e.pre.args[s].count>0)throw new Error("cwise: pre() block may not reference array index");if(s<e.body.args.length&&e.body.args[s].lvalue)throw new Error("cwise: body() block may not write to array index");if(s<e.post.args.length&&e.post.args[s].count>0)throw new Error("cwise: post() block may not reference array index")}else if(r==="shape"){if(e.shapeArgs.push(s),s<e.pre.args.length&&e.pre.args[s].lvalue)throw new Error("cwise: pre() block may not write to array shape");if(s<e.body.args.length&&e.body.args[s].lvalue)throw new Error("cwise: body() block may not write to array shape");if(s<e.post.args.length&&e.post.args[s].lvalue)throw new Error("cwise: post() block may not write to array shape")}else if(typeof r=="object"&&r.offset)e.argTypes[s]="offset",e.offsetArgs.push({array:r.array,offset:r.offset}),e.offsetArgIndex.push(s);else throw new Error("cwise: Unknown argument type "+t[s])}if(e.arrayArgs.length<=0)throw new Error("cwise: No array arguments specified");if(e.pre.args.length>t.length)throw new Error("cwise: Too many arguments in pre() block");if(e.body.args.length>t.length)throw new Error("cwise: Too many arguments in body() block");if(e.post.args.length>t.length)throw new Error("cwise: Too many arguments in post() block");return e.debug=!!n.printCode||!!n.debug,e.funcName=n.funcName||"cwise",e.blockSize=n.blockSize||64,createThunk(e)}var compiler=compileCwise;(function(n){var e=compiler,t={body:"",args:[],thisVars:[],localVars:[]};function s(f){if(!f)return t;for(var y=0;y<f.args.length;++y){var g=f.args[y];y===0?f.args[y]={name:g,lvalue:!0,rvalue:!!f.rvalue,count:f.count||1}:f.args[y]={name:g,lvalue:!1,rvalue:!0,count:1}}return f.thisVars||(f.thisVars=[]),f.localVars||(f.localVars=[]),f}function r(f){return e({args:f.args,pre:s(f.pre),body:s(f.body),post:s(f.proc),funcName:f.funcName})}function i(f){for(var y=[],g=0;g<f.args.length;++g)y.push("a"+g);var x=new Function("P",["return function ",f.funcName,"_ndarrayops(",y.join(","),") {P(",y.join(","),");return a0}"].join(""));return x(r(f))}var a={add:"+",sub:"-",mul:"*",div:"/",mod:"%",band:"&",bor:"|",bxor:"^",lshift:"<<",rshift:">>",rrshift:">>>"};(function(){for(var f in a){var y=a[f];n[f]=i({args:["array","array","array"],body:{args:["a","b","c"],body:"a=b"+y+"c"},funcName:f}),n[f+"eq"]=i({args:["array","array"],body:{args:["a","b"],body:"a"+y+"=b"},rvalue:!0,funcName:f+"eq"}),n[f+"s"]=i({args:["array","array","scalar"],body:{args:["a","b","s"],body:"a=b"+y+"s"},funcName:f+"s"}),n[f+"seq"]=i({args:["array","scalar"],body:{args:["a","s"],body:"a"+y+"=s"},rvalue:!0,funcName:f+"seq"})}})();var c={not:"!",bnot:"~",neg:"-",recip:"1.0/"};(function(){for(var f in c){var y=c[f];n[f]=i({args:["array","array"],body:{args:["a","b"],body:"a="+y+"b"},funcName:f}),n[f+"eq"]=i({args:["array"],body:{args:["a"],body:"a="+y+"a"},rvalue:!0,count:2,funcName:f+"eq"})}})();var u={and:"&&",or:"||",eq:"===",neq:"!==",lt:"<",gt:">",leq:"<=",geq:">="};(function(){for(var f in u){var y=u[f];n[f]=i({args:["array","array","array"],body:{args:["a","b","c"],body:"a=b"+y+"c"},funcName:f}),n[f+"s"]=i({args:["array","array","scalar"],body:{args:["a","b","s"],body:"a=b"+y+"s"},funcName:f+"s"}),n[f+"eq"]=i({args:["array","array"],body:{args:["a","b"],body:"a=a"+y+"b"},rvalue:!0,count:2,funcName:f+"eq"}),n[f+"seq"]=i({args:["array","scalar"],body:{args:["a","s"],body:"a=a"+y+"s"},rvalue:!0,count:2,funcName:f+"seq"})}})();var l=["abs","acos","asin","atan","ceil","cos","exp","floor","log","round","sin","sqrt","tan"];(function(){for(var f=0;f<l.length;++f){var y=l[f];n[y]=i({args:["array","array"],pre:{args:[],body:"this_f=Math."+y,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(b)",thisVars:["this_f"]},funcName:y}),n[y+"eq"]=i({args:["array"],pre:{args:[],body:"this_f=Math."+y,thisVars:["this_f"]},body:{args:["a"],body:"a=this_f(a)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:y+"eq"})}})();var h=["max","min","atan2","pow"];(function(){for(var f=0;f<h.length;++f){var y=h[f];n[y]=i({args:["array","array","array"],pre:{args:[],body:"this_f=Math."+y,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(b,c)",thisVars:["this_f"]},funcName:y}),n[y+"s"]=i({args:["array","array","scalar"],pre:{args:[],body:"this_f=Math."+y,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(b,c)",thisVars:["this_f"]},funcName:y+"s"}),n[y+"eq"]=i({args:["array","array"],pre:{args:[],body:"this_f=Math."+y,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(a,b)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:y+"eq"}),n[y+"seq"]=i({args:["array","scalar"],pre:{args:[],body:"this_f=Math."+y,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(a,b)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:y+"seq"})}})();var d=["atan2","pow"];(function(){for(var f=0;f<d.length;++f){var y=d[f];n[y+"op"]=i({args:["array","array","array"],pre:{args:[],body:"this_f=Math."+y,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(c,b)",thisVars:["this_f"]},funcName:y+"op"}),n[y+"ops"]=i({args:["array","array","scalar"],pre:{args:[],body:"this_f=Math."+y,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(c,b)",thisVars:["this_f"]},funcName:y+"ops"}),n[y+"opeq"]=i({args:["array","array"],pre:{args:[],body:"this_f=Math."+y,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(b,a)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:y+"opeq"}),n[y+"opseq"]=i({args:["array","scalar"],pre:{args:[],body:"this_f=Math."+y,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(b,a)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:y+"opseq"})}})(),n.any=e({args:["array"],pre:t,body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:1}],body:"if(a){return true}",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:"return false"},funcName:"any"}),n.all=e({args:["array"],pre:t,body:{args:[{name:"x",lvalue:!1,rvalue:!0,count:1}],body:"if(!x){return false}",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:"return true"},funcName:"all"}),n.sum=e({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:1}],body:"this_s+=a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"sum"}),n.prod=e({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=1"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:1}],body:"this_s*=a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"prod"}),n.norm2squared=e({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:2}],body:"this_s+=a*a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"norm2squared"}),n.norm2=e({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:2}],body:"this_s+=a*a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return Math.sqrt(this_s)"},funcName:"norm2"}),n.norminf=e({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:4}],body:"if(-a>this_s){this_s=-a}else if(a>this_s){this_s=a}",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"norminf"}),n.norm1=e({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:3}],body:"this_s+=a<0?-a:a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"norm1"}),n.sup=e({args:["array"],pre:{body:"this_h=-Infinity",args:[],thisVars:["this_h"],localVars:[]},body:{body:"if(_inline_1_arg0_>this_h)this_h=_inline_1_arg0_",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_h"],localVars:[]},post:{body:"return this_h",args:[],thisVars:["this_h"],localVars:[]}}),n.inf=e({args:["array"],pre:{body:"this_h=Infinity",args:[],thisVars:["this_h"],localVars:[]},body:{body:"if(_inline_1_arg0_<this_h)this_h=_inline_1_arg0_",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_h"],localVars:[]},post:{body:"return this_h",args:[],thisVars:["this_h"],localVars:[]}}),n.argmin=e({args:["index","array","shape"],pre:{body:"{this_v=Infinity;this_i=_inline_0_arg2_.slice(0)}",args:[{name:"_inline_0_arg0_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg1_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg2_",lvalue:!1,rvalue:!0,count:1}],thisVars:["this_i","this_v"],localVars:[]},body:{body:"{if(_inline_1_arg1_<this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2},{name:"_inline_1_arg1_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_i","this_v"],localVars:["_inline_1_k"]},post:{body:"{return this_i}",args:[],thisVars:["this_i"],localVars:[]}}),n.argmax=e({args:["index","array","shape"],pre:{body:"{this_v=-Infinity;this_i=_inline_0_arg2_.slice(0)}",args:[{name:"_inline_0_arg0_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg1_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg2_",lvalue:!1,rvalue:!0,count:1}],thisVars:["this_i","this_v"],localVars:[]},body:{body:"{if(_inline_1_arg1_>this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2},{name:"_inline_1_arg1_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_i","this_v"],localVars:["_inline_1_k"]},post:{body:"{return this_i}",args:[],thisVars:["this_i"],localVars:[]}}),n.random=i({args:["array"],pre:{args:[],body:"this_f=Math.random",thisVars:["this_f"]},body:{args:["a"],body:"a=this_f()",thisVars:["this_f"]},funcName:"random"}),n.assign=i({args:["array","array"],body:{args:["a","b"],body:"a=b"},funcName:"assign"}),n.assigns=i({args:["array","scalar"],body:{args:["a","b"],body:"a=b"},funcName:"assigns"}),n.equals=e({args:["array","array"],pre:t,body:{args:[{name:"x",lvalue:!1,rvalue:!0,count:1},{name:"y",lvalue:!1,rvalue:!0,count:1}],body:"if(x!==y){return false}",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:"return true"},funcName:"equals"})})(ndarrayOps);var twiddle={},INT_BITS=32;twiddle.INT_BITS=INT_BITS;twiddle.INT_MAX=2147483647;twiddle.INT_MIN=-1<<INT_BITS-1;twiddle.sign=function(n){return(n>0)-(n<0)};twiddle.abs=function(n){var e=n>>INT_BITS-1;return(n^e)-e};twiddle.min=function(n,e){return e^(n^e)&-(n<e)};twiddle.max=function(n,e){return n^(n^e)&-(n<e)};twiddle.isPow2=function(n){return!(n&n-1)&&!!n};twiddle.log2=function(n){var e,t;return e=(n>65535)<<4,n>>>=e,t=(n>255)<<3,n>>>=t,e|=t,t=(n>15)<<2,n>>>=t,e|=t,t=(n>3)<<1,n>>>=t,e|=t,e|n>>1};twiddle.log10=function(n){return n>=1e9?9:n>=1e8?8:n>=1e7?7:n>=1e6?6:n>=1e5?5:n>=1e4?4:n>=1e3?3:n>=100?2:n>=10?1:0};twiddle.popCount=function(n){return n=n-(n>>>1&1431655765),n=(n&858993459)+(n>>>2&858993459),(n+(n>>>4)&252645135)*16843009>>>24};function countTrailingZeros(n){var e=32;return n&=-n,n&&e--,n&65535&&(e-=16),n&16711935&&(e-=8),n&252645135&&(e-=4),n&858993459&&(e-=2),n&1431655765&&(e-=1),e}twiddle.countTrailingZeros=countTrailingZeros;twiddle.nextPow2=function(n){return n+=n===0,--n,n|=n>>>1,n|=n>>>2,n|=n>>>4,n|=n>>>8,n|=n>>>16,n+1};twiddle.prevPow2=function(n){return n|=n>>>1,n|=n>>>2,n|=n>>>4,n|=n>>>8,n|=n>>>16,n-(n>>>1)};twiddle.parity=function(n){return n^=n>>>16,n^=n>>>8,n^=n>>>4,n&=15,27030>>>n&1};var REVERSE_TABLE=new Array(256);(function(n){for(var e=0;e<256;++e){var t=e,s=e,r=7;for(t>>>=1;t;t>>>=1)s<<=1,s|=t&1,--r;n[e]=s<<r&255}})(REVERSE_TABLE);twiddle.reverse=function(n){return REVERSE_TABLE[n&255]<<24|REVERSE_TABLE[n>>>8&255]<<16|REVERSE_TABLE[n>>>16&255]<<8|REVERSE_TABLE[n>>>24&255]};twiddle.interleave2=function(n,e){return n&=65535,n=(n|n<<8)&16711935,n=(n|n<<4)&252645135,n=(n|n<<2)&858993459,n=(n|n<<1)&1431655765,e&=65535,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,n|e<<1};twiddle.deinterleave2=function(n,e){return n=n>>>e&1431655765,n=(n|n>>>1)&858993459,n=(n|n>>>2)&252645135,n=(n|n>>>4)&16711935,n=(n|n>>>16)&65535,n<<16>>16};twiddle.interleave3=function(n,e,t){return n&=1023,n=(n|n<<16)&4278190335,n=(n|n<<8)&251719695,n=(n|n<<4)&3272356035,n=(n|n<<2)&1227133513,e&=1023,e=(e|e<<16)&4278190335,e=(e|e<<8)&251719695,e=(e|e<<4)&3272356035,e=(e|e<<2)&1227133513,n|=e<<1,t&=1023,t=(t|t<<16)&4278190335,t=(t|t<<8)&251719695,t=(t|t<<4)&3272356035,t=(t|t<<2)&1227133513,n|t<<2};twiddle.deinterleave3=function(n,e){return n=n>>>e&1227133513,n=(n|n>>>2)&3272356035,n=(n|n>>>4)&251719695,n=(n|n>>>8)&4278190335,n=(n|n>>>16)&1023,n<<22>>22};twiddle.nextCombination=function(n){var e=n|n-1;return e+1|(~e&-~e)-1>>>countTrailingZeros(n)+1};function dupe_array(n,e,t){var s=n[t]|0;if(s<=0)return[];var r=new Array(s),i;if(t===n.length-1)for(i=0;i<s;++i)r[i]=e;else for(i=0;i<s;++i)r[i]=dupe_array(n,e,t+1);return r}function dupe_number(n,e){var t,s;for(t=new Array(n),s=0;s<n;++s)t[s]=e;return t}function dupe(n,e){switch(typeof e=="undefined"&&(e=0),typeof n){case"number":if(n>0)return dupe_number(n|0,e);break;case"object":if(typeof n.length=="number")return dupe_array(n,e,0);break}return[]}var dup$1=dupe,__viteBrowserExternal={},__viteBrowserExternal$1=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:__viteBrowserExternal}),require$$2=getAugmentedNamespace(__viteBrowserExternal$1),dup=dup$1;require$$2.Buffer;commonjsGlobal.__TYPEDARRAY_POOL||(commonjsGlobal.__TYPEDARRAY_POOL={UINT8:dup([32,0]),UINT16:dup([32,0]),UINT32:dup([32,0]),BIGUINT64:dup([32,0]),INT8:dup([32,0]),INT16:dup([32,0]),INT32:dup([32,0]),BIGINT64:dup([32,0]),FLOAT:dup([32,0]),DOUBLE:dup([32,0]),DATA:dup([32,0]),UINT8C:dup([32,0]),BUFFER:dup([32,0])});var POOL=commonjsGlobal.__TYPEDARRAY_POOL;POOL.UINT8C||(POOL.UINT8C=dup([32,0]));POOL.BIGUINT64||(POOL.BIGUINT64=dup([32,0]));POOL.BIGINT64||(POOL.BIGINT64=dup([32,0]));POOL.BUFFER||(POOL.BUFFER=dup([32,0]));POOL.DATA;POOL.BUFFER;var fftMatrix={exports:{}},bits=twiddle;function fft(n,e,t,s,r,i,a){n|=0,e|=0,t|=0,r|=0,i|=0,bits.isPow2(t)?fftRadix2(n,e,t,s,r,i):fftBluestein(n,e,t,s,r,i,a)}fftMatrix.exports=fft;function scratchMemory(n){return bits.isPow2(n)?0:2*n+4*bits.nextPow2(2*n+1)}fftMatrix.exports.scratchMemory=scratchMemory;function fftRadix2(n,e,t,s,r,i){n|=0,e|=0,t|=0,r|=0,i|=0;var a,c,u,l,h,d,f,y,g,x,b,v,S,T,w,C,N,_,$,E,k,F,P,R,O;for(a=t,c=bits.log2(a),_=0;_<e;++_){for(f=a>>1,h=0,u=0;u<a-1;u++){for(u<h&&(S=s[r+u],s[r+u]=s[r+h],s[r+h]=S,S=s[i+u],s[i+u]=s[i+h],s[i+h]=S),d=f;d<=h;)h-=d,d>>=1;h+=d}for(b=-1,v=0,x=1,y=0;y<c;y++){for(g=x,x<<=1,C=1,N=0,h=0;h<g;h++){for(u=h;u<a;u+=x)l=u+g,$=s[r+l],E=s[i+l],k=s[r+u],F=s[i+u],P=C*($+E),R=$*(N-C),O=E*(C+N),T=P-O,w=P+R,s[r+l]=k-T,s[i+l]=F-w,s[r+u]+=T,s[i+u]+=w;P=b*(C+N),R=C*(v-b),O=N*(b+v),C=P-O,N=P+R}v=Math.sqrt((1-b)/2),n<0&&(v=-v),b=Math.sqrt((1+b)/2)}if(n<0){var B=1/a;for(u=0;u<a;u++)s[r+u]*=B,s[i+u]*=B}r+=t,i+=t}}function fftBluestein(n,e,t,s,r,i,a){n|=0,e|=0,t|=0,r|=0,i|=0,a|=0;var c=bits.nextPow2(2*t+1),u=a,l=u+t,h=l+t,d=h+c,f=d+c,y=f+c,g=-n*Math.PI/t,x,b,v,S,T,w,C,N,_;for(_=0;_<t;++_)b=g*(_*_%(t*2)),S=Math.cos(b),T=Math.sin(b),s[f+(c-_)]=s[f+_]=s[u+_]=S,s[y+(c-_)]=s[y+_]=s[l+_]=T;for(_=t;_<=c-t;++_)s[f+_]=0;for(_=t;_<=c-t;++_)s[y+_]=0;for(fftRadix2(1,1,c,s,f,y),n<0?g=1/t:g=1,x=0;x<e;++x){for(_=0;_<t;++_)b=s[r+_],v=s[i+_],S=s[u+_],T=-s[l+_],w=S*(b+v),C=b*(T-S),N=v*(S+T),s[h+_]=w-N,s[d+_]=w+C;for(_=t;_<c;++_)s[h+_]=0;for(_=t;_<c;++_)s[d+_]=0;for(fftRadix2(1,1,c,s,h,d),_=0;_<c;++_)b=s[h+_],v=s[d+_],S=s[f+_],T=s[y+_],w=S*(b+v),C=b*(T-S),N=v*(S+T),s[h+_]=w-N,s[d+_]=w+C;for(fftRadix2(-1,1,c,s,h,d),_=0;_<t;++_)b=s[h+_],v=s[d+_],S=s[u+_],T=-s[l+_],w=S*(b+v),C=b*(T-S),N=v*(S+T),s[r+_]=g*(w-N),s[i+_]=g*(w+C);r+=t,i+=t}}var esprima$1={};(function(n){(function(e,t){t(n)})(commonjsGlobal,function(e){var t,s,r,i,a,c,u,l,h,d,f,y,g,x,b,v,S,T;t={BooleanLiteral:1,EOF:2,Identifier:3,Keyword:4,NullLiteral:5,NumericLiteral:6,Punctuator:7,StringLiteral:8,RegularExpression:9},s={},s[t.BooleanLiteral]="Boolean",s[t.EOF]="<end>",s[t.Identifier]="Identifier",s[t.Keyword]="Keyword",s[t.NullLiteral]="Null",s[t.NumericLiteral]="Numeric",s[t.Punctuator]="Punctuator",s[t.StringLiteral]="String",s[t.RegularExpression]="RegularExpression",r=["(","{","[","in","typeof","instanceof","new","return","case","delete","throw","void","=","+=","-=","*=","/=","%=","<<=",">>=",">>>=","&=","|=","^=",",","+","-","*","/","%","++","--","<<",">>",">>>","&","|","^","!","~","&&","||","?",":","===","==",">=","<=","<",">","!=","!=="],i={AssignmentExpression:"AssignmentExpression",ArrayExpression:"ArrayExpression",BlockStatement:"BlockStatement",BinaryExpression:"BinaryExpression",BreakStatement:"BreakStatement",CallExpression:"CallExpression",CatchClause:"CatchClause",ConditionalExpression:"ConditionalExpression",ContinueStatement:"ContinueStatement",DoWhileStatement:"DoWhileStatement",DebuggerStatement:"DebuggerStatement",EmptyStatement:"EmptyStatement",ExpressionStatement:"ExpressionStatement",ForStatement:"ForStatement",ForInStatement:"ForInStatement",FunctionDeclaration:"FunctionDeclaration",FunctionExpression:"FunctionExpression",Identifier:"Identifier",IfStatement:"IfStatement",Literal:"Literal",LabeledStatement:"LabeledStatement",LogicalExpression:"LogicalExpression",MemberExpression:"MemberExpression",NewExpression:"NewExpression",ObjectExpression:"ObjectExpression",Program:"Program",Property:"Property",ReturnStatement:"ReturnStatement",SequenceExpression:"SequenceExpression",SwitchStatement:"SwitchStatement",SwitchCase:"SwitchCase",ThisExpression:"ThisExpression",ThrowStatement:"ThrowStatement",TryStatement:"TryStatement",UnaryExpression:"UnaryExpression",UpdateExpression:"UpdateExpression",VariableDeclaration:"VariableDeclaration",VariableDeclarator:"VariableDeclarator",WhileStatement:"WhileStatement",WithStatement:"WithStatement"},a={Data:1,Get:2,Set:4},c={UnexpectedToken:"Unexpected token %0",UnexpectedNumber:"Unexpected number",UnexpectedString:"Unexpected string",UnexpectedIdentifier:"Unexpected identifier",UnexpectedReserved:"Unexpected reserved word",UnexpectedEOS:"Unexpected end of input",NewlineAfterThrow:"Illegal newline after throw",InvalidRegExp:"Invalid regular expression",UnterminatedRegExp:"Invalid regular expression: missing /",InvalidLHSInAssignment:"Invalid left-hand side in assignment",InvalidLHSInForIn:"Invalid left-hand side in for-in",MultipleDefaultsInSwitch:"More than one default clause in switch statement",NoCatchOrFinally:"Missing catch or finally after try",UnknownLabel:"Undefined label '%0'",Redeclaration:"%0 '%1' has already been declared",IllegalContinue:"Illegal continue statement",IllegalBreak:"Illegal break statement",IllegalReturn:"Illegal return statement",StrictModeWith:"Strict mode code may not include a with statement",StrictCatchVariable:"Catch variable may not be eval or arguments in strict mode",StrictVarName:"Variable name may not be eval or arguments in strict mode",StrictParamName:"Parameter name eval or arguments is not allowed in strict mode",StrictParamDupe:"Strict mode function may not have duplicate parameter names",StrictFunctionName:"Function name may not be eval or arguments in strict mode",StrictOctalLiteral:"Octal literals are not allowed in strict mode.",StrictDelete:"Delete of an unqualified identifier in strict mode.",StrictDuplicateProperty:"Duplicate data property in object literal not allowed in strict mode",AccessorDataProperty:"Object literal may not have data and accessor property with the same name",AccessorGetSet:"Object literal may not have multiple get/set accessors with the same name",StrictLHSAssignment:"Assignment to eval or arguments is not allowed in strict mode",StrictLHSPostfix:"Postfix increment/decrement may not have eval or arguments operand in strict mode",StrictLHSPrefix:"Prefix increment/decrement may not have eval or arguments operand in strict mode",StrictReservedWord:"Use of future reserved word in strict mode"},u={NonAsciiIdentifierStart:new RegExp("[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0\u08A2-\u08AC\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0977\u0979-\u097F\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C33\u0C35-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F0\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191C\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA697\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA793\uA7A0-\uA7AA\uA7F8-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA80-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]"),NonAsciiIdentifierPart:new RegExp("[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u0527\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0\u08A2-\u08AC\u08E4-\u08FE\u0900-\u0963\u0966-\u096F\u0971-\u0977\u0979-\u097F\u0981-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C01-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C33\u0C35-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C82\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D02\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F0\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191C\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1D00-\u1DE6\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA697\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA793\uA7A0-\uA7AA\uA7F8-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A\uAA7B\uAA80-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE26\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]")};function w(A,I){if(!A)throw new Error("ASSERT: "+I)}function C(A){return A>=48&&A<=57}function N(A){return"0123456789abcdefABCDEF".indexOf(A)>=0}function _(A){return"01234567".indexOf(A)>=0}function $(A){return A===32||A===9||A===11||A===12||A===160||A>=5760&&[5760,6158,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279].indexOf(A)>=0}function E(A){return A===10||A===13||A===8232||A===8233}function k(A){return A===36||A===95||A>=65&&A<=90||A>=97&&A<=122||A===92||A>=128&&u.NonAsciiIdentifierStart.test(String.fromCharCode(A))}function F(A){return A===36||A===95||A>=65&&A<=90||A>=97&&A<=122||A>=48&&A<=57||A===92||A>=128&&u.NonAsciiIdentifierPart.test(String.fromCharCode(A))}function P(A){switch(A){case"class":case"enum":case"export":case"extends":case"import":case"super":return!0;default:return!1}}function R(A){switch(A){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"yield":case"let":return!0;default:return!1}}function O(A){return A==="eval"||A==="arguments"}function B(A){if(d&&R(A))return!0;switch(A.length){case 2:return A==="if"||A==="in"||A==="do";case 3:return A==="var"||A==="for"||A==="new"||A==="try"||A==="let";case 4:return A==="this"||A==="else"||A==="case"||A==="void"||A==="with"||A==="enum";case 5:return A==="while"||A==="break"||A==="catch"||A==="throw"||A==="const"||A==="yield"||A==="class"||A==="super";case 6:return A==="return"||A==="typeof"||A==="delete"||A==="switch"||A==="export"||A==="import";case 7:return A==="default"||A==="finally"||A==="extends";case 8:return A==="function"||A==="continue"||A==="debugger";case 10:return A==="instanceof";default:return!1}}function L(A,I,D,z,H){var re;w(typeof D=="number","Comment must have valid position"),!(S.lastCommentStart>=D)&&(S.lastCommentStart=D,re={type:A,value:I},T.range&&(re.range=[D,z]),T.loc&&(re.loc=H),T.comments.push(re),T.attachComment&&(T.leadingComments.push(re),T.trailingComments.push(re)))}function V(A){var I,D,z,H;for(I=f-A,D={start:{line:y,column:f-g-A}};f<x;)if(z=h.charCodeAt(f),++f,E(z)){T.comments&&(H=h.slice(I+A,f-1),D.end={line:y,column:f-g-1},L("Line",H,I,f-1,D)),z===13&&h.charCodeAt(f)===10&&++f,++y,g=f;return}T.comments&&(H=h.slice(I+A,f),D.end={line:y,column:f-g},L("Line",H,I,f,D))}function q(){var A,I,D,z;for(T.comments&&(A=f-2,I={start:{line:y,column:f-g-2}});f<x;)if(D=h.charCodeAt(f),E(D))D===13&&h.charCodeAt(f+1)===10&&++f,++y,++f,g=f,f>=x&&ue({},c.UnexpectedToken,"ILLEGAL");else if(D===42){if(h.charCodeAt(f+1)===47){++f,++f,T.comments&&(z=h.slice(A+2,f-2),I.end={line:y,column:f-g},L("Block",z,A,f,I));return}++f}else++f;ue({},c.UnexpectedToken,"ILLEGAL")}function G(){var A,I;for(I=f===0;f<x;)if(A=h.charCodeAt(f),$(A))++f;else if(E(A))++f,A===13&&h.charCodeAt(f)===10&&++f,++y,g=f,I=!0;else if(A===47)if(A=h.charCodeAt(f+1),A===47)++f,++f,V(2),I=!0;else if(A===42)++f,++f,q();else break;else if(I&&A===45)if(h.charCodeAt(f+1)===45&&h.charCodeAt(f+2)===62)f+=3,V(3);else break;else if(A===60)if(h.slice(f+1,f+4)==="!--")++f,++f,++f,++f,V(4);else break;else break}function W(A){var I,D,z,H=0;for(D=A==="u"?4:2,I=0;I<D;++I)if(f<x&&N(h[f]))z=h[f++],H=H*16+"0123456789abcdef".indexOf(z.toLowerCase());else return"";return String.fromCharCode(H)}function U(){var A,I;for(A=h.charCodeAt(f++),I=String.fromCharCode(A),A===92&&(h.charCodeAt(f)!==117&&ue({},c.UnexpectedToken,"ILLEGAL"),++f,A=W("u"),(!A||A==="\\"||!k(A.charCodeAt(0)))&&ue({},c.UnexpectedToken,"ILLEGAL"),I=A);f<x&&(A=h.charCodeAt(f),!!F(A));)++f,I+=String.fromCharCode(A),A===92&&(I=I.substr(0,I.length-1),h.charCodeAt(f)!==117&&ue({},c.UnexpectedToken,"ILLEGAL"),++f,A=W("u"),(!A||A==="\\"||!F(A.charCodeAt(0)))&&ue({},c.UnexpectedToken,"ILLEGAL"),I+=A);return I}function j(){var A,I;for(A=f++;f<x;){if(I=h.charCodeAt(f),I===92)return f=A,U();if(F(I))++f;else break}return h.slice(A,f)}function Y(){var A,I,D;return A=f,I=h.charCodeAt(f)===92?U():j(),I.length===1?D=t.Identifier:B(I)?D=t.Keyword:I==="null"?D=t.NullLiteral:I==="true"||I==="false"?D=t.BooleanLiteral:D=t.Identifier,{type:D,value:I,lineNumber:y,lineStart:g,start:A,end:f}}function Q(){var A=f,I=h.charCodeAt(f),D,z=h[f],H,re,xe;switch(I){case 46:case 40:case 41:case 59:case 44:case 123:case 125:case 91:case 93:case 58:case 63:case 126:return++f,T.tokenize&&(I===40?T.openParenToken=T.tokens.length:I===123&&(T.openCurlyToken=T.tokens.length)),{type:t.Punctuator,value:String.fromCharCode(I),lineNumber:y,lineStart:g,start:A,end:f};default:if(D=h.charCodeAt(f+1),D===61)switch(I){case 43:case 45:case 47:case 60:case 62:case 94:case 124:case 37:case 38:case 42:return f+=2,{type:t.Punctuator,value:String.fromCharCode(I)+String.fromCharCode(D),lineNumber:y,lineStart:g,start:A,end:f};case 33:case 61:return f+=2,h.charCodeAt(f)===61&&++f,{type:t.Punctuator,value:h.slice(A,f),lineNumber:y,lineStart:g,start:A,end:f}}}if(xe=h.substr(f,4),xe===">>>=")return f+=4,{type:t.Punctuator,value:xe,lineNumber:y,lineStart:g,start:A,end:f};if(re=xe.substr(0,3),re===">>>"||re==="<<="||re===">>=")return f+=3,{type:t.Punctuator,value:re,lineNumber:y,lineStart:g,start:A,end:f};if(H=re.substr(0,2),z===H[1]&&"+-<>&|".indexOf(z)>=0||H==="=>")return f+=2,{type:t.Punctuator,value:H,lineNumber:y,lineStart:g,start:A,end:f};if("<>=!+-*%&|^/".indexOf(z)>=0)return++f,{type:t.Punctuator,value:z,lineNumber:y,lineStart:g,start:A,end:f};ue({},c.UnexpectedToken,"ILLEGAL")}function ee(A){for(var I="";f<x&&N(h[f]);)I+=h[f++];return I.length===0&&ue({},c.UnexpectedToken,"ILLEGAL"),k(h.charCodeAt(f))&&ue({},c.UnexpectedToken,"ILLEGAL"),{type:t.NumericLiteral,value:parseInt("0x"+I,16),lineNumber:y,lineStart:g,start:A,end:f}}function K(A){for(var I="0"+h[f++];f<x&&_(h[f]);)I+=h[f++];return(k(h.charCodeAt(f))||C(h.charCodeAt(f)))&&ue({},c.UnexpectedToken,"ILLEGAL"),{type:t.NumericLiteral,value:parseInt(I,8),octal:!0,lineNumber:y,lineStart:g,start:A,end:f}}function X(){var A,I;for(A=f+1;A<x;++A){if(I=h[A],I==="8"||I==="9")return!1;if(!_(I))return!0}return!0}function oe(){var A,I,D;if(D=h[f],w(C(D.charCodeAt(0))||D===".","Numeric literal must start with a decimal digit or a decimal point"),I=f,A="",D!=="."){if(A=h[f++],D=h[f],A==="0"){if(D==="x"||D==="X")return++f,ee(I);if(_(D)&&X())return K(I)}for(;C(h.charCodeAt(f));)A+=h[f++];D=h[f]}if(D==="."){for(A+=h[f++];C(h.charCodeAt(f));)A+=h[f++];D=h[f]}if(D==="e"||D==="E")if(A+=h[f++],D=h[f],(D==="+"||D==="-")&&(A+=h[f++]),C(h.charCodeAt(f)))for(;C(h.charCodeAt(f));)A+=h[f++];else ue({},c.UnexpectedToken,"ILLEGAL");return k(h.charCodeAt(f))&&ue({},c.UnexpectedToken,"ILLEGAL"),{type:t.NumericLiteral,value:parseFloat(A),lineNumber:y,lineStart:g,start:I,end:f}}function ie(){var A="",I,D,z,H,re,xe,ve=!1,Ie,$e;for(Ie=y,$e=g,I=h[f],w(I==="'"||I==='"',"String literal must starts with a quote"),D=f,++f;f<x;)if(z=h[f++],z===I){I="";break}else if(z==="\\")if(z=h[f++],!z||!E(z.charCodeAt(0)))switch(z){case"u":case"x":xe=f,re=W(z),re?A+=re:(f=xe,A+=z);break;case"n":A+=`
`;break;case"r":A+="\r";break;case"t":A+="	";break;case"b":A+="\b";break;case"f":A+="\f";break;case"v":A+="\v";break;default:_(z)?(H="01234567".indexOf(z),H!==0&&(ve=!0),f<x&&_(h[f])&&(ve=!0,H=H*8+"01234567".indexOf(h[f++]),"0123".indexOf(z)>=0&&f<x&&_(h[f])&&(H=H*8+"01234567".indexOf(h[f++]))),A+=String.fromCharCode(H)):A+=z;break}else++y,z==="\r"&&h[f]===`
`&&++f,g=f;else{if(E(z.charCodeAt(0)))break;A+=z}return I!==""&&ue({},c.UnexpectedToken,"ILLEGAL"),{type:t.StringLiteral,value:A,octal:ve,startLineNumber:Ie,startLineStart:$e,lineNumber:y,lineStart:g,start:D,end:f}}function Z(A,I){var D;try{D=new RegExp(A,I)}catch{ue({},c.InvalidRegExp)}return D}function pe(){var A,I,D,z,H;for(A=h[f],w(A==="/","Regular expression literal must start with a slash"),I=h[f++],D=!1,z=!1;f<x;)if(A=h[f++],I+=A,A==="\\")A=h[f++],E(A.charCodeAt(0))&&ue({},c.UnterminatedRegExp),I+=A;else if(E(A.charCodeAt(0)))ue({},c.UnterminatedRegExp);else if(D)A==="]"&&(D=!1);else if(A==="/"){z=!0;break}else A==="["&&(D=!0);return z||ue({},c.UnterminatedRegExp),H=I.substr(1,I.length-2),{value:H,literal:I}}function ye(){var A,I,D,z;for(I="",D="";f<x&&(A=h[f],!!F(A.charCodeAt(0)));)if(++f,A==="\\"&&f<x)if(A=h[f],A==="u"){if(++f,z=f,A=W("u"),A)for(D+=A,I+="\\u";z<f;++z)I+=h[z];else f=z,D+="u",I+="\\u";me({},c.UnexpectedToken,"ILLEGAL")}else I+="\\",me({},c.UnexpectedToken,"ILLEGAL");else D+=A,I+=A;return{value:D,literal:I}}function be(){var A,I,D,z;return v=null,G(),A=f,I=pe(),D=ye(),z=Z(I.value,D.value),T.tokenize?{type:t.RegularExpression,value:z,lineNumber:y,lineStart:g,start:A,end:f}:{literal:I.literal+D.literal,value:z,start:A,end:f}}function ge(){var A,I,D,z;return G(),A=f,I={start:{line:y,column:f-g}},D=be(),I.end={line:y,column:f-g},T.tokenize||(T.tokens.length>0&&(z=T.tokens[T.tokens.length-1],z.range[0]===A&&z.type==="Punctuator"&&(z.value==="/"||z.value==="/=")&&T.tokens.pop()),T.tokens.push({type:"RegularExpression",value:D.literal,range:[A,f],loc:I})),D}function J(A){return A.type===t.Identifier||A.type===t.Keyword||A.type===t.BooleanLiteral||A.type===t.NullLiteral}function se(){var A,I;if(A=T.tokens[T.tokens.length-1],!A)return ge();if(A.type==="Punctuator"){if(A.value==="]")return Q();if(A.value===")")return I=T.tokens[T.openParenToken-1],I&&I.type==="Keyword"&&(I.value==="if"||I.value==="while"||I.value==="for"||I.value==="with")?ge():Q();if(A.value==="}"){if(T.tokens[T.openCurlyToken-3]&&T.tokens[T.openCurlyToken-3].type==="Keyword"){if(I=T.tokens[T.openCurlyToken-4],!I)return Q()}else if(T.tokens[T.openCurlyToken-4]&&T.tokens[T.openCurlyToken-4].type==="Keyword"){if(I=T.tokens[T.openCurlyToken-5],!I)return ge()}else return Q();return r.indexOf(I.value)>=0?Q():ge()}return ge()}return A.type==="Keyword"&&A.value!=="this"?ge():Q()}function le(){var A;return G(),f>=x?{type:t.EOF,lineNumber:y,lineStart:g,start:f,end:f}:(A=h.charCodeAt(f),k(A)?Y():A===40||A===41||A===59?Q():A===39||A===34?ie():A===46?C(h.charCodeAt(f+1))?oe():Q():C(A)?oe():T.tokenize&&A===47?se():Q())}function he(){var A,I,D;return G(),A={start:{line:y,column:f-g}},I=le(),A.end={line:y,column:f-g},I.type!==t.EOF&&(D=h.slice(I.start,I.end),T.tokens.push({type:s[I.type],value:D,range:[I.start,I.end],loc:A})),I}function ne(){var A;return A=v,f=A.end,y=A.lineNumber,g=A.lineStart,v=typeof T.tokens!="undefined"?he():le(),f=A.end,y=A.lineNumber,g=A.lineStart,A}function fe(){var A,I,D;A=f,I=y,D=g,v=typeof T.tokens!="undefined"?he():le(),f=A,y=I,g=D}function Ce(A,I){this.line=A,this.column=I}function Te(A,I,D,z){this.start=new Ce(A,I),this.end=new Ce(D,z)}l={name:"SyntaxTree",processComment:function(A){var I,D;if(!(A.type===i.Program&&A.body.length>0)){for(T.trailingComments.length>0?T.trailingComments[0].range[0]>=A.range[1]?(D=T.trailingComments,T.trailingComments=[]):T.trailingComments.length=0:T.bottomRightStack.length>0&&T.bottomRightStack[T.bottomRightStack.length-1].trailingComments&&T.bottomRightStack[T.bottomRightStack.length-1].trailingComments[0].range[0]>=A.range[1]&&(D=T.bottomRightStack[T.bottomRightStack.length-1].trailingComments,delete T.bottomRightStack[T.bottomRightStack.length-1].trailingComments);T.bottomRightStack.length>0&&T.bottomRightStack[T.bottomRightStack.length-1].range[0]>=A.range[0];)I=T.bottomRightStack.pop();I?I.leadingComments&&I.leadingComments[I.leadingComments.length-1].range[1]<=A.range[0]&&(A.leadingComments=I.leadingComments,delete I.leadingComments):T.leadingComments.length>0&&T.leadingComments[T.leadingComments.length-1].range[1]<=A.range[0]&&(A.leadingComments=T.leadingComments,T.leadingComments=[]),D&&(A.trailingComments=D),T.bottomRightStack.push(A)}},markEnd:function(A,I){return T.range&&(A.range=[I.start,f]),T.loc&&(A.loc=new Te(I.startLineNumber===void 0?I.lineNumber:I.startLineNumber,I.start-(I.startLineStart===void 0?I.lineStart:I.startLineStart),y,f-g),this.postProcess(A)),T.attachComment&&this.processComment(A),A},postProcess:function(A){return T.source&&(A.loc.source=T.source),A},createArrayExpression:function(A){return{type:i.ArrayExpression,elements:A}},createAssignmentExpression:function(A,I,D){return{type:i.AssignmentExpression,operator:A,left:I,right:D}},createBinaryExpression:function(A,I,D){var z=A==="||"||A==="&&"?i.LogicalExpression:i.BinaryExpression;return{type:z,operator:A,left:I,right:D}},createBlockStatement:function(A){return{type:i.BlockStatement,body:A}},createBreakStatement:function(A){return{type:i.BreakStatement,label:A}},createCallExpression:function(A,I){return{type:i.CallExpression,callee:A,arguments:I}},createCatchClause:function(A,I){return{type:i.CatchClause,param:A,body:I}},createConditionalExpression:function(A,I,D){return{type:i.ConditionalExpression,test:A,consequent:I,alternate:D}},createContinueStatement:function(A){return{type:i.ContinueStatement,label:A}},createDebuggerStatement:function(){return{type:i.DebuggerStatement}},createDoWhileStatement:function(A,I){return{type:i.DoWhileStatement,body:A,test:I}},createEmptyStatement:function(){return{type:i.EmptyStatement}},createExpressionStatement:function(A){return{type:i.ExpressionStatement,expression:A}},createForStatement:function(A,I,D,z){return{type:i.ForStatement,init:A,test:I,update:D,body:z}},createForInStatement:function(A,I,D){return{type:i.ForInStatement,left:A,right:I,body:D,each:!1}},createFunctionDeclaration:function(A,I,D,z){return{type:i.FunctionDeclaration,id:A,params:I,defaults:D,body:z,rest:null,generator:!1,expression:!1}},createFunctionExpression:function(A,I,D,z){return{type:i.FunctionExpression,id:A,params:I,defaults:D,body:z,rest:null,generator:!1,expression:!1}},createIdentifier:function(A){return{type:i.Identifier,name:A}},createIfStatement:function(A,I,D){return{type:i.IfStatement,test:A,consequent:I,alternate:D}},createLabeledStatement:function(A,I){return{type:i.LabeledStatement,label:A,body:I}},createLiteral:function(A){return{type:i.Literal,value:A.value,raw:h.slice(A.start,A.end)}},createMemberExpression:function(A,I,D){return{type:i.MemberExpression,computed:A==="[",object:I,property:D}},createNewExpression:function(A,I){return{type:i.NewExpression,callee:A,arguments:I}},createObjectExpression:function(A){return{type:i.ObjectExpression,properties:A}},createPostfixExpression:function(A,I){return{type:i.UpdateExpression,operator:A,argument:I,prefix:!1}},createProgram:function(A){return{type:i.Program,body:A}},createProperty:function(A,I,D){return{type:i.Property,key:I,value:D,kind:A}},createReturnStatement:function(A){return{type:i.ReturnStatement,argument:A}},createSequenceExpression:function(A){return{type:i.SequenceExpression,expressions:A}},createSwitchCase:function(A,I){return{type:i.SwitchCase,test:A,consequent:I}},createSwitchStatement:function(A,I){return{type:i.SwitchStatement,discriminant:A,cases:I}},createThisExpression:function(){return{type:i.ThisExpression}},createThrowStatement:function(A){return{type:i.ThrowStatement,argument:A}},createTryStatement:function(A,I,D,z){return{type:i.TryStatement,block:A,guardedHandlers:I,handlers:D,finalizer:z}},createUnaryExpression:function(A,I){return A==="++"||A==="--"?{type:i.UpdateExpression,operator:A,argument:I,prefix:!0}:{type:i.UnaryExpression,operator:A,argument:I,prefix:!0}},createVariableDeclaration:function(A,I){return{type:i.VariableDeclaration,declarations:A,kind:I}},createVariableDeclarator:function(A,I){return{type:i.VariableDeclarator,id:A,init:I}},createWhileStatement:function(A,I){return{type:i.WhileStatement,test:A,body:I}},createWithStatement:function(A,I){return{type:i.WithStatement,object:A,body:I}}};function _e(){var A,I,D,z;return A=f,I=y,D=g,G(),z=y!==I,f=A,y=I,g=D,z}function ue(A,I){var D,z=Array.prototype.slice.call(arguments,2),H=I.replace(/%(\d)/g,function(re,xe){return w(xe<z.length,"Message reference must be in range"),z[xe]});throw typeof A.lineNumber=="number"?(D=new Error("Line "+A.lineNumber+": "+H),D.index=A.start,D.lineNumber=A.lineNumber,D.column=A.start-g+1):(D=new Error("Line "+y+": "+H),D.index=f,D.lineNumber=y,D.column=f-g+1),D.description=H,D}function me(){try{ue.apply(null,arguments)}catch(A){if(T.errors)T.errors.push(A);else throw A}}function Ae(A){if(A.type===t.EOF&&ue(A,c.UnexpectedEOS),A.type===t.NumericLiteral&&ue(A,c.UnexpectedNumber),A.type===t.StringLiteral&&ue(A,c.UnexpectedString),A.type===t.Identifier&&ue(A,c.UnexpectedIdentifier),A.type===t.Keyword){if(P(A.value))ue(A,c.UnexpectedReserved);else if(d&&R(A.value)){me(A,c.StrictReservedWord);return}ue(A,c.UnexpectedToken,A.value)}ue(A,c.UnexpectedToken,A.value)}function ae(A){var I=ne();(I.type!==t.Punctuator||I.value!==A)&&Ae(I)}function Se(A){var I=ne();(I.type!==t.Keyword||I.value!==A)&&Ae(I)}function ce(A){return v.type===t.Punctuator&&v.value===A}function we(A){return v.type===t.Keyword&&v.value===A}function Re(){var A;return v.type!==t.Punctuator?!1:(A=v.value,A==="="||A==="*="||A==="/="||A==="%="||A==="+="||A==="-="||A==="<<="||A===">>="||A===">>>="||A==="&="||A==="^="||A==="|=")}function Ee(){var A,I=f,D=y,z=g,H=v;if(h.charCodeAt(f)===59||ce(";")){ne();return}if(A=y,G(),y!==A){f=I,y=D,g=z,v=H;return}v.type!==t.EOF&&!ce("}")&&Ae(v)}function Oe(A){return A.type===i.Identifier||A.type===i.MemberExpression}function Ge(){var A=[],I;for(I=v,ae("[");!ce("]");)ce(",")?(ne(),A.push(null)):(A.push(ke()),ce("]")||ae(","));return ne(),b.markEnd(b.createArrayExpression(A),I)}function Me(A,I){var D,z,H;return D=d,H=v,z=Ue(),I&&d&&O(A[0].name)&&me(I,c.StrictParamName),d=D,b.markEnd(b.createFunctionExpression(null,A,[],z),H)}function ze(){var A,I;return I=v,A=ne(),A.type===t.StringLiteral||A.type===t.NumericLiteral?(d&&A.octal&&me(A,c.StrictOctalLiteral),b.markEnd(b.createLiteral(A),I)):b.markEnd(b.createIdentifier(A.value),I)}function at(){var A,I,D,z,H,re;if(A=v,re=v,A.type===t.Identifier)return D=ze(),A.value==="get"&&!ce(":")?(I=ze(),ae("("),ae(")"),z=Me([]),b.markEnd(b.createProperty("get",I,z),re)):A.value==="set"&&!ce(":")?(I=ze(),ae("("),A=v,A.type!==t.Identifier?(ae(")"),me(A,c.UnexpectedToken,A.value),z=Me([])):(H=[Fe()],ae(")"),z=Me(H,A)),b.markEnd(b.createProperty("set",I,z),re)):(ae(":"),z=ke(),b.markEnd(b.createProperty("init",D,z),re));if(A.type===t.EOF||A.type===t.Punctuator)Ae(A);else return I=ze(),ae(":"),z=ke(),b.markEnd(b.createProperty("init",I,z),re)}function ct(){var A=[],I,D,z,H,re={},xe=String,ve;for(ve=v,ae("{");!ce("}");)I=at(),I.key.type===i.Identifier?D=I.key.name:D=xe(I.key.value),H=I.kind==="init"?a.Data:I.kind==="get"?a.Get:a.Set,z="$"+D,Object.prototype.hasOwnProperty.call(re,z)?(re[z]===a.Data?d&&H===a.Data?me({},c.StrictDuplicateProperty):H!==a.Data&&me({},c.AccessorDataProperty):H===a.Data?me({},c.AccessorDataProperty):re[z]&H&&me({},c.AccessorGetSet),re[z]|=H):re[z]=H,A.push(I),ce("}")||ae(",");return ae("}"),b.markEnd(b.createObjectExpression(A),ve)}function ut(){var A;return ae("("),A=Ne(),ae(")"),A}function He(){var A,I,D,z;if(ce("("))return ut();if(ce("["))return Ge();if(ce("{"))return ct();if(A=v.type,z=v,A===t.Identifier)D=b.createIdentifier(ne().value);else if(A===t.StringLiteral||A===t.NumericLiteral)d&&v.octal&&me(v,c.StrictOctalLiteral),D=b.createLiteral(ne());else if(A===t.Keyword){if(we("function"))return Rt();we("this")?(ne(),D=b.createThisExpression()):Ae(ne())}else A===t.BooleanLiteral?(I=ne(),I.value=I.value==="true",D=b.createLiteral(I)):A===t.NullLiteral?(I=ne(),I.value=null,D=b.createLiteral(I)):ce("/")||ce("/=")?(typeof T.tokens!="undefined"?D=b.createLiteral(ge()):D=b.createLiteral(be()),fe()):Ae(ne());return b.markEnd(D,z)}function je(){var A=[];if(ae("("),!ce(")"))for(;f<x&&(A.push(ke()),!ce(")"));)ae(",");return ae(")"),A}function lt(){var A,I;return I=v,A=ne(),J(A)||Ae(A),b.markEnd(b.createIdentifier(A.value),I)}function Ke(){return ae("."),lt()}function Xe(){var A;return ae("["),A=Ne(),ae("]"),A}function Ye(){var A,I,D;return D=v,Se("new"),A=dt(),I=ce("(")?je():[],b.markEnd(b.createNewExpression(A,I),D)}function ht(){var A,I,D,z,H=S.allowIn;for(z=v,S.allowIn=!0,A=we("new")?Ye():He();;){if(ce("."))D=Ke(),A=b.createMemberExpression(".",A,D);else if(ce("("))I=je(),A=b.createCallExpression(A,I);else if(ce("["))D=Xe(),A=b.createMemberExpression("[",A,D);else break;b.markEnd(A,z)}return S.allowIn=H,A}function dt(){var A,I,D;for(w(S.allowIn,"callee of new expression always allow in keyword."),D=v,A=we("new")?Ye():He();ce(".")||ce("[");)ce("[")?(I=Xe(),A=b.createMemberExpression("[",A,I)):(I=Ke(),A=b.createMemberExpression(".",A,I)),b.markEnd(A,D);return A}function Qe(){var A,I,D=v;return A=ht(),v.type===t.Punctuator&&(ce("++")||ce("--"))&&!_e()&&(d&&A.type===i.Identifier&&O(A.name)&&me({},c.StrictLHSPostfix),Oe(A)||me({},c.InvalidLHSInAssignment),I=ne(),A=b.markEnd(b.createPostfixExpression(I.value,A),D)),A}function Pe(){var A,I,D;return v.type!==t.Punctuator&&v.type!==t.Keyword?I=Qe():ce("++")||ce("--")?(D=v,A=ne(),I=Pe(),d&&I.type===i.Identifier&&O(I.name)&&me({},c.StrictLHSPrefix),Oe(I)||me({},c.InvalidLHSInAssignment),I=b.createUnaryExpression(A.value,I),I=b.markEnd(I,D)):ce("+")||ce("-")||ce("~")||ce("!")?(D=v,A=ne(),I=Pe(),I=b.createUnaryExpression(A.value,I),I=b.markEnd(I,D)):we("delete")||we("void")||we("typeof")?(D=v,A=ne(),I=Pe(),I=b.createUnaryExpression(A.value,I),I=b.markEnd(I,D),d&&I.operator==="delete"&&I.argument.type===i.Identifier&&me({},c.StrictDelete)):I=Qe(),I}function Ze(A,I){var D=0;if(A.type!==t.Punctuator&&A.type!==t.Keyword)return 0;switch(A.value){case"||":D=1;break;case"&&":D=2;break;case"|":D=3;break;case"^":D=4;break;case"&":D=5;break;case"==":case"!=":case"===":case"!==":D=6;break;case"<":case">":case"<=":case">=":case"instanceof":D=7;break;case"in":D=I?7:0;break;case"<<":case">>":case">>>":D=8;break;case"+":case"-":D=9;break;case"*":case"/":case"%":D=11;break}return D}function pt(){var A,I,D,z,H,re,xe,ve,Ie,$e;if(A=v,Ie=Pe(),z=v,H=Ze(z,S.allowIn),H===0)return Ie;for(z.prec=H,ne(),I=[A,v],xe=Pe(),re=[Ie,z,xe];(H=Ze(v,S.allowIn))>0;){for(;re.length>2&&H<=re[re.length-2].prec;)xe=re.pop(),ve=re.pop().value,Ie=re.pop(),D=b.createBinaryExpression(ve,Ie,xe),I.pop(),A=I[I.length-1],b.markEnd(D,A),re.push(D);z=ne(),z.prec=H,re.push(z),I.push(v),D=Pe(),re.push(D)}for($e=re.length-1,D=re[$e],I.pop();$e>1;)D=b.createBinaryExpression(re[$e-1].value,re[$e-2],D),$e-=2,A=I.pop(),b.markEnd(D,A);return D}function ft(){var A,I,D,z,H;return H=v,A=pt(),ce("?")&&(ne(),I=S.allowIn,S.allowIn=!0,D=ke(),S.allowIn=I,ae(":"),z=ke(),A=b.createConditionalExpression(A,D,z),b.markEnd(A,H)),A}function ke(){var A,I,D,z,H;return A=v,H=v,z=I=ft(),Re()&&(Oe(I)||me({},c.InvalidLHSInAssignment),d&&I.type===i.Identifier&&O(I.name)&&me(A,c.StrictLHSAssignment),A=ne(),D=ke(),z=b.markEnd(b.createAssignmentExpression(A.value,I,D),H)),z}function Ne(){var A,I=v;if(A=ke(),ce(",")){for(A=b.createSequenceExpression([A]);f<x&&ce(",");)ne(),A.expressions.push(ke());b.markEnd(A,I)}return A}function mt(){for(var A=[],I;f<x&&!(ce("}")||(I=Le(),typeof I=="undefined"));)A.push(I);return A}function Ve(){var A,I;return I=v,ae("{"),A=mt(),ae("}"),b.markEnd(b.createBlockStatement(A),I)}function Fe(){var A,I;return I=v,A=ne(),A.type!==t.Identifier&&Ae(A),b.markEnd(b.createIdentifier(A.value),I)}function gt(A){var I=null,D,z;return z=v,D=Fe(),d&&O(D.name)&&me({},c.StrictVarName),A==="const"?(ae("="),I=ke()):ce("=")&&(ne(),I=ke()),b.markEnd(b.createVariableDeclarator(D,I),z)}function We(A){var I=[];do{if(I.push(gt(A)),!ce(","))break;ne()}while(f<x);return I}function yt(){var A;return Se("var"),A=We(),Ee(),b.createVariableDeclaration(A,"var")}function xt(A){var I,D;return D=v,Se(A),I=We(A),Ee(),b.markEnd(b.createVariableDeclaration(I,A),D)}function bt(){return ae(";"),b.createEmptyStatement()}function vt(){var A=Ne();return Ee(),b.createExpressionStatement(A)}function St(){var A,I,D;return Se("if"),ae("("),A=Ne(),ae(")"),I=De(),we("else")?(ne(),D=De()):D=null,b.createIfStatement(A,I,D)}function Ct(){var A,I,D;return Se("do"),D=S.inIteration,S.inIteration=!0,A=De(),S.inIteration=D,Se("while"),ae("("),I=Ne(),ae(")"),ce(";")&&ne(),b.createDoWhileStatement(A,I)}function Tt(){var A,I,D;return Se("while"),ae("("),A=Ne(),ae(")"),D=S.inIteration,S.inIteration=!0,I=De(),S.inIteration=D,b.createWhileStatement(A,I)}function At(){var A,I,D;return D=v,A=ne(),I=We(),b.markEnd(b.createVariableDeclaration(I,A.value),D)}function wt(){var A,I,D,z,H,re,xe,ve=S.allowIn;return A=I=D=null,Se("for"),ae("("),ce(";")?ne():(we("var")||we("let")?(S.allowIn=!1,A=At(),S.allowIn=ve,A.declarations.length===1&&we("in")&&(ne(),z=A,H=Ne(),A=null)):(S.allowIn=!1,A=Ne(),S.allowIn=ve,we("in")&&(Oe(A)||me({},c.InvalidLHSInForIn),ne(),z=A,H=Ne(),A=null)),typeof z=="undefined"&&ae(";")),typeof z=="undefined"&&(ce(";")||(I=Ne()),ae(";"),ce(")")||(D=Ne())),ae(")"),xe=S.inIteration,S.inIteration=!0,re=De(),S.inIteration=xe,typeof z=="undefined"?b.createForStatement(A,I,D,re):b.createForInStatement(z,H,re)}function _t(){var A=null,I;return Se("continue"),h.charCodeAt(f)===59?(ne(),S.inIteration||ue({},c.IllegalContinue),b.createContinueStatement(null)):_e()?(S.inIteration||ue({},c.IllegalContinue),b.createContinueStatement(null)):(v.type===t.Identifier&&(A=Fe(),I="$"+A.name,Object.prototype.hasOwnProperty.call(S.labelSet,I)||ue({},c.UnknownLabel,A.name)),Ee(),A===null&&!S.inIteration&&ue({},c.IllegalContinue),b.createContinueStatement(A))}function Nt(){var A=null,I;return Se("break"),h.charCodeAt(f)===59?(ne(),S.inIteration||S.inSwitch||ue({},c.IllegalBreak),b.createBreakStatement(null)):_e()?(S.inIteration||S.inSwitch||ue({},c.IllegalBreak),b.createBreakStatement(null)):(v.type===t.Identifier&&(A=Fe(),I="$"+A.name,Object.prototype.hasOwnProperty.call(S.labelSet,I)||ue({},c.UnknownLabel,A.name)),Ee(),A===null&&!(S.inIteration||S.inSwitch)&&ue({},c.IllegalBreak),b.createBreakStatement(A))}function $t(){var A=null;return Se("return"),S.inFunctionBody||me({},c.IllegalReturn),h.charCodeAt(f)===32&&k(h.charCodeAt(f+1))?(A=Ne(),Ee(),b.createReturnStatement(A)):_e()?b.createReturnStatement(null):(ce(";")||!ce("}")&&v.type!==t.EOF&&(A=Ne()),Ee(),b.createReturnStatement(A))}function It(){var A,I;return d&&(G(),me({},c.StrictModeWith)),Se("with"),ae("("),A=Ne(),ae(")"),I=De(),b.createWithStatement(A,I)}function Et(){var A,I=[],D,z;for(z=v,we("default")?(ne(),A=null):(Se("case"),A=Ne()),ae(":");f<x&&!(ce("}")||we("default")||we("case"));)D=De(),I.push(D);return b.markEnd(b.createSwitchCase(A,I),z)}function kt(){var A,I,D,z,H;if(Se("switch"),ae("("),A=Ne(),ae(")"),ae("{"),I=[],ce("}"))return ne(),b.createSwitchStatement(A,I);for(z=S.inSwitch,S.inSwitch=!0,H=!1;f<x&&!ce("}");)D=Et(),D.test===null&&(H&&ue({},c.MultipleDefaultsInSwitch),H=!0),I.push(D);return S.inSwitch=z,ae("}"),b.createSwitchStatement(A,I)}function Dt(){var A;return Se("throw"),_e()&&ue({},c.NewlineAfterThrow),A=Ne(),Ee(),b.createThrowStatement(A)}function Ot(){var A,I,D;return D=v,Se("catch"),ae("("),ce(")")&&Ae(v),A=Fe(),d&&O(A.name)&&me({},c.StrictCatchVariable),ae(")"),I=Ve(),b.markEnd(b.createCatchClause(A,I),D)}function Ft(){var A,I=[],D=null;return Se("try"),A=Ve(),we("catch")&&I.push(Ot()),we("finally")&&(ne(),D=Ve()),I.length===0&&!D&&ue({},c.NoCatchOrFinally),b.createTryStatement(A,[],I,D)}function Pt(){return Se("debugger"),Ee(),b.createDebuggerStatement()}function De(){var A=v.type,I,D,z,H;if(A===t.EOF&&Ae(v),A===t.Punctuator&&v.value==="{")return Ve();if(H=v,A===t.Punctuator)switch(v.value){case";":return b.markEnd(bt(),H);case"(":return b.markEnd(vt(),H)}if(A===t.Keyword)switch(v.value){case"break":return b.markEnd(Nt(),H);case"continue":return b.markEnd(_t(),H);case"debugger":return b.markEnd(Pt(),H);case"do":return b.markEnd(Ct(),H);case"for":return b.markEnd(wt(),H);case"function":return b.markEnd(et(),H);case"if":return b.markEnd(St(),H);case"return":return b.markEnd($t(),H);case"switch":return b.markEnd(kt(),H);case"throw":return b.markEnd(Dt(),H);case"try":return b.markEnd(Ft(),H);case"var":return b.markEnd(yt(),H);case"while":return b.markEnd(Tt(),H);case"with":return b.markEnd(It(),H)}return I=Ne(),I.type===i.Identifier&&ce(":")?(ne(),z="$"+I.name,Object.prototype.hasOwnProperty.call(S.labelSet,z)&&ue({},c.Redeclaration,"Label",I.name),S.labelSet[z]=!0,D=De(),delete S.labelSet[z],b.markEnd(b.createLabeledStatement(I,D),H)):(Ee(),b.markEnd(b.createExpressionStatement(I),H))}function Ue(){var A,I=[],D,z,H,re,xe,ve,Ie,$e;for($e=v,ae("{");f<x&&!(v.type!==t.StringLiteral||(D=v,A=Le(),I.push(A),A.expression.type!==i.Literal));)z=h.slice(D.start+1,D.end-1),z==="use strict"?(d=!0,H&&me(H,c.StrictOctalLiteral)):!H&&D.octal&&(H=D);for(re=S.labelSet,xe=S.inIteration,ve=S.inSwitch,Ie=S.inFunctionBody,S.labelSet={},S.inIteration=!1,S.inSwitch=!1,S.inFunctionBody=!0;f<x&&!(ce("}")||(A=Le(),typeof A=="undefined"));)I.push(A);return ae("}"),S.labelSet=re,S.inIteration=xe,S.inSwitch=ve,S.inFunctionBody=Ie,b.markEnd(b.createBlockStatement(I),$e)}function Je(A){var I,D=[],z,H,re,xe,ve;if(ae("("),!ce(")"))for(re={};f<x&&(z=v,I=Fe(),xe="$"+z.value,d?(O(z.value)&&(H=z,ve=c.StrictParamName),Object.prototype.hasOwnProperty.call(re,xe)&&(H=z,ve=c.StrictParamDupe)):A||(O(z.value)?(A=z,ve=c.StrictParamName):R(z.value)?(A=z,ve=c.StrictReservedWord):Object.prototype.hasOwnProperty.call(re,xe)&&(A=z,ve=c.StrictParamDupe)),D.push(I),re[xe]=!0,!ce(")"));)ae(",");return ae(")"),{params:D,stricted:H,firstRestricted:A,message:ve}}function et(){var A,I=[],D,z,H,re,xe,ve,Ie,$e;return $e=v,Se("function"),z=v,A=Fe(),d?O(z.value)&&me(z,c.StrictFunctionName):O(z.value)?(xe=z,ve=c.StrictFunctionName):R(z.value)&&(xe=z,ve=c.StrictReservedWord),re=Je(xe),I=re.params,H=re.stricted,xe=re.firstRestricted,re.message&&(ve=re.message),Ie=d,D=Ue(),d&&xe&&ue(xe,ve),d&&H&&me(H,ve),d=Ie,b.markEnd(b.createFunctionDeclaration(A,I,[],D),$e)}function Rt(){var A,I=null,D,z,H,re,xe=[],ve,Ie,$e;return $e=v,Se("function"),ce("(")||(A=v,I=Fe(),d?O(A.value)&&me(A,c.StrictFunctionName):O(A.value)?(z=A,H=c.StrictFunctionName):R(A.value)&&(z=A,H=c.StrictReservedWord)),re=Je(z),xe=re.params,D=re.stricted,z=re.firstRestricted,re.message&&(H=re.message),Ie=d,ve=Ue(),d&&z&&ue(z,H),d&&D&&me(D,H),d=Ie,b.markEnd(b.createFunctionExpression(I,xe,[],ve),$e)}function Le(){if(v.type===t.Keyword)switch(v.value){case"const":case"let":return xt(v.value);case"function":return et();default:return De()}if(v.type!==t.EOF)return De()}function Mt(){for(var A,I=[],D,z,H;f<x&&(D=v,!(D.type!==t.StringLiteral||(A=Le(),I.push(A),A.expression.type!==i.Literal)));)z=h.slice(D.start+1,D.end-1),z==="use strict"?(d=!0,H&&me(H,c.StrictOctalLiteral)):!H&&D.octal&&(H=D);for(;f<x&&(A=Le(),typeof A!="undefined");)I.push(A);return I}function Lt(){var A,I;return G(),fe(),I=v,d=!1,A=Mt(),b.markEnd(b.createProgram(A),I)}function tt(){var A,I,D,z=[];for(A=0;A<T.tokens.length;++A)I=T.tokens[A],D={type:I.type,value:I.value},T.range&&(D.range=I.range),T.loc&&(D.loc=I.loc),z.push(D);T.tokens=z}function Bt(A,I){var D,z,H;D=String,typeof A!="string"&&!(A instanceof String)&&(A=D(A)),b=l,h=A,f=0,y=h.length>0?1:0,g=0,x=h.length,v=null,S={allowIn:!0,labelSet:{},inFunctionBody:!1,inIteration:!1,inSwitch:!1,lastCommentStart:-1},T={},I=I||{},I.tokens=!0,T.tokens=[],T.tokenize=!0,T.openParenToken=-1,T.openCurlyToken=-1,T.range=typeof I.range=="boolean"&&I.range,T.loc=typeof I.loc=="boolean"&&I.loc,typeof I.comment=="boolean"&&I.comment&&(T.comments=[]),typeof I.tolerant=="boolean"&&I.tolerant&&(T.errors=[]);try{if(fe(),v.type===t.EOF)return T.tokens;for(z=ne();v.type!==t.EOF;)try{z=ne()}catch(re){if(z=v,T.errors){T.errors.push(re);break}else throw re}tt(),H=T.tokens,typeof T.comments!="undefined"&&(H.comments=T.comments),typeof T.errors!="undefined"&&(H.errors=T.errors)}catch(re){throw re}finally{T={}}return H}function zt(A,I){var D,z;z=String,typeof A!="string"&&!(A instanceof String)&&(A=z(A)),b=l,h=A,f=0,y=h.length>0?1:0,g=0,x=h.length,v=null,S={allowIn:!0,labelSet:{},inFunctionBody:!1,inIteration:!1,inSwitch:!1,lastCommentStart:-1},T={},typeof I!="undefined"&&(T.range=typeof I.range=="boolean"&&I.range,T.loc=typeof I.loc=="boolean"&&I.loc,T.attachComment=typeof I.attachComment=="boolean"&&I.attachComment,T.loc&&I.source!==null&&I.source!==void 0&&(T.source=z(I.source)),typeof I.tokens=="boolean"&&I.tokens&&(T.tokens=[]),typeof I.comment=="boolean"&&I.comment&&(T.comments=[]),typeof I.tolerant=="boolean"&&I.tolerant&&(T.errors=[]),T.attachComment&&(T.range=!0,T.comments=[],T.bottomRightStack=[],T.trailingComments=[],T.leadingComments=[]));try{D=Lt(),typeof T.comments!="undefined"&&(D.comments=T.comments),typeof T.tokens!="undefined"&&(tt(),D.tokens=T.tokens),typeof T.errors!="undefined"&&(D.errors=T.errors)}catch(H){throw H}finally{T={}}return D}e.version="1.2.5",e.tokenize=Bt,e.parse=zt,e.Syntax=function(){var A,I={};typeof Object.create=="function"&&(I=Object.create(null));for(A in i)i.hasOwnProperty(A)&&(I[A]=i[A]);return typeof Object.freeze=="function"&&Object.freeze(I),I}()})})(esprima$1);var esprima=esprima$1,uniq=uniq$2,PREFIX_COUNTER=0;function CompiledArgument(n,e,t){this.name=n,this.lvalue=e,this.rvalue=t,this.count=0}function CompiledRoutine(n,e,t,s){this.body=n,this.args=e,this.thisVars=t,this.localVars=s}function isGlobal(n){if(n==="eval")throw new Error("cwise-parser: eval() not allowed");return typeof window!="undefined"?n in window:typeof commonjsGlobal!="undefined"?n in commonjsGlobal:typeof self!="undefined"?n in self:!1}function getArgNames(n){for(var e=n.body[0].expression.callee.params,t=new Array(e.length),s=0;s<e.length;++s)t[s]=e[s].name;return t}function preprocess(n){for(var e=["(",n,")()"].join(""),t=esprima.parse(e,{range:!0}),s="_inline_"+PREFIX_COUNTER+++"_",r=getArgNames(t),i=new Array(r.length),a=0;a<r.length;++a)i[a]=new CompiledArgument([s,"arg",a,"_"].join(""),!1,!1);for(var c=new Array(e.length),a=0,u=e.length;a<u;++a)c[a]=e.charAt(a);var l=[],h=[];function d(w){var C=s+w.replace(/\_/g,"__");return l.push(C),C}function f(w){var C="this_"+w.replace(/\_/g,"__");return h.push(C),C}function y(w,C){for(var N=w.range[0],_=w.range[1],$=N+1;$<_;++$)c[$]="";c[N]=C}function g(w){return"'"+w.replace(/\_/g,"\\_").replace(/\'/g,"'")+"'"}function x(w){return c.slice(w.range[0],w.range[1]).join("")}var b=1,v=2;function S(w){return w.parent.type==="AssignmentExpression"&&w.parent.left===w?w.parent.operator==="="?b:b|v:w.parent.type==="UpdateExpression"?b|v:v}(function w(C,N){if(C.parent=N,C.type==="MemberExpression")C.computed?(w(C.object,C),w(C.property,C)):C.object.type==="ThisExpression"?y(C,f(C.property.name)):w(C.object,C);else{if(C.type==="ThisExpression")throw new Error("cwise-parser: Computed this is not allowed");if(C.type==="Identifier"){var _=C.name,$=r.indexOf(_);if($>=0){var E=i[$],k=S(C);k&b&&(E.lvalue=!0),k&v&&(E.rvalue=!0),++E.count,y(C,E.name)}else isGlobal(_)||y(C,d(_))}else if(C.type==="Literal")typeof C.value=="string"&&y(C,g(C.value));else{if(C.type==="WithStatement")throw new Error("cwise-parser: with() statements not allowed");for(var F=Object.keys(C),P=0,R=F.length;P<R;++P)if(F[P]!=="parent"){var O=C[F[P]];if(O)if(O instanceof Array)for(var B=0;B<O.length;++B)O[B]&&typeof O[B].type=="string"&&w(O[B],C);else typeof O.type=="string"&&w(O,C)}}}})(t.body[0].expression.callee.body,void 0),uniq(l),uniq(h);var T=new CompiledRoutine(x(t.body[0].expression.callee.body),i,h,l);return T}var cwiseParser=preprocess,parse=cwiseParser,compile=compiler,REQUIRED_FIELDS=["args","body"],OPTIONAL_FIELDS=["pre","post","printCode","funcName","blockSize"];function createCWise(n){for(var e in n)REQUIRED_FIELDS.indexOf(e)<0&&OPTIONAL_FIELDS.indexOf(e)<0&&console.warn("cwise: Unknown argument '"+e+"' passed to expression compiler");for(var t=0;t<REQUIRED_FIELDS.length;++t)if(!n[REQUIRED_FIELDS[t]])throw new Error("cwise: Missing argument: "+REQUIRED_FIELDS[t]);return compile({args:n.args,pre:parse(n.pre||function(){}),body:parse(n.body),post:parse(n.post||function(){}),debug:!!n.printCode,funcName:n.funcName||n.body.name||"cwise",blockSize:n.blockSize||64})}var cwiseEsprima=createCWise,cwise=cwiseEsprima;cwise({args:["array","array","scalar","scalar","scalar"],body:function n(e,t,s,r,i){}});const SAMPLE_RATE=16e3;getOfflineAudioContext(SAMPLE_RATE);var Syntax$2={Note:"Note",Rest:"Rest",Octave:"Octave",OctaveShift:"OctaveShift",NoteLength:"NoteLength",NoteVelocity:"NoteVelocity",NoteQuantize:"NoteQuantize",Tempo:"Tempo",InfiniteLoop:"InfiniteLoop",LoopBegin:"LoopBegin",LoopExit:"LoopExit",LoopEnd:"LoopEnd"},DefaultParams$1={tempo:120,octave:4,length:4,velocity:100,quantize:75,loopCount:2},_createClass$2=function(){function n(e,t){for(var s=0;s<t.length;s++){var r=t[s];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,s){return t&&n(e.prototype,t),s&&n(e,s),e}}();function _classCallCheck$2(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}var Scanner$1=function(){function n(e){_classCallCheck$2(this,n),this.source=e,this.index=0}return _createClass$2(n,[{key:"hasNext",value:function(){return this.index<this.source.length}},{key:"peek",value:function(){return this.source.charAt(this.index)||""}},{key:"next",value:function(){return this.source.charAt(this.index++)||""}},{key:"forward",value:function(){for(;this.hasNext()&&this.match(/\s/);)this.index+=1}},{key:"match",value:function(t){return t instanceof RegExp?t.test(this.peek()):this.peek()===t}},{key:"expect",value:function(t){this.match(t)||this.throwUnexpectedToken(),this.index+=1}},{key:"scan",value:function(t){var s=this.source.substr(this.index),r=null;if(t instanceof RegExp){var i=t.exec(s);i&&i.index===0&&(r=i[0])}else s.substr(0,t.length)===t&&(r=t);return r&&(this.index+=r.length),r}},{key:"throwUnexpectedToken",value:function(){var t=this.peek()||"ILLEGAL";throw new SyntaxError("Unexpected token: "+t)}}]),n}(),Scanner_1=Scanner$1,_createClass$1=function(){function n(e,t){for(var s=0;s<t.length;s++){var r=t[s];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,s){return t&&n(e.prototype,t),s&&n(e,s),e}}();function _classCallCheck$1(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}var Syntax$1=Syntax$2,Scanner=Scanner_1,NOTE_INDEXES={c:0,d:2,e:4,f:5,g:7,a:9,b:11},MMLParser$1=function(){function n(e){_classCallCheck$1(this,n),this.scanner=new Scanner(e)}return _createClass$1(n,[{key:"parse",value:function(){var t=this,s=[];return this._readUntil(";",function(){s=s.concat(t.advance())}),s}},{key:"advance",value:function(){switch(this.scanner.peek()){case"c":case"d":case"e":case"f":case"g":case"a":case"b":return this.readNote();case"[":return this.readChord();case"r":return this.readRest();case"o":return this.readOctave();case">":return this.readOctaveShift(1);case"<":return this.readOctaveShift(-1);case"l":return this.readNoteLength();case"q":return this.readNoteQuantize();case"v":return this.readNoteVelocity();case"t":return this.readTempo();case"$":return this.readInfiniteLoop();case"/":return this.readLoop()}this.scanner.throwUnexpectedToken()}},{key:"readNote",value:function(){return{type:Syntax$1.Note,noteNumbers:[this._readNoteNumber(0)],noteLength:this._readLength()}}},{key:"readChord",value:function(){var t=this;this.scanner.expect("[");var s=[],r=0;return this._readUntil("]",function(){switch(t.scanner.peek()){case"c":case"d":case"e":case"f":case"g":case"a":case"b":s.push(t._readNoteNumber(r));break;case">":t.scanner.next(),r+=12;break;case"<":t.scanner.next(),r-=12;break;default:t.scanner.throwUnexpectedToken()}}),this.scanner.expect("]"),{type:Syntax$1.Note,noteNumbers:s,noteLength:this._readLength()}}},{key:"readRest",value:function(){return this.scanner.expect("r"),{type:Syntax$1.Rest,noteLength:this._readLength()}}},{key:"readOctave",value:function(){return this.scanner.expect("o"),{type:Syntax$1.Octave,value:this._readArgument(/\d+/)}}},{key:"readOctaveShift",value:function(t){return this.scanner.expect(/<|>/),{type:Syntax$1.OctaveShift,direction:t|0,value:this._readArgument(/\d+/)}}},{key:"readNoteLength",value:function(){return this.scanner.expect("l"),{type:Syntax$1.NoteLength,noteLength:this._readLength()}}},{key:"readNoteQuantize",value:function(){return this.scanner.expect("q"),{type:Syntax$1.NoteQuantize,value:this._readArgument(/\d+/)}}},{key:"readNoteVelocity",value:function(){return this.scanner.expect("v"),{type:Syntax$1.NoteVelocity,value:this._readArgument(/\d+/)}}},{key:"readTempo",value:function(){return this.scanner.expect("t"),{type:Syntax$1.Tempo,value:this._readArgument(/\d+(\.\d+)?/)}}},{key:"readInfiniteLoop",value:function(){return this.scanner.expect("$"),{type:Syntax$1.InfiniteLoop}}},{key:"readLoop",value:function(){var t=this;this.scanner.expect("/"),this.scanner.expect(":");var s={type:Syntax$1.LoopBegin},r={type:Syntax$1.LoopEnd},i=[];return i=i.concat(s),this._readUntil(/[|:]/,function(){i=i.concat(t.advance())}),i=i.concat(this._readLoopExit()),this.scanner.expect(":"),this.scanner.expect("/"),s.value=this._readArgument(/\d+/)||null,i=i.concat(r),i}},{key:"_readUntil",value:function(t,s){for(;this.scanner.hasNext()&&(this.scanner.forward(),!(!this.scanner.hasNext()||this.scanner.match(t)));)s()}},{key:"_readArgument",value:function(t){var s=this.scanner.scan(t);return s!==null?+s:null}},{key:"_readNoteNumber",value:function(t){var s=NOTE_INDEXES[this.scanner.next()];return s+this._readAccidental()+t}},{key:"_readAccidental",value:function(){return this.scanner.match("+")?1*this.scanner.scan(/\++/).length:this.scanner.match("-")?-1*this.scanner.scan(/\-+/).length:0}},{key:"_readDot",value:function(){for(var t=(this.scanner.scan(/\.+/)||"").length,s=new Array(t),r=0;r<t;r++)s[r]=0;return s}},{key:"_readLength",value:function(){var t=[];t=t.concat(this._readArgument(/\d+/)),t=t.concat(this._readDot());var s=this._readTie();return s&&(t=t.concat(s)),t}},{key:"_readTie",value:function(){return this.scanner.forward(),this.scanner.match("^")?(this.scanner.next(),this._readLength()):null}},{key:"_readLoopExit",value:function(){var t=this,s=[];if(this.scanner.match("|")){this.scanner.next();var r={type:Syntax$1.LoopExit};s=s.concat(r),this._readUntil(":",function(){s=s.concat(t.advance())})}return s}}]),n}(),MMLParser_1=MMLParser$1,_createClass=function(){function n(e,t){for(var s=0;s<t.length;s++){var r=t[s];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,s){return t&&n(e.prototype,t),s&&n(e,s),e}}();function _classCallCheck(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}var Syntax=Syntax$2,DefaultParams=DefaultParams$1,MMLParser=MMLParser_1,ITERATOR=typeof Symbol!="undefined"?Symbol.iterator:"@@iterator",MMLIterator=function(){function n(e){_classCallCheck(this,n),this.source=e,this._commands=new MMLParser(e).parse(),this._commandIndex=0,this._processedTime=0,this._iterator=null,this._octave=DefaultParams.octave,this._noteLength=[DefaultParams.length],this._velocity=DefaultParams.velocity,this._quantize=DefaultParams.quantize,this._tempo=DefaultParams.tempo,this._infiniteLoopIndex=-1,this._loopStack=[],this._done=!1}return _createClass(n,[{key:"hasNext",value:function(){return this._commandIndex<this._commands.length}},{key:"next",value:function(){if(this._done)return{done:!0,value:null};if(this._iterator){var t=this._iterator.next();if(!t.done)return t}var s=this._forward(!0);if(isNoteEvent(s))this._iterator=this[s.type](s);else return this._done=!0,{done:!1,value:{type:"end",time:this._processedTime}};return this.next()}},{key:ITERATOR,value:function(){return this}},{key:"_forward",value:function(t){for(;this.hasNext()&&!isNoteEvent(this._commands[this._commandIndex]);){var s=this._commands[this._commandIndex++];this[s.type](s)}return t&&!this.hasNext()&&this._infiniteLoopIndex!==-1?(this._commandIndex=this._infiniteLoopIndex,this._forward(!1)):this._commands[this._commandIndex++]||{}}},{key:"_calcDuration",value:function(t){var s=this;t[0]===null&&(t=this._noteLength.concat(t.slice(1)));var r=null,i=0;return t=t.map(function(a){switch(a){case null:a=r;break;case 0:a=i*=2;break;default:r=i=a;break}var c=a!==null?a:DefaultParams.length;return 60/s._tempo*(4/c)}),t.reduce(function(a,c){return a+c},0)}},{key:"_calcNoteNumber",value:function(t){return t+this._octave*12+12}},{key:Syntax.Note,value:function(t){var s=this,r="note",i=this._processedTime,a=this._calcDuration(t.noteLength),c=t.noteNumbers.map(function(h){return s._calcNoteNumber(h)}),u=this._quantize,l=this._velocity;return this._processedTime=this._processedTime+a,arrayToIterator(c.map(function(h){return{type:r,time:i,duration:a,noteNumber:h,velocity:l,quantize:u}}))}},{key:Syntax.Rest,value:function(t){var s=this._calcDuration(t.noteLength);this._processedTime=this._processedTime+s}},{key:Syntax.Octave,value:function(t){this._octave=t.value!==null?t.value:DefaultParams.octave}},{key:Syntax.OctaveShift,value:function(t){var s=t.value!==null?t.value:1;this._octave+=s*t.direction}},{key:Syntax.NoteLength,value:function(t){var s=t.noteLength.map(function(r){return r!==null?r:DefaultParams.length});this._noteLength=s}},{key:Syntax.NoteVelocity,value:function(t){this._velocity=t.value!==null?t.value:DefaultParams.velocity}},{key:Syntax.NoteQuantize,value:function(t){this._quantize=t.value!==null?t.value:DefaultParams.quantize}},{key:Syntax.Tempo,value:function(t){this._tempo=t.value!==null?t.value:DefaultParams.tempo}},{key:Syntax.InfiniteLoop,value:function(){this._infiniteLoopIndex=this._commandIndex}},{key:Syntax.LoopBegin,value:function(t){var s=t.value!==null?t.value:DefaultParams.loopCount,r=this._commandIndex,i=-1;this._loopStack.push({loopCount:s,loopTopIndex:r,loopOutIndex:i})}},{key:Syntax.LoopExit,value:function(){var t=this._loopStack[this._loopStack.length-1],s=this._commandIndex;t.loopCount<=1&&t.loopOutIndex!==-1&&(s=t.loopOutIndex),this._commandIndex=s}},{key:Syntax.LoopEnd,value:function(){var t=this._loopStack[this._loopStack.length-1],s=this._commandIndex;t.loopOutIndex===-1&&(t.loopOutIndex=this._commandIndex),t.loopCount-=1,0<t.loopCount?s=t.loopTopIndex:this._loopStack.pop(),this._commandIndex=s}}]),n}();function arrayToIterator(n){var e=0;return{next:function(){return e<n.length?{done:!1,value:n[e++]}:{done:!0}}}}function isNoteEvent(n){return n.type===Syntax.Note||n.type===Syntax.Rest}var MMLIterator_1=MMLIterator,lib=MMLIterator_1;export{MusicRNN as M,PianoRollCanvasVisualizer as P,Player as a,lib as l,quantizeNoteSequence as q};
